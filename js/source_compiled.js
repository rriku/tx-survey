(function (e, o) {
    if (typeof define === 'function' && define.amd) {
        define('bc', [
        ], function () {
            var s = o.apply(this, arguments);
            e.videojs.log.warn('DEPRECATION: Using the default named RequireJS module in the Brightcove Player is deprecated. See: https://support.brightcove.com/requirejs-and-brightcove-player#Future_implementation');
            return s
        })
    } else if (typeof exports === 'object') {
        module.exports = o()
    } else {
        e.bc = o(e)
    }
})(this, function (e) {
    var o = '.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-modal-dialog,.vjs-button>.vjs-icon-placeholder:before,.vjs-modal-dialog .vjs-modal-dialog-content{position:absolute;top:0;left:0;width:100%;height:100%}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.vjs-button>.vjs-icon-placeholder:before{text-align:center}@font-face{font-family:VideoJS;src:url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAABBIAAsAAAAAGoQAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAPgAAAFZRiV3RY21hcAAAAYQAAADQAAADIjn098ZnbHlmAAACVAAACv4AABEIAwnSw2hlYWQAAA1UAAAAKwAAADYV1OgpaGhlYQAADYAAAAAbAAAAJA4DByFobXR4AAANnAAAAA8AAACE4AAAAGxvY2EAAA2sAAAARAAAAEQ9NEHGbWF4cAAADfAAAAAfAAAAIAEyAIFuYW1lAAAOEAAAASUAAAIK1cf1oHBvc3QAAA84AAABDwAAAZ5AAl/0eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGQ7xTiBgZWBgaWQ5RkDA8MvCM0cwxDOeI6BgYmBlZkBKwhIc01hcPjI+FGBHcRdyA4RZgQRAC4HCwEAAHic7dFprsIgAEXhg8U61XmeWcBb1FuQP4w7ZQXK5boMm3yclFDSANAHmuKviBBeBPQ8ymyo8w3jOh/5r2ui5nN6v8sYNJb3WMdeWRvLji0DhozKdxM6psyYs2DJijUbtuzYc+DIiTMXrty4k8oGLb+n0xCe37ekM7Z66j1DbUy3l6PpHnLfdLO5NdSBoQ4NdWSoY9ON54mhdqa/y1NDnRnq3FAXhro01JWhrg11Y6hbQ90Z6t5QD4Z6NNSToZ4N9WKoV0O9GerdUJORPqkhTd54nJ1YDXBU1RV+576/JBs2bPYPkrDZt5vsJrv53V/I5mclhGDCTwgGBQQSTEji4hCkYIAGd4TGIWFAhV0RQTpWmQp1xv6hA4OTOlNr2zFANbHUYbq2OtNCpViRqsk+e+7bTQAhzti8vPfuPffcc88959zznbcMMPjHD/KDDGEY0ABpYX384NhlomIYlo4JISGEY9mMh2FSidYiqkEUphtNYDSY/dXg9023l4DdxlqUl0chuZRhncJKrsCQHIwcGuwfnhMIzBnuH4Sym+1D2zaGjheXlhYfD238z80mKYMmvJ5XeOTzd8z9eujbMxJNhu4C9xPE/bCMiDuSNIWgkTQwBE55hLSAE7ZwhrHLnAHZOGV/kmBGTiNjZxzI77Hb7Hqjz68TjT6vh+5JT/cCIkqS0D6CqPf5jX4Qjdx5j6vlDfZM4aZFdbVXIxtOlJaP/WottMnH6CJQ3bTiue3PrY23HjnChtuamxwvvzFjxkPrNj3z0tG9T561HDYf6OgmRWvlY3JQHoQb8ltV2Yet7YfWctEjR1AtxS/cSX6U4alf6NJEBQ7YKg9wrXQKd0IeZCb2ux75Uhh1Un+Nz+9LTOE7PK777nN5xqdTneTBhCbx446mZrhnUkrCz2YhA9dSMxaG0SYmT8hi9ZPu1E94PJYQSH6LRmhxec7Q7ZeXntgQuVpbh+a4qWNsckVyTdn0P7o7DpgPW84+uRcq0BITflBikGdUjAZ9wYBVI3mtrNvr9kpg1UsaK6t3690aoorC1lg0GpMH2HAMtkZjsSi5Ig9ESVosOh7GQfLjKNLvKpMKkLSKNFAka710GdgSi8oDMSoNhqjkKBXTgn3swtaxyzGkUzIzae9RtLdWkSlZ1KDX6EzgllzV4NV4SoDFSOGD4+HCeQUF8wrZ5Hs8zIb5EaVxy8DYFTbMCJPnLIWZxugZE2NlivC0gc1qEQUR8jEKgZcAXeH18BiCgl5nlHh0CrjB4Hb5fX4gb0J7c9PuHVsfgkx2n/vTY/JV8kn8PGxf7faOZ8qX8JVByuIf4whk9sqXli2hvPJV9hrp0hY7l8r2x37ydaVsb4xvXv/47v2NjfCl8m5oRDJclFMoE1yk0Uh1Te4/m8lFXe9qBZD0EkheicebXvzI2PLCuoKCukLuhPIeKwaHPEouxw3kMqaIUXDQ1p0mip+MyCORSCQaoUsnY1VZ38nUTrG21WvVo4f1OsEJFhvSfAFwGfT8VHRMeAVUpwLOoLzjT/REIj3O3FhuURE+nERF+0pTId5Fyxv5sfwGyg4O+my4vZv0sZm7oeQlFZORiB+tG0MweVNraeitl7yxiPIHTk4/diVxs94o5lEYishB2iAtkchEnsActoEpx44Fo8XnsQMaA22BlqC20RmhBKzYojZyYaxg+JggMc4HHY2m+L9EkWSYljirOisrO7d3VorxzyZ6Vc4lJqITAu1b2wOBdrLElAP+bFc2eGaZFVbkmJktv5uT6Jlz5D/MnBFor6ig/JPnRViBsV3LNKGGqB1ChJ0tgQywlVLFJIuQgTFttwkiKxhyQdAZMdMYtSaoAewqfvXVYPAbDT6/1mez85YS8FSDywQ6NfAnef6FNEGMilnppyvn5rB6tTyq1pOceRWnp2WJEZFXHeX5oyoem1nTTgdqc4heDY7bOeKz63vnz+/dRx+s31Ht2JGanQ5seirfWJL9tjozU/12TnEjn5oux9OzU3ckGbBzBwNOyk69JykKH0n/0LM9A72tuwM3zQpIRu4AxiToseEpgPOmbROyFe9/X2yeUvoUsCyEvjcgs7fpWP3/aKlFN0+6HFUe6D9HFz/XPwBlN9tTqNyZjFJ8UO2RUT5/h4CptCctEyeisnOyXjALEp7dXKaQKf6O7IMnGjNNACRMLxqdYJX8eMLvmmd68D+ayBLyKKYZwYxDt/GNhzETDJ05Qxlyi3pi3/Z93ndYVSumgj0V/KkIFlO6+1K3fF2+3g0q+YtuSIf0bvmLqV09nnobI6hwcjIP8aPCKayjsF5JBY3LaKAeRLSyYB1h81oTwe9SlPMkXB7G0mfL9q71gaqqwPqu67QRKS1+ObTx+sbQy9QV2OQHEScGkdFBeT7v7qisqqrs6N52i78/R+6S0qQONVj26agOVoswCyQWIV5D86vH53bxNUeXV0K+XZaHv/nm/KsHhOvylwsWnJX/HE8l/4WCv5x+l5n08z6UU8bUMa3MBpSmM7F63AxntdC9eBCKEZW9Hr+ABNqtxgAQrSbMtmrW7lKQuoSgBhSrTazWVU2QAKWY8wiiuhqFmQgWJBgoXiuWIm42N7hqZbBsgXz52O5P5uSvaNgFGnOuvsRw8I8Laha91wMvDuxqWFheN7/8GVtTltdS83DQsXRmqc5ZtcJXEVrlV2doTWk5+Yunm71dG5f55m/qY0MjI93vv9/NfpxXV9sUXrxy2fbNy1or65cOlDRnOoKFeeXcbw42H/bNDT5Qs3flgs31gWC1lD1nfUV/X7NdCnSUdHY2e8afzfKsqZ5ZljfDqjLOmk3UebNXB+aHArPYDRs+/HDDxeT5DiP+sFg7OpRaVQMGBV89PpeBdj22hCE0Uub0UqwLrNWsG0cuyadgLXTeR5rbO4+3c/vl15cur2nRq+TXCQDcS3SO+s6ak+e5/eMS+1dw3btu3YG2tvFL8XdIZvdjdW6TO/4B7IdrZWVPmctm5/59AgsPItTSbCiIBr2OqIGzmu20SMKAS7yqwGBUfGfgjDYlLLDeF0SfcLB2LSx8flT+08/kzz6yOj96rft4rpTjdPQcmLd47uKibbDq7ZSz/XtbH2nN717Nd62rU+c8Icevvv7I09wA6WvjVcafb+FsbNG+ZQ80Rn6ZZsvrP7teP2dzTdoETvNhjCmsr8FID2sJ69VYvdUcxk4AzYRlKcaE38eXNRlfW9H1as9i6acLHp1XpuNB5K7DIvkX08y1ZYvh3KfWaiCzH+ztrSDmD7LuX73x/mJelB8Yj39t8nhNQJJ2CAthpoFGLsGgtSOCJooCGoaJAMTjSWHVZ08YAa1Fg9lPI5U6DOsGVjDasJeZZ+YyhfCwfOzCxlBA69M9XLXtza7H/rav+9Tjq5xNi0wpKQIRNO4Lrzz7yp5QVYM6Jd/oc1Uvn/mQhhuWh6ENXoS2YTZ8QT42bF5d/559zp5r0Uff2VnR2tdf2/WCOd2cO0Mw6qpWPnvxpV0nrt5fZd2yItc199GWe8vlNfNDq+CH/7yAAnB9hn7T4QO4c1g9ScxsZgmzntnE/IDGndtHMw69lFwoCnYsMGx+rBp8JSBqdLzBr9QRPq/PbhWMWFtQZp1xguy/haw3TEHm3TWAnxFWQQWgt7M5OV0lCz1VRYucpWliy7z6Zd4urwPIyeZQqli2Lgg7szJV09PysATbOQtYIrB2YzbkJYkGgJ0m4AjPUap1pvYu1K9qr97z0Yl3p332b2LYB78ncYIlRkau/8GObSsOlZancACE5d5ily+c2+7h5Yj4lqhVmXXB+iXLfvdqSgqfKtQvfHDV0OnvQR1qhw42XS/vkvsh/hXcrDFP0a+SJNIomEfD1nsrYGO+1bgTOJhM8Hv6ek+7vVglxuSRwoKn17S937bm6YJCeSSG0Op1n+7tE37tcZ/p7dsTv4EUrGpDbWueKigsLHhqTVsoEj+JU0kaSjnj9tz8/gryQWwJ9BcJXBC/7smO+I/IFURJetFPrdt5WcoL6DbEJaygI8CTHfQTjf40ofD+DwalTqIAAHicY2BkYGAA4gDud4bx/DZfGbjZGUDg+q1z05BpdkawOAcDE4gCAB45CXEAeJxjYGRgYGcAARD5/z87IwMjAypQBAAtgwI4AHicY2BgYGAfYAwAOkQA4QAAAAAAAA4AaAB+AMwA4AECAUIBbAGYAcICGAJYArQC4AMwA7AD3gQwBJYE3AUkBWYFigYgBmYGtAbqB1gIEghYCG4IhHicY2BkYGBQZChlYGcAASYg5gJCBob/YD4DABfTAbQAeJxdkE1qg0AYhl8Tk9AIoVDaVSmzahcF87PMARLIMoFAl0ZHY1BHdBJIT9AT9AQ9RQ9Qeqy+yteNMzDzfM+88w0K4BY/cNAMB6N2bUaPPBLukybCLvleeAAPj8JD+hfhMV7hC3u4wxs7OO4NzQSZcI/8Ltwnfwi75E/hAR7wJTyk/xYeY49fYQ/PztM+jbTZ7LY6OWdBJdX/pqs6NYWa+zMxa13oKrA6Uoerqi/JwtpYxZXJ1coUVmeZUWVlTjq0/tHacjmdxuL90OR8O0UEDYMNdtiSEpz5XQGqzlm30kzUdAYFFOb8R7NOZk0q2lwAyz1i7oAr1xoXvrOgtYhZx8wY5KRV269JZ5yGpmzPTjQhvY9je6vEElPOuJP3mWKnP5M3V+YAAAB4nG2PyXLCMBBE3YCNDWEL2ffk7o8S8oCnkCVHC5C/jzBQlUP6IHVPzYyekl5y0iL5X5/ooY8BUmQYIkeBEca4wgRTzDDHAtdY4ga3uMM9HvCIJzzjBa94wzs+8ImvZNAq8TM+HqVkKxWlrQiOxjujQkNlEzyNzl6Z/cU2XF06at7U83VQyklLpEvSnuzsb+HAPnPfQVgaupa1Jlu4sPLsFblcitaz0dHU0ZF1qatjZ1+aTXYCmp6u0gSvWNPyHLtFZ+ZeXWVSaEkqs3T8S74WklbGbNNNq4LL4+CWKtZDv2cfX8l8aFbKFhEnJnJ+IULFpqwoQnNHlHaVQtPBl+ypmbSWdmyC61KS/AKZC3Y+AA==) format("woff");font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder,.vjs-icon-play{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-big-play-button .vjs-icon-placeholder:before,.video-js .vjs-play-control .vjs-icon-placeholder:before,.vjs-icon-play:before{content:"\\f101"}.vjs-icon-play-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-play-circle:before{content:"\\f102"}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder,.vjs-icon-pause{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-playing .vjs-icon-placeholder:before,.vjs-icon-pause:before{content:"\\f103"}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder,.vjs-icon-volume-mute{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-0 .vjs-icon-placeholder:before,.vjs-icon-volume-mute:before{content:"\\f104"}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder,.vjs-icon-volume-low{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-1 .vjs-icon-placeholder:before,.vjs-icon-volume-low:before{content:"\\f105"}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder,.vjs-icon-volume-mid{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control.vjs-vol-2 .vjs-icon-placeholder:before,.vjs-icon-volume-mid:before{content:"\\f106"}.video-js .vjs-mute-control .vjs-icon-placeholder,.vjs-icon-volume-high{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-mute-control .vjs-icon-placeholder:before,.vjs-icon-volume-high:before{content:"\\f107"}.video-js .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-enter{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-enter:before{content:"\\f108"}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder,.vjs-icon-fullscreen-exit{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-fullscreen .vjs-fullscreen-control .vjs-icon-placeholder:before,.vjs-icon-fullscreen-exit:before{content:"\\f109"}.vjs-icon-square{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-square:before{content:"\\f10a"}.vjs-icon-spinner{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-spinner:before{content:"\\f10b"}.video-js .vjs-subs-caps-button .vjs-icon-placeholder,.video-js .vjs-subtitles-button .vjs-icon-placeholder,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-subtitles{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js .vjs-subtitles-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-AU) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-GB) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-IE) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js.video-js:lang(en-NZ) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-subtitles:before{content:"\\f10c"}.video-js .vjs-captions-button .vjs-icon-placeholder,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder,.vjs-icon-captions{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-captions-button .vjs-icon-placeholder:before,.video-js:lang(en) .vjs-subs-caps-button .vjs-icon-placeholder:before,.video-js:lang(fr-CA) .vjs-subs-caps-button .vjs-icon-placeholder:before,.vjs-icon-captions:before{content:"\\f10d"}.video-js .vjs-chapters-button .vjs-icon-placeholder,.vjs-icon-chapters{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-chapters-button .vjs-icon-placeholder:before,.vjs-icon-chapters:before{content:"\\f10e"}.vjs-icon-share{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-share:before{content:"\\f10f"}.vjs-icon-cog{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-cog:before{content:"\\f110"}.video-js .vjs-play-progress,.video-js .vjs-volume-level,.vjs-icon-circle,.vjs-seek-to-live-control .vjs-icon-placeholder{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-progress:before,.video-js .vjs-volume-level:before,.vjs-icon-circle:before,.vjs-seek-to-live-control .vjs-icon-placeholder:before{content:"\\f111"}.vjs-icon-circle-outline{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-outline:before{content:"\\f112"}.vjs-icon-circle-inner-circle{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-circle-inner-circle:before{content:"\\f113"}.vjs-icon-hd{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-hd:before{content:"\\f114"}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder,.vjs-icon-cancel{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-control.vjs-close-button .vjs-icon-placeholder:before,.vjs-icon-cancel:before{content:"\\f115"}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder,.vjs-icon-replay{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-play-control.vjs-ended .vjs-icon-placeholder:before,.vjs-icon-replay:before{content:"\\f116"}.vjs-icon-facebook{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-facebook:before{content:"\\f117"}.vjs-icon-gplus{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-gplus:before{content:"\\f118"}.vjs-icon-linkedin{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-linkedin:before{content:"\\f119"}.vjs-icon-twitter{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-twitter:before{content:"\\f11a"}.vjs-icon-tumblr{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-tumblr:before{content:"\\f11b"}.vjs-icon-pinterest{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-pinterest:before{content:"\\f11c"}.video-js .vjs-descriptions-button .vjs-icon-placeholder,.vjs-icon-audio-description{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-descriptions-button .vjs-icon-placeholder:before,.vjs-icon-audio-description:before{content:"\\f11d"}.video-js .vjs-audio-button .vjs-icon-placeholder,.vjs-icon-audio{font-family:VideoJS;font-weight:400;font-style:normal}.video-js .vjs-audio-button .vjs-icon-placeholder:before,.vjs-icon-audio:before{content:"\\f11e"}.vjs-icon-next-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-next-item:before{content:"\\f11f"}.vjs-icon-previous-item{font-family:VideoJS;font-weight:400;font-style:normal}.vjs-icon-previous-item:before{content:"\\f120"}.video-js{display:block;vertical-align:top;box-sizing:border-box;color:#fff;background-color:#000;position:relative;padding:0;font-size:10px;line-height:1;font-weight:400;font-style:normal;font-family:Arial,Helvetica,sans-serif;word-break:initial}.video-js:-moz-full-screen{position:absolute}.video-js:-webkit-full-screen{width:100%!important;height:100%!important}.video-js[tabindex="-1"]{outline:0}.video-js *,.video-js :after,.video-js :before{box-sizing:inherit}.video-js ul{font-family:inherit;font-size:inherit;line-height:inherit;list-style-position:outside;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}.video-js.vjs-16-9,.video-js.vjs-4-3,.video-js.vjs-fluid{width:100%;max-width:100%;height:0}.video-js.vjs-16-9{padding-top:56.25%}.video-js.vjs-4-3{padding-top:75%}.video-js.vjs-fill{width:100%;height:100%}.video-js .vjs-tech{position:absolute;top:0;left:0;width:100%;height:100%}body.vjs-full-window{padding:0;margin:0;height:100%}.vjs-full-window .video-js.vjs-fullscreen{position:fixed;overflow:hidden;z-index:1000;left:0;top:0;bottom:0;right:0}.video-js.vjs-fullscreen{width:100%!important;height:100%!important;padding-top:0!important}.video-js.vjs-fullscreen.vjs-user-inactive{cursor:none}.vjs-hidden{display:none!important}.vjs-disabled{opacity:.5;cursor:default}.video-js .vjs-offscreen{height:1px;left:-9999px;position:absolute;top:0;width:1px}.vjs-lock-showing{display:block!important;opacity:1;visibility:visible}.vjs-no-js{padding:20px;color:#fff;background-color:#000;font-size:18px;font-family:Arial,Helvetica,sans-serif;text-align:center;width:300px;height:150px;margin:0 auto}.vjs-no-js a,.vjs-no-js a:visited{color:#66a8cc}.video-js .vjs-big-play-button{font-size:3em;line-height:1.5em;height:1.5em;width:3em;display:block;position:absolute;top:10px;left:10px;padding:0;cursor:pointer;opacity:1;border:.06666em solid #fff;background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;transition:all .4s}.vjs-big-play-centered .vjs-big-play-button{top:50%;left:50%;margin-top:-.75em;margin-left:-1.5em}.video-js .vjs-big-play-button:focus,.video-js:hover .vjs-big-play-button{border-color:#fff;background-color:#73859f;background-color:rgba(115,133,159,.5);transition:all 0s}.vjs-controls-disabled .vjs-big-play-button,.vjs-error .vjs-big-play-button,.vjs-has-started .vjs-big-play-button,.vjs-using-native-controls .vjs-big-play-button{display:none}.vjs-has-started.vjs-paused.vjs-show-big-play-button-on-pause .vjs-big-play-button{display:block}.video-js button{background:0 0;border:none;color:inherit;display:inline-block;font-size:inherit;line-height:inherit;text-transform:none;text-decoration:none;transition:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.vjs-control .vjs-button{width:100%;height:100%}.video-js .vjs-control.vjs-close-button{cursor:pointer;height:3em;position:absolute;right:0;top:.5em;z-index:2}.video-js .vjs-modal-dialog{background:rgba(0,0,0,.8);background:linear-gradient(180deg,rgba(0,0,0,.8),rgba(255,255,255,0));overflow:auto}.video-js .vjs-modal-dialog>*{box-sizing:border-box}.vjs-modal-dialog .vjs-modal-dialog-content{font-size:1.2em;line-height:1.5;padding:20px 24px;z-index:1}.vjs-menu-button{cursor:pointer}.vjs-menu-button.vjs-disabled{cursor:default}.vjs-workinghover .vjs-menu-button.vjs-disabled:hover .vjs-menu{display:none}.vjs-menu .vjs-menu-content{display:block;padding:0;margin:0;font-family:Arial,Helvetica,sans-serif;overflow:auto}.vjs-menu .vjs-menu-content>*{box-sizing:border-box}.vjs-scrubbing .vjs-control.vjs-menu-button:hover .vjs-menu{display:none}.vjs-menu li{list-style:none;margin:0;padding:.2em 0;line-height:1.4em;font-size:1.2em;text-align:center;text-transform:lowercase}.js-focus-visible .vjs-menu li.vjs-menu-item:hover,.vjs-menu li.vjs-menu-item:focus,.vjs-menu li.vjs-menu-item:hover{background-color:#73859f;background-color:rgba(115,133,159,.5)}.js-focus-visible .vjs-menu li.vjs-selected:hover,.vjs-menu li.vjs-selected,.vjs-menu li.vjs-selected:focus,.vjs-menu li.vjs-selected:hover{background-color:#fff;color:#2b333f}.vjs-menu li.vjs-menu-title{text-align:center;text-transform:uppercase;font-size:1em;line-height:2em;padding:0;margin:0 0 .3em 0;font-weight:700;cursor:default}.vjs-menu-button-popup .vjs-menu{display:none;position:absolute;bottom:0;width:10em;left:-3em;height:0;margin-bottom:1.5em;border-top-color:rgba(43,51,63,.7)}.vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);position:absolute;width:100%;bottom:1.5em;max-height:15em}.vjs-menu-button-popup .vjs-menu.vjs-lock-showing,.vjs-workinghover .vjs-menu-button-popup:hover .vjs-menu{display:block}.video-js .vjs-menu-button-inline{transition:all .4s;overflow:hidden}.video-js .vjs-menu-button-inline:before{width:2.222222222em}.video-js .vjs-menu-button-inline.vjs-slider-active,.video-js .vjs-menu-button-inline:focus,.video-js .vjs-menu-button-inline:hover,.video-js.vjs-no-flex .vjs-menu-button-inline{width:12em}.vjs-menu-button-inline .vjs-menu{opacity:0;height:100%;width:auto;position:absolute;left:4em;top:0;padding:0;margin:0;transition:all .4s}.vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-menu-button-inline:focus .vjs-menu,.vjs-menu-button-inline:hover .vjs-menu{display:block;opacity:1}.vjs-no-flex .vjs-menu-button-inline .vjs-menu{display:block;opacity:1;position:relative;width:auto}.vjs-no-flex .vjs-menu-button-inline.vjs-slider-active .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:focus .vjs-menu,.vjs-no-flex .vjs-menu-button-inline:hover .vjs-menu{width:auto}.vjs-menu-button-inline .vjs-menu-content{width:auto;height:100%;margin:0;overflow:hidden}.video-js .vjs-control-bar{display:none;width:100%;position:absolute;bottom:0;left:0;right:0;height:3em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.vjs-has-started .vjs-control-bar{display:flex;visibility:visible;opacity:1;transition:visibility .1s,opacity .1s}.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{visibility:visible;opacity:0;transition:visibility 1s,opacity 1s}.vjs-controls-disabled .vjs-control-bar,.vjs-error .vjs-control-bar,.vjs-using-native-controls .vjs-control-bar{display:none!important}.vjs-audio.vjs-has-started.vjs-user-inactive.vjs-playing .vjs-control-bar{opacity:1;visibility:visible}.vjs-has-started.vjs-no-flex .vjs-control-bar{display:table}.video-js .vjs-control{position:relative;text-align:center;margin:0;padding:0;height:100%;width:4em;flex:none}.vjs-button>.vjs-icon-placeholder:before{font-size:1.8em;line-height:1.67}.video-js .vjs-control:focus,.video-js .vjs-control:focus:before,.video-js .vjs-control:hover:before{text-shadow:0 0 1em #fff}.video-js .vjs-control-text{border:0;clip:rect(0 0 0 0);height:1px;overflow:hidden;padding:0;position:absolute;width:1px}.vjs-no-flex .vjs-control{display:table-cell;vertical-align:middle}.video-js .vjs-custom-control-spacer{display:none}.video-js .vjs-progress-control{cursor:pointer;flex:auto;display:flex;align-items:center;min-width:4em;touch-action:none}.video-js .vjs-progress-control.disabled{cursor:default}.vjs-live .vjs-progress-control{display:none}.vjs-liveui .vjs-progress-control{display:flex;align-items:center}.vjs-no-flex .vjs-progress-control{width:auto}.video-js .vjs-progress-holder{flex:auto;transition:all .2s;height:.3em}.video-js .vjs-progress-control .vjs-progress-holder{margin:0 10px}.video-js .vjs-progress-control:hover .vjs-progress-holder{font-size:1.666666666666666666em}.video-js .vjs-progress-control:hover .vjs-progress-holder.disabled{font-size:1em}.video-js .vjs-progress-holder .vjs-load-progress,.video-js .vjs-progress-holder .vjs-load-progress div,.video-js .vjs-progress-holder .vjs-play-progress{position:absolute;display:block;height:100%;margin:0;padding:0;width:0}.video-js .vjs-play-progress{background-color:#fff}.video-js .vjs-play-progress:before{font-size:.9em;position:absolute;right:-.5em;top:-.333333333333333em;z-index:1}.video-js .vjs-load-progress{background:rgba(115,133,159,.5)}.video-js .vjs-load-progress div{background:rgba(115,133,159,.75)}.video-js .vjs-time-tooltip{background-color:#fff;background-color:rgba(255,255,255,.8);border-radius:.3em;color:#000;float:right;font-family:Arial,Helvetica,sans-serif;font-size:1em;padding:6px 8px 8px 8px;pointer-events:none;position:absolute;top:-3.4em;visibility:hidden;z-index:1}.video-js .vjs-progress-holder:focus .vjs-time-tooltip{display:none}.video-js .vjs-progress-control:hover .vjs-progress-holder:focus .vjs-time-tooltip,.video-js .vjs-progress-control:hover .vjs-time-tooltip{display:block;font-size:.6em;visibility:visible}.video-js .vjs-progress-control.disabled:hover .vjs-time-tooltip{font-size:1em}.video-js .vjs-progress-control .vjs-mouse-display{display:none;position:absolute;width:1px;height:100%;background-color:#000;z-index:1}.vjs-no-flex .vjs-progress-control .vjs-mouse-display{z-index:0}.video-js .vjs-progress-control:hover .vjs-mouse-display{display:block}.video-js.vjs-user-inactive .vjs-progress-control .vjs-mouse-display{visibility:hidden;opacity:0;transition:visibility 1s,opacity 1s}.video-js.vjs-user-inactive.vjs-no-flex .vjs-progress-control .vjs-mouse-display{display:none}.vjs-mouse-display .vjs-time-tooltip{color:#fff;background-color:#000;background-color:rgba(0,0,0,.8)}.video-js .vjs-slider{position:relative;cursor:pointer;padding:0;margin:0 .45em 0 .45em;-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:#73859f;background-color:rgba(115,133,159,.5)}.video-js .vjs-slider.disabled{cursor:default}.video-js .vjs-slider:focus{text-shadow:0 0 1em #fff;box-shadow:0 0 1em #fff}.video-js .vjs-mute-control{cursor:pointer;flex:none}.video-js .vjs-volume-control{cursor:pointer;margin-right:1em;display:flex}.video-js .vjs-volume-control.vjs-volume-horizontal{width:5em}.video-js .vjs-volume-panel .vjs-volume-control{visibility:visible;opacity:0;width:1px;height:1px;margin-left:-1px}.video-js .vjs-volume-panel{transition:width 1s}.video-js .vjs-volume-panel .vjs-mute-control:hover~.vjs-volume-control,.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active,.video-js .vjs-volume-panel .vjs-volume-control:active,.video-js .vjs-volume-panel .vjs-volume-control:hover,.video-js .vjs-volume-panel:active .vjs-volume-control,.video-js .vjs-volume-panel:focus .vjs-volume-control,.video-js .vjs-volume-panel:hover .vjs-volume-control{visibility:visible;opacity:1;position:relative;transition:visibility .1s,opacity .1s,height .1s,width .1s,left 0s,top 0s}.video-js .vjs-volume-panel .vjs-mute-control:hover~.vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-horizontal,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-horizontal,.video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-horizontal,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-horizontal,.video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em}.video-js .vjs-volume-panel .vjs-mute-control:hover~.vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel .vjs-volume-control.vjs-slider-active.vjs-volume-vertical,.video-js .vjs-volume-panel .vjs-volume-control:active.vjs-volume-vertical,.video-js .vjs-volume-panel .vjs-volume-control:hover.vjs-volume-vertical,.video-js .vjs-volume-panel:active .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:focus .vjs-volume-control.vjs-volume-vertical,.video-js .vjs-volume-panel:hover .vjs-volume-control.vjs-volume-vertical{left:-3.5em}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-slider-active,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal:active,.video-js .vjs-volume-panel.vjs-volume-panel-horizontal:hover{width:9em;transition:width .1s}.video-js .vjs-volume-panel.vjs-volume-panel-horizontal.vjs-mute-toggle-only{width:4em}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{height:8em;width:3em;left:-3000em;transition:visibility 1s,opacity 1s,height 1s 1s,width 1s 1s,left 1s 1s,top 1s 1s}.video-js .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{transition:visibility 1s,opacity 1s,height 1s 1s,width 1s,left 1s 1s,top 1s 1s}.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-horizontal{width:5em;height:3em;visibility:visible;opacity:1;position:relative;transition:none}.video-js.vjs-no-flex .vjs-volume-control.vjs-volume-vertical,.video-js.vjs-no-flex .vjs-volume-panel .vjs-volume-control.vjs-volume-vertical{position:absolute;bottom:3em;left:.5em}.video-js .vjs-volume-panel{display:flex}.video-js .vjs-volume-bar{margin:1.35em .45em}.vjs-volume-bar.vjs-slider-horizontal{width:5em;height:.3em}.vjs-volume-bar.vjs-slider-vertical{width:.3em;height:5em;margin:1.35em auto}.video-js .vjs-volume-level{position:absolute;bottom:0;left:0;background-color:#fff}.video-js .vjs-volume-level:before{position:absolute;font-size:.9em}.vjs-slider-vertical .vjs-volume-level{width:.3em}.vjs-slider-vertical .vjs-volume-level:before{top:-.5em;left:-.3em}.vjs-slider-horizontal .vjs-volume-level{height:.3em}.vjs-slider-horizontal .vjs-volume-level:before{top:-.3em;right:-.5em}.video-js .vjs-volume-panel.vjs-volume-panel-vertical{width:4em}.vjs-volume-bar.vjs-slider-vertical .vjs-volume-level{height:100%}.vjs-volume-bar.vjs-slider-horizontal .vjs-volume-level{width:100%}.video-js .vjs-volume-vertical{width:3em;height:8em;bottom:8em;background-color:#2b333f;background-color:rgba(43,51,63,.7)}.video-js .vjs-volume-horizontal .vjs-menu{left:-2em}.vjs-poster{display:inline-block;vertical-align:middle;background-repeat:no-repeat;background-position:50% 50%;background-size:contain;background-color:#000;cursor:pointer;margin:0;padding:0;position:absolute;top:0;right:0;bottom:0;left:0;height:100%}.vjs-has-started .vjs-poster{display:none}.vjs-audio.vjs-has-started .vjs-poster{display:block}.vjs-using-native-controls .vjs-poster{display:none}.video-js .vjs-live-control{display:flex;align-items:flex-start;flex:auto;font-size:1em;line-height:3em}.vjs-no-flex .vjs-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-liveui .vjs-live-control,.video-js:not(.vjs-live) .vjs-live-control{display:none}.video-js .vjs-seek-to-live-control{cursor:pointer;flex:none;display:inline-flex;height:100%;padding-left:.5em;padding-right:.5em;font-size:1em;line-height:3em;width:auto;min-width:4em}.vjs-no-flex .vjs-seek-to-live-control{display:table-cell;width:auto;text-align:left}.video-js.vjs-live:not(.vjs-liveui) .vjs-seek-to-live-control,.video-js:not(.vjs-live) .vjs-seek-to-live-control{display:none}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge{cursor:auto}.vjs-seek-to-live-control .vjs-icon-placeholder{margin-right:.5em;color:#888}.vjs-seek-to-live-control.vjs-control.vjs-at-live-edge .vjs-icon-placeholder{color:red}.video-js .vjs-time-control{flex:none;font-size:1em;line-height:3em;min-width:2em;width:auto;padding-left:1em;padding-right:1em}.vjs-live .vjs-time-control{display:none}.video-js .vjs-current-time,.vjs-no-flex .vjs-current-time{display:none}.video-js .vjs-duration,.vjs-no-flex .vjs-duration{display:none}.vjs-time-divider{display:none;line-height:3em}.vjs-live .vjs-time-divider{display:none}.video-js .vjs-play-control{cursor:pointer}.video-js .vjs-play-control .vjs-icon-placeholder{flex:none}.vjs-text-track-display{position:absolute;bottom:3em;left:0;right:0;top:0;pointer-events:none}.video-js.vjs-user-inactive.vjs-playing .vjs-text-track-display{bottom:1em}.video-js .vjs-text-track{font-size:1.4em;text-align:center;margin-bottom:.1em}.vjs-subtitles{color:#fff}.vjs-captions{color:#fc6}.vjs-tt-cue{display:block}video::-webkit-media-text-track-display{-webkit-transform:translateY(-3em);transform:translateY(-3em)}.video-js.vjs-user-inactive.vjs-playing video::-webkit-media-text-track-display{-webkit-transform:translateY(-1.5em);transform:translateY(-1.5em)}.video-js .vjs-fullscreen-control{cursor:pointer;flex:none}.vjs-playback-rate .vjs-playback-rate-value,.vjs-playback-rate>.vjs-menu-button{position:absolute;top:0;left:0;width:100%;height:100%}.vjs-playback-rate .vjs-playback-rate-value{pointer-events:none;font-size:1.5em;line-height:2;text-align:center}.vjs-playback-rate .vjs-menu{width:4em;left:0}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:1.4em;text-align:center}.vjs-error .vjs-error-display:before{color:#fff;content:\'X\';font-family:Arial,Helvetica,sans-serif;font-size:4em;left:0;line-height:1;margin-top:-.5em;position:absolute;text-shadow:.05em .05em .1em #000;text-align:center;top:50%;vertical-align:middle;width:100%}.vjs-loading-spinner{display:none;position:absolute;top:50%;left:50%;margin:-25px 0 0 -25px;opacity:.85;text-align:left;border:6px solid rgba(43,51,63,.7);box-sizing:border-box;background-clip:padding-box;width:50px;height:50px;border-radius:25px;visibility:hidden}.vjs-seeking .vjs-loading-spinner,.vjs-waiting .vjs-loading-spinner{display:block;-webkit-animation:vjs-spinner-show 0s linear .3s forwards;animation:vjs-spinner-show 0s linear .3s forwards}.vjs-loading-spinner:after,.vjs-loading-spinner:before{content:"";position:absolute;margin:-6px;box-sizing:inherit;width:inherit;height:inherit;border-radius:inherit;opacity:1;border:inherit;border-color:transparent;border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-seeking .vjs-loading-spinner:before,.vjs-waiting .vjs-loading-spinner:before{border-top-color:#fff}.vjs-seeking .vjs-loading-spinner:after,.vjs-waiting .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}@keyframes vjs-spinner-show{to{visibility:visible}}@-webkit-keyframes vjs-spinner-show{to{visibility:visible}}@keyframes vjs-spinner-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@-webkit-keyframes vjs-spinner-spin{100%{-webkit-transform:rotate(360deg)}}@keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}@-webkit-keyframes vjs-spinner-fade{0%{border-top-color:#73859f}20%{border-top-color:#73859f}35%{border-top-color:#fff}60%{border-top-color:#73859f}100%{border-top-color:#73859f}}.vjs-chapters-button .vjs-menu ul{width:24em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-subs-caps-button+.vjs-menu .vjs-captions-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:"\\f10d";font-size:1.5em;line-height:inherit}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder{vertical-align:middle;display:inline-block;margin-bottom:-.1em}.video-js .vjs-audio-button+.vjs-menu .vjs-main-desc-menu-item .vjs-menu-item-text .vjs-icon-placeholder:before{font-family:VideoJS;content:" \\f11d";font-size:1.5em;line-height:inherit}.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-custom-control-spacer{flex:auto;display:block}.video-js.vjs-layout-tiny:not(.vjs-fullscreen).vjs-no-flex .vjs-custom-control-spacer{width:auto}.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-audio-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-captions-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-chapters-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-current-time,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-descriptions-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-duration,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-mute-control,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-playback-rate,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-progress-control,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-remaining-time,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-subs-caps-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-subtitles-button,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-time-divider,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-volume-control,.video-js.vjs-layout-tiny:not(.vjs-fullscreen) .vjs-volume-panel{display:none}.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-audio-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-captions-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-chapters-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-current-time,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-descriptions-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-duration,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-mute-control,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-playback-rate,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-remaining-time,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-subs-caps-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-subtitles-button,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-time-divider,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-volume-control,.video-js.vjs-layout-x-small:not(.vjs-fullscreen) .vjs-volume-panel{display:none}.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-audio-button,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-captions-button,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-chapters-button,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-current-time,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-descriptions-button,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-duration,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-mute-control,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-playback-rate,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-remaining-time,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-subtitles-button,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-time-divider,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-volume-control,.video-js.vjs-layout-small:not(.vjs-fullscreen) .vjs-volume-panel{display:none}.vjs-modal-dialog.vjs-text-track-settings{background-color:#2b333f;background-color:rgba(43,51,63,.75);color:#fff;height:70%}.vjs-text-track-settings .vjs-modal-dialog-content{display:table}.vjs-text-track-settings .vjs-track-settings-colors,.vjs-text-track-settings .vjs-track-settings-controls,.vjs-text-track-settings .vjs-track-settings-font{display:table-cell}.vjs-text-track-settings .vjs-track-settings-controls{text-align:right;vertical-align:bottom}@supports (display:grid){.vjs-text-track-settings .vjs-modal-dialog-content{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr;padding:20px 24px 0 24px}.vjs-track-settings-controls .vjs-default-button{margin-bottom:20px}.vjs-text-track-settings .vjs-track-settings-controls{grid-column:1/-1}.vjs-layout-small .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-tiny .vjs-text-track-settings .vjs-modal-dialog-content,.vjs-layout-x-small .vjs-text-track-settings .vjs-modal-dialog-content{grid-template-columns:1fr}}.vjs-track-setting>select{margin-right:1em;margin-bottom:.5em}.vjs-text-track-settings fieldset{margin:5px;padding:3px;border:none}.vjs-text-track-settings fieldset span{display:inline-block}.vjs-text-track-settings fieldset span>select{max-width:7.3em}.vjs-text-track-settings legend{color:#fff;margin:0 0 5px 0}.vjs-text-track-settings .vjs-label{position:absolute;clip:rect(1px 1px 1px 1px);clip:rect(1px,1px,1px,1px);display:block;margin:0 0 5px 0;padding:0;border:0;height:1px;width:1px;overflow:hidden}.vjs-track-settings-controls button:active,.vjs-track-settings-controls button:focus{outline-style:solid;outline-width:medium;background-image:linear-gradient(0deg,#fff 88%,#73859f 100%)}.vjs-track-settings-controls button:hover{color:rgba(43,51,63,.75)}.vjs-track-settings-controls button{background-color:#fff;background-image:linear-gradient(-180deg,#fff 88%,#73859f 100%);color:#2b333f;cursor:pointer;border-radius:2px}.vjs-track-settings-controls .vjs-default-button{margin-right:1em}@media print{.video-js>:not(.vjs-tech):not(.vjs-poster){visibility:hidden}}.vjs-resize-manager{position:absolute;top:0;left:0;width:100%;height:100%;border:none;z-index:-1000}.js-focus-visible .video-js :focus:not(.focus-visible){outline:0;background:0 0}.video-js .vjs-menu :focus:not(:focus-visible),.video-js :focus:not(:focus-visible){outline:0;background:0 0}',
        s = '.bc-player-6ZGqqysfA_default *,.bc-player-6ZGqqysfA_default :after,.bc-player-6ZGqqysfA_default :before{box-sizing:inherit;font-size:inherit;color:inherit;line-height:inherit}.bc-player-6ZGqqysfA_default{width:300px;height:150px;font-size:14px;overflow:hidden}.bc-player-6ZGqqysfA_default.vjs-fluid,.bc-player-6ZGqqysfA_default.vjs-fluid.vjs-16-9{padding-top:56.25%}.bc-player-6ZGqqysfA_default.vjs-fluid.vjs-4-3{padding-top:75%}.bc-player-6ZGqqysfA_default.vjs-fill{width:100%;height:100%}.bc-iframe,.bc-iframe body,.bc-player-6ZGqqysfA_default,.bc-player-6ZGqqysfA_default .vjs-poster{background-color:#151B17}.bc-iframe,.bc-iframe .bc-player-6ZGqqysfA_default,.bc-iframe body{margin:0;width:100%;height:100%;overflow:hidden}.bc-player-6ZGqqysfA_default.vjs-fullscreen,.bc-player-6ZGqqysfA_default.vjs-fullscreen .vjs-tech{width:100%!important;height:100%!important}.bc-player-6ZGqqysfA_default .vjs-track-setting select{color:#000;background-color:#fff}.bc-player-6ZGqqysfA_default .vjs-chapters-button .vjs-menu-item{text-transform:none}.bc-player-6ZGqqysfA_default.vjs-waiting-for-autoplay .vjs-big-play-button{opacity:0}.vjs-error-display{color:#fff;display:none;font-family:Helvetica,Arial,sans serif;font-size:16px;line-height:1.428}.vjs-error .vjs-error-display{display:block;position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.5)}.vjs-error .vjs-error-display .vjs-modal-dialog-content{font-size:14px}.vjs-errors-dialog{text-align:left;border:1px #999 solid;overflow:hidden;position:absolute;top:2%;bottom:2%;left:5%;right:5%;padding-left:1%;padding-right:1%;background:rgba(24,24,24,.8);-ms-filter:"progid:DXImageTransform.Microsoft.gradient(startColorstr=#CC000000, endColorstr=#CC000000)"}.vjs-errors-details{margin-top:15px}.vjs-errors-message{border:1px #999 solid;background-color:#2c2c2c;overflow:auto;margin-top:15px;padding:15px}.vjs-errors-ok-button-container{display:block;position:absolute;bottom:15px;left:15px;right:15px;text-align:center}.vjs-errors-ok-button{display:block;margin:0 auto;width:80px;height:36px;background-color:#000;border:1px #999 solid;border-radius:5px;color:#999;font-size:14px;cursor:pointer}.vjs-errors-ok-button:hover{border:1px #FFF solid;color:#CCC}.vjs-errors-content-container{overflow:auto;position:absolute;padding-bottom:15px;top:0;left:15px;right:15px;bottom:61px}.vjs-errors-headline{font-size:14px;font-weight:700;padding-right:3em}.vjs-errors-dialog .vjs-control.vjs-close-button{width:3em;height:3em;top:0}.vjs-errors-flashmessage{float:right;font-size:9px;font-style:italic}.vjs-xs.vjs-error-display{font-size:14px;background-color:#000}.vjs-xs.vjs-error-display .vjs-errors-details,.vjs-xs.vjs-error-display .vjs-errors-message{display:none}.vjs-xs .vjs-errors-content-container{top:0}.vjs-xs .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-xs .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-xs.vjs-errors-flashmessage{display:none}@media (max-width:600px),(max-height:250px){.vjs-error-display{font-size:14px;background-color:#000}.vjs-error-display .vjs-errors-details,.vjs-error-display .vjs-errors-message{display:none}.vjs-error-display .vjs-errors-content-container{top:15px}.vjs-error-display .vjs-errors-headline{font-size:16px;font-weight:700}.vjs-error-display .vjs-errors-dialog{border:none;top:0;bottom:0;left:0;right:0}.vjs-errors-flashmessage{display:none}}.vjs-errors-ref-id{color:rgba(255,255,255,.5);font-size:.75em;margin:.5em 0 0}/*! @name videojs-contextmenu-ui @version 5.1.0 @license Apache-2.0 */.vjs-contextmenu-ui-menu{position:absolute}.vjs-contextmenu-ui-menu .vjs-menu-content{background-color:#2b333f;background-color:rgba(43,51,63,.7);border-radius:.3em;padding:.25em}.vjs-contextmenu-ui-menu .vjs-menu-item{border-radius:.3em;cursor:pointer;margin:0 0 1px;padding:.5em 1em;font-size:1em;line-height:1.2;text-transform:none}.vjs-contextmenu-ui-menu .vjs-menu-item:active,.vjs-contextmenu-ui-menu .vjs-menu-item:hover{background-color:rgba(0,0,0,.5);text-shadow:0 0 1em #fff}.vjs-modal-dialog.vjs-player-info-modal{background:rgba(0,0,0,.9);font-size:10px}.vjs-modal-dialog.vjs-player-info-modal .vjs-modal-dialog-content{overflow:auto}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section{float:left;width:49%}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section:nth-child(2n+1){float:right}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section.vjs-pi-section--source{float:none;clear:both;width:auto}.vjs-modal-dialog.vjs-player-info-modal .vjs-pi-section.vjs-pi-section--source td:first-child{min-width:150px}.vjs-modal-dialog.vjs-player-info-modal table{border-collapse:collapse;margin-bottom:1em;width:100%}.vjs-modal-dialog.vjs-player-info-modal th{font-weight:400;text-align:left}.vjs-modal-dialog.vjs-player-info-modal td{border-bottom:1px solid rgba(255,255,255,.2);opacity:.5}.vjs-modal-dialog.vjs-player-info-modal tr:last-child td{border-bottom:0}.vjs-modal-dialog.vjs-player-info-modal tr:hover td{opacity:1}.bc-player-6ZGqqysfA_default .vjs-control-bar{background-color:rgba(0,0,0,.45);color:#fff}.bc-player-6ZGqqysfA_default .vjs-control{color:inherit}.bc-player-6ZGqqysfA_default .vjs-mouse-display:after,.bc-player-6ZGqqysfA_default .vjs-play-progress:after{border-radius:0}.bc-player-6ZGqqysfA_default .vjs-menu-button-inline:hover,.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-menu-button-inline{width:8.35em}.bc-player-6ZGqqysfA_default .vjs-control:focus:before,.bc-player-6ZGqqysfA_default .vjs-control:hover:before{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff}.bc-player-6ZGqqysfA_default .vjs-spacer{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:1 1 auto;-moz-box-flex:1 1 auto;-webkit-flex:1 1 auto;-ms-flex:1 1 auto;flex:1 1 auto}.bc-player-6ZGqqysfA_default .vjs-time-control{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-box-flex:0 1 auto;-moz-box-flex:0 1 auto;-webkit-flex:0 1 auto;-ms-flex:0 1 auto;flex:0 1 auto;width:auto}.bc-player-6ZGqqysfA_default .vjs-time-control.vjs-time-divider{width:14px}.bc-player-6ZGqqysfA_default .vjs-time-control.vjs-time-divider div{width:100%;text-align:center}.bc-player-6ZGqqysfA_default .vjs-time-control.vjs-current-time{margin-left:1em}.bc-player-6ZGqqysfA_default .vjs-time-control .vjs-current-time-display,.bc-player-6ZGqqysfA_default .vjs-time-control .vjs-duration-display{width:100%}.bc-player-6ZGqqysfA_default .vjs-time-control .vjs-current-time-display{text-align:right}.bc-player-6ZGqqysfA_default .vjs-time-control .vjs-duration-display{text-align:left}.bc-player-6ZGqqysfA_default .vjs-remaining-time{display:none}.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-time-control.vjs-remaining-time{display:none}.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-6ZGqqysfA_default .vjs-play-progress,.bc-player-6ZGqqysfA_default .vjs-volume-level{background-color:#d52484}.bc-player-6ZGqqysfA_default .vjs-play-progress:before,.bc-player-6ZGqqysfA_default .vjs-volume-level:before{display:none}.bc-player-6ZGqqysfA_default .vjs-volume-level:after{display:none}.bc-player-6ZGqqysfA_default .vjs-progress-control{position:absolute;left:0;right:0;width:100%;height:1.5em;top:-1.5em}.bc-player-6ZGqqysfA_default .vjs-progress-control .vjs-load-progress,.bc-player-6ZGqqysfA_default .vjs-progress-control .vjs-play-progress,.bc-player-6ZGqqysfA_default .vjs-progress-control .vjs-progress-holder{height:100%}.bc-player-6ZGqqysfA_default .vjs-progress-control .vjs-progress-holder{margin:0}.bc-player-6ZGqqysfA_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-6ZGqqysfA_default .vjs-control-bar:not(.vjs-focus-within){-webkit-transition:-webkit-transform .1s ease 0s;-moz-transition:-moz-transform .1s ease 0s;-ms-transition:-ms-transform .1s ease 0s;-o-transition:-o-transform .1s ease 0s;transition:transform .1s ease 0s}.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible),.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar:not(.vjs-focus-within):not(.vjs-control-bar-visible){visibility:visible;opacity:1;-webkit-backface-visibility:hidden;-webkit-transform:translateY(3em);-moz-transform:translateY(3em);-ms-transform:translateY(3em);-o-transform:translateY(3em);transform:translateY(3em);-webkit-transition:-webkit-transform 1s ease 0s;-moz-transition:-moz-transform 1s ease 0s;-ms-transition:-ms-transform 1s ease 0s;-o-transition:-o-transform 1s ease 0s;transition:transform 1s ease 0s}.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-progress-control,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-progress-control{height:.3em;top:-.3em;pointer-events:none;-webkit-transition:height 1s,top 1s;-moz-transition:height 1s,top 1s;-ms-transition:height 1s,top 1s;-o-transition:height 1s,top 1s;transition:height 1s,top 1s}.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active.vjs-fullscreen .vjs-progress-control,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive.vjs-fullscreen .vjs-progress-control{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-volume-vertical,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-volume-vertical,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-volume-vertical,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-menu,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-volume-vertical,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-menu,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-volume-vertical{opacity:0;-webkit-transition:opacity 1s;-moz-transition:opacity 1s;-ms-transition:opacity 1s;-o-transition:opacity 1s;transition:opacity 1s}.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-paused.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-active .vjs-control-bar-visible .vjs-menu,.bc-player-6ZGqqysfA_default.not-hover.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-paused.vjs-ad-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu-item,.bc-player-6ZGqqysfA_default.vjs-has-started.vjs-playing.vjs-user-inactive .vjs-control-bar-visible .vjs-menu{opacity:1}.bc-player-6ZGqqysfA_default.vjs-live .vjs-live-control{margin-left:1em}.bc-player-6ZGqqysfA_default.vjs-live .vjs-time-control.vjs-current-time,.bc-player-6ZGqqysfA_default.vjs-live .vjs-time-control.vjs-duration,.bc-player-6ZGqqysfA_default.vjs-live .vjs-time-control.vjs-time-divider{display:none}.bc-player-6ZGqqysfA_default .vjs-big-play-button{top:50%;left:50%;margin-left:-1em;margin-top:-1em;width:2em;height:2em;line-height:2em;border:none;border-radius:50%;font-size:3.5em;background-color:rgba(0,0,0,.45);color:#fff;-webkit-transition:border-color .4s,outline .4s,background-color .4s;-moz-transition:border-color .4s,outline .4s,background-color .4s;-ms-transition:border-color .4s,outline .4s,background-color .4s;-o-transition:border-color .4s,outline .4s,background-color .4s;transition:border-color .4s,outline .4s,background-color .4s}.bc-player-6ZGqqysfA_default .vjs-big-play-button:active,.bc-player-6ZGqqysfA_default .vjs-big-play-button:focus,.bc-player-6ZGqqysfA_default:active .vjs-big-play-button,.bc-player-6ZGqqysfA_default:hover .vjs-big-play-button{background-color:#d52484}.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu{left:-3em}.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-content{background-color:transparent;width:12em;left:-1.5em;padding-bottom:.5em}.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item,.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-title{background-color:#151B17;margin:.3em 0;padding:.5em;border-radius:.3em}.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item.vjs-selected{background-color:#d52484}.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:active,.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:focus,.bc-player-6ZGqqysfA_default .vjs-menu-button-popup .vjs-menu .vjs-menu-item:hover{text-shadow:0 0 1em #fff,0 0 1em #fff,0 0 1em #fff;color:#fff}.bc-player-6ZGqqysfA_default.vjs-ad-playing .vjs-mouse-display,.bc-player-6ZGqqysfA_default.vjs-ad-playing .vjs-mouse-display:after{display:none}.bc-player-6ZGqqysfA_default.vjs-ad-playing.vjs-ad-playing .vjs-progress-control:after{pointer-events:auto;width:100%;height:100%;position:absolute;left:0;bottom:0;content:" ";user-select:none;-ms-user-select:none;-moz-user-select:none;-webkit-user-select:none}.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-spacer{display:table-cell}.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-time-control{display:table-cell;width:4em}.bc-player-6ZGqqysfA_default.vjs-no-flex .vjs-remaining-time{display:none}.vjs-mouse.bc-player-6ZGqqysfA_default .vjs-control-bar{font-size:10px}.vjs-mouse.bc-player-6ZGqqysfA_default .vjs-progress-control{height:.5em;top:-.5em}.vjs-mouse.bc-player-6ZGqqysfA_default .vjs-progress-control:hover{height:1.5em;top:-1.5em}.bc-player-6ZGqqysfA_default select{width:inherit}.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-glow .vjs-big-play-button:active,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-glow .vjs-big-play-button:focus,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-glow:active .vjs-big-play-button,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-glow:hover .vjs-big-play-button{box-shadow:0 0 15px 3px #fff;background-color:rgba(0,0,0,.45)}.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-darken .vjs-big-play-button:active,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-darken .vjs-big-play-button:focus,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-darken:active .vjs-big-play-button,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-hover-darken:hover .vjs-big-play-button{background-color:rgba(0,0,0,.85)}.bc-player-6ZGqqysfA_default.vjs-play-button-shape-square .vjs-big-play-button{border-radius:11px;height:2em;width:2em;margin-left:-1em;margin-top:-1em}.bc-player-6ZGqqysfA_default.vjs-play-button-shape-rectangle .vjs-big-play-button{border-radius:21px;height:2em;width:3em;margin-left:-1.5em;margin-top:-1em}.bc-player-6ZGqqysfA_default.vjs-play-button-position-top-left .vjs-big-play-button{margin:0;left:17px;top:17px}.bc-player-6ZGqqysfA_default.vjs-play-button-position-top-right .vjs-big-play-button{margin:0;right:17px;left:auto;top:17px}.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-position-top-left .vjs-dock-shelf,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-position-top-left .vjs-dock-text,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-position-top-right .vjs-dock-shelf,.bc-player-6ZGqqysfA_default.video-js.vjs-play-button-position-top-right .vjs-dock-text{display:none}.vjs-ad-playing.vjs-ad-playing .vjs-progress-control{pointer-events:none}.vjs-ad-playing.vjs-ad-playing .vjs-play-progress{background-color:#ffe400}.vjs-ad-playing.vjs-ad-loading .vjs-loading-spinner{display:block}.vjs-ad-playing .vjs-captions-button{display:none}.vjs-ad-playing .vjs-audio-button{display:none}.vjs-ad-loading .vjs-loading-spinner:after,.vjs-ad-loading .vjs-loading-spinner:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite,vjs-spinner-fade 1.1s linear infinite}.vjs-ad-loading .vjs-loading-spinner:before{border-top-color:#fff}.vjs-ad-loading .vjs-loading-spinner:after{border-top-color:#fff;-webkit-animation-delay:.44s;animation-delay:.44s}.vjs-ima3-ad-container{bottom:0;left:0;position:absolute;right:0;top:0}.vjs-ima3-html5 .vjs-ima3-ad-container>*,.vjs-ima3-html5 .vjs-ima3-ad-container>* iframe{width:100%!important;height:100%!important}.vjs-ima3-ad-container,.vjs-ima3-click-tracker{pointer-events:none;left:-9999px}.vjs-ima3-flash-ad-container{left:0}.vjs-ima3-ad-background{width:100%;height:100%;background-color:transparent;position:absolute;top:0;left:0}.vjs-ad-playing .vjs-ima3-ad-background{background-color:#000}.ima3-ad-loading.ima3-loading-spinner .vjs-loading-spinner{display:block}.vjs-ima3-flash.vjs-ad-playing .vjs-tech{opacity:0}.vjs-ad-playing .vjs-ima3-ad-container,.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-ima3-overlay .vjs-ima3-click-tracker{left:0}.vjs-ima3-flash.vjs-ad-playing .vjs-ima3-ad-container,.vjs-ima3-flash.vjs-ima3-overlay .vjs-ima3-ad-container{cursor:pointer;pointer-events:auto}.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ad-playing .vjs-ima3-click-tracker,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-ad-container,.vjs-mouse.vjs-ima3-html5.vjs-ima3-overlay .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ad-playing.vjs-ima3-html5 .vjs-ima3-click-tracker,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-ad-container,.vjs-user-active.vjs-ima3-overlay.vjs-ima3-html5 .vjs-ima3-click-tracker{cursor:pointer;pointer-events:auto}.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-ad-container,.vjs-ima3-html5.vjs-using-native-controls.vjs-ima3-paused.vjs-ima3-paused .vjs-ima3-click-tracker{pointer-events:none}.vjs-ima3-click-tracker{bottom:0;left:0;margin:0;position:absolute;right:0;top:0}.vjs-ima3-overlay .vjs-ima3-click-tracker{top:auto;margin:0 auto}.vjs-control-bar.vjs-control-bar.vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-controls-disabled .vjs-ad-control-bar.vjs-ad-control-bar,.vjs-ad-controls.vjs-ad-playing.vjs-using-native-controls .vjs-ad-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-playing .vjs-dock-shelf,.vjs-ad-playing .vjs-dock-text{display:none}.vjs-ad-controls.vjs-ad-playing.vjs-vpaid-playing.vjs-vpaid-controls-disabled .vjs-control-bar.vjs-ad-control-bar{display:none}.vjs-ad-controls.vjs-ad-playing .vjs-control-bar.vjs-ad-control-bar{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex}.vjs-ad-controls.vjs-ad-playing.vjs-no-flex .vjs-control-bar.vjs-ad-control-bar{display:table}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover{height:.5em;top:-.5em}.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display,.vjs-mouse .vjs-control-bar.vjs-ad-control-bar .vjs-progress-control:hover .vjs-mouse-display:after,.vjs-mouse .vjs-progress-control:hover .vjs-play-progress:after{display:none}.vjs-ima3-flash.vjs-ad-loading .vjs-tech,.vjs-ima3-html5.vjs-ad-loading .vjs-tech{opacity:0}.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-poster,.vjs-ima3-autoplay.vjs-ima3-not-playing-yet .vjs-tech{opacity:0}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress{transition:width 1s linear}.vjs-ima3-flash.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress{transition:width .25s linear}.vjs-ima3-html5.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress.vjs-play-progress-resetting{transition:width 0s linear}.vjs-ima3-flash.vjs-ad-playing .vjs-ad-control-bar .vjs-play-progress.vjs-play-progress-resetting{transition:width 0s linear}.vjs-ima3-right-click.vjs-ima3-flash .vjs-ima3-ad-container{pointer-events:auto}.video-js.vjs-quality-menu{display:block}.video-js.vjs-quality-menu .vjs-quality-menu-button:before{font-family:VideoJS;font-weight:400;font-style:normal;content:"\\f110"}.video-js.vjs-quality-menu.vjs-v6 .vjs-quality-menu-button,.video-js.vjs-quality-menu.vjs-v7 .vjs-quality-menu-button{position:initial}.video-js.vjs-quality-menu.vjs-v6 .vjs-quality-menu-button:before,.video-js.vjs-quality-menu.vjs-v7 .vjs-quality-menu-button:before{content:none}.video-js.vjs-quality-menu.vjs-v6 .vjs-quality-menu-button .vjs-icon-placeholder,.video-js.vjs-quality-menu.vjs-v7 .vjs-quality-menu-button .vjs-icon-placeholder{font-family:VideoJS;font-weight:400;font-style:normal}.video-js.vjs-quality-menu.vjs-v6 .vjs-quality-menu-button .vjs-icon-placeholder:before,.video-js.vjs-quality-menu.vjs-v7 .vjs-quality-menu-button .vjs-icon-placeholder:before{content:"\\f110"}.video-js.vjs-quality-menu .vjs-quality-menu-button{position:relative}.video-js.vjs-quality-menu .vjs-quality-menu-button li{text-transform:none}.video-js.vjs-quality-menu .vjs-quality-menu-button.vjs-menu-button-popup .vjs-menu .vjs-menu-content{max-height:25em;width:10em;left:0}.video-js.vjs-quality-menu .vjs-menu-item .vjs-control-text{position:absolute}.video-js.vjs-quality-menu .vjs-quality-menu-wrapper{position:relative}.video-js.vjs-quality-menu .vjs-quality-menu-wrapper li{text-transform:none}.video-js.vjs-quality-menu .vjs-quality-menu-wrapper.vjs-menu-wrapper-popup .vjs-menu .vjs-menu-content{max-height:25em;width:10em;left:0}.video-js.vjs-quality-menu .vjs-quality-menu-item-sub-label{font-size:75%;font-weight:700;position:absolute;right:0;text-align:center;width:4em}.video-js.vjs-quality-menu .vjs-quality-menu-button-use-resolution .vjs-quality-menu-item-sub-label{position:absolute;right:0;text-align:center;width:4em}.video-js.vjs-quality-menu .vjs-quality-menu-button-4K-flag:after,.video-js.vjs-quality-menu .vjs-quality-menu-button-HD-flag:after{background-color:#2B333F;color:inherit;content:"";font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:.7em;font-weight:300;height:2.2em;line-height:2.2em;padding:0;position:absolute;right:0;text-align:center;top:.5em;width:2.2em;border-radius:2em;letter-spacing:.1em}.video-js.vjs-quality-menu .vjs-quality-menu-button-HD-flag:after{content:"HD"}.video-js.vjs-quality-menu .vjs-quality-menu-button-4K-flag:after{content:"4K"}.video-js.vjs-quality-menu .vjs-quality-menu-button-waiting:before{-webkit-animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite;animation:vjs-spinner-spin 1.1s cubic-bezier(.6,.2,0,.8) infinite}#tx7player .vjs-captions-button{display:none}#tx7player .vjs-marker{position:absolute;opacity:1;height:100%;background-color:orange;width:2px}#tx7player div.vjs-playback-rate-value{font-size:12px;position:absolute;top:30%;margin:-.5em}#tx7player .vjs-control-bar{font-size:10px}#tx7player .vjs-control-bar.vjs-ad-control-bar::before{content:\'[広告]\';display:block;line-height:3em;padding-left:1em;padding-right:1em}#tx7player .resumeDialog{position:absolute;width:100%;height:100%;background-color:rgba(0,0,0,.6);text-align:center}#tx7player .resumeTitle{position:absolute;top:200px;left:260px;width:440px;height:33px;display:block}#tx7player .playStartImg{position:absolute;top:280px;left:231px;width:234px;height:64px;display:block}#tx7player .resumeStartImg{position:absolute;top:280px;left:495px;width:234px;height:64px;display:block}.vjs-tx7-share-button{top:20px;right:2%;cursor:pointer;position:absolute;display:none;text-decoration:none;color:rgba(255,255,255,1);background-color:rgba(0,0,0,.3);border-radius:2px;background-size:200% 100%;background-image:linear-gradient(to right,transparent 50%,rgba(64,184,220,1) 51%);transition:background-position .3s cubic-bezier(.19,1,.22,1) .1s,color .5s ease 0s,background-color .5s ease;text-align:left}.vjs-tx7-share-button .nw{white-space:nowrap;display:inline-block;line-height:1}.vjs-tx7-share-button:hover{color:rgba(255,255,255,1);background-color:rgba(64,184,220,1);background-position:-100% 100%}.vjs-tx7-share-button.this{display:none}.vjs-tx7-share-button:after{content:\' \';display:inline-block;background:url(http://tver.jp/player/img/icon_share.png) center center no-repeat;background-size:100% auto;position:absolute}.vjs-tx7-share-sns{position:absolute;padding:3px 10px;background:rgba(255,255,255,.9);border-radius:2px;right:2%;display:none}.vjs-tx7-share-sns:after{content:"";position:absolute;top:-5px;left:70%;margin-left:-5px;display:block;width:0;height:0;border-style:solid;border-width:0 5px 5px 5px;border-color:transparent transparent rgba(255,255,255,.9) transparent}.vjs-tx7-share-sns li{list-style:none;margin:0;padding:0;border-bottom:solid 1px #bbb;position:relative;padding:5px 0}.vjs-tx7-share-sns li:last-child{border-bottom:none}.vjs-tx7-share-sns a{text-decoration:none;display:block;color:#262626;border-radius:8px;cursor:pointer}.vjs-tx7-share-sns a:hover{color:rgba(64,184,220,1)}.vjs-tx7-share-sns a:before{content:\' \';display:inline-block;position:absolute}.vjs-tx7-share-sns .tw a:before{background:url(http://tver.jp/player/img/icon_tw.png) center center no-repeat;background-size:100% auto}.vjs-tx7-share-sns .fb a:before{background:url(http://tver.jp/player/img/icon_fb.png) center center no-repeat;background-size:100% auto}@media all and (min-width:0px) and (max-width:400px){.vjs-tx7-share-button{padding:5px 24px 4px 7px;font-size:12px}.vjs-tx7-share-button:after{width:17px;height:17px;top:3px;right:4px}.vjs-tx7-share-sns{top:50px;width:130px;padding:0}.vjs-tx7-share-sns a{font-size:14px;padding:9px 0 8px 38px}.vjs-tx7-share-sns a:before{width:24px;height:24px;top:9px;left:8px}.vjs-tx7-share-button .cut{display:none}}@media all and (min-width:401px) and (max-width:767px){.vjs-tx7-share-button{padding:8px 30px 7px 10px;font-size:15px}.vjs-tx7-share-button:after{width:21px;height:21px;top:5px;right:8px}.vjs-tx7-share-sns{top:60px;width:160px}.vjs-tx7-share-sns a{font-size:15px;padding:10px 0 9px 34px}.vjs-tx7-share-sns a:before{width:24px;height:24px;top:12px;left:4px}.vjs-tx7-share-button .cut{display:none}}@media all and (min-width:768px) and (max-width:1050px){.vjs-tx7-share-button{padding:8px 32px 7px 13px;font-size:16px}.vjs-tx7-share-button:after{width:22px;height:22px;top:5px;right:8px}.vjs-tx7-share-sns{top:64px;width:180px}.vjs-tx7-share-sns a{font-size:16px;padding:10px 0 9px 38px}.vjs-tx7-share-sns a:before{width:24px;height:24px;top:12px;left:4px}}@media all and (min-width:1051px) and (max-width:1400px){.vjs-tx7-share-button{padding:8px 38px 7px 13px;font-size:18px}.vjs-tx7-share-button:after{width:25px;height:25px;top:5px;right:10px}.vjs-tx7-share-sns{top:65px;width:220px}.vjs-tx7-share-sns a{font-size:18px;padding:10px 0 9px 38px}.vjs-tx7-share-sns a:before{width:26px;height:26px;top:12px;left:5px}}@media all and (min-width:1401px) and (max-width:1800px){.vjs-tx7-share-button{padding:8px 40px 7px 13px;font-size:20px}.vjs-tx7-share-button:after{width:28px;height:28px;top:4px;right:10px}.vjs-tx7-share-sns{top:72px;width:220px}.vjs-tx7-share-sns a{font-size:20px;padding:11px 0 10px 42px}.vjs-tx7-share-sns a:before{width:30px;height:30px;top:12px;left:5px}}@media all and (min-width:1801px){.vjs-tx7-share-button{padding:10px 50px 9px 13px;font-size:26px}.vjs-tx7-share-button:after{width:36px;height:36px;top:6px;right:10px}.vjs-tx7-share-sns{top:80px;width:300px}.vjs-tx7-share-sns a{font-size:26px;padding:15px 0 15px 50px}.vjs-tx7-share-sns a:before{width:36px;height:36px;top:16px;left:5px}}',
        t = 'bc-style-6ZGqqysfA-default',
        i,
        n = 'bc-style-vjs',
        l,
        a,
        r,
        v,
        j = document.querySelector('head'),
        d = j.firstChild,
        c = function (e, o) {
            var s = document.createElement('style');
            s.type = 'text/css';
            s.appendChild(document.createTextNode(e));
            if (o) {
                j.insertBefore(s, o)
            } else {
                j.appendChild(s)
            }
            return s
        };
    a = (function (window, document) {
        var define = undefined;
        var rjsDefine = window.define;
        var usageEvents = [
        ];
        var iframe = document.querySelector('.bc-iframe');
        var bcPlayerIndex = - 1;
        var scriptUrl = function () {
            var e;
            if (iframe) {
                return ''
            }
            if (typeof rjsDefine === 'function' && rjsDefine.amd) {
                return require.toUrl('bc')
            } else if (document.currentScript) {
                return document.currentScript.src
            }
            e = document.getElementsByTagName('script');
            return e.length && e[e.length - 1].src || ''
        }();
        var scriptBaseUrl = scriptUrl && scriptUrl.split('/').slice(0, - 1).join('/') || '.';
        var accountId = '5380177782001';
        var applicationId;
        var embedId = 'default';
        var playerId = '6ZGqqysfA';
        var addRule = function (e, t, r) {
            var n = (e.cssRules || [
            ]).length;
            try {
                e.insertRule(t + ' { ' + r + ' } ', n)
            } catch (e) {
            }
        };
        var useNativeControlsOnAndroid = function () {
            var e = window.navigator.userAgent.match(/applewebkit\/(\d*).*Version\/(\d*.\d*)/i);
            return videojs.browser.IS_ANDROID && videojs.browser.ANDROID_VERSION < 5 && e && e[2] > 0
        };
        var previousVideojs = window.videojs;
        window.VIDEOJS_NO_DYNAMIC_STYLE = true;
        (function (e, t) {
            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('global/window'), require('global/document')) : typeof define === 'function' && define.amd ? define(['global/window',
                'global/document'], t) : e.videojs = t(e.window, e.document)
        })(typeof self !== 'undefined' ? self : this, function (e, t) {
            e = e && e.hasOwnProperty('default') ? e['default'] : e;
            t = t && t.hasOwnProperty('default') ? t['default'] : t;
            var r = '7.4.3';
            function n(e, t) {
                e.prototype = Object.create(t.prototype);
                e.prototype.constructor = e;
                e.__proto__ = t
            }
            function i(e, t) {
                i = Object.setPrototypeOf || function e(t, r) {
                    t.__proto__ = r;
                    return t
                };
                return i(e, t)
            }
            function a() {
                if (typeof Reflect === 'undefined' || !Reflect.construct) return false;
                if (Reflect.construct.sham) return false;
                if (typeof Proxy === 'function') return true;
                try {
                    Date.prototype.toString.call(Reflect.construct(Date, [
                    ], function () {
                    }));
                    return true
                } catch (e) {
                    return false
                }
            }
            function s(e, t, r) {
                if (a()) {
                    s = Reflect.construct
                } else {
                    s = function e(t, r, n) {
                        var a = [
                            null
                        ];
                        a.push.apply(a, r);
                        var s = Function.bind.apply(t, a);
                        var o = new s;
                        if (n) i(o, n.prototype);
                        return o
                    }
                }
                return s.apply(null, arguments)
            }
            function o(e) {
                if (e === void 0) {
                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                }
                return e
            }
            function u(e, t) {
                if (!t) {
                    t = e.slice(0)
                }
                e.raw = t;
                return e
            }
            var l = [
            ];
            var c = function t(r, n) {
                return function (t, i, a) {
                    var s = n.levels[i];
                    var o = new RegExp('^(' + s + ')$');
                    if (t !== 'log') {
                        a.unshift(t.toUpperCase() + ':')
                    }
                    a.unshift(r + ':');
                    if (l) {
                        l.push([].concat(a))
                    }
                    if (!e.console) {
                        return
                    }
                    var u = e.console[t];
                    if (!u && t === 'debug') {
                        u = e.console.info || e.console.log
                    }
                    if (!u || !s || !o.test(t)) {
                        return
                    }
                    u[Array.isArray(a) ? 'apply' : 'call'](e.console, a)
                }
            };
            function d(e) {
                var t = 'info';
                var r;
                var n = function e() {
                    for (var n = arguments.length, i = new Array(n), a = 0; a < n; a++) {
                        i[a] = arguments[a]
                    }
                    r('log', t, i)
                };
                r = c(e, n);
                n.createLogger = function (t) {
                    return d(e + ': ' + t)
                };
                n.levels = {
                    all: 'debug|log|warn|error',
                    off: '',
                    debug: 'debug|log|warn|error',
                    info: 'log|warn|error',
                    warn: 'warn|error',
                    error: 'error',
                    DEFAULT: t
                };
                n.level = function (e) {
                    if (typeof e === 'string') {
                        if (!n.levels.hasOwnProperty(e)) {
                            throw new Error('"' + e + '" in not a valid log level')
                        }
                        t = e
                    }
                    return t
                };
                n.history = function () {
                    return l ? [
                    ].concat(l) : [
                        ]
                };
                n.history.filter = function (e) {
                    return (l || [
                    ]).filter(function (t) {
                        return new RegExp('.*' + e + '.*').test(t[0])
                    })
                };
                n.history.clear = function () {
                    if (l) {
                        l.length = 0
                    }
                };
                n.history.disable = function () {
                    if (l !== null) {
                        l.length = 0;
                        l = null
                    }
                };
                n.history.enable = function () {
                    if (l === null) {
                        l = [
                        ]
                    }
                };
                n.error = function () {
                    for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
                        n[i] = arguments[i]
                    }
                    return r('error', t, n)
                };
                n.warn = function () {
                    for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
                        n[i] = arguments[i]
                    }
                    return r('warn', t, n)
                };
                n.debug = function () {
                    for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
                        n[i] = arguments[i]
                    }
                    return r('debug', t, n)
                };
                return n
            }
            var f = d('VIDEOJS');
            var h = f.createLogger;
            function p(e) {
                return e.replace(/\n\r?\s*/g, '')
            }
            var v = function e(t) {
                var r = '',
                    n = 0;
                for (; n < arguments.length; n++) {
                    r += p(t[n]) + (arguments[n + 1] || '')
                }
                return r
            };
            var m = Object.prototype.toString;
            var g = function e(t) {
                return T(t) ? Object.keys(t) : [
                ]
            };
            function y(e, t) {
                g(e).forEach(function (r) {
                    return t(e[r], r)
                })
            }
            function _(e, t, r) {
                if (r === void 0) {
                    r = 0
                }
                return g(e).reduce(function (r, n) {
                    return t(r, e[n], n)
                }, r)
            }
            function b(e) {
                for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {
                    r[n - 1] = arguments[n]
                }
                if (Object.assign) {
                    return Object.assign.apply(Object, [
                        e
                    ].concat(r))
                }
                r.forEach(function (t) {
                    if (!t) {
                        return
                    }
                    y(t, function (t, r) {
                        e[r] = t
                    })
                });
                return e
            }
            function T(e) {
                return !!e && typeof e === 'object'
            }
            function A(e) {
                return T(e) && m.call(e) === '[object Object]' && e.constructor === Object
            }
            function S(t, r) {
                if (!t || !r) {
                    return ''
                }
                if (typeof e.getComputedStyle === 'function') {
                    var n = e.getComputedStyle(t);
                    return n ? n[r] : ''
                }
                return ''
            }
            function k() {
                var e = u(['Setting attributes in the second argument of createEl()\n                has been deprecated. Use the third argument instead.\n                createEl(type, properties, attributes). Attempting to set ',
                    ' to ',
                    '.']);
                k = function t() {
                    return e
                };
                return e
            }
            function w(e) {
                return typeof e === 'string' && /\S/.test(e)
            }
            function C(e) {
                if (/\s/.test(e)) {
                    throw new Error('class has illegal whitespace characters')
                }
            }
            function E(e) {
                return new RegExp('(^|\\s)' + e + '($|\\s)')
            }
            function I() {
                return t === e.document
            }
            function P(e) {
                return T(e) && e.nodeType === 1
            }
            function O() {
                try {
                    return e.parent !== e.self
                } catch (e) {
                    return true
                }
            }
            function x(e) {
                return function (r, n) {
                    if (!w(r)) {
                        return t[e](null)
                    }
                    if (w(n)) {
                        n = t.querySelector(n)
                    }
                    var i = P(n) ? n : t;
                    return i[e] && i[e](r)
                }
            }
            function L(e, r, n, i) {
                if (e === void 0) {
                    e = 'div'
                }
                if (r === void 0) {
                    r = {
                    }
                }
                if (n === void 0) {
                    n = {
                    }
                }
                var a = t.createElement(e);
                Object.getOwnPropertyNames(r).forEach(function (e) {
                    var t = r[e];
                    if (e.indexOf('aria-') !== - 1 || e === 'role' || e === 'type') {
                        f.warn(v(k(), e, t));
                        a.setAttribute(e, t)
                    } else if (e === 'textContent') {
                        D(a, t)
                    } else {
                        a[e] = t
                    }
                });
                Object.getOwnPropertyNames(n).forEach(function (e) {
                    a.setAttribute(e, n[e])
                });
                if (i) {
                    J(a, i)
                }
                return a
            }
            function D(e, t) {
                if (typeof e.textContent === 'undefined') {
                    e.innerText = t
                } else {
                    e.textContent = t
                }
                return e
            }
            function R(e, t) {
                if (t.firstChild) {
                    t.insertBefore(e, t.firstChild)
                } else {
                    t.appendChild(e)
                }
            }
            function M(e, t) {
                C(t);
                if (e.classList) {
                    return e.classList.contains(t)
                }
                return E(t).test(e.className)
            }
            function j(e, t) {
                if (e.classList) {
                    e.classList.add(t)
                } else if (!M(e, t)) {
                    e.className = (e.className + ' ' + t).trim()
                }
                return e
            }
            function U(e, t) {
                if (e.classList) {
                    e.classList.remove(t)
                } else {
                    C(t);
                    e.className = e.className.split(/\s+/).filter(function (e) {
                        return e !== t
                    }).join(' ')
                }
                return e
            }
            function N(e, t, r) {
                var n = M(e, t);
                if (typeof r === 'function') {
                    r = r(e, t)
                }
                if (typeof r !== 'boolean') {
                    r = !n
                }
                if (r === n) {
                    return
                }
                if (r) {
                    j(e, t)
                } else {
                    U(e, t)
                }
                return e
            }
            function B(e, t) {
                Object.getOwnPropertyNames(t).forEach(function (r) {
                    var n = t[r];
                    if (n === null || typeof n === 'undefined' || n === false) {
                        e.removeAttribute(r)
                    } else {
                        e.setAttribute(r, n === true ? '' : n)
                    }
                })
            }
            function q(e) {
                var t = {
                };
                var r = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';
                if (e && e.attributes && e.attributes.length > 0) {
                    var n = e.attributes;
                    for (var i = n.length - 1; i >= 0; i--) {
                        var a = n[i].name;
                        var s = n[i].value;
                        if (typeof e[a] === 'boolean' || r.indexOf(',' + a + ',') !== - 1) {
                            s = s !== null ? true : false
                        }
                        t[a] = s
                    }
                }
                return t
            }
            function F(e, t) {
                return e.getAttribute(t)
            }
            function V(e, t, r) {
                e.setAttribute(t, r)
            }
            function H(e, t) {
                e.removeAttribute(t)
            }
            function z() {
                t.body.focus();
                t.onselectstart = function () {
                    return false
                }
            }
            function G() {
                t.onselectstart = function () {
                    return true
                }
            }
            function W(e) {
                if (e && e.getBoundingClientRect && e.parentNode) {
                    var t = e.getBoundingClientRect();
                    var r = {
                    };
                    [
                        'bottom',
                        'height',
                        'left',
                        'right',
                        'top',
                        'width'
                    ].forEach(function (e) {
                        if (t[e] !== undefined) {
                            r[e] = t[e]
                        }
                    });
                    if (!r.height) {
                        r.height = parseFloat(S(e, 'height'))
                    }
                    if (!r.width) {
                        r.width = parseFloat(S(e, 'width'))
                    }
                    return r
                }
            }
            function Y(r) {
                var n;
                if (r.getBoundingClientRect && r.parentNode) {
                    n = r.getBoundingClientRect()
                }
                if (!n) {
                    return {
                        left: 0,
                        top: 0
                    }
                }
                var i = t.documentElement;
                var a = t.body;
                var s = i.clientLeft || a.clientLeft || 0;
                var o = e.pageXOffset || a.scrollLeft;
                var u = n.left + o - s;
                var l = i.clientTop || a.clientTop || 0;
                var c = e.pageYOffset || a.scrollTop;
                var d = n.top + c - l;
                return {
                    left: Math.round(u),
                    top: Math.round(d)
                }
            }
            function $(e, t) {
                var r = {
                };
                var n = Y(e);
                var i = e.offsetWidth;
                var a = e.offsetHeight;
                var s = n.top;
                var o = n.left;
                var u = t.pageY;
                var l = t.pageX;
                if (t.changedTouches) {
                    l = t.changedTouches[0].pageX;
                    u = t.changedTouches[0].pageY
                }
                r.y = Math.max(0, Math.min(1, (s - u + a) / a));
                r.x = Math.max(0, Math.min(1, (l - o) / i));
                return r
            }
            function X(e) {
                return T(e) && e.nodeType === 3
            }
            function K(e) {
                while (e.firstChild) {
                    e.removeChild(e.firstChild)
                }
                return e
            }
            function Q(e) {
                if (typeof e === 'function') {
                    e = e()
                }
                return (Array.isArray(e) ? e : [
                    e
                ]).map(function (e) {
                    if (typeof e === 'function') {
                        e = e()
                    }
                    if (P(e) || X(e)) {
                        return e
                    }
                    if (typeof e === 'string' && /\S/.test(e)) {
                        return t.createTextNode(e)
                    }
                }).filter(function (e) {
                    return e
                })
            }
            function J(e, t) {
                Q(t).forEach(function (t) {
                    return e.appendChild(t)
                });
                return e
            }
            function Z(e, t) {
                return J(K(e), t)
            }
            function ee(e) {
                if (e.button === undefined && e.buttons === undefined) {
                    return true
                }
                if (e.button === 0 && e.buttons === undefined) {
                    return true
                }
                if (e.button !== 0 || e.buttons !== 1) {
                    return false
                }
                return true
            }
            var te = x('querySelector');
            var re = x('querySelectorAll');
            var ne = Object.freeze({
                isReal: I,
                isEl: P,
                isInFrame: O,
                createEl: L,
                textContent: D,
                prependTo: R,
                hasClass: M,
                addClass: j,
                removeClass: U,
                toggleClass: N,
                setAttributes: B,
                getAttributes: q,
                getAttribute: F,
                setAttribute: V,
                removeAttribute: H,
                blockTextSelection: z,
                unblockTextSelection: G,
                getBoundingClientRect: W,
                findPosition: Y,
                getPointerPosition: $,
                isTextNode: X,
                emptyEl: K,
                normalizeContent: Q,
                appendContent: J,
                insertContent: Z,
                isSingleLeftClick: ee,
                $: te,
                $$: re
            });
            var ie = 1;
            function ae() {
                return ie++
            }
            var se = {
            };
            var oe = 'vdata' + (new Date).getTime();
            function ue(e) {
                var t = e[oe];
                if (!t) {
                    t = e[oe] = ae()
                }
                if (!se[t]) {
                    se[t] = {
                    }
                }
                return se[t]
            }
            function le(e) {
                var t = e[oe];
                if (!t) {
                    return false
                }
                return !!Object.getOwnPropertyNames(se[t]).length
            }
            function ce(e) {
                var t = e[oe];
                if (!t) {
                    return
                }
                delete se[t];
                try {
                    delete e[oe]
                } catch (t) {
                    if (e.removeAttribute) {
                        e.removeAttribute(oe)
                    } else {
                        e[oe] = null
                    }
                }
            }
            function de(e, t) {
                var r = ue(e);
                if (r.handlers[t].length === 0) {
                    delete r.handlers[t];
                    if (e.removeEventListener) {
                        e.removeEventListener(t, r.dispatcher, false)
                    } else if (e.detachEvent) {
                        e.detachEvent('on' + t, r.dispatcher)
                    }
                }
                if (Object.getOwnPropertyNames(r.handlers).length <= 0) {
                    delete r.handlers;
                    delete r.dispatcher;
                    delete r.disabled
                }
                if (Object.getOwnPropertyNames(r).length === 0) {
                    ce(e)
                }
            }
            function fe(e, t, r, n) {
                r.forEach(function (r) {
                    e(t, r, n)
                })
            }
            function he(r) {
                function n() {
                    return true
                }
                function i() {
                    return false
                }
                if (!r || !r.isPropagationStopped) {
                    var a = r || e.event;
                    r = {
                    };
                    for (var s in a) {
                        if (s !== 'layerX' && s !== 'layerY' && s !== 'keyLocation' && s !== 'webkitMovementX' && s !== 'webkitMovementY') {
                            if (!(s === 'returnValue' && a.preventDefault)) {
                                r[s] = a[s]
                            }
                        }
                    }
                    if (!r.target) {
                        r.target = r.srcElement || t
                    }
                    if (!r.relatedTarget) {
                        r.relatedTarget = r.fromElement === r.target ? r.toElement : r.fromElement
                    }
                    r.preventDefault = function () {
                        if (a.preventDefault) {
                            a.preventDefault()
                        }
                        r.returnValue = false;
                        a.returnValue = false;
                        r.defaultPrevented = true
                    };
                    r.defaultPrevented = false;
                    r.stopPropagation = function () {
                        if (a.stopPropagation) {
                            a.stopPropagation()
                        }
                        r.cancelBubble = true;
                        a.cancelBubble = true;
                        r.isPropagationStopped = n
                    };
                    r.isPropagationStopped = i;
                    r.stopImmediatePropagation = function () {
                        if (a.stopImmediatePropagation) {
                            a.stopImmediatePropagation()
                        }
                        r.isImmediatePropagationStopped = n;
                        r.stopPropagation()
                    };
                    r.isImmediatePropagationStopped = i;
                    if (r.clientX !== null && r.clientX !== undefined) {
                        var o = t.documentElement;
                        var u = t.body;
                        r.pageX = r.clientX + (o && o.scrollLeft || u && u.scrollLeft || 0) - (o && o.clientLeft || u && u.clientLeft || 0);
                        r.pageY = r.clientY + (o && o.scrollTop || u && u.scrollTop || 0) - (o && o.clientTop || u && u.clientTop || 0)
                    }
                    r.which = r.charCode || r.keyCode;
                    if (r.button !== null && r.button !== undefined) {
                        r.button = r.button & 1 ? 0 : r.button & 4 ? 1 : r.button & 2 ? 2 : 0
                    }
                }
                return r
            }
            var pe = false;
            (function () {
                try {
                    var t = Object.defineProperty({
                    }, 'passive', {
                        get: function e() {
                            pe = true
                        }
                    });
                    e.addEventListener('test', null, t);
                    e.removeEventListener('test', null, t)
                } catch (e) {
                }
            })();
            var ve = [
                'touchstart',
                'touchmove'
            ];
            function me(e, t, r) {
                if (Array.isArray(t)) {
                    return fe(me, e, t, r)
                }
                var n = ue(e);
                if (!n.handlers) {
                    n.handlers = {
                    }
                }
                if (!n.handlers[t]) {
                    n.handlers[t] = [
                    ]
                }
                if (!r.guid) {
                    r.guid = ae()
                }
                n.handlers[t].push(r);
                if (!n.dispatcher) {
                    n.disabled = false;
                    n.dispatcher = function (t, r) {
                        if (n.disabled) {
                            return
                        }
                        t = he(t);
                        var i = n.handlers[t.type];
                        if (i) {
                            var a = i.slice(0);
                            for (var s = 0, o = a.length; s < o; s++) {
                                if (t.isImmediatePropagationStopped()) {
                                    break
                                } else {
                                    try {
                                        a[s].call(e, t, r)
                                    } catch (e) {
                                        f.error(e)
                                    }
                                }
                            }
                        }
                    }
                }
                if (n.handlers[t].length === 1) {
                    if (e.addEventListener) {
                        var i = false;
                        if (pe && ve.indexOf(t) > - 1) {
                            i = {
                                passive: true
                            }
                        }
                        e.addEventListener(t, n.dispatcher, i)
                    } else if (e.attachEvent) {
                        e.attachEvent('on' + t, n.dispatcher)
                    }
                }
            }
            function ge(e, t, r) {
                if (!le(e)) {
                    return
                }
                var n = ue(e);
                if (!n.handlers) {
                    return
                }
                if (Array.isArray(t)) {
                    return fe(ge, e, t, r)
                }
                var i = function e(t, r) {
                    n.handlers[r] = [
                    ];
                    de(t, r)
                };
                if (t === undefined) {
                    for (var a in n.handlers) {
                        if (Object.prototype.hasOwnProperty.call(n.handlers || {
                        }, a)) {
                            i(e, a)
                        }
                    }
                    return
                }
                var s = n.handlers[t];
                if (!s) {
                    return
                }
                if (!r) {
                    i(e, t);
                    return
                }
                if (r.guid) {
                    for (var o = 0; o < s.length; o++) {
                        if (s[o].guid === r.guid) {
                            s.splice(o--, 1)
                        }
                    }
                }
                de(e, t)
            }
            function ye(e, t, r) {
                var n = le(e) ? ue(e) : {
                };
                var i = e.parentNode || e.ownerDocument;
                if (typeof t === 'string') {
                    t = {
                        type: t,
                        target: e
                    }
                } else if (!t.target) {
                    t.target = e
                }
                t = he(t);
                if (n.dispatcher) {
                    n.dispatcher.call(e, t, r)
                }
                if (i && !t.isPropagationStopped() && t.bubbles === true) {
                    ye.call(null, i, t, r)
                } else if (!i && !t.defaultPrevented) {
                    var a = ue(t.target);
                    if (t.target[t.type]) {
                        a.disabled = true;
                        if (typeof t.target[t.type] === 'function') {
                            t.target[t.type]()
                        }
                        a.disabled = false
                    }
                }
                return !t.defaultPrevented
            }
            function _e(e, t, r) {
                if (Array.isArray(t)) {
                    return fe(_e, e, t, r)
                }
                var n = function n() {
                    ge(e, t, n);
                    r.apply(this, arguments)
                };
                n.guid = r.guid = r.guid || ae();
                me(e, t, n)
            }
            var be = Object.freeze({
                fixEvent: he,
                on: me,
                off: ge,
                trigger: ye,
                one: _e
            });
            var Te = false;
            var Ae;
            var Se = function e() {
                if (!I() || Ae.options.autoSetup === false) {
                    return
                }
                var r = Array.prototype.slice.call(t.getElementsByTagName('video'));
                var n = Array.prototype.slice.call(t.getElementsByTagName('audio'));
                var i = Array.prototype.slice.call(t.getElementsByTagName('video-js'));
                var a = r.concat(n, i);
                if (a && a.length > 0) {
                    for (var s = 0, o = a.length; s < o; s++) {
                        var u = a[s];
                        if (u && u.getAttribute) {
                            if (u.player === undefined) {
                                var l = u.getAttribute('data-setup');
                                if (l !== null) {
                                    Ae(u)
                                }
                            }
                        } else {
                            ke(1);
                            break
                        }
                    }
                } else if (!Te) {
                    ke(1)
                }
            };
            function ke(t, r) {
                if (r) {
                    Ae = r
                }
                e.setTimeout(Se, t)
            }
            if (I() && t.readyState === 'complete') {
                Te = true
            } else {
                _e(e, 'load', function () {
                    Te = true
                })
            }
            var we = function e(r) {
                var n = t.createElement('style');
                n.className = r;
                return n
            };
            var Ce = function e(t, r) {
                if (t.styleSheet) {
                    t.styleSheet.cssText = r
                } else {
                    t.textContent = r
                }
            };
            var Ee = function e(t, r, n) {
                if (!r.guid) {
                    r.guid = ae()
                }
                var i = function e() {
                    return r.apply(t, arguments)
                };
                i.guid = n ? n + '_' + r.guid : r.guid;
                return i
            };
            var Ie = function e(t, r) {
                var n = Date.now();
                var i = function e() {
                    var i = Date.now();
                    if (i - n >= r) {
                        t.apply(void 0, arguments);
                        n = i
                    }
                };
                return i
            };
            var Pe = function t(r, n, i, a) {
                if (a === void 0) {
                    a = e
                }
                var s;
                var o = function e() {
                    a.clearTimeout(s);
                    s = null
                };
                var u = function e() {
                    var t = this;
                    var o = arguments;
                    var u = function e() {
                        s = null;
                        u = null;
                        if (!i) {
                            r.apply(t, o)
                        }
                    };
                    if (!s && i) {
                        r.apply(t, o)
                    }
                    a.clearTimeout(s);
                    s = a.setTimeout(u, n)
                };
                u.cancel = o;
                return u
            };
            var Oe = function e() {
            };
            Oe.prototype.allowedEvents_ = {
            };
            Oe.prototype.on = function (e, t) {
                var r = this.addEventListener;
                this.addEventListener = function () {
                };
                me(this, e, t);
                this.addEventListener = r
            };
            Oe.prototype.addEventListener = Oe.prototype.on;
            Oe.prototype.off = function (e, t) {
                ge(this, e, t)
            };
            Oe.prototype.removeEventListener = Oe.prototype.off;
            Oe.prototype.one = function (e, t) {
                var r = this.addEventListener;
                this.addEventListener = function () {
                };
                _e(this, e, t);
                this.addEventListener = r
            };
            Oe.prototype.trigger = function (e) {
                var t = e.type || e;
                if (typeof e === 'string') {
                    e = {
                        type: t
                    }
                }
                e = he(e);
                if (this.allowedEvents_[t] && this['on' + t]) {
                    this['on' + t](e)
                }
                ye(this, e)
            };
            Oe.prototype.dispatchEvent = Oe.prototype.trigger;
            var xe;
            Oe.prototype.queueTrigger = function (t) {
                var r = this;
                if (!xe) {
                    xe = new Map
                }
                var n = t.type || t;
                var i = xe.get(this);
                if (!i) {
                    i = new Map;
                    xe.set(this, i)
                }
                var a = i.get(n);
                i.delete(n);
                e.clearTimeout(a);
                var s = e.setTimeout(function () {
                    if (i.size === 0) {
                        i = null;
                        xe.delete(r)
                    }
                    r.trigger(t)
                }, 0);
                i.set(n, s)
            };
            var Le = function e(t) {
                return t instanceof Oe || !!t.eventBusEl_ && [
                    'on',
                    'one',
                    'off',
                    'trigger'
                ].every(function (e) {
                    return typeof t[e] === 'function'
                })
            };
            var De = function e(t, r) {
                if (Le(t)) {
                    r()
                } else {
                    if (!t.eventedCallbacks) {
                        t.eventedCallbacks = [
                        ]
                    }
                    t.eventedCallbacks.push(r)
                }
            };
            var Re = function e(t) {
                return typeof t === 'string' && /\S/.test(t) || Array.isArray(t) && !!t.length
            };
            var Me = function e(t) {
                if (!t.nodeName && !Le(t)) {
                    throw new Error('Invalid target; must be a DOM node or evented object.')
                }
            };
            var je = function e(t) {
                if (!Re(t)) {
                    throw new Error('Invalid event type; must be a non-empty string or array.')
                }
            };
            var Ue = function e(t) {
                if (typeof t !== 'function') {
                    throw new Error('Invalid listener; must be a function.')
                }
            };
            var Ne = function e(t, r) {
                var n = r.length < 3 || r[0] === t || r[0] === t.eventBusEl_;
                var i;
                var a;
                var s;
                if (n) {
                    i = t.eventBusEl_;
                    if (r.length >= 3) {
                        r.shift()
                    }
                    a = r[0];
                    s = r[1]
                } else {
                    i = r[0];
                    a = r[1];
                    s = r[2]
                }
                Me(i);
                je(a);
                Ue(s);
                s = Ee(t, s);
                return {
                    isTargetingSelf: n,
                    target: i,
                    type: a,
                    listener: s
                }
            };
            var Be = function e(t, r, n, i) {
                Me(t);
                if (t.nodeName) {
                    be[r](t, n, i)
                } else {
                    t[r](n, i)
                }
            };
            var qe = {
                on: function e() {
                    var t = this;
                    for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
                        n[i] = arguments[i]
                    }
                    var a = Ne(this, n),
                        s = a.isTargetingSelf,
                        o = a.target,
                        u = a.type,
                        l = a.listener;
                    Be(o, 'on', u, l);
                    if (!s) {
                        var c = function e() {
                            return t.off(o, u, l)
                        };
                        c.guid = l.guid;
                        var d = function e() {
                            return t.off('dispose', c)
                        };
                        d.guid = l.guid;
                        Be(this, 'on', 'dispose', c);
                        Be(o, 'on', 'dispose', d)
                    }
                },
                one: function e() {
                    var t = this;
                    for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
                        n[i] = arguments[i]
                    }
                    var a = Ne(this, n),
                        s = a.isTargetingSelf,
                        o = a.target,
                        u = a.type,
                        l = a.listener;
                    if (s) {
                        Be(o, 'one', u, l)
                    } else {
                        var c = function e() {
                            t.off(o, u, e);
                            for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++) {
                                n[i] = arguments[i]
                            }
                            l.apply(null, n)
                        };
                        c.guid = l.guid;
                        Be(o, 'one', u, c)
                    }
                },
                off: function e(t, r, n) {
                    if (!t || Re(t)) {
                        ge(this.eventBusEl_, t, r)
                    } else {
                        var i = t;
                        var a = r;
                        Me(i);
                        je(a);
                        Ue(n);
                        n = Ee(this, n);
                        this.off('dispose', n);
                        if (i.nodeName) {
                            ge(i, a, n);
                            ge(i, 'dispose', n)
                        } else if (Le(i)) {
                            i.off(a, n);
                            i.off('dispose', n)
                        }
                    }
                },
                trigger: function e(t, r) {
                    return ye(this.eventBusEl_, t, r)
                }
            };
            function Fe(t, r) {
                if (r === void 0) {
                    r = {
                    }
                }
                var n = r,
                    i = n.eventBusKey;
                if (i) {
                    if (!t[i].nodeName) {
                        throw new Error('The eventBusKey "' + i + '" does not refer to an element.')
                    }
                    t.eventBusEl_ = t[i]
                } else {
                    t.eventBusEl_ = L('span', {
                        className: 'vjs-event-bus'
                    })
                }
                b(t, qe);
                if (t.eventedCallbacks) {
                    t.eventedCallbacks.forEach(function (e) {
                        e()
                    })
                }
                t.on('dispose', function () {
                    t.off();
                    e.setTimeout(function () {
                        t.eventBusEl_ = null
                    }, 0)
                });
                return t
            }
            var Ve = {
                state: {
                },
                setState: function e(t) {
                    var r = this;
                    if (typeof t === 'function') {
                        t = t()
                    }
                    var n;
                    y(t, function (e, t) {
                        if (r.state[t] !== e) {
                            n = n || {
                            };
                            n[t] = {
                                from: r.state[t],
                                to: e
                            }
                        }
                        r.state[t] = e
                    });
                    if (n && Le(this)) {
                        this.trigger({
                            changes: n,
                            type: 'statechanged'
                        })
                    }
                    return n
                }
            };
            function He(e, t) {
                b(e, Ve);
                e.state = b({
                }, e.state, t);
                if (typeof e.handleStateChanged === 'function' && Le(e)) {
                    e.on('statechanged', e.handleStateChanged)
                }
                return e
            }
            function ze(e) {
                if (typeof e !== 'string') {
                    return e
                }
                return e.charAt(0).toUpperCase() + e.slice(1)
            }
            function Ge(e, t) {
                return ze(e) === ze(t)
            }
            function We() {
                var e = {
                };
                for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
                    r[n] = arguments[n]
                }
                r.forEach(function (t) {
                    if (!t) {
                        return
                    }
                    y(t, function (t, r) {
                        if (!A(t)) {
                            e[r] = t;
                            return
                        }
                        if (!A(e[r])) {
                            e[r] = {
                            }
                        }
                        e[r] = We(e[r], t)
                    })
                });
                return e
            }
            var Ye = function () {
                function t(e, t, r) {
                    if (!e && this.play) {
                        this.player_ = e = this
                    } else {
                        this.player_ = e
                    }
                    this.parentComponent_ = null;
                    this.options_ = We({
                    }, this.options_);
                    t = this.options_ = We(this.options_, t);
                    this.id_ = t.id || t.el && t.el.id;
                    if (!this.id_) {
                        var n = e && e.id && e.id() || 'no_player';
                        this.id_ = n + '_component_' + ae()
                    }
                    this.name_ = t.name || null;
                    if (t.el) {
                        this.el_ = t.el
                    } else if (t.createEl !== false) {
                        this.el_ = this.createEl()
                    }
                    if (t.evented !== false) {
                        Fe(this, {
                            eventBusKey: this.el_ ? 'el_' : null
                        })
                    }
                    He(this, this.constructor.defaultState);
                    this.children_ = [
                    ];
                    this.childIndex_ = {
                    };
                    this.childNameIndex_ = {
                    };
                    if (t.initChildren !== false) {
                        this.initChildren()
                    }
                    this.ready(r);
                    if (t.reportTouchActivity !== false) {
                        this.enableTouchActivity()
                    }
                }
                var r = t.prototype;
                r.dispose = function e() {
                    this.trigger({
                        type: 'dispose',
                        bubbles: false
                    });
                    if (this.children_) {
                        for (var t = this.children_.length - 1; t >= 0; t--) {
                            if (this.children_[t].dispose) {
                                this.children_[t].dispose()
                            }
                        }
                    }
                    this.children_ = null;
                    this.childIndex_ = null;
                    this.childNameIndex_ = null;
                    this.parentComponent_ = null;
                    if (this.el_) {
                        if (this.el_.parentNode) {
                            this.el_.parentNode.removeChild(this.el_)
                        }
                        ce(this.el_);
                        this.el_ = null
                    }
                    this.player_ = null
                };
                r.player = function e() {
                    return this.player_
                };
                r.options = function e(t) {
                    f.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');
                    if (!t) {
                        return this.options_
                    }
                    this.options_ = We(this.options_, t);
                    return this.options_
                };
                r.el = function e() {
                    return this.el_
                };
                r.createEl = function e(t, r, n) {
                    return L(t, r, n)
                };
                r.localize = function e(t, r, n) {
                    if (n === void 0) {
                        n = t
                    }
                    var i = this.player_.language && this.player_.language();
                    var a = this.player_.languages && this.player_.languages();
                    var s = a && a[i];
                    var o = i && i.split('-')[0];
                    var u = a && a[o];
                    var l = n;
                    if (s && s[t]) {
                        l = s[t]
                    } else if (u && u[t]) {
                        l = u[t]
                    }
                    if (r) {
                        l = l.replace(/\{(\d+)\}/g, function (e, t) {
                            var n = r[t - 1];
                            var i = n;
                            if (typeof n === 'undefined') {
                                i = e
                            }
                            return i
                        })
                    }
                    return l
                };
                r.contentEl = function e() {
                    return this.contentEl_ || this.el_
                };
                r.id = function e() {
                    return this.id_
                };
                r.name = function e() {
                    return this.name_
                };
                r.children = function e() {
                    return this.children_
                };
                r.getChildById = function e(t) {
                    return this.childIndex_[t]
                };
                r.getChild = function e(t) {
                    if (!t) {
                        return
                    }
                    t = ze(t);
                    return this.childNameIndex_[t]
                };
                r.addChild = function e(r, n, i) {
                    if (n === void 0) {
                        n = {
                        }
                    }
                    if (i === void 0) {
                        i = this.children_.length
                    }
                    var a;
                    var s;
                    if (typeof r === 'string') {
                        s = ze(r);
                        var o = n.componentClass || s;
                        n.name = s;
                        var u = t.getComponent(o);
                        if (!u) {
                            throw new Error('Component ' + o + ' does not exist')
                        }
                        if (typeof u !== 'function') {
                            return null
                        }
                        a = new u(this.player_ || this, n)
                    } else {
                        a = r
                    }
                    if (a.parentComponent_) {
                        a.parentComponent_.removeChild(a)
                    }
                    this.children_.splice(i, 0, a);
                    a.parentComponent_ = this;
                    if (typeof a.id === 'function') {
                        this.childIndex_[a.id()] = a
                    }
                    s = s || a.name && ze(a.name());
                    if (s) {
                        this.childNameIndex_[s] = a
                    }
                    if (typeof a.el === 'function' && a.el()) {
                        var l = this.contentEl().children;
                        var c = l[i] || null;
                        this.contentEl().insertBefore(a.el(), c)
                    }
                    return a
                };
                r.removeChild = function e(t) {
                    if (typeof t === 'string') {
                        t = this.getChild(t)
                    }
                    if (!t || !this.children_) {
                        return
                    }
                    var r = false;
                    for (var n = this.children_.length - 1; n >= 0; n--) {
                        if (this.children_[n] === t) {
                            r = true;
                            this.children_.splice(n, 1);
                            break
                        }
                    }
                    if (!r) {
                        return
                    }
                    t.parentComponent_ = null;
                    this.childIndex_[t.id()] = null;
                    this.childNameIndex_[t.name()] = null;
                    var i = t.el();
                    if (i && i.parentNode === this.contentEl()) {
                        this.contentEl().removeChild(t.el())
                    }
                };
                r.initChildren = function e() {
                    var r = this;
                    var n = this.options_.children;
                    if (n) {
                        var i = this.options_;
                        var a = function e(t) {
                            var n = t.name;
                            var a = t.opts;
                            if (i[n] !== undefined) {
                                a = i[n]
                            }
                            if (a === false) {
                                return
                            }
                            if (a === true) {
                                a = {
                                }
                            }
                            a.playerOptions = r.options_.playerOptions;
                            var s = r.addChild(n, a);
                            if (s) {
                                r[n] = s
                            }
                        };
                        var s;
                        var o = t.getComponent('Tech');
                        if (Array.isArray(n)) {
                            s = n
                        } else {
                            s = Object.keys(n)
                        }
                        s.concat(Object.keys(this.options_).filter(function (e) {
                            return !s.some(function (t) {
                                if (typeof t === 'string') {
                                    return e === t
                                }
                                return e === t.name
                            })
                        })).map(function (e) {
                            var t;
                            var i;
                            if (typeof e === 'string') {
                                t = e;
                                i = n[t] || r.options_[t] || {
                                }
                            } else {
                                t = e.name;
                                i = e
                            }
                            return {
                                name: t,
                                opts: i
                            }
                        }).filter(function (e) {
                            var r = t.getComponent(e.opts.componentClass || ze(e.name));
                            return r && !o.isTech(r)
                        }).forEach(a)
                    }
                };
                r.buildCSSClass = function e() {
                    return ''
                };
                r.ready = function e(t, r) {
                    if (r === void 0) {
                        r = false
                    }
                    if (!t) {
                        return
                    }
                    if (!this.isReady_) {
                        this.readyQueue_ = this.readyQueue_ || [
                        ];
                        this.readyQueue_.push(t);
                        return
                    }
                    if (r) {
                        t.call(this)
                    } else {
                        this.setTimeout(t, 1)
                    }
                };
                r.triggerReady = function e() {
                    this.isReady_ = true;
                    this.setTimeout(function () {
                        var e = this.readyQueue_;
                        this.readyQueue_ = [
                        ];
                        if (e && e.length > 0) {
                            e.forEach(function (e) {
                                e.call(this)
                            }, this)
                        }
                        this.trigger('ready')
                    }, 1)
                };
                r.$ = function e(t, r) {
                    return te(t, r || this.contentEl())
                };
                r.$$ = function e(t, r) {
                    return re(t, r || this.contentEl())
                };
                r.hasClass = function e(t) {
                    return M(this.el_, t)
                };
                r.addClass = function e(t) {
                    j(this.el_, t)
                };
                r.removeClass = function e(t) {
                    U(this.el_, t)
                };
                r.toggleClass = function e(t, r) {
                    N(this.el_, t, r)
                };
                r.show = function e() {
                    this.removeClass('vjs-hidden')
                };
                r.hide = function e() {
                    this.addClass('vjs-hidden')
                };
                r.lockShowing = function e() {
                    this.addClass('vjs-lock-showing')
                };
                r.unlockShowing = function e() {
                    this.removeClass('vjs-lock-showing')
                };
                r.getAttribute = function e(t) {
                    return F(this.el_, t)
                };
                r.setAttribute = function e(t, r) {
                    V(this.el_, t, r)
                };
                r.removeAttribute = function e(t) {
                    H(this.el_, t)
                };
                r.width = function e(t, r) {
                    return this.dimension('width', t, r)
                };
                r.height = function e(t, r) {
                    return this.dimension('height', t, r)
                };
                r.dimensions = function e(t, r) {
                    this.width(t, true);
                    this.height(r)
                };
                r.dimension = function e(t, r, n) {
                    if (r !== undefined) {
                        if (r === null || r !== r) {
                            r = 0
                        }
                        if (('' + r).indexOf('%') !== - 1 || ('' + r).indexOf('px') !== - 1) {
                            this.el_.style[t] = r
                        } else if (r === 'auto') {
                            this.el_.style[t] = ''
                        } else {
                            this.el_.style[t] = r + 'px'
                        }
                        if (!n) {
                            this.trigger('componentresize')
                        }
                        return
                    }
                    if (!this.el_) {
                        return 0
                    }
                    var i = this.el_.style[t];
                    var a = i.indexOf('px');
                    if (a !== - 1) {
                        return parseInt(i.slice(0, a), 10)
                    }
                    return parseInt(this.el_['offset' + ze(t)], 10)
                };
                r.currentDimension = function t(r) {
                    var n = 0;
                    if (r !== 'width' && r !== 'height') {
                        throw new Error('currentDimension only accepts width or height value')
                    }
                    if (typeof e.getComputedStyle === 'function') {
                        var i = e.getComputedStyle(this.el_);
                        n = i.getPropertyValue(r) || i[r]
                    }
                    n = parseFloat(n);
                    if (n === 0) {
                        var a = 'offset' + ze(r);
                        n = this.el_[a]
                    }
                    return n
                };
                r.currentDimensions = function e() {
                    return {
                        width: this.currentDimension('width'),
                        height: this.currentDimension('height')
                    }
                };
                r.currentWidth = function e() {
                    return this.currentDimension('width')
                };
                r.currentHeight = function e() {
                    return this.currentDimension('height')
                };
                r.focus = function e() {
                    this.el_.focus()
                };
                r.blur = function e() {
                    this.el_.blur()
                };
                r.emitTapEvents = function e() {
                    var t = 0;
                    var r = null;
                    var n = 10;
                    var i = 200;
                    var a;
                    this.on('touchstart', function (e) {
                        if (e.touches.length === 1) {
                            r = {
                                pageX: e.touches[0].pageX,
                                pageY: e.touches[0].pageY
                            };
                            t = (new Date).getTime();
                            a = true
                        }
                    });
                    this.on('touchmove', function (e) {
                        if (e.touches.length > 1) {
                            a = false
                        } else if (r) {
                            var t = e.touches[0].pageX - r.pageX;
                            var i = e.touches[0].pageY - r.pageY;
                            var s = Math.sqrt(t * t + i * i);
                            if (s > n) {
                                a = false
                            }
                        }
                    });
                    var s = function e() {
                        a = false
                    };
                    this.on('touchleave', s);
                    this.on('touchcancel', s);
                    this.on('touchend', function (e) {
                        r = null;
                        if (a === true) {
                            var n = (new Date).getTime() - t;
                            if (n < i) {
                                e.preventDefault();
                                this.trigger('tap')
                            }
                        }
                    })
                };
                r.enableTouchActivity = function e() {
                    if (!this.player() || !this.player().reportUserActivity) {
                        return
                    }
                    var t = Ee(this.player(), this.player().reportUserActivity);
                    var r;
                    this.on('touchstart', function () {
                        t();
                        this.clearInterval(r);
                        r = this.setInterval(t, 250)
                    });
                    var n = function e(n) {
                        t();
                        this.clearInterval(r)
                    };
                    this.on('touchmove', t);
                    this.on('touchend', n);
                    this.on('touchcancel', n)
                };
                r.setTimeout = function t(r, n) {
                    var i = this;
                    var a,
                        s;
                    r = Ee(this, r);
                    a = e.setTimeout(function () {
                        i.off('dispose', s);
                        r()
                    }, n);
                    s = function e() {
                        return i.clearTimeout(a)
                    };
                    s.guid = 'vjs-timeout-' + a;
                    this.on('dispose', s);
                    return a
                };
                r.clearTimeout = function t(r) {
                    e.clearTimeout(r);
                    var n = function e() {
                    };
                    n.guid = 'vjs-timeout-' + r;
                    this.off('dispose', n);
                    return r
                };
                r.setInterval = function t(r, n) {
                    var i = this;
                    r = Ee(this, r);
                    var a = e.setInterval(r, n);
                    var s = function e() {
                        return i.clearInterval(a)
                    };
                    s.guid = 'vjs-interval-' + a;
                    this.on('dispose', s);
                    return a
                };
                r.clearInterval = function t(r) {
                    e.clearInterval(r);
                    var n = function e() {
                    };
                    n.guid = 'vjs-interval-' + r;
                    this.off('dispose', n);
                    return r
                };
                r.requestAnimationFrame = function t(r) {
                    var n = this;
                    var i,
                        a;
                    if (this.supportsRaf_) {
                        r = Ee(this, r);
                        i = e.requestAnimationFrame(function () {
                            n.off('dispose', a);
                            r()
                        });
                        a = function e() {
                            return n.cancelAnimationFrame(i)
                        };
                        a.guid = 'vjs-raf-' + i;
                        this.on('dispose', a);
                        return i
                    }
                    return this.setTimeout(r, 1000 / 60)
                };
                r.cancelAnimationFrame = function t(r) {
                    if (this.supportsRaf_) {
                        e.cancelAnimationFrame(r);
                        var n = function e() {
                        };
                        n.guid = 'vjs-raf-' + r;
                        this.off('dispose', n);
                        return r
                    }
                    return this.clearTimeout(r)
                };
                t.registerComponent = function e(r, n) {
                    if (typeof r !== 'string' || !r) {
                        throw new Error('Illegal component name, "' + r + '"; must be a non-empty string.')
                    }
                    var i = t.getComponent('Tech');
                    var a = i && i.isTech(n);
                    var s = t === n || t.prototype.isPrototypeOf(n.prototype);
                    if (a || !s) {
                        var o;
                        if (a) {
                            o = 'techs must be registered using Tech.registerTech()'
                        } else {
                            o = 'must be a Component subclass'
                        }
                        throw new Error('Illegal component, "' + r + '"; ' + o + '.')
                    }
                    r = ze(r);
                    if (!t.components_) {
                        t.components_ = {
                        }
                    }
                    var u = t.getComponent('Player');
                    if (r === 'Player' && u && u.players) {
                        var l = u.players;
                        var c = Object.keys(l);
                        if (l && c.length > 0 && c.map(function (e) {
                            return l[e]
                        }).every(Boolean)) {
                            throw new Error('Can not register Player component after player has been created.')
                        }
                    }
                    t.components_[r] = n;
                    return n
                };
                t.getComponent = function e(r) {
                    if (!r) {
                        return
                    }
                    r = ze(r);
                    if (t.components_ && t.components_[r]) {
                        return t.components_[r]
                    }
                };
                return t
            }();
            Ye.prototype.supportsRaf_ = typeof e.requestAnimationFrame === 'function' && typeof e.cancelAnimationFrame === 'function';
            Ye.registerComponent('Component', Ye);
            var $e = e.navigator && e.navigator.userAgent || '';
            var Xe = /AppleWebKit\/([\d.]+)/i.exec($e);
            var Ke = Xe ? parseFloat(Xe.pop()) : null;
            var Qe = /iPad/i.test($e);
            var Je = /iPhone/i.test($e) && !Qe;
            var Ze = /iPod/i.test($e);
            var et = Je || Qe || Ze;
            var tt = function () {
                var e = $e.match(/OS (\d+)_/i);
                if (e && e[1]) {
                    return e[1]
                }
                return null
            }();
            var rt = /Android/i.test($e);
            var nt = function () {
                var e = $e.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
                if (!e) {
                    return null
                }
                var t = e[1] && parseFloat(e[1]);
                var r = e[2] && parseFloat(e[2]);
                if (t && r) {
                    return parseFloat(e[1] + '.' + e[2])
                } else if (t) {
                    return t
                }
                return null
            }();
            var it = rt && nt < 5 && Ke < 537;
            var at = /Firefox/i.test($e);
            var st = /Edge/i.test($e);
            var ot = !st && (/Chrome/i.test($e) || /CriOS/i.test($e));
            var ut = function () {
                var e = $e.match(/(Chrome|CriOS)\/(\d+)/);
                if (e && e[2]) {
                    return parseFloat(e[2])
                }
                return null
            }();
            var lt = function () {
                var e = /MSIE\s(\d+)\.\d/.exec($e);
                var t = e && parseFloat(e[1]);
                if (!t && /Trident\/7.0/i.test($e) && /rv:11.0/.test($e)) {
                    t = 11
                }
                return t
            }();
            var ct = /Safari/i.test($e) && !ot && !rt && !st;
            var dt = (ct || et) && !ot;
            var ft = I() && ('ontouchstart' in e || e.navigator.maxTouchPoints || e.DocumentTouch && e.document instanceof e.DocumentTouch);
            var ht = Object.freeze({
                IS_IPAD: Qe,
                IS_IPHONE: Je,
                IS_IPOD: Ze,
                IS_IOS: et,
                IOS_VERSION: tt,
                IS_ANDROID: rt,
                ANDROID_VERSION: nt,
                IS_NATIVE_ANDROID: it,
                IS_FIREFOX: at,
                IS_EDGE: st,
                IS_CHROME: ot,
                CHROME_VERSION: ut,
                IE_VERSION: lt,
                IS_SAFARI: ct,
                IS_ANY_SAFARI: dt,
                TOUCH_ENABLED: ft
            });
            function pt(e, t, r) {
                if (typeof t !== 'number' || t < 0 || t > r) {
                    throw new Error('Failed to execute \'' + e + '\' on \'TimeRanges\': The index provided (' + t + ') is non-numeric or out of bounds (0-' + r + ').')
                }
            }
            function vt(e, t, r, n) {
                pt(e, n, r.length - 1);
                return r[n][t]
            }
            function mt(e) {
                if (e === undefined || e.length === 0) {
                    return {
                        length: 0,
                        start: function e() {
                            throw new Error('This TimeRanges object is empty')
                        },
                        end: function e() {
                            throw new Error('This TimeRanges object is empty')
                        }
                    }
                }
                return {
                    length: e.length,
                    start: vt.bind(null, 'start', 0, e),
                    end: vt.bind(null, 'end', 1, e)
                }
            }
            function gt(e, t) {
                if (Array.isArray(e)) {
                    return mt(e)
                } else if (e === undefined || t === undefined) {
                    return mt()
                }
                return mt([[e,
                    t]])
            }
            function yt(e, t) {
                var r = 0;
                var n;
                var i;
                if (!t) {
                    return 0
                }
                if (!e || !e.length) {
                    e = gt(0, 0)
                }
                for (var a = 0; a < e.length; a++) {
                    n = e.start(a);
                    i = e.end(a);
                    if (i > t) {
                        i = t
                    }
                    r += i - n
                }
                return r / t
            }
            var _t = {
            };
            var bt = [
                ['requestFullscreen',
                    'exitFullscreen',
                    'fullscreenElement',
                    'fullscreenEnabled',
                    'fullscreenchange',
                    'fullscreenerror'],
                [
                    'webkitRequestFullscreen',
                    'webkitExitFullscreen',
                    'webkitFullscreenElement',
                    'webkitFullscreenEnabled',
                    'webkitfullscreenchange',
                    'webkitfullscreenerror'
                ],
                [
                    'webkitRequestFullScreen',
                    'webkitCancelFullScreen',
                    'webkitCurrentFullScreenElement',
                    'webkitCancelFullScreen',
                    'webkitfullscreenchange',
                    'webkitfullscreenerror'
                ],
                [
                    'mozRequestFullScreen',
                    'mozCancelFullScreen',
                    'mozFullScreenElement',
                    'mozFullScreenEnabled',
                    'mozfullscreenchange',
                    'mozfullscreenerror'
                ],
                [
                    'msRequestFullscreen',
                    'msExitFullscreen',
                    'msFullscreenElement',
                    'msFullscreenEnabled',
                    'MSFullscreenChange',
                    'MSFullscreenError'
                ]
            ];
            var Tt = bt[0];
            var At;
            var St = false;
            for (var kt = 0; kt < bt.length; kt++) {
                if (bt[kt][1] in t) {
                    At = bt[kt];
                    break
                }
            }
            if (At) {
                for (var wt = 0; wt < At.length; wt++) {
                    _t[Tt[wt]] = At[wt]
                }
                St = At[0] === Tt[0]
            }
            function Ct(e) {
                if (e instanceof Ct) {
                    return e
                }
                if (typeof e === 'number') {
                    this.code = e
                } else if (typeof e === 'string') {
                    this.message = e
                } else if (T(e)) {
                    if (typeof e.code === 'number') {
                        this.code = e.code
                    }
                    b(this, e)
                }
                if (!this.message) {
                    this.message = Ct.defaultMessages[this.code] || ''
                }
            }
            Ct.prototype.code = 0;
            Ct.prototype.message = '';
            Ct.prototype.status = null;
            Ct.errorTypes = [
                'MEDIA_ERR_CUSTOM',
                'MEDIA_ERR_ABORTED',
                'MEDIA_ERR_NETWORK',
                'MEDIA_ERR_DECODE',
                'MEDIA_ERR_SRC_NOT_SUPPORTED',
                'MEDIA_ERR_ENCRYPTED'
            ];
            Ct.defaultMessages = {
                1: 'You aborted the media playback',
                2: 'A network error caused the media download to fail part-way.',
                3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',
                4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',
                5: 'The media is encrypted and we do not have the keys to decrypt it.'
            };
            for (var Et = 0; Et < Ct.errorTypes.length; Et++) {
                Ct[Ct.errorTypes[Et]] = Et;
                Ct.prototype[Ct.errorTypes[Et]] = Et
            }
            var It = Pt;
            function Pt(e, t) {
                var r;
                var n = null;
                try {
                    r = JSON.parse(e, t)
                } catch (e) {
                    n = e
                }
                return [n,
                    r]
            }
            function Ot(e) {
                return e !== undefined && e !== null && typeof e.then === 'function'
            }
            function xt(e) {
                if (Ot(e)) {
                    e.then(null, function (e) {
                    })
                }
            }
            var Lt = function e(t) {
                var r = [
                    'kind',
                    'label',
                    'language',
                    'id',
                    'inBandMetadataTrackDispatchType',
                    'mode',
                    'src'
                ].reduce(function (e, r, n) {
                    if (t[r]) {
                        e[r] = t[r]
                    }
                    return e
                }, {
                    cues: t.cues && Array.prototype.map.call(t.cues, function (e) {
                        return {
                            startTime: e.startTime,
                            endTime: e.endTime,
                            text: e.text,
                            id: e.id
                        }
                    })
                });
                return r
            };
            var Dt = function e(t) {
                var r = t.$$('track');
                var n = Array.prototype.map.call(r, function (e) {
                    return e.track
                });
                var i = Array.prototype.map.call(r, function (e) {
                    var t = Lt(e.track);
                    if (e.src) {
                        t.src = e.src
                    }
                    return t
                });
                return i.concat(Array.prototype.filter.call(t.textTracks(), function (e) {
                    return n.indexOf(e) === - 1
                }).map(Lt))
            };
            var Rt = function e(t, r) {
                t.forEach(function (e) {
                    var t = r.addRemoteTextTrack(e).track;
                    if (!e.src && e.cues) {
                        e.cues.forEach(function (e) {
                            return t.addCue(e)
                        })
                    }
                });
                return r.textTracks()
            };
            var Mt = {
                textTracksToJson: Dt,
                jsonToTextTracks: Rt,
                trackToJson_: Lt
            };
            var jt = 'vjs-modal-dialog';
            var Ut = 27;
            var Nt = function (r) {
                n(i, r);
                function i(e, t) {
                    var n;
                    n = r.call(this, e, t) || this;
                    n.opened_ = n.hasBeenOpened_ = n.hasBeenFilled_ = false;
                    n.closeable(!n.options_.uncloseable);
                    n.content(n.options_.content);
                    n.contentEl_ = L('div', {
                        className: jt + '-content'
                    }, {
                        role: 'document'
                    });
                    n.descEl_ = L('p', {
                        className: jt + '-description vjs-control-text',
                        id: n.el().getAttribute('aria-describedby')
                    });
                    D(n.descEl_, n.description());
                    n.el_.appendChild(n.descEl_);
                    n.el_.appendChild(n.contentEl_);
                    return n
                }
                var a = i.prototype;
                a.createEl = function e() {
                    return r.prototype.createEl.call(this, 'div', {
                        className: this.buildCSSClass(),
                        tabIndex: - 1
                    }, {
                        'aria-describedby': this.id() + '_description',
                        'aria-hidden': 'true',
                        'aria-label': this.label(),
                        role: 'dialog'
                    })
                };
                a.dispose = function e() {
                    this.contentEl_ = null;
                    this.descEl_ = null;
                    this.previouslyActiveEl_ = null;
                    r.prototype.dispose.call(this)
                };
                a.buildCSSClass = function e() {
                    return jt + ' vjs-hidden ' + r.prototype.buildCSSClass.call(this)
                };
                a.handleKeyPress = function e(t) {
                    if (t.which === Ut && this.closeable()) {
                        this.close()
                    }
                };
                a.label = function e() {
                    return this.localize(this.options_.label || 'Modal Window')
                };
                a.description = function e() {
                    var t = this.options_.description || this.localize('This is a modal window.');
                    if (this.closeable()) {
                        t += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.')
                    }
                    return t
                };
                a.open = function e() {
                    if (!this.opened_) {
                        var t = this.player();
                        this.trigger('beforemodalopen');
                        this.opened_ = true;
                        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {
                            this.fill()
                        }
                        this.wasPlaying_ = !t.paused();
                        if (this.options_.pauseOnOpen && this.wasPlaying_) {
                            t.pause()
                        }
                        if (this.closeable()) {
                            this.on(this.el_.ownerDocument, 'keydown', Ee(this, this.handleKeyPress))
                        }
                        this.hadControls_ = t.controls();
                        t.controls(false);
                        this.show();
                        this.conditionalFocus_();
                        this.el().setAttribute('aria-hidden', 'false');
                        this.trigger('modalopen');
                        this.hasBeenOpened_ = true
                    }
                };
                a.opened = function e(t) {
                    if (typeof t === 'boolean') {
                        this[t ? 'open' : 'close']()
                    }
                    return this.opened_
                };
                a.close = function e() {
                    if (!this.opened_) {
                        return
                    }
                    var t = this.player();
                    this.trigger('beforemodalclose');
                    this.opened_ = false;
                    if (this.wasPlaying_ && this.options_.pauseOnOpen) {
                        t.play()
                    }
                    if (this.closeable()) {
                        this.off(this.el_.ownerDocument, 'keydown', Ee(this, this.handleKeyPress))
                    }
                    if (this.hadControls_) {
                        t.controls(true)
                    }
                    this.hide();
                    this.el().setAttribute('aria-hidden', 'true');
                    this.trigger('modalclose');
                    this.conditionalBlur_();
                    if (this.options_.temporary) {
                        this.dispose()
                    }
                };
                a.closeable = function e(t) {
                    if (typeof t === 'boolean') {
                        var e = this.closeable_ = !!t;
                        var r = this.getChild('closeButton');
                        if (e && !r) {
                            var n = this.contentEl_;
                            this.contentEl_ = this.el_;
                            r = this.addChild('closeButton', {
                                controlText: 'Close Modal Dialog'
                            });
                            this.contentEl_ = n;
                            this.on(r, 'close', this.close)
                        }
                        if (!e && r) {
                            this.off(r, 'close', this.close);
                            this.removeChild(r);
                            r.dispose()
                        }
                    }
                    return this.closeable_
                };
                a.fill = function e() {
                    this.fillWith(this.content())
                };
                a.fillWith = function e(t) {
                    var r = this.contentEl();
                    var n = r.parentNode;
                    var i = r.nextSibling;
                    this.trigger('beforemodalfill');
                    this.hasBeenFilled_ = true;
                    n.removeChild(r);
                    this.empty();
                    Z(r, t);
                    this.trigger('modalfill');
                    if (i) {
                        n.insertBefore(r, i)
                    } else {
                        n.appendChild(r)
                    }
                    var a = this.getChild('closeButton');
                    if (a) {
                        n.appendChild(a.el_)
                    }
                };
                a.empty = function e() {
                    this.trigger('beforemodalempty');
                    K(this.contentEl());
                    this.trigger('modalempty')
                };
                a.content = function e(t) {
                    if (typeof t !== 'undefined') {
                        this.content_ = t
                    }
                    return this.content_
                };
                a.conditionalFocus_ = function e() {
                    var r = t.activeElement;
                    var n = this.player_.el_;
                    this.previouslyActiveEl_ = null;
                    if (n.contains(r) || n === r) {
                        this.previouslyActiveEl_ = r;
                        this.focus();
                        this.on(t, 'keydown', this.handleKeyDown)
                    }
                };
                a.conditionalBlur_ = function e() {
                    if (this.previouslyActiveEl_) {
                        this.previouslyActiveEl_.focus();
                        this.previouslyActiveEl_ = null
                    }
                    this.off(t, 'keydown', this.handleKeyDown)
                };
                a.handleKeyDown = function e(r) {
                    if (r.which !== 9) {
                        return
                    }
                    var n = this.focusableEls_();
                    var i = this.el_.querySelector(':focus');
                    var a;
                    for (var s = 0; s < n.length; s++) {
                        if (i === n[s]) {
                            a = s;
                            break
                        }
                    }
                    if (t.activeElement === this.el_) {
                        a = 0
                    }
                    if (r.shiftKey && a === 0) {
                        n[n.length - 1].focus();
                        r.preventDefault()
                    } else if (!r.shiftKey && a === n.length - 1) {
                        n[0].focus();
                        r.preventDefault()
                    }
                };
                a.focusableEls_ = function t() {
                    var r = this.el_.querySelectorAll('*');
                    return Array.prototype.filter.call(r, function (t) {
                        return (t instanceof e.HTMLAnchorElement || t instanceof e.HTMLAreaElement) && t.hasAttribute('href') || (t instanceof e.HTMLInputElement || t instanceof e.HTMLSelectElement || t instanceof e.HTMLTextAreaElement || t instanceof e.HTMLButtonElement) && !t.hasAttribute('disabled') || t instanceof e.HTMLIFrameElement || t instanceof e.HTMLObjectElement || t instanceof e.HTMLEmbedElement || t.hasAttribute('tabindex') && t.getAttribute('tabindex') !== - 1 || t.hasAttribute('contenteditable')
                    })
                };
                return i
            }(Ye);
            Nt.prototype.options_ = {
                pauseOnOpen: true,
                temporary: true
            };
            Ye.registerComponent('ModalDialog', Nt);
            var Bt = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    r = e.call(this) || this;
                    r.tracks_ = [
                    ];
                    Object.defineProperty(o(o(r)), 'length', {
                        get: function e() {
                            return this.tracks_.length
                        }
                    });
                    for (var n = 0; n < t.length; n++) {
                        r.addTrack(t[n])
                    }
                    return r
                }
                var r = t.prototype;
                r.addTrack = function e(t) {
                    var r = this.tracks_.length;
                    if (!('' + r in this)) {
                        Object.defineProperty(this, r, {
                            get: function e() {
                                return this.tracks_[r]
                            }
                        })
                    }
                    if (this.tracks_.indexOf(t) === - 1) {
                        this.tracks_.push(t);
                        this.trigger({
                            track: t,
                            type: 'addtrack'
                        })
                    }
                };
                r.removeTrack = function e(t) {
                    var r;
                    for (var n = 0, i = this.length; n < i; n++) {
                        if (this[n] === t) {
                            r = this[n];
                            if (r.off) {
                                r.off()
                            }
                            this.tracks_.splice(n, 1);
                            break
                        }
                    }
                    if (!r) {
                        return
                    }
                    this.trigger({
                        track: r,
                        type: 'removetrack'
                    })
                };
                r.getTrackById = function e(t) {
                    var r = null;
                    for (var n = 0, i = this.length; n < i; n++) {
                        var a = this[n];
                        if (a.id === t) {
                            r = a;
                            break
                        }
                    }
                    return r
                };
                return t
            }(Oe);
            Bt.prototype.allowedEvents_ = {
                change: 'change',
                addtrack: 'addtrack',
                removetrack: 'removetrack'
            };
            for (var qt in Bt.prototype.allowedEvents_) {
                Bt.prototype['on' + qt] = null
            }
            var Ft = function e(t, r) {
                for (var n = 0; n < t.length; n++) {
                    if (!Object.keys(t[n]).length || r.id === t[n].id) {
                        continue
                    }
                    t[n].enabled = false
                }
            };
            var Vt = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    for (var n = t.length - 1; n >= 0; n--) {
                        if (t[n].enabled) {
                            Ft(t, t[n]);
                            break
                        }
                    }
                    r = e.call(this, t) || this;
                    r.changing_ = false;
                    return r
                }
                var r = t.prototype;
                r.addTrack = function t(r) {
                    var n = this;
                    if (r.enabled) {
                        Ft(this, r)
                    }
                    e.prototype.addTrack.call(this, r);
                    if (!r.addEventListener) {
                        return
                    }
                    r.addEventListener('enabledchange', function () {
                        if (n.changing_) {
                            return
                        }
                        n.changing_ = true;
                        Ft(n, r);
                        n.changing_ = false;
                        n.trigger('change')
                    })
                };
                return t
            }(Bt);
            var Ht = function e(t, r) {
                for (var n = 0; n < t.length; n++) {
                    if (!Object.keys(t[n]).length || r.id === t[n].id) {
                        continue
                    }
                    t[n].selected = false
                }
            };
            var zt = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    for (var n = t.length - 1; n >= 0; n--) {
                        if (t[n].selected) {
                            Ht(t, t[n]);
                            break
                        }
                    }
                    r = e.call(this, t) || this;
                    r.changing_ = false;
                    Object.defineProperty(o(o(r)), 'selectedIndex', {
                        get: function e() {
                            for (var t = 0; t < this.length; t++) {
                                if (this[t].selected) {
                                    return t
                                }
                            }
                            return - 1
                        },
                        set: function e() {
                        }
                    });
                    return r
                }
                var r = t.prototype;
                r.addTrack = function t(r) {
                    var n = this;
                    if (r.selected) {
                        Ht(this, r)
                    }
                    e.prototype.addTrack.call(this, r);
                    if (!r.addEventListener) {
                        return
                    }
                    r.addEventListener('selectedchange', function () {
                        if (n.changing_) {
                            return
                        }
                        n.changing_ = true;
                        Ht(n, r);
                        n.changing_ = false;
                        n.trigger('change')
                    })
                };
                return t
            }(Bt);
            var Gt = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.addTrack = function t(r) {
                    e.prototype.addTrack.call(this, r);
                    r.addEventListener('modechange', Ee(this, function () {
                        this.queueTrigger('change')
                    }));
                    var n = [
                        'metadata',
                        'chapters'
                    ];
                    if (n.indexOf(r.kind) === - 1) {
                        r.addEventListener('modechange', Ee(this, function () {
                            this.trigger('selectedlanguagechange')
                        }))
                    }
                };
                return t
            }(Bt);
            var Wt = function () {
                function e(e) {
                    if (e === void 0) {
                        e = [
                        ]
                    }
                    this.trackElements_ = [
                    ];
                    Object.defineProperty(this, 'length', {
                        get: function e() {
                            return this.trackElements_.length
                        }
                    });
                    for (var t = 0, r = e.length; t < r; t++) {
                        this.addTrackElement_(e[t])
                    }
                }
                var t = e.prototype;
                t.addTrackElement_ = function e(t) {
                    var r = this.trackElements_.length;
                    if (!('' + r in this)) {
                        Object.defineProperty(this, r, {
                            get: function e() {
                                return this.trackElements_[r]
                            }
                        })
                    }
                    if (this.trackElements_.indexOf(t) === - 1) {
                        this.trackElements_.push(t)
                    }
                };
                t.getTrackElementByTrack_ = function e(t) {
                    var r;
                    for (var n = 0, i = this.trackElements_.length; n < i; n++) {
                        if (t === this.trackElements_[n].track) {
                            r = this.trackElements_[n];
                            break
                        }
                    }
                    return r
                };
                t.removeTrackElement_ = function e(t) {
                    for (var r = 0, n = this.trackElements_.length; r < n; r++) {
                        if (t === this.trackElements_[r]) {
                            this.trackElements_.splice(r, 1);
                            break
                        }
                    }
                };
                return e
            }();
            var Yt = function () {
                function e(t) {
                    e.prototype.setCues_.call(this, t);
                    Object.defineProperty(this, 'length', {
                        get: function e() {
                            return this.length_
                        }
                    })
                }
                var t = e.prototype;
                t.setCues_ = function e(t) {
                    var r = this.length || 0;
                    var n = 0;
                    var i = t.length;
                    this.cues_ = t;
                    this.length_ = t.length;
                    var a = function e(t) {
                        if (!('' + t in this)) {
                            Object.defineProperty(this, '' + t, {
                                get: function e() {
                                    return this.cues_[t]
                                }
                            })
                        }
                    };
                    if (r < i) {
                        n = r;
                        for (; n < i; n++) {
                            a.call(this, n)
                        }
                    }
                };
                t.getCueById = function e(t) {
                    var r = null;
                    for (var n = 0, i = this.length; n < i; n++) {
                        var a = this[n];
                        if (a.id === t) {
                            r = a;
                            break
                        }
                    }
                    return r
                };
                return e
            }();
            var $t = {
                alternative: 'alternative',
                captions: 'captions',
                main: 'main',
                sign: 'sign',
                subtitles: 'subtitles',
                commentary: 'commentary'
            };
            var Xt = {
                alternative: 'alternative',
                descriptions: 'descriptions',
                main: 'main',
                'main-desc': 'main-desc',
                translation: 'translation',
                commentary: 'commentary'
            };
            var Kt = {
                subtitles: 'subtitles',
                captions: 'captions',
                descriptions: 'descriptions',
                chapters: 'chapters',
                metadata: 'metadata'
            };
            var Qt = {
                disabled: 'disabled',
                hidden: 'hidden',
                showing: 'showing'
            };
            var Jt = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = {
                        }
                    }
                    r = e.call(this) || this;
                    var n = {
                        id: t.id || 'vjs_track_' + ae(),
                        kind: t.kind || '',
                        label: t.label || '',
                        language: t.language || ''
                    };
                    var i = function e(t) {
                        Object.defineProperty(o(o(r)), t, {
                            get: function e() {
                                return n[t]
                            },
                            set: function e() {
                            }
                        })
                    };
                    for (var a in n) {
                        i(a)
                    }
                    return r
                }
                return t
            }(Oe);
            var Zt = function r(n) {
                var i = [
                    'protocol',
                    'hostname',
                    'port',
                    'pathname',
                    'search',
                    'hash',
                    'host'
                ];
                var a = t.createElement('a');
                a.href = n;
                var s = a.host === '' && a.protocol !== 'file:';
                var o;
                if (s) {
                    o = t.createElement('div');
                    o.innerHTML = '<a href="' + n + '"></a>';
                    a = o.firstChild;
                    o.setAttribute('style', 'display:none; position:absolute;');
                    t.body.appendChild(o)
                }
                var u = {
                };
                for (var l = 0; l < i.length; l++) {
                    u[i[l]] = a[i[l]]
                }
                if (u.protocol === 'http:') {
                    u.host = u.host.replace(/:80$/, '')
                }
                if (u.protocol === 'https:') {
                    u.host = u.host.replace(/:443$/, '')
                }
                if (!u.protocol) {
                    u.protocol = e.location.protocol
                }
                if (s) {
                    t.body.removeChild(o)
                }
                return u
            };
            var er = function e(r) {
                if (!r.match(/^https?:\/\//)) {
                    var n = t.createElement('div');
                    n.innerHTML = '<a href="' + r + '">x</a>';
                    r = n.firstChild.href
                }
                return r
            };
            var tr = function e(t) {
                if (typeof t === 'string') {
                    var r = /^(\/?)([\s\S]*?)((?:\.{1,2}|[^\/]+?)(\.([^\.\/\?]+)))(?:[\/]*|[\?].*)$/i;
                    var n = r.exec(t);
                    if (n) {
                        return n.pop().toLowerCase()
                    }
                }
                return ''
            };
            var rr = function t(r) {
                var n = e.location;
                var i = Zt(r);
                var a = i.protocol === ':' ? n.protocol : i.protocol;
                var s = a + i.host !== n.protocol + n.host;
                return s
            };
            var nr = Object.freeze({
                parseUrl: Zt,
                getAbsoluteURL: er,
                getFileExtension: tr,
                isCrossOrigin: rr
            });
            var ir = sr;
            var ar = Object.prototype.toString;
            function sr(e) {
                var t = ar.call(e);
                return t === '[object Function]' || typeof e === 'function' && t !== '[object RegExp]' || typeof window !== 'undefined' && (e === window.setTimeout || e === window.alert || e === window.confirm || e === window.prompt)
            }
            function or(e, t) {
                return t = {
                    exports: {
                    }
                },
                    e(t, t.exports),
                    t.exports
            }
            var ur = or(function (e, t) {
                t = e.exports = r;
                function r(e) {
                    return e.replace(/^\s*|\s*$/g, '')
                }
                t.left = function (e) {
                    return e.replace(/^\s*/, '')
                };
                t.right = function (e) {
                    return e.replace(/\s*$/, '')
                }
            });
            var lr = ur.left;
            var cr = ur.right;
            var dr = Function.prototype.toString;
            var fr = /^\s*class\b/;
            var hr = function e(t) {
                try {
                    var r = dr.call(t);
                    return fr.test(r)
                } catch (e) {
                    return false
                }
            };
            var pr = function e(t) {
                try {
                    if (hr(t)) {
                        return false
                    }
                    dr.call(t);
                    return true
                } catch (e) {
                    return false
                }
            };
            var vr = Object.prototype.toString;
            var mr = '[object Function]';
            var gr = '[object GeneratorFunction]';
            var yr = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
            var _r = function e(t) {
                if (!t) {
                    return false
                }
                if (typeof t !== 'function' && typeof t !== 'object') {
                    return false
                }
                if (typeof t === 'function' && !t.prototype) {
                    return true
                }
                if (yr) {
                    return pr(t)
                }
                if (hr(t)) {
                    return false
                }
                var r = vr.call(t);
                return r === mr || r === gr
            };
            var br = Object.prototype.toString;
            var Tr = Object.prototype.hasOwnProperty;
            var Ar = function e(t, r, n) {
                for (var i = 0, a = t.length; i < a; i++) {
                    if (Tr.call(t, i)) {
                        if (n == null) {
                            r(t[i], i, t)
                        } else {
                            r.call(n, t[i], i, t)
                        }
                    }
                }
            };
            var Sr = function e(t, r, n) {
                for (var i = 0, a = t.length; i < a; i++) {
                    if (n == null) {
                        r(t.charAt(i), i, t)
                    } else {
                        r.call(n, t.charAt(i), i, t)
                    }
                }
            };
            var kr = function e(t, r, n) {
                for (var i in t) {
                    if (Tr.call(t, i)) {
                        if (n == null) {
                            r(t[i], i, t)
                        } else {
                            r.call(n, t[i], i, t)
                        }
                    }
                }
            };
            var wr = function e(t, r, n) {
                if (!_r(r)) {
                    throw new TypeError('iterator must be a function')
                }
                var i;
                if (arguments.length >= 3) {
                    i = n
                }
                if (br.call(t) === '[object Array]') {
                    Ar(t, r, i)
                } else if (typeof t === 'string') {
                    Sr(t, r, i)
                } else {
                    kr(t, r, i)
                }
            };
            var Cr = wr;
            var Er = function e(t) {
                return Object.prototype.toString.call(t) === '[object Array]'
            };
            var Ir = function e(t) {
                if (!t) return {
                };
                var r = {
                };
                Cr(ur(t).split('\n'), function (e) {
                    var t = e.indexOf(':'),
                        n = ur(e.slice(0, t)).toLowerCase(),
                        i = ur(e.slice(t + 1));
                    if (typeof r[n] === 'undefined') {
                        r[n] = i
                    } else if (Er(r[n])) {
                        r[n].push(i)
                    } else {
                        r[n] = [
                            r[n],
                            i
                        ]
                    }
                });
                return r
            };
            var Pr = xr;
            var Or = Object.prototype.hasOwnProperty;
            function xr() {
                var e = {
                };
                for (var t = 0; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        if (Or.call(r, n)) {
                            e[n] = r[n]
                        }
                    }
                }
                return e
            }
            var Lr = jr;
            jr.XMLHttpRequest = e.XMLHttpRequest || Br;
            jr.XDomainRequest = 'withCredentials' in new jr.XMLHttpRequest ? jr.XMLHttpRequest : e.XDomainRequest;
            Dr(['get',
                'put',
                'post',
                'patch',
                'head',
                'delete'], function (e) {
                    jr[e === 'delete' ? 'del' : e] = function (t, r, n) {
                        r = Mr(t, r, n);
                        r.method = e.toUpperCase();
                        return Ur(r)
                    }
                });
            function Dr(e, t) {
                for (var r = 0; r < e.length; r++) {
                    t(e[r])
                }
            }
            function Rr(e) {
                for (var t in e) {
                    if (e.hasOwnProperty(t)) return false
                }
                return true
            }
            function Mr(e, t, r) {
                var n = e;
                if (ir(t)) {
                    r = t;
                    if (typeof e === 'string') {
                        n = {
                            uri: e
                        }
                    }
                } else {
                    n = Pr(t, {
                        uri: e
                    })
                }
                n.callback = r;
                return n
            }
            function jr(e, t, r) {
                t = Mr(e, t, r);
                return Ur(t)
            }
            function Ur(e) {
                if (typeof e.callback === 'undefined') {
                    throw new Error('callback argument missing')
                }
                var t = false;
                var r = function r(n, i, a) {
                    if (!t) {
                        t = true;
                        e.callback(n, i, a)
                    }
                };
                function n() {
                    if (o.readyState === 4) {
                        setTimeout(s, 0)
                    }
                }
                function i() {
                    var e = undefined;
                    if (o.response) {
                        e = o.response
                    } else {
                        e = o.responseText || Nr(o)
                    }
                    if (v) {
                        try {
                            e = JSON.parse(e)
                        } catch (e) {
                        }
                    }
                    return e
                }
                function a(e) {
                    clearTimeout(m);
                    if (!(e instanceof Error)) {
                        e = new Error('' + (e || 'Unknown XMLHttpRequest Error'))
                    }
                    e.statusCode = 0;
                    return r(e, g)
                }
                function s() {
                    if (l) return;
                    var t;
                    clearTimeout(m);
                    if (e.useXDR && o.status === undefined) {
                        t = 200
                    } else {
                        t = o.status === 1223 ? 204 : o.status
                    }
                    var n = g;
                    var a = null;
                    if (t !== 0) {
                        n = {
                            body: i(),
                            statusCode: t,
                            method: d,
                            headers: {
                            },
                            url: c,
                            rawRequest: o
                        };
                        if (o.getAllResponseHeaders) {
                            n.headers = Ir(o.getAllResponseHeaders())
                        }
                    } else {
                        a = new Error('Internal XMLHttpRequest Error')
                    }
                    return r(a, n, n.body)
                }
                var o = e.xhr || null;
                if (!o) {
                    if (e.cors || e.useXDR) {
                        o = new jr.XDomainRequest
                    } else {
                        o = new jr.XMLHttpRequest
                    }
                }
                var u;
                var l;
                var c = o.url = e.uri || e.url;
                var d = o.method = e.method || 'GET';
                var f = e.body || e.data;
                var h = o.headers = e.headers || {
                };
                var p = !!e.sync;
                var v = false;
                var m;
                var g = {
                    body: undefined,
                    headers: {
                    },
                    statusCode: 0,
                    method: d,
                    url: c,
                    rawRequest: o
                };
                if ('json' in e && e.json !== false) {
                    v = true;
                    h['accept'] || h['Accept'] || (h['Accept'] = 'application/json');
                    if (d !== 'GET' && d !== 'HEAD') {
                        h['content-type'] || h['Content-Type'] || (h['Content-Type'] = 'application/json');
                        f = JSON.stringify(e.json === true ? f : e.json)
                    }
                }
                o.onreadystatechange = n;
                o.onload = s;
                o.onerror = a;
                o.onprogress = function () {
                };
                o.onabort = function () {
                    l = true
                };
                o.ontimeout = a;
                o.open(d, c, !p, e.username, e.password);
                if (!p) {
                    o.withCredentials = !!e.withCredentials
                }
                if (!p && e.timeout > 0) {
                    m = setTimeout(function () {
                        if (l) return;
                        l = true;
                        o.abort('timeout');
                        var e = new Error('XMLHttpRequest timeout');
                        e.code = 'ETIMEDOUT';
                        a(e)
                    }, e.timeout)
                }
                if (o.setRequestHeader) {
                    for (u in h) {
                        if (h.hasOwnProperty(u)) {
                            o.setRequestHeader(u, h[u])
                        }
                    }
                } else if (e.headers && !Rr(e.headers)) {
                    throw new Error('Headers cannot be set on an XDomainRequest object')
                }
                if ('responseType' in e) {
                    o.responseType = e.responseType
                }
                if ('beforeSend' in e && typeof e.beforeSend === 'function') {
                    e.beforeSend(o)
                }
                o.send(f || null);
                return o
            }
            function Nr(e) {
                if (e.responseType === 'document') {
                    return e.responseXML
                }
                var t = e.responseXML && e.responseXML.documentElement.nodeName === 'parsererror';
                if (e.responseType === '' && !t) {
                    return e.responseXML
                }
                return null
            }
            function Br() {
            }
            var qr = function t(r, n) {
                var i = new e.WebVTT.Parser(e, e.vttjs, e.WebVTT.StringDecoder());
                var a = [
                ];
                i.oncue = function (e) {
                    n.addCue(e)
                };
                i.onparsingerror = function (e) {
                    a.push(e)
                };
                i.onflush = function () {
                    n.trigger({
                        type: 'loadeddata',
                        target: n
                    })
                };
                i.parse(r);
                if (a.length > 0) {
                    if (e.console && e.console.groupCollapsed) {
                        e.console.groupCollapsed('Text Track parsing errors for ' + n.src)
                    }
                    a.forEach(function (e) {
                        return f.error(e)
                    });
                    if (e.console && e.console.groupEnd) {
                        e.console.groupEnd()
                    }
                }
                i.flush()
            };
            var Fr = function t(r, n) {
                var i = {
                    uri: r
                };
                var a = rr(r);
                if (a) {
                    i.cors = a
                }
                Lr(i, Ee(this, function (t, r, i) {
                    if (t) {
                        return f.error(t, r)
                    }
                    n.loaded_ = true;
                    if (typeof e.WebVTT !== 'function') {
                        if (n.tech_) {
                            var a = function e() {
                                return qr(i, n)
                            };
                            n.tech_.on('vttjsloaded', a);
                            n.tech_.on('vttjserror', function () {
                                f.error('vttjs failed to load, stopping trying to process ' + n.src);
                                n.tech_.off('vttjsloaded', a)
                            })
                        }
                    } else {
                        qr(i, n)
                    }
                }))
            };
            var Vr = function (t) {
                n(r, t);
                function r(e) {
                    var r;
                    if (e === void 0) {
                        e = {
                        }
                    }
                    if (!e.tech) {
                        throw new Error('A tech was not provided.')
                    }
                    var n = We(e, {
                        kind: Kt[e.kind] || 'subtitles',
                        language: e.language || e.srclang || ''
                    });
                    var i = Qt[n.mode] || 'disabled';
                    var a = n.default;
                    if (n.kind === 'metadata' || n.kind === 'chapters') {
                        i = 'hidden'
                    }
                    r = t.call(this, n) || this;
                    r.tech_ = n.tech;
                    r.cues_ = [
                    ];
                    r.activeCues_ = [
                    ];
                    var s = new Yt(r.cues_);
                    var u = new Yt(r.activeCues_);
                    var l = false;
                    var c = Ee(o(o(r)), function () {
                        this.activeCues = this.activeCues;
                        if (l) {
                            this.trigger('cuechange');
                            l = false
                        }
                    });
                    if (i !== 'disabled') {
                        r.tech_.ready(function () {
                            r.tech_.on('timeupdate', c)
                        }, true)
                    }
                    Object.defineProperties(o(o(r)), {
                        default:
                        {
                            get: function e() {
                                return a
                            },
                            set: function e() {
                            }
                        },
                        mode: {
                            get: function e() {
                                return i
                            },
                            set: function e(t) {
                                var r = this;
                                if (!Qt[t]) {
                                    return
                                }
                                i = t;
                                if (i !== 'disabled') {
                                    this.tech_.ready(function () {
                                        r.tech_.on('timeupdate', c)
                                    }, true)
                                } else {
                                    this.tech_.off('timeupdate', c)
                                }
                                this.trigger('modechange')
                            }
                        },
                        cues: {
                            get: function e() {
                                if (!this.loaded_) {
                                    return null
                                }
                                return s
                            },
                            set: function e() {
                            }
                        },
                        activeCues: {
                            get: function e() {
                                if (!this.loaded_) {
                                    return null
                                }
                                if (this.cues.length === 0) {
                                    return u
                                }
                                var t = this.tech_.currentTime();
                                var r = [
                                ];
                                for (var n = 0, i = this.cues.length; n < i; n++) {
                                    var a = this.cues[n];
                                    if (a.startTime <= t && a.endTime >= t) {
                                        r.push(a)
                                    } else if (a.startTime === a.endTime && a.startTime <= t && a.startTime + 0.5 >= t) {
                                        r.push(a)
                                    }
                                }
                                l = false;
                                if (r.length !== this.activeCues_.length) {
                                    l = true
                                } else {
                                    for (var s = 0; s < r.length; s++) {
                                        if (this.activeCues_.indexOf(r[s]) === - 1) {
                                            l = true
                                        }
                                    }
                                }
                                this.activeCues_ = r;
                                u.setCues_(this.activeCues_);
                                return u
                            },
                            set: function e() {
                            }
                        }
                    });
                    if (n.src) {
                        r.src = n.src;
                        Fr(n.src, o(o(r)))
                    } else {
                        r.loaded_ = true
                    }
                    return r
                }
                var i = r.prototype;
                i.addCue = function t(r) {
                    var n = r;
                    if (e.vttjs && !(r instanceof e.vttjs.VTTCue)) {
                        n = new e.vttjs.VTTCue(r.startTime, r.endTime, r.text);
                        for (var i in r) {
                            if (!(i in n)) {
                                n[i] = r[i]
                            }
                        }
                        n.id = r.id;
                        n.originalCue_ = r
                    }
                    var a = this.tech_.textTracks();
                    for (var s = 0; s < a.length; s++) {
                        if (a[s] !== this) {
                            a[s].removeCue(n)
                        }
                    }
                    this.cues_.push(n);
                    this.cues.setCues_(this.cues_)
                };
                i.removeCue = function e(t) {
                    var r = this.cues_.length;
                    while (r--) {
                        var n = this.cues_[r];
                        if (n === t || n.originalCue_ && n.originalCue_ === t) {
                            this.cues_.splice(r, 1);
                            this.cues.setCues_(this.cues_);
                            break
                        }
                    }
                };
                return r
            }(Jt);
            Vr.prototype.allowedEvents_ = {
                cuechange: 'cuechange'
            };
            var Hr = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = {
                        }
                    }
                    var n = We(t, {
                        kind: Xt[t.kind] || ''
                    });
                    r = e.call(this, n) || this;
                    var i = false;
                    Object.defineProperty(o(o(r)), 'enabled', {
                        get: function e() {
                            return i
                        },
                        set: function e(t) {
                            if (typeof t !== 'boolean' || t === i) {
                                return
                            }
                            i = t;
                            this.trigger('enabledchange')
                        }
                    });
                    if (n.enabled) {
                        r.enabled = n.enabled
                    }
                    r.loaded_ = true;
                    return r
                }
                return t
            }(Jt);
            var zr = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = {
                        }
                    }
                    var n = We(t, {
                        kind: $t[t.kind] || ''
                    });
                    r = e.call(this, n) || this;
                    var i = false;
                    Object.defineProperty(o(o(r)), 'selected', {
                        get: function e() {
                            return i
                        },
                        set: function e(t) {
                            if (typeof t !== 'boolean' || t === i) {
                                return
                            }
                            i = t;
                            this.trigger('selectedchange')
                        }
                    });
                    if (n.selected) {
                        r.selected = n.selected
                    }
                    return r
                }
                return t
            }(Jt);
            var Gr = 0;
            var Wr = 1;
            var Yr = 2;
            var $r = 3;
            var Xr = function (e) {
                n(t, e);
                function t(t) {
                    var r;
                    if (t === void 0) {
                        t = {
                        }
                    }
                    r = e.call(this) || this;
                    var n;
                    var i = new Vr(t);
                    r.kind = i.kind;
                    r.src = i.src;
                    r.srclang = i.language;
                    r.label = i.label;
                    r.default = i.default;
                    Object.defineProperties(o(o(r)), {
                        readyState: {
                            get: function e() {
                                return n
                            }
                        },
                        track: {
                            get: function e() {
                                return i
                            }
                        }
                    });
                    n = Gr;
                    i.addEventListener('loadeddata', function () {
                        n = Yr;
                        r.trigger({
                            type: 'load',
                            target: o(o(r))
                        })
                    });
                    return r
                }
                return t
            }(Oe);
            Xr.prototype.allowedEvents_ = {
                load: 'load'
            };
            Xr.NONE = Gr;
            Xr.LOADING = Wr;
            Xr.LOADED = Yr;
            Xr.ERROR = $r;
            var Kr = {
                audio: {
                    ListClass: Vt,
                    TrackClass: Hr,
                    capitalName: 'Audio'
                },
                video: {
                    ListClass: zt,
                    TrackClass: zr,
                    capitalName: 'Video'
                },
                text: {
                    ListClass: Gt,
                    TrackClass: Vr,
                    capitalName: 'Text'
                }
            };
            Object.keys(Kr).forEach(function (e) {
                Kr[e].getterName = e + 'Tracks';
                Kr[e].privateName = e + 'Tracks_'
            });
            var Qr = {
                remoteText: {
                    ListClass: Gt,
                    TrackClass: Vr,
                    capitalName: 'RemoteText',
                    getterName: 'remoteTextTracks',
                    privateName: 'remoteTextTracks_'
                },
                remoteTextEl: {
                    ListClass: Wt,
                    TrackClass: Xr,
                    capitalName: 'RemoteTextTrackEls',
                    getterName: 'remoteTextTrackEls',
                    privateName: 'remoteTextTrackEls_'
                }
            };
            var Jr = We(Kr, Qr);
            Qr.names = Object.keys(Qr);
            Kr.names = Object.keys(Kr);
            Jr.names = [
            ].concat(Qr.names).concat(Kr.names);
            var Zr = {
            };
            function en(e, t, r, n, i) {
                if (i === void 0) {
                    i = {
                    }
                }
                var a = e.textTracks();
                i.kind = t;
                if (r) {
                    i.label = r
                }
                if (n) {
                    i.language = n
                }
                i.tech = e;
                var s = new Jr.text.TrackClass(i);
                a.addTrack(s);
                return s
            }
            var tn = function (r) {
                n(i, r);
                function i(e, t) {
                    var n;
                    if (e === void 0) {
                        e = {
                        }
                    }
                    if (t === void 0) {
                        t = function e() {
                        }
                    }
                    e.reportTouchActivity = false;
                    n = r.call(this, null, e, t) || this;
                    n.hasStarted_ = false;
                    n.on('playing', function () {
                        this.hasStarted_ = true
                    });
                    n.on('loadstart', function () {
                        this.hasStarted_ = false
                    });
                    Jr.names.forEach(function (t) {
                        var r = Jr[t];
                        if (e && e[r.getterName]) {
                            n[r.privateName] = e[r.getterName]
                        }
                    });
                    if (!n.featuresProgressEvents) {
                        n.manualProgressOn()
                    }
                    if (!n.featuresTimeupdateEvents) {
                        n.manualTimeUpdatesOn()
                    }
                    [
                        'Text',
                        'Audio',
                        'Video'
                    ].forEach(function (t) {
                        if (e['native' + t + 'Tracks'] === false) {
                            n['featuresNative' + t + 'Tracks'] = false
                        }
                    });
                    if (e.nativeCaptions === false || e.nativeTextTracks === false) {
                        n.featuresNativeTextTracks = false
                    } else if (e.nativeCaptions === true || e.nativeTextTracks === true) {
                        n.featuresNativeTextTracks = true
                    }
                    if (!n.featuresNativeTextTracks) {
                        n.emulateTextTracks()
                    }
                    n.autoRemoteTextTracks_ = new Jr.text.ListClass;
                    n.initTrackListeners();
                    if (!e.nativeControlsForTouch) {
                        n.emitTapEvents()
                    }
                    if (n.constructor) {
                        n.name_ = n.constructor.name || 'Unknown Tech'
                    }
                    return n
                }
                var a = i.prototype;
                a.triggerSourceset = function e(t) {
                    var r = this;
                    if (!this.isReady_) {
                        this.one('ready', function () {
                            return r.setTimeout(function () {
                                return r.triggerSourceset(t)
                            }, 1)
                        })
                    }
                    this.trigger({
                        src: t,
                        type: 'sourceset'
                    })
                };
                a.manualProgressOn = function e() {
                    this.on('durationchange', this.onDurationChange);
                    this.manualProgress = true;
                    this.one('ready', this.trackProgress)
                };
                a.manualProgressOff = function e() {
                    this.manualProgress = false;
                    this.stopTrackingProgress();
                    this.off('durationchange', this.onDurationChange)
                };
                a.trackProgress = function e(t) {
                    this.stopTrackingProgress();
                    this.progressInterval = this.setInterval(Ee(this, function () {
                        var e = this.bufferedPercent();
                        if (this.bufferedPercent_ !== e) {
                            this.trigger('progress')
                        }
                        this.bufferedPercent_ = e;
                        if (e === 1) {
                            this.stopTrackingProgress()
                        }
                    }), 500)
                };
                a.onDurationChange = function e(t) {
                    this.duration_ = this.duration()
                };
                a.buffered = function e() {
                    return gt(0, 0)
                };
                a.bufferedPercent = function e() {
                    return yt(this.buffered(), this.duration_)
                };
                a.stopTrackingProgress = function e() {
                    this.clearInterval(this.progressInterval)
                };
                a.manualTimeUpdatesOn = function e() {
                    this.manualTimeUpdates = true;
                    this.on('play', this.trackCurrentTime);
                    this.on('pause', this.stopTrackingCurrentTime)
                };
                a.manualTimeUpdatesOff = function e() {
                    this.manualTimeUpdates = false;
                    this.stopTrackingCurrentTime();
                    this.off('play', this.trackCurrentTime);
                    this.off('pause', this.stopTrackingCurrentTime)
                };
                a.trackCurrentTime = function e() {
                    if (this.currentTimeInterval) {
                        this.stopTrackingCurrentTime()
                    }
                    this.currentTimeInterval = this.setInterval(function () {
                        this.trigger({
                            type: 'timeupdate',
                            target: this,
                            manuallyTriggered: true
                        })
                    }, 250)
                };
                a.stopTrackingCurrentTime = function e() {
                    this.clearInterval(this.currentTimeInterval);
                    this.trigger({
                        type: 'timeupdate',
                        target: this,
                        manuallyTriggered: true
                    })
                };
                a.dispose = function e() {
                    this.clearTracks(Kr.names);
                    if (this.manualProgress) {
                        this.manualProgressOff()
                    }
                    if (this.manualTimeUpdates) {
                        this.manualTimeUpdatesOff()
                    }
                    r.prototype.dispose.call(this)
                };
                a.clearTracks = function e(t) {
                    var r = this;
                    t = [
                    ].concat(t);
                    t.forEach(function (e) {
                        var t = r[e + 'Tracks']() || [
                        ];
                        var n = t.length;
                        while (n--) {
                            var i = t[n];
                            if (e === 'text') {
                                r.removeRemoteTextTrack(i)
                            }
                            t.removeTrack(i)
                        }
                    })
                };
                a.cleanupAutoTextTracks = function e() {
                    var t = this.autoRemoteTextTracks_ || [
                    ];
                    var r = t.length;
                    while (r--) {
                        var n = t[r];
                        this.removeRemoteTextTrack(n)
                    }
                };
                a.reset = function e() {
                };
                a.error = function e(t) {
                    if (t !== undefined) {
                        this.error_ = new Ct(t);
                        this.trigger('error')
                    }
                    return this.error_
                };
                a.played = function e() {
                    if (this.hasStarted_) {
                        return gt(0, 0)
                    }
                    return gt()
                };
                a.setCurrentTime = function e() {
                    if (this.manualTimeUpdates) {
                        this.trigger({
                            type: 'timeupdate',
                            target: this,
                            manuallyTriggered: true
                        })
                    }
                };
                a.initTrackListeners = function e() {
                    var t = this;
                    Kr.names.forEach(function (e) {
                        var r = Kr[e];
                        var n = function r() {
                            t.trigger(e + 'trackchange')
                        };
                        var i = t[r.getterName]();
                        i.addEventListener('removetrack', n);
                        i.addEventListener('addtrack', n);
                        t.on('dispose', function () {
                            i.removeEventListener('removetrack', n);
                            i.removeEventListener('addtrack', n)
                        })
                    })
                };
                a.addWebVttScript_ = function r() {
                    var n = this;
                    if (e.WebVTT) {
                        return
                    }
                    if (t.body.contains(this.el())) {
                        if (!this.options_['vtt.js'] && A(Zr) && Object.keys(Zr).length > 0) {
                            this.trigger('vttjsloaded');
                            return
                        }
                        var i = t.createElement('script');
                        i.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';
                        i.onload = function () {
                            n.trigger('vttjsloaded')
                        };
                        i.onerror = function () {
                            n.trigger('vttjserror')
                        };
                        this.on('dispose', function () {
                            i.onload = null;
                            i.onerror = null
                        });
                        e.WebVTT = true;
                        this.el().parentNode.appendChild(i)
                    } else {
                        this.ready(this.addWebVttScript_)
                    }
                };
                a.emulateTextTracks = function e() {
                    var t = this;
                    var r = this.textTracks();
                    var n = this.remoteTextTracks();
                    var i = function e(t) {
                        return r.addTrack(t.track)
                    };
                    var a = function e(t) {
                        return r.removeTrack(t.track)
                    };
                    n.on('addtrack', i);
                    n.on('removetrack', a);
                    this.addWebVttScript_();
                    var s = function e() {
                        return t.trigger('texttrackchange')
                    };
                    var o = function e() {
                        s();
                        for (var t = 0; t < r.length; t++) {
                            var n = r[t];
                            n.removeEventListener('cuechange', s);
                            if (n.mode === 'showing') {
                                n.addEventListener('cuechange', s)
                            }
                        }
                    };
                    o();
                    r.addEventListener('change', o);
                    r.addEventListener('addtrack', o);
                    r.addEventListener('removetrack', o);
                    this.on('dispose', function () {
                        n.off('addtrack', i);
                        n.off('removetrack', a);
                        r.removeEventListener('change', o);
                        r.removeEventListener('addtrack', o);
                        r.removeEventListener('removetrack', o);
                        for (var e = 0; e < r.length; e++) {
                            var t = r[e];
                            t.removeEventListener('cuechange', s)
                        }
                    })
                };
                a.addTextTrack = function e(t, r, n) {
                    if (!t) {
                        throw new Error('TextTrack kind is required but was not provided')
                    }
                    return en(this, t, r, n)
                };
                a.createRemoteTextTrack = function e(t) {
                    var r = We(t, {
                        tech: this
                    });
                    return new Qr.remoteTextEl.TrackClass(r)
                };
                a.addRemoteTextTrack = function e(t, r) {
                    var n = this;
                    if (t === void 0) {
                        t = {
                        }
                    }
                    var i = this.createRemoteTextTrack(t);
                    if (r !== true && r !== false) {
                        f.warn('Calling addRemoteTextTrack without explicitly setting the "manualCleanup" parameter to `true` is deprecated and default to `false` in future version of video.js');
                        r = true
                    }
                    this.remoteTextTrackEls().addTrackElement_(i);
                    this.remoteTextTracks().addTrack(i.track);
                    if (r !== true) {
                        this.ready(function () {
                            return n.autoRemoteTextTracks_.addTrack(i.track)
                        })
                    }
                    return i
                };
                a.removeRemoteTextTrack = function e(t) {
                    var r = this.remoteTextTrackEls().getTrackElementByTrack_(t);
                    this.remoteTextTrackEls().removeTrackElement_(r);
                    this.remoteTextTracks().removeTrack(t);
                    this.autoRemoteTextTracks_.removeTrack(t)
                };
                a.getVideoPlaybackQuality = function e() {
                    return {
                    }
                };
                a.setPoster = function e() {
                };
                a.playsinline = function e() {
                };
                a.setPlaysinline = function e() {
                };
                a.overrideNativeAudioTracks = function e() {
                };
                a.overrideNativeVideoTracks = function e() {
                };
                a.canPlayType = function e() {
                    return ''
                };
                i.canPlayType = function e() {
                    return ''
                };
                i.canPlaySource = function e(t, r) {
                    return i.canPlayType(t.type)
                };
                i.isTech = function e(t) {
                    return t.prototype instanceof i || t instanceof i || t === i
                };
                i.registerTech = function e(t, r) {
                    if (!i.techs_) {
                        i.techs_ = {
                        }
                    }
                    if (!i.isTech(r)) {
                        throw new Error('Tech ' + t + ' must be a Tech')
                    }
                    if (!i.canPlayType) {
                        throw new Error('Techs must have a static canPlayType method on them')
                    }
                    if (!i.canPlaySource) {
                        throw new Error('Techs must have a static canPlaySource method on them')
                    }
                    t = ze(t);
                    i.techs_[t] = r;
                    if (t !== 'Tech') {
                        i.defaultTechOrder_.push(t)
                    }
                    return r
                };
                i.getTech = function t(r) {
                    if (!r) {
                        return
                    }
                    r = ze(r);
                    if (i.techs_ && i.techs_[r]) {
                        return i.techs_[r]
                    }
                    if (e && e.videojs && e.videojs[r]) {
                        f.warn('The ' + r + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');
                        return e.videojs[r]
                    }
                };
                return i
            }(Ye);
            Jr.names.forEach(function (e) {
                var t = Jr[e];
                tn.prototype[t.getterName] = function () {
                    this[t.privateName] = this[t.privateName] || new t.ListClass;
                    return this[t.privateName]
                }
            });
            tn.prototype.featuresVolumeControl = true;
            tn.prototype.featuresMuteControl = true;
            tn.prototype.featuresFullscreenResize = false;
            tn.prototype.featuresPlaybackRate = false;
            tn.prototype.featuresProgressEvents = false;
            tn.prototype.featuresSourceset = false;
            tn.prototype.featuresTimeupdateEvents = false;
            tn.prototype.featuresNativeTextTracks = false;
            tn.withSourceHandlers = function (e) {
                e.registerSourceHandler = function (t, r) {
                    var n = e.sourceHandlers;
                    if (!n) {
                        n = e.sourceHandlers = [
                        ]
                    }
                    if (r === undefined) {
                        r = n.length
                    }
                    n.splice(r, 0, t)
                };
                e.canPlayType = function (t) {
                    var r = e.sourceHandlers || [
                    ];
                    var n;
                    for (var i = 0; i < r.length; i++) {
                        n = r[i].canPlayType(t);
                        if (n) {
                            return n
                        }
                    }
                    return ''
                };
                e.selectSourceHandler = function (t, r) {
                    var n = e.sourceHandlers || [
                    ];
                    var i;
                    for (var a = 0; a < n.length; a++) {
                        i = n[a].canHandleSource(t, r);
                        if (i) {
                            return n[a]
                        }
                    }
                    return null
                };
                e.canPlaySource = function (t, r) {
                    var n = e.selectSourceHandler(t, r);
                    if (n) {
                        return n.canHandleSource(t, r)
                    }
                    return ''
                };
                var t = [
                    'seekable',
                    'seeking',
                    'duration'
                ];
                t.forEach(function (e) {
                    var t = this[e];
                    if (typeof t !== 'function') {
                        return
                    }
                    this[e] = function () {
                        if (this.sourceHandler_ && this.sourceHandler_[e]) {
                            return this.sourceHandler_[e].apply(this.sourceHandler_, arguments)
                        }
                        return t.apply(this, arguments)
                    }
                }, e.prototype);
                e.prototype.setSource = function (t) {
                    var r = e.selectSourceHandler(t, this.options_);
                    if (!r) {
                        if (e.nativeSourceHandler) {
                            r = e.nativeSourceHandler
                        } else {
                            f.error('No source handler found for the current source.')
                        }
                    }
                    this.disposeSourceHandler();
                    this.off('dispose', this.disposeSourceHandler);
                    if (r !== e.nativeSourceHandler) {
                        this.currentSource_ = t
                    }
                    this.sourceHandler_ = r.handleSource(t, this, this.options_);
                    this.on('dispose', this.disposeSourceHandler)
                };
                e.prototype.disposeSourceHandler = function () {
                    if (this.currentSource_) {
                        this.clearTracks(['audio',
                            'video']);
                        this.currentSource_ = null
                    }
                    this.cleanupAutoTextTracks();
                    if (this.sourceHandler_) {
                        if (this.sourceHandler_.dispose) {
                            this.sourceHandler_.dispose()
                        }
                        this.sourceHandler_ = null
                    }
                }
            };
            Ye.registerComponent('Tech', tn);
            tn.registerTech('Tech', tn);
            tn.defaultTechOrder_ = [
            ];
            var rn = {
            };
            var nn = {
            };
            var an = {
            };
            function sn(e, t) {
                rn[e] = rn[e] || [
                ];
                rn[e].push(t)
            }
            function on(e, t, r) {
                e.setTimeout(function () {
                    return _n(t, rn[t.type], r, e)
                }, 1)
            }
            function un(e, t) {
                e.forEach(function (e) {
                    return e.setTech && e.setTech(t)
                })
            }
            function ln(e, t, r) {
                return e.reduceRight(vn(r), t[r]())
            }
            function cn(e, t, r, n) {
                return t[r](e.reduce(vn(r), n))
            }
            function dn(e, t, r, n) {
                if (n === void 0) {
                    n = null
                }
                var i = 'call' + ze(r);
                var a = e.reduce(vn(i), n);
                var s = a === an;
                var o = s ? null : t[r](a);
                mn(e, r, o, s);
                return o
            }
            var fn = {
                buffered: 1,
                currentTime: 1,
                duration: 1,
                seekable: 1,
                played: 1,
                paused: 1
            };
            var hn = {
                setCurrentTime: 1
            };
            var pn = {
                play: 1,
                pause: 1
            };
            function vn(e) {
                return function (t, r) {
                    if (t === an) {
                        return an
                    }
                    if (r[e]) {
                        return r[e](t)
                    }
                    return t
                }
            }
            function mn(e, t, r, n) {
                for (var i = e.length - 1; i >= 0; i--) {
                    var a = e[i];
                    if (a[t]) {
                        a[t](n, r)
                    }
                }
            }
            function gn(e) {
                nn[e.id()] = null
            }
            function yn(e, t) {
                var r = nn[e.id()];
                var n = null;
                if (r === undefined || r === null) {
                    n = t(e);
                    nn[e.id()] = [
                        [t,
                            n]
                    ];
                    return n
                }
                for (var i = 0; i < r.length; i++) {
                    var a = r[i],
                        s = a[0],
                        o = a[1];
                    if (s !== t) {
                        continue
                    }
                    n = o
                }
                if (n === null) {
                    n = t(e);
                    r.push([t,
                        n])
                }
                return n
            }
            function _n(e, t, r, n, i, a) {
                if (e === void 0) {
                    e = {
                    }
                }
                if (t === void 0) {
                    t = [
                    ]
                }
                if (i === void 0) {
                    i = [
                    ]
                }
                if (a === void 0) {
                    a = false
                }
                var s = t,
                    o = s[0],
                    u = s.slice(1);
                if (typeof o === 'string') {
                    _n(e, rn[o], r, n, i, a)
                } else if (o) {
                    var l = yn(n, o);
                    if (!l.setSource) {
                        i.push(l);
                        return _n(e, u, r, n, i, a)
                    }
                    l.setSource(b({
                    }, e), function (t, s) {
                        if (t) {
                            return _n(e, u, r, n, i, a)
                        }
                        i.push(l);
                        _n(s, e.type === s.type ? u : rn[s.type], r, n, i, a)
                    })
                } else if (u.length) {
                    _n(e, u, r, n, i, a)
                } else if (a) {
                    r(e, i)
                } else {
                    _n(e, rn['*'], r, n, i, true)
                }
            }
            var bn = {
                opus: 'video/ogg',
                ogv: 'video/ogg',
                mp4: 'video/mp4',
                mov: 'video/mp4',
                m4v: 'video/mp4',
                mkv: 'video/x-matroska',
                mp3: 'audio/mpeg',
                aac: 'audio/aac',
                oga: 'audio/ogg',
                m3u8: 'application/x-mpegURL'
            };
            var Tn = function e(t) {
                if (t === void 0) {
                    t = ''
                }
                var r = tr(t);
                var n = bn[r.toLowerCase()];
                return n || ''
            };
            var An = function e(t, r) {
                if (!r) {
                    return ''
                }
                if (t.cache_.source.src === r && t.cache_.source.type) {
                    return t.cache_.source.type
                }
                var n = t.cache_.sources.filter(function (e) {
                    return e.src === r
                });
                if (n.length) {
                    return n[0].type
                }
                var i = t.$$('source');
                for (var a = 0; a < i.length; a++) {
                    var s = i[a];
                    if (s.type && s.src && s.src === r) {
                        return s.type
                    }
                }
                return Tn(r)
            };
            var Sn = function e(t) {
                if (Array.isArray(t)) {
                    var r = [
                    ];
                    t.forEach(function (t) {
                        t = e(t);
                        if (Array.isArray(t)) {
                            r = r.concat(t)
                        } else if (T(t)) {
                            r.push(t)
                        }
                    });
                    t = r
                } else if (typeof t === 'string' && t.trim()) {
                    t = [
                        kn({
                            src: t
                        })
                    ]
                } else if (T(t) && typeof t.src === 'string' && t.src && t.src.trim()) {
                    t = [
                        kn(t)
                    ]
                } else {
                    t = [
                    ]
                }
                return t
            };
            function kn(e) {
                var t = Tn(e.src);
                if (!e.type && t) {
                    e.type = t
                }
                return e
            }
            var wn = function (e) {
                n(t, e);
                function t(t, r, n) {
                    var i;
                    var a = We({
                        createEl: false
                    }, r);
                    i = e.call(this, t, a, n) || this;
                    if (!r.playerOptions.sources || r.playerOptions.sources.length === 0) {
                        for (var s = 0, o = r.playerOptions.techOrder; s < o.length; s++) {
                            var u = ze(o[s]);
                            var l = tn.getTech(u);
                            if (!u) {
                                l = Ye.getComponent(u)
                            }
                            if (l && l.isSupported()) {
                                t.loadTech_(u);
                                break
                            }
                        }
                    } else {
                        t.src(r.playerOptions.sources)
                    }
                    return i
                }
                return t
            }(Ye);
            Ye.registerComponent('MediaLoader', wn);
            var Cn = function (e) {
                n(r, e);
                function r(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.emitTapEvents();
                    n.enable();
                    return n
                }
                var i = r.prototype;
                i.createEl = function t(r, n, i) {
                    if (r === void 0) {
                        r = 'div'
                    }
                    if (n === void 0) {
                        n = {
                        }
                    }
                    if (i === void 0) {
                        i = {
                        }
                    }
                    n = b({
                        innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                        className: this.buildCSSClass(),
                        tabIndex: 0
                    }, n);
                    if (r === 'button') {
                        f.error('Creating a ClickableComponent with an HTML element of ' + r + ' is not supported; use a Button instead.')
                    }
                    i = b({
                        role: 'button'
                    }, i);
                    this.tabIndex_ = n.tabIndex;
                    var a = e.prototype.createEl.call(this, r, n, i);
                    this.createControlTextEl(a);
                    return a
                };
                i.dispose = function t() {
                    this.controlTextEl_ = null;
                    e.prototype.dispose.call(this)
                };
                i.createControlTextEl = function e(t) {
                    this.controlTextEl_ = L('span', {
                        className: 'vjs-control-text'
                    }, {
                        'aria-live': 'polite'
                    });
                    if (t) {
                        t.appendChild(this.controlTextEl_)
                    }
                    this.controlText(this.controlText_, t);
                    return this.controlTextEl_
                };
                i.controlText = function e(t, r) {
                    if (r === void 0) {
                        r = this.el()
                    }
                    if (t === undefined) {
                        return this.controlText_ || 'Need Text'
                    }
                    var n = this.localize(t);
                    this.controlText_ = t;
                    D(this.controlTextEl_, n);
                    if (!this.nonIconControl) {
                        r.setAttribute('title', n)
                    }
                };
                i.buildCSSClass = function t() {
                    return 'vjs-control vjs-button ' + e.prototype.buildCSSClass.call(this)
                };
                i.enable = function e() {
                    if (!this.enabled_) {
                        this.enabled_ = true;
                        this.removeClass('vjs-disabled');
                        this.el_.setAttribute('aria-disabled', 'false');
                        if (typeof this.tabIndex_ !== 'undefined') {
                            this.el_.setAttribute('tabIndex', this.tabIndex_)
                        }
                        this.on(['tap',
                            'click'], this.handleClick);
                        this.on('focus', this.handleFocus);
                        this.on('blur', this.handleBlur)
                    }
                };
                i.disable = function e() {
                    this.enabled_ = false;
                    this.addClass('vjs-disabled');
                    this.el_.setAttribute('aria-disabled', 'true');
                    if (typeof this.tabIndex_ !== 'undefined') {
                        this.el_.removeAttribute('tabIndex')
                    }
                    this.off(['tap',
                        'click'], this.handleClick);
                    this.off('focus', this.handleFocus);
                    this.off('blur', this.handleBlur)
                };
                i.handleClick = function e(t) {
                };
                i.handleFocus = function e(r) {
                    me(t, 'keydown', Ee(this, this.handleKeyPress))
                };
                i.handleKeyPress = function t(r) {
                    if (r.which === 32 || r.which === 13) {
                        r.preventDefault();
                        this.trigger('click')
                    } else if (e.prototype.handleKeyPress) {
                        e.prototype.handleKeyPress.call(this, r)
                    }
                };
                i.handleBlur = function e(r) {
                    ge(t, 'keydown', Ee(this, this.handleKeyPress))
                };
                return r
            }(Ye);
            Ye.registerComponent('ClickableComponent', Cn);
            var En = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.update();
                    t.on('posterchange', Ee(o(o(n)), n.update));
                    return n
                }
                var r = t.prototype;
                r.dispose = function t() {
                    this.player().off('posterchange', this.update);
                    e.prototype.dispose.call(this)
                };
                r.createEl = function e() {
                    var t = L('div', {
                        className: 'vjs-poster',
                        tabIndex: - 1
                    });
                    return t
                };
                r.update = function e(t) {
                    var r = this.player().poster();
                    this.setSrc(r);
                    if (r) {
                        this.show()
                    } else {
                        this.hide()
                    }
                };
                r.setSrc = function e(t) {
                    var r = '';
                    if (t) {
                        r = 'url("' + t + '")'
                    }
                    this.el_.style.backgroundImage = r
                };
                r.handleClick = function e(t) {
                    if (!this.player_.controls()) {
                        return
                    }
                    if (this.player_.paused()) {
                        xt(this.player_.play())
                    } else {
                        this.player_.pause()
                    }
                };
                return t
            }(Cn);
            Ye.registerComponent('PosterImage', En);
            var In = '#222';
            var Pn = '#ccc';
            var On = {
                monospace: 'monospace',
                sansSerif: 'sans-serif',
                serif: 'serif',
                monospaceSansSerif: '"Andale Mono", "Lucida Console", monospace',
                monospaceSerif: '"Courier New", monospace',
                proportionalSansSerif: 'sans-serif',
                proportionalSerif: 'serif',
                casual: '"Comic Sans MS", Impact, fantasy',
                script: '"Monotype Corsiva", cursive',
                smallcaps: '"Andale Mono", "Lucida Console", monospace, sans-serif'
            };
            function xn(e, t) {
                var r;
                if (e.length === 4) {
                    r = e[1] + e[1] + e[2] + e[2] + e[3] + e[3]
                } else if (e.length === 7) {
                    r = e.slice(1)
                } else {
                    throw new Error('Invalid color code provided, ' + e + '; must be formatted as e.g. #f0e or #f604e2.')
                }
                return 'rgba(' + parseInt(r.slice(0, 2), 16) + ',' + parseInt(r.slice(2, 4), 16) + ',' + parseInt(r.slice(4, 6), 16) + ',' + t + ')'
            }
            function Ln(e, t, r) {
                try {
                    e.style[t] = r
                } catch (e) {
                    return
                }
            }
            var Dn = function (t) {
                n(r, t);
                function r(r, n, i) {
                    var a;
                    a = t.call(this, r, n, i) || this;
                    var s = Ee(o(o(a)), a.updateDisplay);
                    r.on('loadstart', Ee(o(o(a)), a.toggleDisplay));
                    r.on('texttrackchange', s);
                    r.on('loadedmetadata', Ee(o(o(a)), a.preselectTrack));
                    r.ready(Ee(o(o(a)), function () {
                        if (r.tech_ && r.tech_.featuresNativeTextTracks) {
                            this.hide();
                            return
                        }
                        r.on('fullscreenchange', s);
                        r.on('playerresize', s);
                        e.addEventListener('orientationchange', s);
                        r.on('dispose', function () {
                            return e.removeEventListener('orientationchange', s)
                        });
                        var t = this.options_.playerOptions.tracks || [
                        ];
                        for (var n = 0; n < t.length; n++) {
                            this.player_.addRemoteTextTrack(t[n], true)
                        }
                        this.preselectTrack()
                    }));
                    return a
                }
                var i = r.prototype;
                i.preselectTrack = function e() {
                    var t = {
                        captions: 1,
                        subtitles: 1
                    };
                    var r = this.player_.textTracks();
                    var n = this.player_.cache_.selectedLanguage;
                    var i;
                    var a;
                    var s;
                    for (var o = 0; o < r.length; o++) {
                        var u = r[o];
                        if (n && n.enabled && n.language && n.language === u.language && u.kind in t) {
                            if (u.kind === n.kind) {
                                s = u
                            } else if (!s) {
                                s = u
                            }
                        } else if (n && !n.enabled) {
                            s = null;
                            i = null;
                            a = null
                        } else if (u.default) {
                            if (u.kind === 'descriptions' && !i) {
                                i = u
                            } else if (u.kind in t && !a) {
                                a = u
                            }
                        }
                    }
                    if (s) {
                        s.mode = 'showing'
                    } else if (a) {
                        a.mode = 'showing'
                    } else if (i) {
                        i.mode = 'showing'
                    }
                };
                i.toggleDisplay = function e() {
                    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {
                        this.hide()
                    } else {
                        this.show()
                    }
                };
                i.createEl = function e() {
                    return t.prototype.createEl.call(this, 'div', {
                        className: 'vjs-text-track-display'
                    }, {
                        'aria-live': 'off',
                        'aria-atomic': 'true'
                    })
                };
                i.clearDisplay = function t() {
                    if (typeof e.WebVTT === 'function') {
                        e.WebVTT.processCues(e, [
                        ], this.el_)
                    }
                };
                i.updateDisplay = function e() {
                    var t = this.player_.textTracks();
                    this.clearDisplay();
                    var r = null;
                    var n = null;
                    var i = t.length;
                    while (i--) {
                        var a = t[i];
                        if (a.mode === 'showing') {
                            if (a.kind === 'descriptions') {
                                r = a
                            } else {
                                n = a
                            }
                        }
                    }
                    if (n) {
                        if (this.getAttribute('aria-live') !== 'off') {
                            this.setAttribute('aria-live', 'off')
                        }
                        this.updateForTrack(n)
                    } else if (r) {
                        if (this.getAttribute('aria-live') !== 'assertive') {
                            this.setAttribute('aria-live', 'assertive')
                        }
                        this.updateForTrack(r)
                    }
                };
                i.updateForTrack = function t(r) {
                    if (typeof e.WebVTT !== 'function' || !r.activeCues) {
                        return
                    }
                    var n = [
                    ];
                    for (var i = 0; i < r.activeCues.length; i++) {
                        n.push(r.activeCues[i])
                    }
                    e.WebVTT.processCues(e, n, this.el_);
                    if (!this.player_.textTrackSettings) {
                        return
                    }
                    var a = this.player_.textTrackSettings.getValues();
                    var s = n.length;
                    while (s--) {
                        var o = n[s];
                        if (!o) {
                            continue
                        }
                        var u = o.displayState;
                        if (a.color) {
                            u.firstChild.style.color = a.color
                        }
                        if (a.textOpacity) {
                            Ln(u.firstChild, 'color', xn(a.color || '#fff', a.textOpacity))
                        }
                        if (a.backgroundColor) {
                            u.firstChild.style.backgroundColor = a.backgroundColor
                        }
                        if (a.backgroundOpacity) {
                            Ln(u.firstChild, 'backgroundColor', xn(a.backgroundColor || '#000', a.backgroundOpacity))
                        }
                        if (a.windowColor) {
                            if (a.windowOpacity) {
                                Ln(u, 'backgroundColor', xn(a.windowColor, a.windowOpacity))
                            } else {
                                u.style.backgroundColor = a.windowColor
                            }
                        }
                        if (a.edgeStyle) {
                            if (a.edgeStyle === 'dropshadow') {
                                u.firstChild.style.textShadow = '2px 2px 3px ' + In + ', 2px 2px 4px ' + In + ', 2px 2px 5px ' + In
                            } else if (a.edgeStyle === 'raised') {
                                u.firstChild.style.textShadow = '1px 1px ' + In + ', 2px 2px ' + In + ', 3px 3px ' + In
                            } else if (a.edgeStyle === 'depressed') {
                                u.firstChild.style.textShadow = '1px 1px ' + Pn + ', 0 1px ' + Pn + ', -1px -1px ' + In + ', 0 -1px ' + In
                            } else if (a.edgeStyle === 'uniform') {
                                u.firstChild.style.textShadow = '0 0 4px ' + In + ', 0 0 4px ' + In + ', 0 0 4px ' + In + ', 0 0 4px ' + In
                            }
                        }
                        if (a.fontPercent && a.fontPercent !== 1) {
                            var l = e.parseFloat(u.style.fontSize);
                            u.style.fontSize = l * a.fontPercent + 'px';
                            u.style.height = 'auto';
                            u.style.top = 'auto';
                            u.style.bottom = '2px'
                        }
                        if (a.fontFamily && a.fontFamily !== 'default') {
                            if (a.fontFamily === 'small-caps') {
                                u.firstChild.style.fontVariant = 'small-caps'
                            } else {
                                u.firstChild.style.fontFamily = On[a.fontFamily]
                            }
                        }
                    }
                };
                return r
            }(Ye);
            Ye.registerComponent('TextTrackDisplay', Dn);
            var Rn = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    var r = this.player_.isAudio();
                    var n = this.localize(r ? 'Audio Player' : 'Video Player');
                    var i = L('span', {
                        className: 'vjs-control-text',
                        innerHTML: this.localize('{1} is loading.', [
                            n
                        ])
                    });
                    var a = e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-loading-spinner',
                        dir: 'ltr'
                    });
                    a.appendChild(i);
                    return a
                };
                return t
            }(Ye);
            Ye.registerComponent('LoadingSpinner', Rn);
            var Mn = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function e(t, r, n) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    if (n === void 0) {
                        n = {
                        }
                    }
                    t = 'button';
                    r = b({
                        innerHTML: '<span aria-hidden="true" class="vjs-icon-placeholder"></span>',
                        className: this.buildCSSClass()
                    }, r);
                    n = b({
                        type: 'button'
                    }, n);
                    var i = Ye.prototype.createEl.call(this, t, r, n);
                    this.createControlTextEl(i);
                    return i
                };
                r.addChild = function e(t, r) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    var n = this.constructor.name;
                    f.warn('Adding an actionable (user controllable) child to a Button (' + n + ') is not supported; use a ClickableComponent instead.');
                    return Ye.prototype.addChild.call(this, t, r)
                };
                r.enable = function t() {
                    e.prototype.enable.call(this);
                    this.el_.removeAttribute('disabled')
                };
                r.disable = function t() {
                    e.prototype.disable.call(this);
                    this.el_.setAttribute('disabled', 'disabled')
                };
                r.handleKeyPress = function t(r) {
                    if (r.which === 32 || r.which === 13) {
                        return
                    }
                    e.prototype.handleKeyPress.call(this, r)
                };
                return t
            }(Cn);
            Ye.registerComponent('Button', Mn);
            var jn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.mouseused_ = false;
                    n.on('mousedown', n.handleMouseDown);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function e() {
                    return 'vjs-big-play-button'
                };
                r.handleClick = function e(t) {
                    var r = this.player_.play();
                    if (this.mouseused_ && t.clientX && t.clientY) {
                        xt(r);
                        return
                    }
                    var n = this.player_.getChild('controlBar');
                    var i = n && n.getChild('playToggle');
                    if (!i) {
                        this.player_.focus();
                        return
                    }
                    var a = function e() {
                        return i.focus()
                    };
                    if (Ot(r)) {
                        r.then(a, function () {
                        })
                    } else {
                        this.setTimeout(a, 1)
                    }
                };
                r.handleKeyPress = function t(r) {
                    this.mouseused_ = false;
                    e.prototype.handleKeyPress.call(this, r)
                };
                r.handleMouseDown = function e(t) {
                    this.mouseused_ = true
                };
                return t
            }(Mn);
            jn.prototype.controlText_ = 'Play Video';
            Ye.registerComponent('BigPlayButton', jn);
            var Un = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.controlText(r && r.controlText || n.localize('Close'));
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-close-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.handleClick = function e(t) {
                    this.trigger({
                        type: 'close',
                        bubbles: false
                    })
                };
                return t
            }(Mn);
            Ye.registerComponent('CloseButton', Un);
            var Nn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    if (r === void 0) {
                        r = {
                        }
                    }
                    n = e.call(this, t, r) || this;
                    r.replay = r.replay === undefined || r.replay;
                    n.on(t, 'play', n.handlePlay);
                    n.on(t, 'pause', n.handlePause);
                    if (r.replay) {
                        n.on(t, 'ended', n.handleEnded)
                    }
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-play-control ' + e.prototype.buildCSSClass.call(this)
                };
                r.handleClick = function e(t) {
                    if (this.player_.paused()) {
                        this.player_.play()
                    } else {
                        this.player_.pause()
                    }
                };
                r.handleSeeked = function e(t) {
                    this.removeClass('vjs-ended');
                    if (this.player_.paused()) {
                        this.handlePause(t)
                    } else {
                        this.handlePlay(t)
                    }
                };
                r.handlePlay = function e(t) {
                    this.removeClass('vjs-ended');
                    this.removeClass('vjs-paused');
                    this.addClass('vjs-playing');
                    this.controlText('Pause')
                };
                r.handlePause = function e(t) {
                    this.removeClass('vjs-playing');
                    this.addClass('vjs-paused');
                    this.controlText('Play')
                };
                r.handleEnded = function e(t) {
                    this.removeClass('vjs-playing');
                    this.addClass('vjs-ended');
                    this.controlText('Replay');
                    this.one(this.player_, 'seeked', this.handleSeeked)
                };
                return t
            }(Mn);
            Nn.prototype.controlText_ = 'Play';
            Ye.registerComponent('PlayToggle', Nn);
            var Bn = function e(t, r) {
                t = t < 0 ? 0 : t;
                var n = Math.floor(t % 60);
                var i = Math.floor(t / 60 % 60);
                var a = Math.floor(t / 3600);
                var s = Math.floor(r / 60 % 60);
                var o = Math.floor(r / 3600);
                if (isNaN(t) || t === Infinity) {
                    a = i = n = '-'
                }
                a = a > 0 || o > 0 ? a + ':' : '';
                i = ((a || s >= 10) && i < 10 ? '0' + i : i) + ':';
                n = n < 10 ? '0' + n : n;
                return a + i + n
            };
            var qn = Bn;
            function Fn(e) {
                qn = e
            }
            function Vn() {
                qn = Bn
            }
            function Hn(e, t) {
                if (t === void 0) {
                    t = e
                }
                return qn(e, t)
            }
            var zn = function (e) {
                n(r, e);
                function r(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.throttledUpdateContent = Ie(Ee(o(o(n)), n.updateContent), 25);
                    n.on(t, 'timeupdate', n.throttledUpdateContent);
                    return n
                }
                var i = r.prototype;
                i.createEl = function t() {
                    var r = this.buildCSSClass();
                    var n = e.prototype.createEl.call(this, 'div', {
                        className: r + ' vjs-time-control vjs-control',
                        innerHTML: '<span class="vjs-control-text" role="presentation">' + this.localize(this.labelText_) + ' </span>'
                    });
                    this.contentEl_ = L('span', {
                        className: r + '-display'
                    }, {
                        'aria-live': 'off',
                        role: 'presentation'
                    });
                    this.updateTextNode_();
                    n.appendChild(this.contentEl_);
                    return n
                };
                i.dispose = function t() {
                    this.contentEl_ = null;
                    this.textNode_ = null;
                    e.prototype.dispose.call(this)
                };
                i.updateTextNode_ = function e() {
                    if (!this.contentEl_) {
                        return
                    }
                    while (this.contentEl_.firstChild) {
                        this.contentEl_.removeChild(this.contentEl_.firstChild)
                    }
                    this.textNode_ = t.createTextNode(this.formattedTime_ || this.formatTime_(0));
                    this.contentEl_.appendChild(this.textNode_)
                };
                i.formatTime_ = function e(t) {
                    return Hn(t)
                };
                i.updateFormattedTime_ = function e(t) {
                    var r = this.formatTime_(t);
                    if (r === this.formattedTime_) {
                        return
                    }
                    this.formattedTime_ = r;
                    this.requestAnimationFrame(this.updateTextNode_)
                };
                i.updateContent = function e(t) {
                };
                return r
            }(Ye);
            zn.prototype.labelText_ = 'Time';
            zn.prototype.controlText_ = 'Time';
            Ye.registerComponent('TimeDisplay', zn);
            var Gn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.on(t, 'ended', n.handleEnded);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function e() {
                    return 'vjs-current-time'
                };
                r.updateContent = function e(t) {
                    var r = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
                    this.updateFormattedTime_(r)
                };
                r.handleEnded = function e(t) {
                    if (!this.player_.duration()) {
                        return
                    }
                    this.updateFormattedTime_(this.player_.duration())
                };
                return t
            }(zn);
            Gn.prototype.labelText_ = 'Current Time';
            Gn.prototype.controlText_ = 'Current Time';
            Ye.registerComponent('CurrentTimeDisplay', Gn);
            var Wn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.on(t, 'durationchange', n.updateContent);
                    n.on(t, 'loadstart', n.updateContent);
                    n.on(t, 'loadedmetadata', n.throttledUpdateContent);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function e() {
                    return 'vjs-duration'
                };
                r.updateContent = function e(t) {
                    var r = this.player_.duration();
                    if (this.duration_ !== r) {
                        this.duration_ = r;
                        this.updateFormattedTime_(r)
                    }
                };
                return t
            }(zn);
            Wn.prototype.labelText_ = 'Duration';
            Wn.prototype.controlText_ = 'Duration';
            Ye.registerComponent('DurationDisplay', Wn);
            var Yn = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-time-control vjs-time-divider',
                        innerHTML: '<div><span>/</span></div>'
                    }, {
                        'aria-hidden': true
                    })
                };
                return t
            }(Ye);
            Ye.registerComponent('TimeDivider', Yn);
            var $n = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.on(t, 'durationchange', n.throttledUpdateContent);
                    n.on(t, 'ended', n.handleEnded);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function e() {
                    return 'vjs-remaining-time'
                };
                r.createEl = function t() {
                    var r = e.prototype.createEl.call(this);
                    r.insertBefore(L('span', {
                    }, {
                        'aria-hidden': true
                    }, '-'), this.contentEl_);
                    return r
                };
                r.updateContent = function e(t) {
                    if (!this.player_.duration()) {
                        return
                    }
                    if (this.player_.remainingTimeDisplay) {
                        this.updateFormattedTime_(this.player_.remainingTimeDisplay())
                    } else {
                        this.updateFormattedTime_(this.player_.remainingTime())
                    }
                };
                r.handleEnded = function e(t) {
                    if (!this.player_.duration()) {
                        return
                    }
                    this.updateFormattedTime_(0)
                };
                return t
            }(zn);
            $n.prototype.labelText_ = 'Remaining Time';
            $n.prototype.controlText_ = 'Remaining Time';
            Ye.registerComponent('RemainingTimeDisplay', $n);
            var Xn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.updateShowing();
                    n.on(n.player(), 'durationchange', n.updateShowing);
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    var r = e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-live-control vjs-control'
                    });
                    this.contentEl_ = L('div', {
                        className: 'vjs-live-display',
                        innerHTML: '<span class="vjs-control-text">' + this.localize('Stream Type') + ' </span>' + this.localize('LIVE')
                    }, {
                        'aria-live': 'off'
                    });
                    r.appendChild(this.contentEl_);
                    return r
                };
                r.dispose = function t() {
                    this.contentEl_ = null;
                    e.prototype.dispose.call(this)
                };
                r.updateShowing = function e(t) {
                    if (this.player().duration() === Infinity) {
                        this.show()
                    } else {
                        this.hide()
                    }
                };
                return t
            }(Ye);
            Ye.registerComponent('LiveDisplay', Xn);
            var Kn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.updateLiveEdgeStatus();
                    if (n.player_.liveTracker) {
                        n.on(n.player_.liveTracker, 'liveedgechange', n.updateLiveEdgeStatus)
                    }
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    var r = e.prototype.createEl.call(this, 'button', {
                        className: 'vjs-seek-to-live-control vjs-control'
                    });
                    this.textEl_ = L('span', {
                        className: 'vjs-seek-to-live-text',
                        innerHTML: this.localize('LIVE')
                    }, {
                        'aria-hidden': 'true'
                    });
                    r.appendChild(this.textEl_);
                    return r
                };
                r.updateLiveEdgeStatus = function e(t) {
                    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {
                        this.setAttribute('aria-disabled', true);
                        this.addClass('vjs-at-live-edge');
                        this.controlText('Seek to live, currently playing live')
                    } else {
                        this.setAttribute('aria-disabled', false);
                        this.removeClass('vjs-at-live-edge');
                        this.controlText('Seek to live, currently behind live')
                    }
                };
                r.handleClick = function e() {
                    this.player_.liveTracker.seekToLiveEdge()
                };
                r.dispose = function t() {
                    if (this.player_.liveTracker) {
                        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus)
                    }
                    this.textEl_ = null;
                    e.prototype.dispose.call(this)
                };
                return t
            }(Mn);
            Kn.prototype.controlText_ = 'Seek to live, currently playing live';
            Ye.registerComponent('SeekToLive', Kn);
            var Qn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.bar = n.getChild(n.options_.barName);
                    n.vertical(!!n.options_.vertical);
                    n.enable();
                    return n
                }
                var r = t.prototype;
                r.enabled = function e() {
                    return this.enabled_
                };
                r.enable = function e() {
                    if (this.enabled()) {
                        return
                    }
                    this.on('mousedown', this.handleMouseDown);
                    this.on('touchstart', this.handleMouseDown);
                    this.on('focus', this.handleFocus);
                    this.on('blur', this.handleBlur);
                    this.on('click', this.handleClick);
                    this.on(this.player_, 'controlsvisible', this.update);
                    if (this.playerEvent) {
                        this.on(this.player_, this.playerEvent, this.update)
                    }
                    this.removeClass('disabled');
                    this.setAttribute('tabindex', 0);
                    this.enabled_ = true
                };
                r.disable = function e() {
                    if (!this.enabled()) {
                        return
                    }
                    var t = this.bar.el_.ownerDocument;
                    this.off('mousedown', this.handleMouseDown);
                    this.off('touchstart', this.handleMouseDown);
                    this.off('focus', this.handleFocus);
                    this.off('blur', this.handleBlur);
                    this.off('click', this.handleClick);
                    this.off(this.player_, 'controlsvisible', this.update);
                    this.off(t, 'mousemove', this.handleMouseMove);
                    this.off(t, 'mouseup', this.handleMouseUp);
                    this.off(t, 'touchmove', this.handleMouseMove);
                    this.off(t, 'touchend', this.handleMouseUp);
                    this.removeAttribute('tabindex');
                    this.addClass('disabled');
                    if (this.playerEvent) {
                        this.off(this.player_, this.playerEvent, this.update)
                    }
                    this.enabled_ = false
                };
                r.createEl = function t(r, n, i) {
                    if (n === void 0) {
                        n = {
                        }
                    }
                    if (i === void 0) {
                        i = {
                        }
                    }
                    n.className = n.className + ' vjs-slider';
                    n = b({
                        tabIndex: 0
                    }, n);
                    i = b({
                        role: 'slider',
                        'aria-valuenow': 0,
                        'aria-valuemin': 0,
                        'aria-valuemax': 100,
                        tabIndex: 0
                    }, i);
                    return e.prototype.createEl.call(this, r, n, i)
                };
                r.handleMouseDown = function e(t) {
                    var r = this.bar.el_.ownerDocument;
                    if (t.type === 'mousedown') {
                        t.preventDefault()
                    }
                    if (t.type === 'touchstart' && !ot) {
                        t.preventDefault()
                    }
                    z();
                    this.addClass('vjs-sliding');
                    this.trigger('slideractive');
                    this.on(r, 'mousemove', this.handleMouseMove);
                    this.on(r, 'mouseup', this.handleMouseUp);
                    this.on(r, 'touchmove', this.handleMouseMove);
                    this.on(r, 'touchend', this.handleMouseUp);
                    this.handleMouseMove(t)
                };
                r.handleMouseMove = function e(t) {
                };
                r.handleMouseUp = function e() {
                    var t = this.bar.el_.ownerDocument;
                    G();
                    this.removeClass('vjs-sliding');
                    this.trigger('sliderinactive');
                    this.off(t, 'mousemove', this.handleMouseMove);
                    this.off(t, 'mouseup', this.handleMouseUp);
                    this.off(t, 'touchmove', this.handleMouseMove);
                    this.off(t, 'touchend', this.handleMouseUp);
                    this.update()
                };
                r.update = function e() {
                    if (!this.el_) {
                        return
                    }
                    var t = this.getPercent();
                    var r = this.bar;
                    if (!r) {
                        return
                    }
                    if (typeof t !== 'number' || t !== t || t < 0 || t === Infinity) {
                        t = 0
                    }
                    var n = (t * 100).toFixed(2) + '%';
                    var i = r.el().style;
                    if (this.vertical()) {
                        i.height = n
                    } else {
                        i.width = n
                    }
                    return t
                };
                r.calculateDistance = function e(t) {
                    var r = $(this.el_, t);
                    if (this.vertical()) {
                        return r.y
                    }
                    return r.x
                };
                r.handleFocus = function e() {
                    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress)
                };
                r.handleKeyPress = function e(t) {
                    if (t.which === 37 || t.which === 40) {
                        t.preventDefault();
                        this.stepBack()
                    } else if (t.which === 38 || t.which === 39) {
                        t.preventDefault();
                        this.stepForward()
                    }
                };
                r.handleBlur = function e() {
                    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress)
                };
                r.handleClick = function e(t) {
                    t.stopImmediatePropagation();
                    t.preventDefault()
                };
                r.vertical = function e(t) {
                    if (t === undefined) {
                        return this.vertical_ || false
                    }
                    this.vertical_ = !!t;
                    if (this.vertical_) {
                        this.addClass('vjs-slider-vertical')
                    } else {
                        this.addClass('vjs-slider-horizontal')
                    }
                };
                return t
            }(Ye);
            Ye.registerComponent('Slider', Qn);
            var Jn = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.partEls_ = [
                    ];
                    n.on(t, 'progress', n.update);
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-load-progress',
                        innerHTML: '<span class="vjs-control-text"><span>' + this.localize('Loaded') + '</span>: <span class="vjs-control-text-loaded-percentage">0%</span></span>'
                    })
                };
                r.dispose = function t() {
                    this.partEls_ = null;
                    e.prototype.dispose.call(this)
                };
                r.update = function e(t) {
                    var r = this.player_.liveTracker;
                    var n = this.player_.buffered();
                    var i = r && r.isLive() ? r.seekableEnd() : this.player_.duration();
                    var a = this.player_.bufferedEnd();
                    var s = this.partEls_;
                    var o = this.$('.vjs-control-text-loaded-percentage');
                    var u = function e(t, r, n) {
                        var i = t / r || 0;
                        i = (i >= 1 ? 1 : i) * 100;
                        if (n) {
                            i = i.toFixed(2)
                        }
                        return i + '%'
                    };
                    this.el_.style.width = u(a, i);
                    D(o, u(a, i, true));
                    for (var l = 0; l < n.length; l++) {
                        var c = n.start(l);
                        var d = n.end(l);
                        var f = s[l];
                        if (!f) {
                            f = this.el_.appendChild(L());
                            s[l] = f
                        }
                        f.style.left = u(c, a);
                        f.style.width = u(d - c, a)
                    }
                    for (var h = s.length; h > n.length; h--) {
                        this.el_.removeChild(s[h - 1])
                    }
                    s.length = n.length
                };
                return t
            }(Ye);
            Ye.registerComponent('LoadProgressBar', Jn);
            var Zn = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-time-tooltip'
                    }, {
                        'aria-hidden': 'true'
                    })
                };
                r.update = function e(t, r, n) {
                    var i = W(this.el_);
                    var a = W(this.player_.el());
                    var s = t.width * r;
                    if (!a || !i) {
                        return
                    }
                    var o = t.left - a.left + s;
                    var u = t.width - s + (a.right - t.right);
                    var l = i.width / 2;
                    if (o < l) {
                        l += l - o
                    } else if (u < l) {
                        l = u
                    }
                    if (l < 0) {
                        l = 0
                    } else if (l > i.width) {
                        l = i.width
                    }
                    this.el_.style.right = '-' + l + 'px';
                    D(this.el_, n)
                };
                r.updateTime = function e(t, r, n, i) {
                    var a = this;
                    if (this.rafId_) {
                        this.cancelAnimationFrame(this.rafId_)
                    }
                    this.rafId_ = this.requestAnimationFrame(function () {
                        var e;
                        var s = a.player_.duration();
                        if (a.player_.liveTracker && a.player_.liveTracker.isLive()) {
                            var o = a.player_.liveTracker.liveWindow();
                            var u = o - r * o;
                            e = (u < 1 ? '' : '-') + Hn(u, o)
                        } else {
                            e = Hn(n, s)
                        }
                        a.update(t, r, e);
                        if (i) {
                            i()
                        }
                    })
                };
                return t
            }(Ye);
            Ye.registerComponent('TimeTooltip', Zn);
            var ei = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-play-progress vjs-slider-bar'
                    }, {
                        'aria-hidden': 'true'
                    })
                };
                r.update = function e(t, r) {
                    var n = this.getChild('timeTooltip');
                    if (!n) {
                        return
                    }
                    var i = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();
                    n.updateTime(t, r, i)
                };
                return t
            }(Ye);
            ei.prototype.options_ = {
                children: [
                ]
            };
            if (!et && !rt) {
                ei.prototype.options_.children.push('timeTooltip')
            }
            Ye.registerComponent('PlayProgressBar', ei);
            var ti = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.update = Ie(Ee(o(o(n)), n.update), 25);
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-mouse-display'
                    })
                };
                r.update = function e(t, r) {
                    var n = this;
                    var i = r * this.player_.duration();
                    this.getChild('timeTooltip').updateTime(t, r, i, function () {
                        n.el_.style.left = t.width * r + 'px'
                    })
                };
                return t
            }(Ye);
            ti.prototype.options_ = {
                children: [
                    'timeTooltip'
                ]
            };
            Ye.registerComponent('MouseTimeDisplay', ti);
            var ri = 5;
            var ni = 30;
            var ii = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.setEventHandlers_();
                    return n
                }
                var r = t.prototype;
                r.setEventHandlers_ = function e() {
                    var t = this;
                    this.update = Ie(Ee(this, this.update), ni);
                    this.on(this.player_, 'timeupdate', this.update);
                    this.on(this.player_, 'ended', this.handleEnded);
                    this.on(this.player_, 'durationchange', this.update);
                    if (this.player_.liveTracker) {
                        this.on(this.player_.liveTracker, 'liveedgechange', this.update)
                    }
                    this.updateInterval = null;
                    this.on(this.player_, [
                        'playing'
                    ], function () {
                        t.clearInterval(t.updateInterval);
                        t.updateInterval = t.setInterval(function () {
                            t.requestAnimationFrame(function () {
                                t.update()
                            })
                        }, ni)
                    });
                    this.on(this.player_, [
                        'ended',
                        'pause',
                        'waiting'
                    ], function (e) {
                        if (t.player_.liveTracker && t.player_.liveTracker.isLive() && e.type !== 'ended') {
                            return
                        }
                        t.clearInterval(t.updateInterval)
                    });
                    this.on(this.player_, [
                        'timeupdate',
                        'ended'
                    ], this.update)
                };
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-progress-holder'
                    }, {
                        'aria-label': this.localize('Progress Bar')
                    })
                };
                r.update_ = function e(t, r) {
                    var n = this.player_.liveTracker;
                    var i = this.player_.duration();
                    if (n && n.isLive()) {
                        i = this.player_.liveTracker.liveCurrentTime()
                    }
                    this.el_.setAttribute('aria-valuenow', (r * 100).toFixed(2));
                    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [
                        Hn(t, i),
                        Hn(i, i)
                    ], '{1} of {2}'));
                    this.bar.update(W(this.el_), r)
                };
                r.update = function t(r) {
                    var n = e.prototype.update.call(this);
                    this.update_(this.getCurrentTime_(), n);
                    return n
                };
                r.getCurrentTime_ = function e() {
                    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime()
                };
                r.handleEnded = function e(t) {
                    this.update_(this.player_.duration(), 1)
                };
                r.getPercent = function e() {
                    var t = this.getCurrentTime_();
                    var r;
                    var n = this.player_.liveTracker;
                    if (n && n.isLive()) {
                        r = (t - n.seekableStart()) / n.liveWindow();
                        if (n.atLiveEdge()) {
                            r = 1
                        }
                    } else {
                        r = t / this.player_.duration()
                    }
                    return r >= 1 ? 1 : r || 0
                };
                r.handleMouseDown = function t(r) {
                    if (!ee(r)) {
                        return
                    }
                    r.stopPropagation();
                    this.player_.scrubbing(true);
                    this.videoWasPlaying = !this.player_.paused();
                    this.player_.pause();
                    e.prototype.handleMouseDown.call(this, r)
                };
                r.handleMouseMove = function e(t) {
                    if (!ee(t)) {
                        return
                    }
                    var r;
                    var n = this.calculateDistance(t);
                    var i = this.player_.liveTracker;
                    if (!i || !i.isLive()) {
                        r = n * this.player_.duration();
                        if (r === this.player_.duration()) {
                            r = r - 0.1
                        }
                    } else {
                        var a = i.seekableStart();
                        var s = i.liveCurrentTime();
                        r = a + n * i.liveWindow();
                        if (r >= s) {
                            r = s
                        }
                        if (r <= a) {
                            r = a + 0.1
                        }
                        if (r === Infinity) {
                            return
                        }
                    }
                    this.player_.currentTime(r)
                };
                r.enable = function t() {
                    e.prototype.enable.call(this);
                    var r = this.getChild('mouseTimeDisplay');
                    if (!r) {
                        return
                    }
                    r.show()
                };
                r.disable = function t() {
                    e.prototype.disable.call(this);
                    var r = this.getChild('mouseTimeDisplay');
                    if (!r) {
                        return
                    }
                    r.hide()
                };
                r.handleMouseUp = function t(r) {
                    e.prototype.handleMouseUp.call(this, r);
                    if (r) {
                        r.stopPropagation()
                    }
                    this.player_.scrubbing(false);
                    this.player_.trigger({
                        type: 'timeupdate',
                        target: this,
                        manuallyTriggered: true
                    });
                    if (this.videoWasPlaying) {
                        xt(this.player_.play())
                    }
                };
                r.stepForward = function e() {
                    this.player_.currentTime(this.player_.currentTime() + ri)
                };
                r.stepBack = function e() {
                    this.player_.currentTime(this.player_.currentTime() - ri)
                };
                r.handleAction = function e(t) {
                    if (this.player_.paused()) {
                        this.player_.play()
                    } else {
                        this.player_.pause()
                    }
                };
                r.handleKeyPress = function t(r) {
                    if (r.which === 32 || r.which === 13) {
                        r.preventDefault();
                        this.handleAction(r)
                    } else if (e.prototype.handleKeyPress) {
                        e.prototype.handleKeyPress.call(this, r)
                    }
                };
                return t
            }(Qn);
            ii.prototype.options_ = {
                children: [
                    'loadProgressBar',
                    'playProgressBar'
                ],
                barName: 'playProgressBar'
            };
            if (!et && !rt) {
                ii.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay')
            }
            ii.prototype.playerEvent = 'timeupdate';
            Ye.registerComponent('SeekBar', ii);
            var ai = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.handleMouseMove = Ie(Ee(o(o(n)), n.handleMouseMove), 25);
                    n.throttledHandleMouseSeek = Ie(Ee(o(o(n)), n.handleMouseSeek), 25);
                    n.enable();
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-progress-control vjs-control'
                    })
                };
                r.handleMouseMove = function e(t) {
                    var r = this.getChild('seekBar');
                    if (r) {
                        var n = r.getChild('mouseTimeDisplay');
                        var i = r.el();
                        var a = W(i);
                        var s = $(i, t).x;
                        if (s > 1) {
                            s = 1
                        } else if (s < 0) {
                            s = 0
                        }
                        if (n) {
                            n.update(a, s)
                        }
                    }
                };
                r.handleMouseSeek = function e(t) {
                    var r = this.getChild('seekBar');
                    if (r) {
                        r.handleMouseMove(t)
                    }
                };
                r.enabled = function e() {
                    return this.enabled_
                };
                r.disable = function e() {
                    this.children().forEach(function (e) {
                        return e.disable && e.disable()
                    });
                    if (!this.enabled()) {
                        return
                    }
                    this.off(['mousedown',
                        'touchstart'], this.handleMouseDown);
                    this.off(this.el_, 'mousemove', this.handleMouseMove);
                    this.handleMouseUp();
                    this.addClass('disabled');
                    this.enabled_ = false
                };
                r.enable = function e() {
                    this.children().forEach(function (e) {
                        return e.enable && e.enable()
                    });
                    if (this.enabled()) {
                        return
                    }
                    this.on(['mousedown',
                        'touchstart'], this.handleMouseDown);
                    this.on(this.el_, 'mousemove', this.handleMouseMove);
                    this.removeClass('disabled');
                    this.enabled_ = true
                };
                r.handleMouseDown = function e(t) {
                    var r = this.el_.ownerDocument;
                    var n = this.getChild('seekBar');
                    if (n) {
                        n.handleMouseDown(t)
                    }
                    this.on(r, 'mousemove', this.throttledHandleMouseSeek);
                    this.on(r, 'touchmove', this.throttledHandleMouseSeek);
                    this.on(r, 'mouseup', this.handleMouseUp);
                    this.on(r, 'touchend', this.handleMouseUp)
                };
                r.handleMouseUp = function e(t) {
                    var r = this.el_.ownerDocument;
                    var n = this.getChild('seekBar');
                    if (n) {
                        n.handleMouseUp(t)
                    }
                    this.off(r, 'mousemove', this.throttledHandleMouseSeek);
                    this.off(r, 'touchmove', this.throttledHandleMouseSeek);
                    this.off(r, 'mouseup', this.handleMouseUp);
                    this.off(r, 'touchend', this.handleMouseUp)
                };
                return t
            }(Ye);
            ai.prototype.options_ = {
                children: [
                    'seekBar'
                ]
            };
            Ye.registerComponent('ProgressControl', ai);
            var si = function (e) {
                n(r, e);
                function r(r, n) {
                    var i;
                    i = e.call(this, r, n) || this;
                    i.on(r, 'fullscreenchange', i.handleFullscreenChange);
                    if (t[_t.fullscreenEnabled] === false) {
                        i.disable()
                    }
                    return i
                }
                var i = r.prototype;
                i.buildCSSClass = function t() {
                    return 'vjs-fullscreen-control ' + e.prototype.buildCSSClass.call(this)
                };
                i.handleFullscreenChange = function e(t) {
                    if (this.player_.isFullscreen()) {
                        this.controlText('Non-Fullscreen')
                    } else {
                        this.controlText('Fullscreen')
                    }
                };
                i.handleClick = function e(t) {
                    if (!this.player_.isFullscreen()) {
                        this.player_.requestFullscreen()
                    } else {
                        this.player_.exitFullscreen()
                    }
                };
                return r
            }(Mn);
            si.prototype.controlText_ = 'Fullscreen';
            Ye.registerComponent('FullscreenToggle', si);
            var oi = function e(t, r) {
                if (r.tech_ && !r.tech_.featuresVolumeControl) {
                    t.addClass('vjs-hidden')
                }
                t.on(r, 'loadstart', function () {
                    if (!r.tech_.featuresVolumeControl) {
                        t.addClass('vjs-hidden')
                    } else {
                        t.removeClass('vjs-hidden')
                    }
                })
            };
            var ui = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-volume-level',
                        innerHTML: '<span class="vjs-control-text"></span>'
                    })
                };
                return t
            }(Ye);
            Ye.registerComponent('VolumeLevel', ui);
            var li = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.on('slideractive', n.updateLastVolume_);
                    n.on(t, 'volumechange', n.updateARIAAttributes);
                    t.ready(function () {
                        return n.updateARIAAttributes()
                    });
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-volume-bar vjs-slider-bar'
                    }, {
                        'aria-label': this.localize('Volume Level'),
                        'aria-live': 'polite'
                    })
                };
                r.handleMouseDown = function t(r) {
                    if (!ee(r)) {
                        return
                    }
                    e.prototype.handleMouseDown.call(this, r)
                };
                r.handleMouseMove = function e(t) {
                    if (!ee(t)) {
                        return
                    }
                    this.checkMuted();
                    this.player_.volume(this.calculateDistance(t))
                };
                r.checkMuted = function e() {
                    if (this.player_.muted()) {
                        this.player_.muted(false)
                    }
                };
                r.getPercent = function e() {
                    if (this.player_.muted()) {
                        return 0
                    }
                    return this.player_.volume()
                };
                r.stepForward = function e() {
                    this.checkMuted();
                    this.player_.volume(this.player_.volume() + 0.1)
                };
                r.stepBack = function e() {
                    this.checkMuted();
                    this.player_.volume(this.player_.volume() - 0.1)
                };
                r.updateARIAAttributes = function e(t) {
                    var r = this.player_.muted() ? 0 : this.volumeAsPercentage_();
                    this.el_.setAttribute('aria-valuenow', r);
                    this.el_.setAttribute('aria-valuetext', r + '%')
                };
                r.volumeAsPercentage_ = function e() {
                    return Math.round(this.player_.volume() * 100)
                };
                r.updateLastVolume_ = function e() {
                    var t = this;
                    var r = this.player_.volume();
                    this.one('sliderinactive', function () {
                        if (t.player_.volume() === 0) {
                            t.player_.lastVolume_(r)
                        }
                    })
                };
                return t
            }(Qn);
            li.prototype.options_ = {
                children: [
                    'volumeLevel'
                ],
                barName: 'volumeLevel'
            };
            li.prototype.playerEvent = 'volumechange';
            Ye.registerComponent('VolumeBar', li);
            var ci = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    if (r === void 0) {
                        r = {
                        }
                    }
                    r.vertical = r.vertical || false;
                    if (typeof r.volumeBar === 'undefined' || A(r.volumeBar)) {
                        r.volumeBar = r.volumeBar || {
                        };
                        r.volumeBar.vertical = r.vertical
                    }
                    n = e.call(this, t, r) || this;
                    oi(o(o(n)), t);
                    n.throttledHandleMouseMove = Ie(Ee(o(o(n)), n.handleMouseMove), 25);
                    n.on('mousedown', n.handleMouseDown);
                    n.on('touchstart', n.handleMouseDown);
                    n.on(n.volumeBar, [
                        'focus',
                        'slideractive'
                    ], function () {
                        n.volumeBar.addClass('vjs-slider-active');
                        n.addClass('vjs-slider-active');
                        n.trigger('slideractive')
                    });
                    n.on(n.volumeBar, [
                        'blur',
                        'sliderinactive'
                    ], function () {
                        n.volumeBar.removeClass('vjs-slider-active');
                        n.removeClass('vjs-slider-active');
                        n.trigger('sliderinactive')
                    });
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    var r = 'vjs-volume-horizontal';
                    if (this.options_.vertical) {
                        r = 'vjs-volume-vertical'
                    }
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-volume-control vjs-control ' + r
                    })
                };
                r.handleMouseDown = function e(t) {
                    var r = this.el_.ownerDocument;
                    this.on(r, 'mousemove', this.throttledHandleMouseMove);
                    this.on(r, 'touchmove', this.throttledHandleMouseMove);
                    this.on(r, 'mouseup', this.handleMouseUp);
                    this.on(r, 'touchend', this.handleMouseUp)
                };
                r.handleMouseUp = function e(t) {
                    var r = this.el_.ownerDocument;
                    this.off(r, 'mousemove', this.throttledHandleMouseMove);
                    this.off(r, 'touchmove', this.throttledHandleMouseMove);
                    this.off(r, 'mouseup', this.handleMouseUp);
                    this.off(r, 'touchend', this.handleMouseUp)
                };
                r.handleMouseMove = function e(t) {
                    this.volumeBar.handleMouseMove(t)
                };
                return t
            }(Ye);
            ci.prototype.options_ = {
                children: [
                    'volumeBar'
                ]
            };
            Ye.registerComponent('VolumeControl', ci);
            var di = function e(t, r) {
                if (r.tech_ && !r.tech_.featuresMuteControl) {
                    t.addClass('vjs-hidden')
                }
                t.on(r, 'loadstart', function () {
                    if (!r.tech_.featuresMuteControl) {
                        t.addClass('vjs-hidden')
                    } else {
                        t.removeClass('vjs-hidden')
                    }
                })
            };
            var fi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    di(o(o(n)), t);
                    n.on(t, [
                        'loadstart',
                        'volumechange'
                    ], n.update);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-mute-control ' + e.prototype.buildCSSClass.call(this)
                };
                r.handleClick = function e(t) {
                    var r = this.player_.volume();
                    var n = this.player_.lastVolume_();
                    if (r === 0) {
                        var i = n < 0.1 ? 0.1 : n;
                        this.player_.volume(i);
                        this.player_.muted(false)
                    } else {
                        this.player_.muted(this.player_.muted() ? false : true)
                    }
                };
                r.update = function e(t) {
                    this.updateIcon_();
                    this.updateControlText_()
                };
                r.updateIcon_ = function e() {
                    var t = this.player_.volume();
                    var r = 3;
                    if (et) {
                        this.player_.muted(this.player_.tech_.el_.muted)
                    }
                    if (t === 0 || this.player_.muted()) {
                        r = 0
                    } else if (t < 0.33) {
                        r = 1
                    } else if (t < 0.67) {
                        r = 2
                    }
                    for (var n = 0; n < 4; n++) {
                        U(this.el_, 'vjs-vol-' + n)
                    }
                    j(this.el_, 'vjs-vol-' + r)
                };
                r.updateControlText_ = function e() {
                    var t = this.player_.muted() || this.player_.volume() === 0;
                    var r = t ? 'Unmute' : 'Mute';
                    if (this.controlText() !== r) {
                        this.controlText(r)
                    }
                };
                return t
            }(Mn);
            fi.prototype.controlText_ = 'Mute';
            Ye.registerComponent('MuteToggle', fi);
            var hi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    if (r === void 0) {
                        r = {
                        }
                    }
                    if (typeof r.inline !== 'undefined') {
                        r.inline = r.inline
                    } else {
                        r.inline = true
                    }
                    if (typeof r.volumeControl === 'undefined' || A(r.volumeControl)) {
                        r.volumeControl = r.volumeControl || {
                        };
                        r.volumeControl.vertical = !r.inline
                    }
                    n = e.call(this, t, r) || this;
                    n.on(t, [
                        'loadstart'
                    ], n.volumePanelState_);
                    n.on(n.volumeControl, [
                        'slideractive'
                    ], n.sliderActive_);
                    n.on(n.volumeControl, [
                        'sliderinactive'
                    ], n.sliderInactive_);
                    return n
                }
                var r = t.prototype;
                r.sliderActive_ = function e() {
                    this.addClass('vjs-slider-active')
                };
                r.sliderInactive_ = function e() {
                    this.removeClass('vjs-slider-active')
                };
                r.volumePanelState_ = function e() {
                    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {
                        this.addClass('vjs-hidden')
                    }
                    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {
                        this.addClass('vjs-mute-toggle-only')
                    }
                };
                r.createEl = function t() {
                    var r = 'vjs-volume-panel-horizontal';
                    if (!this.options_.inline) {
                        r = 'vjs-volume-panel-vertical'
                    }
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-volume-panel vjs-control ' + r
                    })
                };
                return t
            }(Ye);
            hi.prototype.options_ = {
                children: [
                    'muteToggle',
                    'volumeControl'
                ]
            };
            Ye.registerComponent('VolumePanel', hi);
            var pi = function (e) {
                n(r, e);
                function r(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    if (r) {
                        n.menuButton_ = r.menuButton
                    }
                    n.focusedChild_ = - 1;
                    n.on('keydown', n.handleKeyPress);
                    return n
                }
                var i = r.prototype;
                i.addItem = function e(t) {
                    this.addChild(t);
                    t.on('blur', Ee(this, this.handleBlur));
                    t.on(['tap',
                        'click'], Ee(this, function (e) {
                            if (this.menuButton_) {
                                this.menuButton_.unpressButton();
                                if (t.name() !== 'CaptionSettingsMenuItem') {
                                    this.menuButton_.focus()
                                }
                            }
                        }))
                };
                i.createEl = function t() {
                    var r = this.options_.contentElType || 'ul';
                    this.contentEl_ = L(r, {
                        className: 'vjs-menu-content'
                    });
                    this.contentEl_.setAttribute('role', 'menu');
                    var n = e.prototype.createEl.call(this, 'div', {
                        append: this.contentEl_,
                        className: 'vjs-menu'
                    });
                    n.appendChild(this.contentEl_);
                    me(n, 'click', function (e) {
                        e.preventDefault();
                        e.stopImmediatePropagation()
                    });
                    return n
                };
                i.dispose = function t() {
                    this.contentEl_ = null;
                    e.prototype.dispose.call(this)
                };
                i.handleBlur = function e(r) {
                    var n = r.relatedTarget || t.activeElement;
                    if (!this.children().some(function (e) {
                        return e.el() === n
                    })) {
                        var i = this.menuButton_;
                        if (i && i.buttonPressed_ && n !== i.el().firstChild) {
                            i.unpressButton()
                        }
                    }
                };
                i.handleKeyPress = function e(t) {
                    if (t.which === 37 || t.which === 40) {
                        t.preventDefault();
                        this.stepForward()
                    } else if (t.which === 38 || t.which === 39) {
                        t.preventDefault();
                        this.stepBack()
                    }
                };
                i.stepForward = function e() {
                    var t = 0;
                    if (this.focusedChild_ !== undefined) {
                        t = this.focusedChild_ + 1
                    }
                    this.focus(t)
                };
                i.stepBack = function e() {
                    var t = 0;
                    if (this.focusedChild_ !== undefined) {
                        t = this.focusedChild_ - 1
                    }
                    this.focus(t)
                };
                i.focus = function e(t) {
                    if (t === void 0) {
                        t = 0
                    }
                    var r = this.children().slice();
                    var n = r.length && r[0].className && /vjs-menu-title/.test(r[0].className);
                    if (n) {
                        r.shift()
                    }
                    if (r.length > 0) {
                        if (t < 0) {
                            t = 0
                        } else if (t >= r.length) {
                            t = r.length - 1
                        }
                        this.focusedChild_ = t;
                        r[t].el_.focus()
                    }
                };
                return r
            }(Ye);
            Ye.registerComponent('Menu', pi);
            var vi = function (e) {
                n(r, e);
                function r(t, r) {
                    var n;
                    if (r === void 0) {
                        r = {
                        }
                    }
                    n = e.call(this, t, r) || this;
                    n.menuButton_ = new Mn(t, r);
                    n.menuButton_.controlText(n.controlText_);
                    n.menuButton_.el_.setAttribute('aria-haspopup', 'true');
                    var i = Mn.prototype.buildCSSClass();
                    n.menuButton_.el_.className = n.buildCSSClass() + ' ' + i;
                    n.menuButton_.removeClass('vjs-control');
                    n.addChild(n.menuButton_);
                    n.update();
                    n.enabled_ = true;
                    n.on(n.menuButton_, 'tap', n.handleClick);
                    n.on(n.menuButton_, 'click', n.handleClick);
                    n.on(n.menuButton_, 'focus', n.handleFocus);
                    n.on(n.menuButton_, 'blur', n.handleBlur);
                    n.on(n.menuButton_, 'mouseenter', function () {
                        n.menu.show()
                    });
                    n.on('keydown', n.handleSubmenuKeyPress);
                    return n
                }
                var i = r.prototype;
                i.update = function e() {
                    var t = this.createMenu();
                    if (this.menu) {
                        this.menu.dispose();
                        this.removeChild(this.menu)
                    }
                    this.menu = t;
                    this.addChild(t);
                    this.buttonPressed_ = false;
                    this.menuButton_.el_.setAttribute('aria-expanded', 'false');
                    if (this.items && this.items.length <= this.hideThreshold_) {
                        this.hide()
                    } else {
                        this.show()
                    }
                };
                i.createMenu = function e() {
                    var t = new pi(this.player_, {
                        menuButton: this
                    });
                    this.hideThreshold_ = 0;
                    if (this.options_.title) {
                        var r = L('li', {
                            className: 'vjs-menu-title',
                            innerHTML: ze(this.options_.title),
                            tabIndex: - 1
                        });
                        this.hideThreshold_ += 1;
                        t.children_.unshift(r);
                        R(r, t.contentEl())
                    }
                    this.items = this.createItems();
                    if (this.items) {
                        for (var n = 0; n < this.items.length; n++) {
                            t.addItem(this.items[n])
                        }
                    }
                    return t
                };
                i.createItems = function e() {
                };
                i.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: this.buildWrapperCSSClass()
                    }, {
                    })
                };
                i.buildWrapperCSSClass = function t() {
                    var r = 'vjs-menu-button';
                    if (this.options_.inline === true) {
                        r += '-inline'
                    } else {
                        r += '-popup'
                    }
                    var n = Mn.prototype.buildCSSClass();
                    return 'vjs-menu-button ' + r + ' ' + n + ' ' + e.prototype.buildCSSClass.call(this)
                };
                i.buildCSSClass = function t() {
                    var r = 'vjs-menu-button';
                    if (this.options_.inline === true) {
                        r += '-inline'
                    } else {
                        r += '-popup'
                    }
                    return 'vjs-menu-button ' + r + ' ' + e.prototype.buildCSSClass.call(this)
                };
                i.controlText = function e(t, r) {
                    if (r === void 0) {
                        r = this.menuButton_.el()
                    }
                    return this.menuButton_.controlText(t, r)
                };
                i.handleClick = function e(t) {
                    if (this.buttonPressed_) {
                        this.unpressButton()
                    } else {
                        this.pressButton()
                    }
                };
                i.focus = function e() {
                    this.menuButton_.focus()
                };
                i.blur = function e() {
                    this.menuButton_.blur()
                };
                i.handleFocus = function e() {
                    me(t, 'keydown', Ee(this, this.handleKeyPress))
                };
                i.handleBlur = function e() {
                    ge(t, 'keydown', Ee(this, this.handleKeyPress))
                };
                i.handleKeyPress = function e(t) {
                    if (t.which === 27 || t.which === 9) {
                        if (this.buttonPressed_) {
                            this.unpressButton()
                        }
                        if (t.which !== 9) {
                            t.preventDefault();
                            this.menuButton_.el_.focus()
                        }
                    } else if (t.which === 13 || t.which === 38 || t.which === 40) {
                        if (!this.buttonPressed_) {
                            this.pressButton();
                            t.preventDefault()
                        }
                    }
                };
                i.handleSubmenuKeyPress = function e(t) {
                    if (t.which === 27 || t.which === 9) {
                        if (this.buttonPressed_) {
                            this.unpressButton()
                        }
                        if (t.which !== 9) {
                            t.preventDefault();
                            this.menuButton_.el_.focus()
                        }
                    }
                };
                i.pressButton = function e() {
                    if (this.enabled_) {
                        this.buttonPressed_ = true;
                        this.menu.show();
                        this.menu.lockShowing();
                        this.menuButton_.el_.setAttribute('aria-expanded', 'true');
                        if (et && O()) {
                            return
                        }
                        this.menu.focus()
                    }
                };
                i.unpressButton = function e() {
                    if (this.enabled_) {
                        this.buttonPressed_ = false;
                        this.menu.unlockShowing();
                        this.menu.hide();
                        this.menuButton_.el_.setAttribute('aria-expanded', 'false')
                    }
                };
                i.disable = function e() {
                    this.unpressButton();
                    this.enabled_ = false;
                    this.addClass('vjs-disabled');
                    this.menuButton_.disable()
                };
                i.enable = function e() {
                    this.enabled_ = true;
                    this.removeClass('vjs-disabled');
                    this.menuButton_.enable()
                };
                return r
            }(Ye);
            Ye.registerComponent('MenuButton', vi);
            var mi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    var i = r.tracks;
                    n = e.call(this, t, r) || this;
                    if (n.items.length <= 1) {
                        n.hide()
                    }
                    if (!i) {
                        return o(n)
                    }
                    var a = Ee(o(o(n)), n.update);
                    i.addEventListener('removetrack', a);
                    i.addEventListener('addtrack', a);
                    n.player_.on('ready', a);
                    n.player_.on('dispose', function () {
                        i.removeEventListener('removetrack', a);
                        i.removeEventListener('addtrack', a)
                    });
                    return n
                }
                return t
            }(vi);
            Ye.registerComponent('TrackButton', mi);
            var gi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.selectable = r.selectable;
                    n.isSelected_ = r.selected || false;
                    n.multiSelectable = r.multiSelectable;
                    n.selected(n.isSelected_);
                    if (n.selectable) {
                        if (n.multiSelectable) {
                            n.el_.setAttribute('role', 'menuitemcheckbox')
                        } else {
                            n.el_.setAttribute('role', 'menuitemradio')
                        }
                    } else {
                        n.el_.setAttribute('role', 'menuitem')
                    }
                    return n
                }
                var r = t.prototype;
                r.createEl = function t(r, n, i) {
                    this.nonIconControl = true;
                    return e.prototype.createEl.call(this, 'li', b({
                        className: 'vjs-menu-item',
                        innerHTML: '<span class="vjs-menu-item-text">' + this.localize(this.options_.label) + '</span>',
                        tabIndex: - 1
                    }, n), i)
                };
                r.handleClick = function e(t) {
                    this.selected(true)
                };
                r.selected = function e(t) {
                    if (this.selectable) {
                        if (t) {
                            this.addClass('vjs-selected');
                            this.el_.setAttribute('aria-checked', 'true');
                            this.controlText(', selected');
                            this.isSelected_ = true
                        } else {
                            this.removeClass('vjs-selected');
                            this.el_.setAttribute('aria-checked', 'false');
                            this.controlText('');
                            this.isSelected_ = false
                        }
                    }
                };
                return t
            }(Cn);
            Ye.registerComponent('MenuItem', gi);
            var yi = function (r) {
                n(i, r);
                function i(n, i) {
                    var a;
                    var s = i.track;
                    var u = n.textTracks();
                    i.label = s.label || s.language || 'Unknown';
                    i.selected = s.mode === 'showing';
                    a = r.call(this, n, i) || this;
                    a.track = s;
                    var l = function e() {
                        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
                            r[n] = arguments[n]
                        }
                        a.handleTracksChange.apply(o(o(a)), r)
                    };
                    var c = function e() {
                        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
                            r[n] = arguments[n]
                        }
                        a.handleSelectedLanguageChange.apply(o(o(a)), r)
                    };
                    n.on(['loadstart',
                        'texttrackchange'], l);
                    u.addEventListener('change', l);
                    u.addEventListener('selectedlanguagechange', c);
                    a.on('dispose', function () {
                        n.off(['loadstart',
                            'texttrackchange'], l);
                        u.removeEventListener('change', l);
                        u.removeEventListener('selectedlanguagechange', c)
                    });
                    if (u.onchange === undefined) {
                        var d;
                        a.on(['tap',
                            'click'], function () {
                                if (typeof e.Event !== 'object') {
                                    try {
                                        d = new e.Event('change')
                                    } catch (e) {
                                    }
                                }
                                if (!d) {
                                    d = t.createEvent('Event');
                                    d.initEvent('change', true, true)
                                }
                                u.dispatchEvent(d)
                            })
                    }
                    a.handleTracksChange();
                    return a
                }
                var a = i.prototype;
                a.handleClick = function e(t) {
                    var n = this.track;
                    var i = this.player_.textTracks();
                    r.prototype.handleClick.call(this, t);
                    if (!i) {
                        return
                    }
                    var a = (n.kinds || [
                        n.kind
                    ]).filter(Boolean);
                    for (var s = 0; s < i.length; s++) {
                        var o = i[s];
                        if (a.indexOf(o.kind) === - 1) {
                            continue
                        }
                        if (o === n) {
                            if (o.mode !== 'showing') {
                                o.mode = 'showing'
                            }
                        } else if (o.mode !== 'disabled') {
                            o.mode = 'disabled'
                        }
                    }
                };
                a.handleTracksChange = function e(t) {
                    var r = this.track.mode === 'showing';
                    if (r !== this.isSelected_) {
                        this.selected(r)
                    }
                };
                a.handleSelectedLanguageChange = function e(t) {
                    if (this.track.mode === 'showing') {
                        var r = this.player_.cache_.selectedLanguage;
                        if (r && r.enabled && r.language === this.track.language && r.kind !== this.track.kind) {
                            return
                        }
                        this.player_.cache_.selectedLanguage = {
                            enabled: true,
                            language: this.track.language,
                            kind: this.track.kind
                        }
                    }
                };
                a.dispose = function e() {
                    this.track = null;
                    r.prototype.dispose.call(this)
                };
                return i
            }(gi);
            Ye.registerComponent('TextTrackMenuItem', yi);
            var _i = function (e) {
                n(t, e);
                function t(t, r) {
                    r.track = {
                        player: t,
                        kind: r.kind,
                        kinds: r.kinds,
                        default:
                            false,
                        mode: 'disabled'
                    };
                    if (!r.kinds) {
                        r.kinds = [
                            r.kind
                        ]
                    }
                    if (r.label) {
                        r.track.label = r.label
                    } else {
                        r.track.label = r.kinds.join(' and ') + ' off'
                    }
                    r.selectable = true;
                    r.multiSelectable = false;
                    return e.call(this, t, r) || this
                }
                var r = t.prototype;
                r.handleTracksChange = function e(t) {
                    var r = this.player().textTracks();
                    var n = true;
                    for (var i = 0, a = r.length; i < a; i++) {
                        var s = r[i];
                        if (this.options_.kinds.indexOf(s.kind) > - 1 && s.mode === 'showing') {
                            n = false;
                            break
                        }
                    }
                    if (n !== this.isSelected_) {
                        this.selected(n)
                    }
                };
                r.handleSelectedLanguageChange = function e(t) {
                    var r = this.player().textTracks();
                    var n = true;
                    for (var i = 0, a = r.length; i < a; i++) {
                        var s = r[i];
                        if (['captions',
                            'descriptions',
                            'subtitles'].indexOf(s.kind) > - 1 && s.mode === 'showing') {
                            n = false;
                            break
                        }
                    }
                    if (n) {
                        this.player_.cache_.selectedLanguage = {
                            enabled: false
                        }
                    }
                };
                return t
            }(yi);
            Ye.registerComponent('OffTextTrackMenuItem', _i);
            var bi = function (e) {
                n(t, e);
                function t(t, r) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    r.tracks = t.textTracks();
                    return e.call(this, t, r) || this
                }
                var r = t.prototype;
                r.createItems = function e(t, r) {
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    if (r === void 0) {
                        r = yi
                    }
                    var n;
                    if (this.label_) {
                        n = this.label_ + ' off'
                    }
                    t.push(new _i(this.player_, {
                        kinds: this.kinds_,
                        kind: this.kind_,
                        label: n
                    }));
                    this.hideThreshold_ += 1;
                    var i = this.player_.textTracks();
                    if (!Array.isArray(this.kinds_)) {
                        this.kinds_ = [
                            this.kind_
                        ]
                    }
                    for (var a = 0; a < i.length; a++) {
                        var s = i[a];
                        if (this.kinds_.indexOf(s.kind) > - 1) {
                            var o = new r(this.player_, {
                                track: s,
                                selectable: true,
                                multiSelectable: false
                            });
                            o.addClass('vjs-' + s.kind + '-menu-item');
                            t.push(o)
                        }
                    }
                    return t
                };
                return t
            }(mi);
            Ye.registerComponent('TextTrackButton', bi);
            var Ti = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    var i = r.track;
                    var a = r.cue;
                    var s = t.currentTime();
                    r.selectable = true;
                    r.multiSelectable = false;
                    r.label = a.text;
                    r.selected = a.startTime <= s && s < a.endTime;
                    n = e.call(this, t, r) || this;
                    n.track = i;
                    n.cue = a;
                    i.addEventListener('cuechange', Ee(o(o(n)), n.update));
                    return n
                }
                var r = t.prototype;
                r.handleClick = function t(r) {
                    e.prototype.handleClick.call(this);
                    this.player_.currentTime(this.cue.startTime);
                    this.update(this.cue.startTime)
                };
                r.update = function e(t) {
                    var r = this.cue;
                    var n = this.player_.currentTime();
                    this.selected(r.startTime <= n && n < r.endTime)
                };
                return t
            }(gi);
            Ye.registerComponent('ChaptersTrackMenuItem', Ti);
            var Ai = function (e) {
                n(t, e);
                function t(t, r, n) {
                    return e.call(this, t, r, n) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-chapters-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-chapters-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                r.update = function t(r) {
                    if (!this.track_ || r && (r.type === 'addtrack' || r.type === 'removetrack')) {
                        this.setTrack(this.findChaptersTrack())
                    }
                    e.prototype.update.call(this)
                };
                r.setTrack = function e(t) {
                    if (this.track_ === t) {
                        return
                    }
                    if (!this.updateHandler_) {
                        this.updateHandler_ = this.update.bind(this)
                    }
                    if (this.track_) {
                        var r = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                        if (r) {
                            r.removeEventListener('load', this.updateHandler_)
                        }
                        this.track_ = null
                    }
                    this.track_ = t;
                    if (this.track_) {
                        this.track_.mode = 'hidden';
                        var n = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);
                        if (n) {
                            n.addEventListener('load', this.updateHandler_)
                        }
                    }
                };
                r.findChaptersTrack = function e() {
                    var t = this.player_.textTracks() || [
                    ];
                    for (var r = t.length - 1; r >= 0; r--) {
                        var n = t[r];
                        if (n.kind === this.kind_) {
                            return n
                        }
                    }
                };
                r.getMenuCaption = function e() {
                    if (this.track_ && this.track_.label) {
                        return this.track_.label
                    }
                    return this.localize(ze(this.kind_))
                };
                r.createMenu = function t() {
                    this.options_.title = this.getMenuCaption();
                    return e.prototype.createMenu.call(this)
                };
                r.createItems = function e() {
                    var t = [
                    ];
                    if (!this.track_) {
                        return t
                    }
                    var r = this.track_.cues;
                    if (!r) {
                        return t
                    }
                    for (var n = 0, i = r.length; n < i; n++) {
                        var a = r[n];
                        var s = new Ti(this.player_, {
                            track: this.track_,
                            cue: a
                        });
                        t.push(s)
                    }
                    return t
                };
                return t
            }(bi);
            Ai.prototype.kind_ = 'chapters';
            Ai.prototype.controlText_ = 'Chapters';
            Ye.registerComponent('ChaptersButton', Ai);
            var Si = function (e) {
                n(t, e);
                function t(t, r, n) {
                    var i;
                    i = e.call(this, t, r, n) || this;
                    var a = t.textTracks();
                    var s = Ee(o(o(i)), i.handleTracksChange);
                    a.addEventListener('change', s);
                    i.on('dispose', function () {
                        a.removeEventListener('change', s)
                    });
                    return i
                }
                var r = t.prototype;
                r.handleTracksChange = function e(t) {
                    var r = this.player().textTracks();
                    var n = false;
                    for (var i = 0, a = r.length; i < a; i++) {
                        var s = r[i];
                        if (s.kind !== this.kind_ && s.mode === 'showing') {
                            n = true;
                            break
                        }
                    }
                    if (n) {
                        this.disable()
                    } else {
                        this.enable()
                    }
                };
                r.buildCSSClass = function t() {
                    return 'vjs-descriptions-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-descriptions-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                return t
            }(bi);
            Si.prototype.kind_ = 'descriptions';
            Si.prototype.controlText_ = 'Descriptions';
            Ye.registerComponent('DescriptionsButton', Si);
            var ki = function (e) {
                n(t, e);
                function t(t, r, n) {
                    return e.call(this, t, r, n) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-subtitles-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-subtitles-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                return t
            }(bi);
            ki.prototype.kind_ = 'subtitles';
            ki.prototype.controlText_ = 'Subtitles';
            Ye.registerComponent('SubtitlesButton', ki);
            var wi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    r.track = {
                        player: t,
                        kind: r.kind,
                        label: r.kind + ' settings',
                        selectable: false,
                        default:
                            false,
                        mode: 'disabled'
                    };
                    r.selectable = false;
                    r.name = 'CaptionSettingsMenuItem';
                    n = e.call(this, t, r) || this;
                    n.addClass('vjs-texttrack-settings');
                    n.controlText(', opens ' + r.kind + ' settings dialog');
                    return n
                }
                var r = t.prototype;
                r.handleClick = function e(t) {
                    this.player().getChild('textTrackSettings').open()
                };
                return t
            }(yi);
            Ye.registerComponent('CaptionSettingsMenuItem', wi);
            var Ci = function (e) {
                n(t, e);
                function t(t, r, n) {
                    return e.call(this, t, r, n) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-captions-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-captions-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                r.createItems = function t() {
                    var r = [
                    ];
                    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {
                        r.push(new wi(this.player_, {
                            kind: this.kind_
                        }));
                        this.hideThreshold_ += 1
                    }
                    return e.prototype.createItems.call(this, r)
                };
                return t
            }(bi);
            Ci.prototype.kind_ = 'captions';
            Ci.prototype.controlText_ = 'Captions';
            Ye.registerComponent('CaptionsButton', Ci);
            var Ei = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t(r, n, i) {
                    var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
                    if (this.options_.track.kind === 'captions') {
                        a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize('Captions') + '</span>\n      '
                    }
                    a += '</span>';
                    var s = e.prototype.createEl.call(this, r, b({
                        innerHTML: a
                    }, n), i);
                    return s
                };
                return t
            }(yi);
            Ye.registerComponent('SubsCapsMenuItem', Ei);
            var Ii = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    if (r === void 0) {
                        r = {
                        }
                    }
                    n = e.call(this, t, r) || this;
                    n.label_ = 'subtitles';
                    if (['en',
                        'en-us',
                        'en-ca',
                        'fr-ca'].indexOf(n.player_.language_) > - 1) {
                        n.label_ = 'captions'
                    }
                    n.menuButton_.controlText(ze(n.label_));
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-subs-caps-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-subs-caps-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                r.createItems = function t() {
                    var r = [
                    ];
                    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {
                        r.push(new wi(this.player_, {
                            kind: this.label_
                        }));
                        this.hideThreshold_ += 1
                    }
                    r = e.prototype.createItems.call(this, r, Ei);
                    return r
                };
                return t
            }(bi);
            Ii.prototype.kinds_ = [
                'captions',
                'subtitles'
            ];
            Ii.prototype.controlText_ = 'Subtitles';
            Ye.registerComponent('SubsCapsButton', Ii);
            var Pi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    var i = r.track;
                    var a = t.audioTracks();
                    r.label = i.label || i.language || 'Unknown';
                    r.selected = i.enabled;
                    n = e.call(this, t, r) || this;
                    n.track = i;
                    n.addClass('vjs-' + i.kind + '-menu-item');
                    var s = function e() {
                        for (var t = arguments.length, r = new Array(t), i = 0; i < t; i++) {
                            r[i] = arguments[i]
                        }
                        n.handleTracksChange.apply(o(o(n)), r)
                    };
                    a.addEventListener('change', s);
                    n.on('dispose', function () {
                        a.removeEventListener('change', s)
                    });
                    return n
                }
                var r = t.prototype;
                r.createEl = function t(r, n, i) {
                    var a = '<span class="vjs-menu-item-text">' + this.localize(this.options_.label);
                    if (this.options_.track.kind === 'main-desc') {
                        a += '\n        <span aria-hidden="true" class="vjs-icon-placeholder"></span>\n        <span class="vjs-control-text"> ' + this.localize('Descriptions') + '</span>\n      '
                    }
                    a += '</span>';
                    var s = e.prototype.createEl.call(this, r, b({
                        innerHTML: a
                    }, n), i);
                    return s
                };
                r.handleClick = function t(r) {
                    var n = this.player_.audioTracks();
                    e.prototype.handleClick.call(this, r);
                    for (var i = 0; i < n.length; i++) {
                        var a = n[i];
                        a.enabled = a === this.track
                    }
                };
                r.handleTracksChange = function e(t) {
                    this.selected(this.track.enabled)
                };
                return t
            }(gi);
            Ye.registerComponent('AudioTrackMenuItem', Pi);
            var Oi = function (e) {
                n(t, e);
                function t(t, r) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    r.tracks = t.audioTracks();
                    return e.call(this, t, r) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-audio-button ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-audio-button ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                r.createItems = function e(t) {
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    this.hideThreshold_ = 1;
                    var r = this.player_.audioTracks();
                    for (var n = 0; n < r.length; n++) {
                        var i = r[n];
                        t.push(new Pi(this.player_, {
                            track: i,
                            selectable: true,
                            multiSelectable: false
                        }))
                    }
                    return t
                };
                return t
            }(mi);
            Oi.prototype.controlText_ = 'Audio Track';
            Ye.registerComponent('AudioTrackButton', Oi);
            var xi = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    var i = r.rate;
                    var a = parseFloat(i, 10);
                    r.label = i;
                    r.selected = a === 1;
                    r.selectable = true;
                    r.multiSelectable = false;
                    n = e.call(this, t, r) || this;
                    n.label = i;
                    n.rate = a;
                    n.on(t, 'ratechange', n.update);
                    return n
                }
                var r = t.prototype;
                r.handleClick = function t(r) {
                    e.prototype.handleClick.call(this);
                    this.player().playbackRate(this.rate)
                };
                r.update = function e(t) {
                    this.selected(this.player().playbackRate() === this.rate)
                };
                return t
            }(gi);
            xi.prototype.contentElType = 'button';
            Ye.registerComponent('PlaybackRateMenuItem', xi);
            var Li = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.updateVisibility();
                    n.updateLabel();
                    n.on(t, 'loadstart', n.updateVisibility);
                    n.on(t, 'ratechange', n.updateLabel);
                    return n
                }
                var r = t.prototype;
                r.createEl = function t() {
                    var r = e.prototype.createEl.call(this);
                    this.labelEl_ = L('div', {
                        className: 'vjs-playback-rate-value',
                        innerHTML: '1x'
                    });
                    r.appendChild(this.labelEl_);
                    return r
                };
                r.dispose = function t() {
                    this.labelEl_ = null;
                    e.prototype.dispose.call(this)
                };
                r.buildCSSClass = function t() {
                    return 'vjs-playback-rate ' + e.prototype.buildCSSClass.call(this)
                };
                r.buildWrapperCSSClass = function t() {
                    return 'vjs-playback-rate ' + e.prototype.buildWrapperCSSClass.call(this)
                };
                r.createMenu = function e() {
                    var t = new pi(this.player());
                    var r = this.playbackRates();
                    if (r) {
                        for (var n = r.length - 1; n >= 0; n--) {
                            t.addChild(new xi(this.player(), {
                                rate: r[n] + 'x'
                            }))
                        }
                    }
                    return t
                };
                r.updateARIAAttributes = function e() {
                    this.el().setAttribute('aria-valuenow', this.player().playbackRate())
                };
                r.handleClick = function e(t) {
                    var r = this.player().playbackRate();
                    var n = this.playbackRates();
                    var i = n[0];
                    for (var a = 0; a < n.length; a++) {
                        if (n[a] > r) {
                            i = n[a];
                            break
                        }
                    }
                    this.player().playbackRate(i)
                };
                r.playbackRates = function e() {
                    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates
                };
                r.playbackRateSupported = function e() {
                    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0
                };
                r.updateVisibility = function e(t) {
                    if (this.playbackRateSupported()) {
                        this.removeClass('vjs-hidden')
                    } else {
                        this.addClass('vjs-hidden')
                    }
                };
                r.updateLabel = function e(t) {
                    if (this.playbackRateSupported()) {
                        this.labelEl_.innerHTML = this.player().playbackRate() + 'x'
                    }
                };
                return t
            }(vi);
            Li.prototype.controlText_ = 'Playback Rate';
            Ye.registerComponent('PlaybackRateMenuButton', Li);
            var Di = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-spacer ' + e.prototype.buildCSSClass.call(this)
                };
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: this.buildCSSClass()
                    })
                };
                return t
            }(Ye);
            Ye.registerComponent('Spacer', Di);
            var Ri = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-custom-control-spacer ' + e.prototype.buildCSSClass.call(this)
                };
                r.createEl = function t() {
                    var r = e.prototype.createEl.call(this, {
                        className: this.buildCSSClass()
                    });
                    r.innerHTML = ' ';
                    return r
                };
                return t
            }(Di);
            Ye.registerComponent('CustomControlSpacer', Ri);
            var Mi = function (e) {
                n(t, e);
                function t() {
                    return e.apply(this, arguments) || this
                }
                var r = t.prototype;
                r.createEl = function t() {
                    return e.prototype.createEl.call(this, 'div', {
                        className: 'vjs-control-bar',
                        dir: 'ltr'
                    })
                };
                return t
            }(Ye);
            Mi.prototype.options_ = {
                children: [
                    'playToggle',
                    'volumePanel',
                    'currentTimeDisplay',
                    'timeDivider',
                    'durationDisplay',
                    'progressControl',
                    'liveDisplay',
                    'seekToLive',
                    'remainingTimeDisplay',
                    'customControlSpacer',
                    'playbackRateMenuButton',
                    'chaptersButton',
                    'descriptionsButton',
                    'subsCapsButton',
                    'audioTrackButton',
                    'fullscreenToggle'
                ]
            };
            Ye.registerComponent('ControlBar', Mi);
            var ji = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    n = e.call(this, t, r) || this;
                    n.on(t, 'error', n.open);
                    return n
                }
                var r = t.prototype;
                r.buildCSSClass = function t() {
                    return 'vjs-error-display ' + e.prototype.buildCSSClass.call(this)
                };
                r.content = function e() {
                    var t = this.player().error();
                    return t ? this.localize(t.message) : ''
                };
                return t
            }(Nt);
            ji.prototype.options_ = We(Nt.prototype.options_, {
                pauseOnOpen: false,
                fillAlways: true,
                temporary: false,
                uncloseable: true
            });
            Ye.registerComponent('ErrorDisplay', ji);
            var Ui = 'vjs-text-track-settings';
            var Ni = [
                '#000',
                'Black'
            ];
            var Bi = [
                '#00F',
                'Blue'
            ];
            var qi = [
                '#0FF',
                'Cyan'
            ];
            var Fi = [
                '#0F0',
                'Green'
            ];
            var Vi = [
                '#F0F',
                'Magenta'
            ];
            var Hi = [
                '#F00',
                'Red'
            ];
            var zi = [
                '#FFF',
                'White'
            ];
            var Gi = [
                '#FF0',
                'Yellow'
            ];
            var Wi = [
                '1',
                'Opaque'
            ];
            var Yi = [
                '0.5',
                'Semi-Transparent'
            ];
            var $i = [
                '0',
                'Transparent'
            ];
            var Xi = {
                backgroundColor: {
                    selector: '.vjs-bg-color > select',
                    id: 'captions-background-color-%s',
                    label: 'Color',
                    options: [
                        Ni,
                        zi,
                        Hi,
                        Fi,
                        Bi,
                        Gi,
                        Vi,
                        qi
                    ]
                },
                backgroundOpacity: {
                    selector: '.vjs-bg-opacity > select',
                    id: 'captions-background-opacity-%s',
                    label: 'Transparency',
                    options: [
                        Wi,
                        Yi,
                        $i
                    ]
                },
                color: {
                    selector: '.vjs-fg-color > select',
                    id: 'captions-foreground-color-%s',
                    label: 'Color',
                    options: [
                        zi,
                        Ni,
                        Hi,
                        Fi,
                        Bi,
                        Gi,
                        Vi,
                        qi
                    ]
                },
                edgeStyle: {
                    selector: '.vjs-edge-style > select',
                    id: '%s',
                    label: 'Text Edge Style',
                    options: [
                        ['none',
                            'None'],
                        [
                            'raised',
                            'Raised'
                        ],
                        [
                            'depressed',
                            'Depressed'
                        ],
                        [
                            'uniform',
                            'Uniform'
                        ],
                        [
                            'dropshadow',
                            'Dropshadow'
                        ]
                    ]
                },
                fontFamily: {
                    selector: '.vjs-font-family > select',
                    id: 'captions-font-family-%s',
                    label: 'Font Family',
                    options: [
                        ['proportionalSansSerif',
                            'Proportional Sans-Serif'],
                        [
                            'monospaceSansSerif',
                            'Monospace Sans-Serif'
                        ],
                        [
                            'proportionalSerif',
                            'Proportional Serif'
                        ],
                        [
                            'monospaceSerif',
                            'Monospace Serif'
                        ],
                        [
                            'casual',
                            'Casual'
                        ],
                        [
                            'script',
                            'Script'
                        ],
                        [
                            'small-caps',
                            'Small Caps'
                        ]
                    ]
                },
                fontPercent: {
                    selector: '.vjs-font-percent > select',
                    id: 'captions-font-size-%s',
                    label: 'Font Size',
                    options: [
                        ['0.50',
                            '50%'],
                        [
                            '0.75',
                            '75%'
                        ],
                        [
                            '1.00',
                            '100%'
                        ],
                        [
                            '1.25',
                            '125%'
                        ],
                        [
                            '1.50',
                            '150%'
                        ],
                        [
                            '1.75',
                            '175%'
                        ],
                        [
                            '2.00',
                            '200%'
                        ],
                        [
                            '3.00',
                            '300%'
                        ],
                        [
                            '4.00',
                            '400%'
                        ]
                    ],
                    default:
                        2,
                    parser: function e(t) {
                        return t === '1.00' ? null : Number(t)
                    }
                },
                textOpacity: {
                    selector: '.vjs-text-opacity > select',
                    id: 'captions-foreground-opacity-%s',
                    label: 'Transparency',
                    options: [
                        Wi,
                        Yi
                    ]
                },
                windowColor: {
                    selector: '.vjs-window-color > select',
                    id: 'captions-window-color-%s',
                    label: 'Color'
                },
                windowOpacity: {
                    selector: '.vjs-window-opacity > select',
                    id: 'captions-window-opacity-%s',
                    label: 'Transparency',
                    options: [
                        $i,
                        Yi,
                        Wi
                    ]
                }
            };
            Xi.windowColor.options = Xi.backgroundColor.options;
            function Ki(e, t) {
                if (t) {
                    e = t(e)
                }
                if (e && e !== 'none') {
                    return e
                }
            }
            function Qi(e, t) {
                var r = e.options[e.options.selectedIndex].value;
                return Ki(r, t)
            }
            function Ji(e, t, r) {
                if (!t) {
                    return
                }
                for (var n = 0; n < e.options.length; n++) {
                    if (Ki(e.options[n].value, r) === t) {
                        e.selectedIndex = n;
                        break
                    }
                }
            }
            var Zi = function (r) {
                n(i, r);
                function i(e, t) {
                    var n;
                    t.temporary = false;
                    n = r.call(this, e, t) || this;
                    n.updateDisplay = Ee(o(o(n)), n.updateDisplay);
                    n.fill();
                    n.hasBeenOpened_ = n.hasBeenFilled_ = true;
                    n.endDialog = L('p', {
                        className: 'vjs-control-text',
                        textContent: n.localize('End of dialog window.')
                    });
                    n.el().appendChild(n.endDialog);
                    n.setDefaults();
                    if (t.persistTextTrackSettings === undefined) {
                        n.options_.persistTextTrackSettings = n.options_.playerOptions.persistTextTrackSettings
                    }
                    n.on(n.$('.vjs-done-button'), 'click', function () {
                        n.saveSettings();
                        n.close()
                    });
                    n.on(n.$('.vjs-default-button'), 'click', function () {
                        n.setDefaults();
                        n.updateDisplay()
                    });
                    y(Xi, function (e) {
                        n.on(n.$(e.selector), 'change', n.updateDisplay)
                    });
                    if (n.options_.persistTextTrackSettings) {
                        n.restoreSettings()
                    }
                    return n
                }
                var a = i.prototype;
                a.dispose = function e() {
                    this.endDialog = null;
                    r.prototype.dispose.call(this)
                };
                a.createElSelect_ = function e(t, r, n) {
                    var i = this;
                    if (r === void 0) {
                        r = ''
                    }
                    if (n === void 0) {
                        n = 'label'
                    }
                    var a = Xi[t];
                    var s = a.id.replace('%s', this.id_);
                    var o = [
                        r,
                        s
                    ].join(' ').trim();
                    return ['<' + n + ' id="' + s + '" class="' + (n === 'label' ? 'vjs-label' : '') + '">',
                    this.localize(a.label),
                    '</' + n + '>',
                    '<select aria-labelledby="' + o + '">'].concat(a.options.map(function (e) {
                        var t = s + '-' + e[1].replace(/\W+/g, '');
                        return ['<option id="' + t + '" value="' + e[0] + '" ',
                        'aria-labelledby="' + o + ' ' + t + '">',
                        i.localize(e[1]),
                            '</option>'].join('')
                    })).concat('</select>').join('')
                };
                a.createElFgColor_ = function e() {
                    var t = 'captions-text-legend-' + this.id_;
                    return ['<fieldset class="vjs-fg-color vjs-track-setting">',
                        '<legend id="' + t + '">',
                        this.localize('Text'),
                        '</legend>',
                        this.createElSelect_('color', t),
                        '<span class="vjs-text-opacity vjs-opacity">',
                        this.createElSelect_('textOpacity', t),
                        '</span>',
                        '</fieldset>'].join('')
                };
                a.createElBgColor_ = function e() {
                    var t = 'captions-background-' + this.id_;
                    return ['<fieldset class="vjs-bg-color vjs-track-setting">',
                        '<legend id="' + t + '">',
                        this.localize('Background'),
                        '</legend>',
                        this.createElSelect_('backgroundColor', t),
                        '<span class="vjs-bg-opacity vjs-opacity">',
                        this.createElSelect_('backgroundOpacity', t),
                        '</span>',
                        '</fieldset>'].join('')
                };
                a.createElWinColor_ = function e() {
                    var t = 'captions-window-' + this.id_;
                    return ['<fieldset class="vjs-window-color vjs-track-setting">',
                        '<legend id="' + t + '">',
                        this.localize('Window'),
                        '</legend>',
                        this.createElSelect_('windowColor', t),
                        '<span class="vjs-window-opacity vjs-opacity">',
                        this.createElSelect_('windowOpacity', t),
                        '</span>',
                        '</fieldset>'].join('')
                };
                a.createElColors_ = function e() {
                    return L('div', {
                        className: 'vjs-track-settings-colors',
                        innerHTML: [
                            this.createElFgColor_(),
                            this.createElBgColor_(),
                            this.createElWinColor_()
                        ].join('')
                    })
                };
                a.createElFont_ = function e() {
                    return L('div', {
                        className: 'vjs-track-settings-font',
                        innerHTML: [
                            '<fieldset class="vjs-font-percent vjs-track-setting">',
                            this.createElSelect_('fontPercent', '', 'legend'),
                            '</fieldset>',
                            '<fieldset class="vjs-edge-style vjs-track-setting">',
                            this.createElSelect_('edgeStyle', '', 'legend'),
                            '</fieldset>',
                            '<fieldset class="vjs-font-family vjs-track-setting">',
                            this.createElSelect_('fontFamily', '', 'legend'),
                            '</fieldset>'
                        ].join('')
                    })
                };
                a.createElControls_ = function e() {
                    var t = this.localize('restore all settings to the default values');
                    return L('div', {
                        className: 'vjs-track-settings-controls',
                        innerHTML: [
                            '<button type="button" class="vjs-default-button" title="' + t + '">',
                            this.localize('Reset'),
                            '<span class="vjs-control-text"> ' + t + '</span>',
                            '</button>',
                            '<button type="button" class="vjs-done-button">' + this.localize('Done') + '</button>'
                        ].join('')
                    })
                };
                a.content = function e() {
                    return [this.createElColors_(),
                    this.createElFont_(),
                    this.createElControls_()]
                };
                a.label = function e() {
                    return this.localize('Caption Settings Dialog')
                };
                a.description = function e() {
                    return this.localize('Beginning of dialog window. Escape will cancel and close the window.')
                };
                a.buildCSSClass = function e() {
                    return r.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings'
                };
                a.getValues = function e() {
                    var t = this;
                    return _(Xi, function (e, r, n) {
                        var i = Qi(t.$(r.selector), r.parser);
                        if (i !== undefined) {
                            e[n] = i
                        }
                        return e
                    }, {
                    })
                };
                a.setValues = function e(t) {
                    var r = this;
                    y(Xi, function (e, n) {
                        Ji(r.$(e.selector), t[n], e.parser)
                    })
                };
                a.setDefaults = function e() {
                    var t = this;
                    y(Xi, function (e) {
                        var r = e.hasOwnProperty('default') ? e.default :
                            0;
                        t.$(e.selector).selectedIndex = r
                    })
                };
                a.restoreSettings = function t() {
                    var r;
                    try {
                        r = JSON.parse(e.localStorage.getItem(Ui))
                    } catch (e) {
                        f.warn(e)
                    }
                    if (r) {
                        this.setValues(r)
                    }
                };
                a.saveSettings = function t() {
                    if (!this.options_.persistTextTrackSettings) {
                        return
                    }
                    var r = this.getValues();
                    try {
                        if (Object.keys(r).length) {
                            e.localStorage.setItem(Ui, JSON.stringify(r))
                        } else {
                            e.localStorage.removeItem(Ui)
                        }
                    } catch (e) {
                        f.warn(e)
                    }
                };
                a.updateDisplay = function e() {
                    var t = this.player_.getChild('textTrackDisplay');
                    if (t) {
                        t.updateDisplay()
                    }
                };
                a.conditionalBlur_ = function e() {
                    this.previouslyActiveEl_ = null;
                    this.off(t, 'keydown', this.handleKeyDown);
                    var r = this.player_.controlBar;
                    var n = r && r.subsCapsButton;
                    var i = r && r.captionsButton;
                    if (n) {
                        n.focus()
                    } else if (i) {
                        i.focus()
                    }
                };
                return i
            }(Nt);
            Ye.registerComponent('TextTrackSettings', Zi);
            var ea = function (t) {
                n(r, t);
                function r(r, n) {
                    var i;
                    var a = n.ResizeObserver || e.ResizeObserver;
                    if (n.ResizeObserver === null) {
                        a = false
                    }
                    var s = We({
                        createEl: !a,
                        reportTouchActivity: false
                    }, n);
                    i = t.call(this, r, s) || this;
                    i.ResizeObserver = n.ResizeObserver || e.ResizeObserver;
                    i.loadListener_ = null;
                    i.resizeObserver_ = null;
                    i.debouncedHandler_ = Pe(function () {
                        i.resizeHandler()
                    }, 100, false, o(o(i)));
                    if (a) {
                        i.resizeObserver_ = new i.ResizeObserver(i.debouncedHandler_);
                        i.resizeObserver_.observe(r.el())
                    } else {
                        i.loadListener_ = function () {
                            if (!i.el_ || !i.el_.contentWindow) {
                                return
                            }
                            me(i.el_.contentWindow, 'resize', i.debouncedHandler_)
                        };
                        i.one('load', i.loadListener_)
                    }
                    return i
                }
                var i = r.prototype;
                i.createEl = function e() {
                    return t.prototype.createEl.call(this, 'iframe', {
                        className: 'vjs-resize-manager',
                        tabIndex: - 1
                    }, {
                        'aria-hidden': 'true'
                    })
                };
                i.resizeHandler = function e() {
                    if (!this.player_ || !this.player_.trigger) {
                        return
                    }
                    this.player_.trigger('playerresize')
                };
                i.dispose = function e() {
                    if (this.debouncedHandler_) {
                        this.debouncedHandler_.cancel()
                    }
                    if (this.resizeObserver_) {
                        if (this.player_.el()) {
                            this.resizeObserver_.unobserve(this.player_.el())
                        }
                        this.resizeObserver_.disconnect()
                    }
                    if (this.el_ && this.el_.contentWindow) {
                        ge(this.el_.contentWindow, 'resize', this.debouncedHandler_)
                    }
                    if (this.loadListener_) {
                        this.off('load', this.loadListener_)
                    }
                    this.ResizeObserver = null;
                    this.resizeObserver = null;
                    this.debouncedHandler_ = null;
                    this.loadListener_ = null
                };
                return r
            }(Ye);
            Ye.registerComponent('ResizeManager', ea);
            var ta = function (e) {
                n(t, e);
                function t(t, r) {
                    var n;
                    var i = We({
                        createEl: false
                    }, r);
                    n = e.call(this, t, i) || this;
                    n.reset_();
                    n.on(n.player_, 'durationchange', n.handleDurationchange);
                    return n
                }
                var r = t.prototype;
                r.isBehind_ = function e() {
                    if (!this.timeupdateSeen_) {
                        return false
                    }
                    var t = this.liveCurrentTime();
                    var r = this.player_.currentTime();
                    var n = this.seekableIncrement_;
                    var i = n * 2 + 0.07;
                    return t !== Infinity && t - i >= r
                };
                r.trackLive_ = function e() {
                    this.pastSeekEnd_ = this.pastSeekEnd_;
                    var t = this.player_.seekable();
                    if (!t || !t.length) {
                        return
                    }
                    var r = this.seekableEnd();
                    if (r !== this.lastSeekEnd_) {
                        if (this.lastSeekEnd_) {
                            this.seekableIncrement_ = Math.abs(r - this.lastSeekEnd_)
                        }
                        this.pastSeekEnd_ = 0;
                        this.lastSeekEnd_ = r;
                        this.trigger('seekableendchange')
                    }
                    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;
                    if (this.isBehind_() !== this.behindLiveEdge()) {
                        this.behindLiveEdge_ = this.isBehind_();
                        this.trigger('liveedgechange')
                    }
                };
                r.handleDurationchange = function e() {
                    if (this.player_.duration() === Infinity) {
                        this.startTracking()
                    } else {
                        this.stopTracking()
                    }
                };
                r.startTracking = function e() {
                    var t = this;
                    if (this.isTracking()) {
                        return
                    }
                    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);
                    this.trackLive_();
                    this.on(this.player_, 'play', this.trackLive_);
                    this.on(this.player_, 'pause', this.trackLive_);
                    this.one(this.player_, 'play', this.handlePlay);
                    if (!this.timeupdateSeen_) {
                        this.handleTimeupdate = function () {
                            t.timeupdateSeen_ = true;
                            t.handleTimeupdate = null
                        };
                        this.one(this.player_, 'timeupdate', this.handleTimeupdate)
                    }
                };
                r.handlePlay = function e() {
                    this.one(this.player_, 'timeupdate', this.seekToLiveEdge)
                };
                r.reset_ = function e() {
                    this.pastSeekEnd_ = 0;
                    this.lastSeekEnd_ = null;
                    this.behindLiveEdge_ = null;
                    this.timeupdateSeen_ = false;
                    this.clearInterval(this.trackingInterval_);
                    this.trackingInterval_ = null;
                    this.seekableIncrement_ = 12;
                    this.off(this.player_, 'play', this.trackLive_);
                    this.off(this.player_, 'pause', this.trackLive_);
                    this.off(this.player_, 'play', this.handlePlay);
                    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);
                    if (this.handleTimeupdate) {
                        this.off(this.player_, 'timeupdate', this.handleTimeupdate);
                        this.handleTimeupdate = null
                    }
                };
                r.stopTracking = function e() {
                    if (!this.isTracking()) {
                        return
                    }
                    this.reset_()
                };
                r.seekableEnd = function e() {
                    var t = this.player_.seekable();
                    var r = [
                    ];
                    var n = t ? t.length : 0;
                    while (n--) {
                        r.push(t.end(n))
                    }
                    return r.length ? r.sort()[r.length - 1] : Infinity
                };
                r.seekableStart = function e() {
                    var t = this.player_.seekable();
                    var r = [
                    ];
                    var n = t ? t.length : 0;
                    while (n--) {
                        r.push(t.start(n))
                    }
                    return r.length ? r.sort()[0] : 0
                };
                r.liveWindow = function e() {
                    var t = this.liveCurrentTime();
                    if (t === Infinity) {
                        return Infinity
                    }
                    return t - this.seekableStart()
                };
                r.isLive = function e() {
                    return this.isTracking()
                };
                r.atLiveEdge = function e() {
                    return !this.behindLiveEdge()
                };
                r.liveCurrentTime = function e() {
                    return this.pastSeekEnd() + this.seekableEnd()
                };
                r.pastSeekEnd = function e() {
                    return this.pastSeekEnd_
                };
                r.behindLiveEdge = function e() {
                    return this.behindLiveEdge_
                };
                r.isTracking = function e() {
                    return typeof this.trackingInterval_ === 'number'
                };
                r.seekToLiveEdge = function e() {
                    if (this.atLiveEdge()) {
                        return
                    }
                    this.player_.currentTime(this.liveCurrentTime());
                    if (this.player_.paused()) {
                        this.player_.play()
                    }
                };
                r.dispose = function t() {
                    this.stopTracking();
                    e.prototype.dispose.call(this)
                };
                return t
            }(Ye);
            Ye.registerComponent('LiveTracker', ta);
            var ra = function e(t) {
                var r = t.el();
                if (r.hasAttribute('src')) {
                    t.triggerSourceset(r.src);
                    return true
                }
                var n = t.$$('source');
                var i = [
                ];
                var a = '';
                if (!n.length) {
                    return false
                }
                for (var s = 0; s < n.length; s++) {
                    var o = n[s].src;
                    if (o && i.indexOf(o) === - 1) {
                        i.push(o)
                    }
                }
                if (!i.length) {
                    return false
                }
                if (i.length === 1) {
                    a = i[0]
                }
                t.triggerSourceset(a);
                return true
            };
            var na = Object.defineProperty({
            }, 'innerHTML', {
                get: function e() {
                    return this.cloneNode(true).innerHTML
                },
                set: function r(n) {
                    var i = t.createElement(this.nodeName.toLowerCase());
                    i.innerHTML = n;
                    var a = t.createDocumentFragment();
                    while (i.childNodes.length) {
                        a.appendChild(i.childNodes[0])
                    }
                    this.innerText = '';
                    e.Element.prototype.appendChild.call(this, a);
                    return this.innerHTML
                }
            });
            var ia = function e(t, r) {
                var n = {
                };
                for (var i = 0; i < t.length; i++) {
                    n = Object.getOwnPropertyDescriptor(t[i], r);
                    if (n && n.set && n.get) {
                        break
                    }
                }
                n.enumerable = true;
                n.configurable = true;
                return n
            };
            var aa = function t(r) {
                return ia([r.el(),
                e.HTMLMediaElement.prototype,
                e.Element.prototype,
                    na], 'innerHTML')
            };
            var sa = function e(t) {
                var r = t.el();
                if (r.resetSourceWatch_) {
                    return
                }
                var n = {
                };
                var i = aa(t);
                var a = function e(n) {
                    return function () {
                        for (var e = arguments.length, i = new Array(e), a = 0; a < e; a++) {
                            i[a] = arguments[a]
                        }
                        var s = n.apply(r, i);
                        ra(t);
                        return s
                    }
                };
                [
                    'append',
                    'appendChild',
                    'insertAdjacentHTML'
                ].forEach(function (e) {
                    if (!r[e]) {
                        return
                    }
                    n[e] = r[e];
                    r[e] = a(n[e])
                });
                Object.defineProperty(r, 'innerHTML', We(i, {
                    set: a(i.set)
                }));
                r.resetSourceWatch_ = function () {
                    r.resetSourceWatch_ = null;
                    Object.keys(n).forEach(function (e) {
                        r[e] = n[e]
                    });
                    Object.defineProperty(r, 'innerHTML', i)
                };
                t.one('sourceset', r.resetSourceWatch_)
            };
            var oa = Object.defineProperty({
            }, 'src', {
                get: function t() {
                    if (this.hasAttribute('src')) {
                        return er(e.Element.prototype.getAttribute.call(this, 'src'))
                    }
                    return ''
                },
                set: function t(r) {
                    e.Element.prototype.setAttribute.call(this, 'src', r);
                    return r
                }
            });
            var ua = function t(r) {
                return ia([r.el(),
                e.HTMLMediaElement.prototype,
                    oa], 'src')
            };
            var la = function e(t) {
                if (!t.featuresSourceset) {
                    return
                }
                var r = t.el();
                if (r.resetSourceset_) {
                    return
                }
                var n = ua(t);
                var i = r.setAttribute;
                var a = r.load;
                Object.defineProperty(r, 'src', We(n, {
                    set: function e(i) {
                        var a = n.set.call(r, i);
                        t.triggerSourceset(r.src);
                        return a
                    }
                }));
                r.setAttribute = function (e, n) {
                    var a = i.call(r, e, n);
                    if (/src/i.test(e)) {
                        t.triggerSourceset(r.src)
                    }
                    return a
                };
                r.load = function () {
                    var e = a.call(r);
                    if (!ra(t)) {
                        t.triggerSourceset('');
                        sa(t)
                    }
                    return e
                };
                if (r.currentSrc) {
                    t.triggerSourceset(r.currentSrc)
                } else if (!ra(t)) {
                    sa(t)
                }
                r.resetSourceset_ = function () {
                    r.resetSourceset_ = null;
                    r.load = a;
                    r.setAttribute = i;
                    Object.defineProperty(r, 'src', n);
                    if (r.resetSourceWatch_) {
                        r.resetSourceWatch_()
                    }
                }
            };
            function ca() {
                var e = u(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\'t used.\n            This may prevent text tracks from loading.']);
                ca = function t() {
                    return e
                };
                return e
            }
            var da = function (r) {
                n(i, r);
                function i(e, t) {
                    var n;
                    n = r.call(this, e, t) || this;
                    var i = e.source;
                    var a = false;
                    if (i && (n.el_.currentSrc !== i.src || e.tag && e.tag.initNetworkState_ === 3)) {
                        n.setSource(i)
                    } else {
                        n.handleLateInit_(n.el_)
                    }
                    if (e.enableSourceset) {
                        n.setupSourcesetHandling_()
                    }
                    if (n.el_.hasChildNodes()) {
                        var s = n.el_.childNodes;
                        var o = s.length;
                        var u = [
                        ];
                        while (o--) {
                            var l = s[o];
                            var c = l.nodeName.toLowerCase();
                            if (c === 'track') {
                                if (!n.featuresNativeTextTracks) {
                                    u.push(l)
                                } else {
                                    n.remoteTextTrackEls().addTrackElement_(l);
                                    n.remoteTextTracks().addTrack(l.track);
                                    n.textTracks().addTrack(l.track);
                                    if (!a && !n.el_.hasAttribute('crossorigin') && rr(l.src)) {
                                        a = true
                                    }
                                }
                            }
                        }
                        for (var d = 0; d < u.length; d++) {
                            n.el_.removeChild(u[d])
                        }
                    }
                    n.proxyNativeTracks_();
                    if (n.featuresNativeTextTracks && a) {
                        f.warn(v(ca()))
                    }
                    n.restoreMetadataTracksInIOSNativePlayer_();
                    if ((ft || Je || it) && e.nativeControlsForTouch === true) {
                        n.setControls(true)
                    }
                    n.proxyWebkitFullscreen_();
                    n.triggerReady();
                    return n
                }
                var a = i.prototype;
                a.dispose = function e() {
                    if (this.el_ && this.el_.resetSourceset_) {
                        this.el_.resetSourceset_()
                    }
                    i.disposeMediaElement(this.el_);
                    this.options_ = null;
                    r.prototype.dispose.call(this)
                };
                a.setupSourcesetHandling_ = function e() {
                    la(this)
                };
                a.restoreMetadataTracksInIOSNativePlayer_ = function e() {
                    var t = this.textTracks();
                    var r;
                    var n = function e() {
                        r = [
                        ];
                        for (var n = 0; n < t.length; n++) {
                            var i = t[n];
                            if (i.kind === 'metadata') {
                                r.push({
                                    track: i,
                                    storedMode: i.mode
                                })
                            }
                        }
                    };
                    n();
                    t.addEventListener('change', n);
                    this.on('dispose', function () {
                        return t.removeEventListener('change', n)
                    });
                    var i = function e() {
                        for (var n = 0; n < r.length; n++) {
                            var i = r[n];
                            if (i.track.mode === 'disabled' && i.track.mode !== i.storedMode) {
                                i.track.mode = i.storedMode
                            }
                        }
                        t.removeEventListener('change', e)
                    };
                    this.on('webkitbeginfullscreen', function () {
                        t.removeEventListener('change', n);
                        t.removeEventListener('change', i);
                        t.addEventListener('change', i)
                    });
                    this.on('webkitendfullscreen', function () {
                        t.removeEventListener('change', n);
                        t.addEventListener('change', n);
                        t.removeEventListener('change', i)
                    })
                };
                a.overrideNative_ = function e(t, r) {
                    var n = this;
                    if (r !== this['featuresNative' + t + 'Tracks']) {
                        return
                    }
                    var i = t.toLowerCase();
                    if (this[i + 'TracksListeners_']) {
                        Object.keys(this[i + 'TracksListeners_']).forEach(function (e) {
                            var t = n.el()[i + 'Tracks'];
                            t.removeEventListener(e, n[i + 'TracksListeners_'][e])
                        })
                    }
                    this['featuresNative' + t + 'Tracks'] = !r;
                    this[i + 'TracksListeners_'] = null;
                    this.proxyNativeTracksForType_(i)
                };
                a.overrideNativeAudioTracks = function e(t) {
                    this.overrideNative_('Audio', t)
                };
                a.overrideNativeVideoTracks = function e(t) {
                    this.overrideNative_('Video', t)
                };
                a.proxyNativeTracksForType_ = function e(t) {
                    var r = this;
                    var n = Kr[t];
                    var i = this.el()[n.getterName];
                    var a = this[n.getterName]();
                    if (!this['featuresNative' + n.capitalName + 'Tracks'] || !i || !i.addEventListener) {
                        return
                    }
                    var s = {
                        change: function e(t) {
                            a.trigger({
                                type: 'change',
                                target: a,
                                currentTarget: a,
                                srcElement: a
                            })
                        },
                        addtrack: function e(t) {
                            a.addTrack(t.track)
                        },
                        removetrack: function e(t) {
                            a.removeTrack(t.track)
                        }
                    };
                    var o = function e() {
                        var t = [
                        ];
                        for (var r = 0; r < a.length; r++) {
                            var n = false;
                            for (var s = 0; s < i.length; s++) {
                                if (i[s] === a[r]) {
                                    n = true;
                                    break
                                }
                            }
                            if (!n) {
                                t.push(a[r])
                            }
                        }
                        while (t.length) {
                            a.removeTrack(t.shift())
                        }
                    };
                    this[n.getterName + 'Listeners_'] = s;
                    Object.keys(s).forEach(function (e) {
                        var t = s[e];
                        i.addEventListener(e, t);
                        r.on('dispose', function (r) {
                            return i.removeEventListener(e, t)
                        })
                    });
                    this.on('loadstart', o);
                    this.on('dispose', function (e) {
                        return r.off('loadstart', o)
                    })
                };
                a.proxyNativeTracks_ = function e() {
                    var t = this;
                    Kr.names.forEach(function (e) {
                        t.proxyNativeTracksForType_(e)
                    })
                };
                a.createEl = function e() {
                    var r = this.options_.tag;
                    if (!r || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {
                        if (r) {
                            var n = r.cloneNode(true);
                            if (r.parentNode) {
                                r.parentNode.insertBefore(n, r)
                            }
                            i.disposeMediaElement(r);
                            r = n
                        } else {
                            r = t.createElement('video');
                            var a = this.options_.tag && q(this.options_.tag);
                            var s = We({
                            }, a);
                            if (!ft || this.options_.nativeControlsForTouch !== true) {
                                delete s.controls
                            }
                            B(r, b(s, {
                                id: this.options_.techId,
                                class: 'vjs-tech'
                            }))
                        }
                        r.playerId = this.options_.playerId
                    }
                    if (typeof this.options_.preload !== 'undefined') {
                        V(r, 'preload', this.options_.preload)
                    }
                    var o = [
                        'loop',
                        'muted',
                        'playsinline',
                        'autoplay'
                    ];
                    for (var u = 0; u < o.length; u++) {
                        var l = o[u];
                        var c = this.options_[l];
                        if (typeof c !== 'undefined') {
                            if (c) {
                                V(r, l, l)
                            } else {
                                H(r, l)
                            }
                            r[l] = c
                        }
                    }
                    return r
                };
                a.handleLateInit_ = function e(t) {
                    if (t.networkState === 0 || t.networkState === 3) {
                        return
                    }
                    if (t.readyState === 0) {
                        var r = false;
                        var n = function e() {
                            r = true
                        };
                        this.on('loadstart', n);
                        var i = function e() {
                            if (!r) {
                                this.trigger('loadstart')
                            }
                        };
                        this.on('loadedmetadata', i);
                        this.ready(function () {
                            this.off('loadstart', n);
                            this.off('loadedmetadata', i);
                            if (!r) {
                                this.trigger('loadstart')
                            }
                        });
                        return
                    }
                    var a = [
                        'loadstart'
                    ];
                    a.push('loadedmetadata');
                    if (t.readyState >= 2) {
                        a.push('loadeddata')
                    }
                    if (t.readyState >= 3) {
                        a.push('canplay')
                    }
                    if (t.readyState >= 4) {
                        a.push('canplaythrough')
                    }
                    this.ready(function () {
                        a.forEach(function (e) {
                            this.trigger(e)
                        }, this)
                    })
                };
                a.setCurrentTime = function e(t) {
                    try {
                        this.el_.currentTime = t
                    } catch (e) {
                        f(e, 'Video is not ready. (Video.js)')
                    }
                };
                a.duration = function e() {
                    var t = this;
                    if (this.el_.duration === Infinity && rt && ot && this.el_.currentTime === 0) {
                        var r = function e() {
                            if (t.el_.currentTime > 0) {
                                if (t.el_.duration === Infinity) {
                                    t.trigger('durationchange')
                                }
                                t.off('timeupdate', e)
                            }
                        };
                        this.on('timeupdate', r);
                        return NaN
                    }
                    return this.el_.duration || NaN
                };
                a.width = function e() {
                    return this.el_.offsetWidth
                };
                a.height = function e() {
                    return this.el_.offsetHeight
                };
                a.proxyWebkitFullscreen_ = function e() {
                    var t = this;
                    if (!('webkitDisplayingFullscreen' in this.el_)) {
                        return
                    }
                    var r = function e() {
                        this.trigger('fullscreenchange', {
                            isFullscreen: false
                        })
                    };
                    var n = function e() {
                        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {
                            this.one('webkitendfullscreen', r);
                            this.trigger('fullscreenchange', {
                                isFullscreen: true
                            })
                        }
                    };
                    this.on('webkitbeginfullscreen', n);
                    this.on('dispose', function () {
                        t.off('webkitbeginfullscreen', n);
                        t.off('webkitendfullscreen', r)
                    })
                };
                a.supportsFullScreen = function t() {
                    if (typeof this.el_.webkitEnterFullScreen === 'function') {
                        var r = e.navigator && e.navigator.userAgent || '';
                        if (/Android/.test(r) || !/Chrome|Mac OS X 10.5/.test(r)) {
                            return true
                        }
                    }
                    return false
                };
                a.enterFullScreen = function e() {
                    var t = this.el_;
                    if (t.paused && t.networkState <= t.HAVE_METADATA) {
                        this.el_.play();
                        this.setTimeout(function () {
                            t.pause();
                            t.webkitEnterFullScreen()
                        }, 0)
                    } else {
                        t.webkitEnterFullScreen()
                    }
                };
                a.exitFullScreen = function e() {
                    this.el_.webkitExitFullScreen()
                };
                a.src = function e(t) {
                    if (t === undefined) {
                        return this.el_.src
                    }
                    this.setSrc(t)
                };
                a.reset = function e() {
                    i.resetMediaElement(this.el_)
                };
                a.currentSrc = function e() {
                    if (this.currentSource_) {
                        return this.currentSource_.src
                    }
                    return this.el_.currentSrc
                };
                a.setControls = function e(t) {
                    this.el_.controls = !!t
                };
                a.addTextTrack = function e(t, n, i) {
                    if (!this.featuresNativeTextTracks) {
                        return r.prototype.addTextTrack.call(this, t, n, i)
                    }
                    return this.el_.addTextTrack(t, n, i)
                };
                a.createRemoteTextTrack = function e(n) {
                    if (!this.featuresNativeTextTracks) {
                        return r.prototype.createRemoteTextTrack.call(this, n)
                    }
                    var i = t.createElement('track');
                    if (n.kind) {
                        i.kind = n.kind
                    }
                    if (n.label) {
                        i.label = n.label
                    }
                    if (n.language || n.srclang) {
                        i.srclang = n.language || n.srclang
                    }
                    if (n.default) {
                        i.default = n.default
                    }
                    if (n.id) {
                        i.id = n.id
                    }
                    if (n.src) {
                        i.src = n.src
                    }
                    return i
                };
                a.addRemoteTextTrack = function e(t, n) {
                    var i = r.prototype.addRemoteTextTrack.call(this, t, n);
                    if (this.featuresNativeTextTracks) {
                        this.el().appendChild(i)
                    }
                    return i
                };
                a.removeRemoteTextTrack = function e(t) {
                    r.prototype.removeRemoteTextTrack.call(this, t);
                    if (this.featuresNativeTextTracks) {
                        var n = this.$$('track');
                        var i = n.length;
                        while (i--) {
                            if (t === n[i] || t === n[i].track) {
                                this.el().removeChild(n[i])
                            }
                        }
                    }
                };
                a.getVideoPlaybackQuality = function t() {
                    if (typeof this.el().getVideoPlaybackQuality === 'function') {
                        return this.el().getVideoPlaybackQuality()
                    }
                    var r = {
                    };
                    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {
                        r.droppedVideoFrames = this.el().webkitDroppedFrameCount;
                        r.totalVideoFrames = this.el().webkitDecodedFrameCount
                    }
                    if (e.performance && typeof e.performance.now === 'function') {
                        r.creationTime = e.performance.now()
                    } else if (e.performance && e.performance.timing && typeof e.performance.timing.navigationStart === 'number') {
                        r.creationTime = e.Date.now() - e.performance.timing.navigationStart
                    }
                    return r
                };
                return i
            }(tn); if (I()) {
                da.TEST_VID = t.createElement('video');
                var fa = t.createElement('track');
                fa.kind = 'captions';
                fa.srclang = 'en';
                fa.label = 'English';
                da.TEST_VID.appendChild(fa)
            }
            da.isSupported = function () {
                try {
                    da.TEST_VID.volume = 0.5
                } catch (e) {
                    return false
                }
                return !!(da.TEST_VID && da.TEST_VID.canPlayType)
            }; da.canPlayType = function (e) {
                return da.TEST_VID.canPlayType(e)
            }; da.canPlaySource = function (e, t) {
                return da.canPlayType(e.type)
            }; da.canControlVolume = function () {
                try {
                    var e = da.TEST_VID.volume;
                    da.TEST_VID.volume = e / 2 + 0.1;
                    return e !== da.TEST_VID.volume
                } catch (e) {
                    return false
                }
            }; da.canMuteVolume = function () {
                try {
                    var e = da.TEST_VID.muted;
                    da.TEST_VID.muted = !e;
                    if (da.TEST_VID.muted) {
                        V(da.TEST_VID, 'muted', 'muted')
                    } else {
                        H(da.TEST_VID, 'muted', 'muted')
                    }
                    return e !== da.TEST_VID.muted
                } catch (e) {
                    return false
                }
            }; da.canControlPlaybackRate = function () {
                if (rt && ot && ut < 58) {
                    return false
                }
                try {
                    var e = da.TEST_VID.playbackRate;
                    da.TEST_VID.playbackRate = e / 2 + 0.1;
                    return e !== da.TEST_VID.playbackRate
                } catch (e) {
                    return false
                }
            }; da.canOverrideAttributes = function () {
                try {
                    var e = function e() {
                    };
                    Object.defineProperty(t.createElement('video'), 'src', {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(t.createElement('audio'), 'src', {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(t.createElement('video'), 'innerHTML', {
                        get: e,
                        set: e
                    });
                    Object.defineProperty(t.createElement('audio'), 'innerHTML', {
                        get: e,
                        set: e
                    })
                } catch (e) {
                    return false
                }
                return true
            }; da.supportsNativeTextTracks = function () {
                return dt || et && ot
            }; da.supportsNativeVideoTracks = function () {
                return !!(da.TEST_VID && da.TEST_VID.videoTracks)
            }; da.supportsNativeAudioTracks = function () {
                return !!(da.TEST_VID && da.TEST_VID.audioTracks)
            }; da.Events = [
                'loadstart',
                'suspend',
                'abort',
                'error',
                'emptied',
                'stalled',
                'loadedmetadata',
                'loadeddata',
                'canplay',
                'canplaythrough',
                'playing',
                'waiting',
                'seeking',
                'seeked',
                'ended',
                'durationchange',
                'timeupdate',
                'progress',
                'play',
                'pause',
                'ratechange',
                'resize',
                'volumechange'
            ]; da.prototype.featuresVolumeControl = da.canControlVolume(); da.prototype.featuresMuteControl = da.canMuteVolume(); da.prototype.featuresPlaybackRate = da.canControlPlaybackRate(); da.prototype.featuresSourceset = da.canOverrideAttributes(); da.prototype.movingMediaElementInDOM = !et; da.prototype.featuresFullscreenResize = true; da.prototype.featuresProgressEvents = true; da.prototype.featuresTimeupdateEvents = true; da.prototype.featuresNativeTextTracks = da.supportsNativeTextTracks(); da.prototype.featuresNativeVideoTracks = da.supportsNativeVideoTracks(); da.prototype.featuresNativeAudioTracks = da.supportsNativeAudioTracks(); var ha = da.TEST_VID && da.TEST_VID.constructor.prototype.canPlayType; var pa = /^application\/(?:x-|vnd\.apple\.)mpegurl/i; da.patchCanPlayType = function () {
                if (nt >= 4 && !at && !ot) {
                    da.TEST_VID.constructor.prototype.canPlayType = function (e) {
                        if (e && pa.test(e)) {
                            return 'maybe'
                        }
                        return ha.call(this, e)
                    }
                }
            }; da.unpatchCanPlayType = function () {
                var e = da.TEST_VID.constructor.prototype.canPlayType;
                da.TEST_VID.constructor.prototype.canPlayType = ha;
                return e
            }; da.patchCanPlayType(); da.disposeMediaElement = function (e) {
                if (!e) {
                    return
                }
                if (e.parentNode) {
                    e.parentNode.removeChild(e)
                }
                while (e.hasChildNodes()) {
                    e.removeChild(e.firstChild)
                }
                e.removeAttribute('src');
                if (typeof e.load === 'function') {
                    (function () {
                        try {
                            e.load()
                        } catch (e) {
                        }
                    })()
                }
            }; da.resetMediaElement = function (e) {
                if (!e) {
                    return
                }
                var t = e.querySelectorAll('source');
                var r = t.length;
                while (r--) {
                    e.removeChild(t[r])
                }
                e.removeAttribute('src');
                if (typeof e.load === 'function') {
                    (function () {
                        try {
                            e.load()
                        } catch (e) {
                        }
                    })()
                }
            };[
                'muted',
                'defaultMuted',
                'autoplay',
                'controls',
                'loop',
                'playsinline'
            ].forEach(function (e) {
                da.prototype[e] = function () {
                    return this.el_[e] || this.el_.hasAttribute(e)
                }
            });[
                'muted',
                'defaultMuted',
                'autoplay',
                'loop',
                'playsinline'
            ].forEach(function (e) {
                da.prototype['set' + ze(e)] = function (t) {
                    this.el_[e] = t;
                    if (t) {
                        this.el_.setAttribute(e, e)
                    } else {
                        this.el_.removeAttribute(e)
                    }
                }
            });[
                'paused',
                'currentTime',
                'buffered',
                'volume',
                'poster',
                'preload',
                'error',
                'seeking',
                'seekable',
                'ended',
                'playbackRate',
                'defaultPlaybackRate',
                'played',
                'networkState',
                'readyState',
                'videoWidth',
                'videoHeight'
            ].forEach(function (e) {
                da.prototype[e] = function () {
                    return this.el_[e]
                }
            });[
                'volume',
                'src',
                'poster',
                'preload',
                'playbackRate',
                'defaultPlaybackRate'
            ].forEach(function (e) {
                da.prototype['set' + ze(e)] = function (t) {
                    this.el_[e] = t
                }
            });[
                'pause',
                'load',
                'play'
            ].forEach(function (e) {
                da.prototype[e] = function () {
                    return this.el_[e]()
                }
            }); tn.withSourceHandlers(da); da.nativeSourceHandler = {
            }; da.nativeSourceHandler.canPlayType = function (e) {
                try {
                    return da.TEST_VID.canPlayType(e)
                } catch (e) {
                    return ''
                }
            }; da.nativeSourceHandler.canHandleSource = function (e, t) {
                if (e.type) {
                    return da.nativeSourceHandler.canPlayType(e.type)
                } else if (e.src) {
                    var r = tr(e.src);
                    return da.nativeSourceHandler.canPlayType('video/' + r)
                }
                return ''
            }; da.nativeSourceHandler.handleSource = function (e, t, r) {
                t.setSrc(e.src)
            }; da.nativeSourceHandler.dispose = function () {
            }; da.registerSourceHandler(da.nativeSourceHandler); tn.registerTech('Html5', da); function va() {
                var e = u(['\n        Using the tech directly can be dangerous. I hope you know what you\'re doing.\n        See https://github.com/videojs/video.js/issues/2617 for more info.\n      ']);
                va = function t() {
                    return e
                };
                return e
            }
            var ma = [
                'progress',
                'abort',
                'suspend',
                'emptied',
                'stalled',
                'loadedmetadata',
                'loadeddata',
                'timeupdate',
                'resize',
                'volumechange',
                'texttrackchange'
            ]; var ga = {
                canplay: 'CanPlay',
                canplaythrough: 'CanPlayThrough',
                playing: 'Playing',
                seeked: 'Seeked'
            }; var ya = [
                'tiny',
                'xsmall',
                'small',
                'medium',
                'large',
                'xlarge',
                'huge'
            ]; var _a = {
            }; ya.forEach(function (e) {
                var t = e.charAt(0) === 'x' ? 'x-' + e.substring(1) : e;
                _a[e] = 'vjs-layout-' + t
            }); var ba = {
                tiny: 210,
                xsmall: 320,
                small: 425,
                medium: 768,
                large: 1440,
                xlarge: 2560,
                huge: Infinity
            }; var Ta = function (i) {
                n(a, i);
                function a(e, t, n) {
                    var s;
                    e.id = e.id || t.id || 'vjs_video_' + ae();
                    t = b(a.getTagSettings(e), t);
                    t.initChildren = false;
                    t.createEl = false;
                    t.evented = false;
                    t.reportTouchActivity = false;
                    if (!t.language) {
                        if (typeof e.closest === 'function') {
                            var u = e.closest('[lang]');
                            if (u && u.getAttribute) {
                                t.language = u.getAttribute('lang')
                            }
                        } else {
                            var l = e;
                            while (l && l.nodeType === 1) {
                                if (q(l).hasOwnProperty('lang')) {
                                    t.language = l.getAttribute('lang');
                                    break
                                }
                                l = l.parentNode
                            }
                        }
                    }
                    s = i.call(this, null, t, n) || this;
                    s.log = h(s.id_);
                    s.isPosterFromTech_ = false;
                    s.queuedCallbacks_ = [
                    ];
                    s.isReady_ = false;
                    s.hasStarted_ = false;
                    s.userActive_ = false;
                    if (!s.options_ || !s.options_.techOrder || !s.options_.techOrder.length) {
                        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?')
                    }
                    s.tag = e;
                    s.tagAttributes = e && q(e);
                    s.language(s.options_.language);
                    if (t.languages) {
                        var c = {
                        };
                        Object.getOwnPropertyNames(t.languages).forEach(function (e) {
                            c[e.toLowerCase()] = t.languages[e]
                        });
                        s.languages_ = c
                    } else {
                        s.languages_ = a.prototype.options_.languages
                    }
                    s.cache_ = {
                    };
                    s.poster_ = t.poster || '';
                    s.controls_ = !!t.controls;
                    s.cache_.lastVolume = 1;
                    e.controls = false;
                    e.removeAttribute('controls');
                    if (e.hasAttribute('autoplay')) {
                        s.options_.autoplay = true
                    } else {
                        s.autoplay(s.options_.autoplay)
                    }
                    s.scrubbing_ = false;
                    s.el_ = s.createEl();
                    s.cache_.lastPlaybackRate = s.defaultPlaybackRate();
                    Fe(o(o(s)), {
                        eventBusKey: 'el_'
                    });
                    if (s.fluid_) {
                        s.on('playerreset', s.updateStyleEl_)
                    }
                    var d = We(s.options_);
                    if (t.plugins) {
                        var f = t.plugins;
                        Object.keys(f).forEach(function (e) {
                            if (typeof this[e] === 'function') {
                                this[e](f[e])
                            } else {
                                throw new Error('plugin "' + e + '" does not exist')
                            }
                        }, o(o(s)))
                    }
                    s.options_.playerOptions = d;
                    s.middleware_ = [
                    ];
                    s.initChildren();
                    s.isAudio(e.nodeName.toLowerCase() === 'audio');
                    if (s.controls()) {
                        s.addClass('vjs-controls-enabled')
                    } else {
                        s.addClass('vjs-controls-disabled')
                    }
                    s.el_.setAttribute('role', 'region');
                    if (s.isAudio()) {
                        s.el_.setAttribute('aria-label', s.localize('Audio Player'))
                    } else {
                        s.el_.setAttribute('aria-label', s.localize('Video Player'))
                    }
                    if (s.isAudio()) {
                        s.addClass('vjs-audio')
                    }
                    if (s.flexNotSupported_()) {
                        s.addClass('vjs-no-flex')
                    }
                    if (!et) {
                        s.addClass('vjs-workinghover')
                    }
                    a.players[s.id_] = o(o(s));
                    var p = r.split('.')[0];
                    s.addClass('vjs-v' + p);
                    s.userActive(true);
                    s.reportUserActivity();
                    s.one('play', s.listenForUserActivity_);
                    s.on('stageclick', s.handleStageClick_);
                    s.breakpoints(s.options_.breakpoints);
                    s.responsive(s.options_.responsive);
                    s.changingSrc_ = false;
                    s.playWaitingForReady_ = false;
                    s.playOnLoadstart_ = null;
                    return s
                }
                var s = a.prototype;
                s.dispose = function e() {
                    this.trigger('dispose');
                    this.off('dispose');
                    if (this.styleEl_ && this.styleEl_.parentNode) {
                        this.styleEl_.parentNode.removeChild(this.styleEl_);
                        this.styleEl_ = null
                    }
                    a.players[this.id_] = null;
                    if (this.tag && this.tag.player) {
                        this.tag.player = null
                    }
                    if (this.el_ && this.el_.player) {
                        this.el_.player = null
                    }
                    if (this.tech_) {
                        this.tech_.dispose();
                        this.isPosterFromTech_ = false;
                        this.poster_ = ''
                    }
                    if (this.playerElIngest_) {
                        this.playerElIngest_ = null
                    }
                    if (this.tag) {
                        this.tag = null
                    }
                    gn(this);
                    i.prototype.dispose.call(this)
                };
                s.createEl = function r() {
                    var n = this.tag;
                    var a;
                    var s = this.playerElIngest_ = n.parentNode && n.parentNode.hasAttribute && n.parentNode.hasAttribute('data-vjs-player');
                    var o = this.tag.tagName.toLowerCase() === 'video-js';
                    if (s) {
                        a = this.el_ = n.parentNode
                    } else if (!o) {
                        a = this.el_ = i.prototype.createEl.call(this, 'div')
                    }
                    var u = q(n);
                    if (o) {
                        a = this.el_ = n;
                        n = this.tag = t.createElement('video');
                        while (a.children.length) {
                            n.appendChild(a.firstChild)
                        }
                        if (!M(a, 'video-js')) {
                            j(a, 'video-js')
                        }
                        a.appendChild(n);
                        s = this.playerElIngest_ = a;
                        Object.keys(a).forEach(function (e) {
                            n[e] = a[e]
                        })
                    }
                    n.setAttribute('tabindex', '-1');
                    u.tabindex = '-1';
                    if (lt) {
                        n.setAttribute('role', 'application');
                        u.role = 'application'
                    }
                    n.removeAttribute('width');
                    n.removeAttribute('height');
                    if ('width' in u) {
                        delete u.width
                    }
                    if ('height' in u) {
                        delete u.height
                    }
                    Object.getOwnPropertyNames(u).forEach(function (e) {
                        if (!(o && e === 'class')) {
                            a.setAttribute(e, u[e])
                        }
                        if (o) {
                            n.setAttribute(e, u[e])
                        }
                    });
                    n.playerId = n.id;
                    n.id += '_html5_api';
                    n.className = 'vjs-tech';
                    n.player = a.player = this;
                    this.addClass('vjs-paused');
                    if (e.VIDEOJS_NO_DYNAMIC_STYLE !== true) {
                        this.styleEl_ = we('vjs-styles-dimensions');
                        var l = te('.vjs-styles-defaults');
                        var c = te('head');
                        c.insertBefore(this.styleEl_, l ? l.nextSibling : c.firstChild)
                    }
                    this.fill_ = false;
                    this.fluid_ = false;
                    this.width(this.options_.width);
                    this.height(this.options_.height);
                    this.fill(this.options_.fill);
                    this.fluid(this.options_.fluid);
                    this.aspectRatio(this.options_.aspectRatio);
                    var d = n.getElementsByTagName('a');
                    for (var f = 0; f < d.length; f++) {
                        var h = d.item(f);
                        j(h, 'vjs-hidden');
                        h.setAttribute('hidden', 'hidden')
                    }
                    n.initNetworkState_ = n.networkState;
                    if (n.parentNode && !s) {
                        n.parentNode.insertBefore(a, n)
                    }
                    R(n, a);
                    this.children_.unshift(n);
                    this.el_.setAttribute('lang', this.language_);
                    this.el_ = a;
                    return a
                };
                s.width = function e(t) {
                    return this.dimension('width', t)
                };
                s.height = function e(t) {
                    return this.dimension('height', t)
                };
                s.dimension = function e(t, r) {
                    var n = t + '_';
                    if (r === undefined) {
                        return this[n] || 0
                    }
                    if (r === '') {
                        this[n] = undefined;
                        this.updateStyleEl_();
                        return
                    }
                    var i = parseFloat(r);
                    if (isNaN(i)) {
                        f.error('Improper value "' + r + '" supplied for for ' + t);
                        return
                    }
                    this[n] = i;
                    this.updateStyleEl_()
                };
                s.fluid = function e(t) {
                    if (t === undefined) {
                        return !!this.fluid_
                    }
                    this.fluid_ = !!t;
                    if (Le(this)) {
                        this.off('playerreset', this.updateStyleEl_)
                    }
                    if (t) {
                        this.addClass('vjs-fluid');
                        this.fill(false);
                        De(function () {
                            this.on('playerreset', this.updateStyleEl_)
                        })
                    } else {
                        this.removeClass('vjs-fluid')
                    }
                    this.updateStyleEl_()
                };
                s.fill = function e(t) {
                    if (t === undefined) {
                        return !!this.fill_
                    }
                    this.fill_ = !!t;
                    if (t) {
                        this.addClass('vjs-fill');
                        this.fluid(false)
                    } else {
                        this.removeClass('vjs-fill')
                    }
                };
                s.aspectRatio = function e(t) {
                    if (t === undefined) {
                        return this.aspectRatio_
                    }
                    if (!/^\d+\:\d+$/.test(t)) {
                        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.')
                    }
                    this.aspectRatio_ = t;
                    this.fluid(true);
                    this.updateStyleEl_()
                };
                s.updateStyleEl_ = function t() {
                    if (e.VIDEOJS_NO_DYNAMIC_STYLE === true) {
                        var r = typeof this.width_ === 'number' ? this.width_ : this.options_.width;
                        var n = typeof this.height_ === 'number' ? this.height_ : this.options_.height;
                        var i = this.tech_ && this.tech_.el();
                        if (i) {
                            if (r >= 0) {
                                i.width = r
                            }
                            if (n >= 0) {
                                i.height = n
                            }
                        }
                        return
                    }
                    var a;
                    var s;
                    var o;
                    var u;
                    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {
                        o = this.aspectRatio_
                    } else if (this.videoWidth() > 0) {
                        o = this.videoWidth() + ':' + this.videoHeight()
                    } else {
                        o = '16:9'
                    }
                    var l = o.split(':');
                    var c = l[1] / l[0];
                    if (this.width_ !== undefined) {
                        a = this.width_
                    } else if (this.height_ !== undefined) {
                        a = this.height_ / c
                    } else {
                        a = this.videoWidth() || 300
                    }
                    if (this.height_ !== undefined) {
                        s = this.height_
                    } else {
                        s = a * c
                    }
                    if (/^[^a-zA-Z]/.test(this.id())) {
                        u = 'dimensions-' + this.id()
                    } else {
                        u = this.id() + '-dimensions'
                    }
                    this.addClass(u);
                    Ce(this.styleEl_, '\n      .' + u + ' {\n        width: ' + a + 'px;\n        height: ' + s + 'px;\n      }\n\n      .' + u + '.vjs-fluid {\n        padding-top: ' + c * 100 + '%;\n      }\n    ')
                };
                s.loadTech_ = function e(t, r) {
                    var n = this;
                    if (this.tech_) {
                        this.unloadTech_()
                    }
                    var i = ze(t);
                    var a = t.charAt(0).toLowerCase() + t.slice(1);
                    if (i !== 'Html5' && this.tag) {
                        tn.getTech('Html5').disposeMediaElement(this.tag);
                        this.tag.player = null;
                        this.tag = null
                    }
                    this.techName_ = i;
                    this.isReady_ = false;
                    var s = typeof this.autoplay() === 'string' ? false : this.autoplay();
                    var o = {
                        source: r,
                        autoplay: s,
                        nativeControlsForTouch: this.options_.nativeControlsForTouch,
                        playerId: this.id(),
                        techId: this.id() + '_' + a + '_api',
                        playsinline: this.options_.playsinline,
                        preload: this.options_.preload,
                        loop: this.options_.loop,
                        muted: this.options_.muted,
                        poster: this.poster(),
                        language: this.language(),
                        playerElIngest: this.playerElIngest_ || false,
                        'vtt.js': this.options_['vtt.js'],
                        canOverridePoster: !!this.options_.techCanOverridePoster,
                        enableSourceset: this.options_.enableSourceset
                    };
                    Jr.names.forEach(function (e) {
                        var t = Jr[e];
                        o[t.getterName] = n[t.privateName]
                    });
                    b(o, this.options_[i]);
                    b(o, this.options_[a]);
                    b(o, this.options_[t.toLowerCase()]);
                    if (this.tag) {
                        o.tag = this.tag
                    }
                    if (r && r.src === this.cache_.src && this.cache_.currentTime > 0) {
                        o.startTime = this.cache_.currentTime
                    }
                    var u = tn.getTech(t);
                    if (!u) {
                        throw new Error('No Tech named \'' + i + '\' exists! \'' + i + '\' should be registered using videojs.registerTech()\'')
                    }
                    this.tech_ = new u(o);
                    this.tech_.ready(Ee(this, this.handleTechReady_), true);
                    Mt.jsonToTextTracks(this.textTracksJson_ || [
                    ], this.tech_);
                    ma.forEach(function (e) {
                        n.on(n.tech_, e, n['handleTech' + ze(e) + '_'])
                    });
                    Object.keys(ga).forEach(function (e) {
                        n.on(n.tech_, e, function (t) {
                            if (n.tech_.playbackRate() === 0 && n.tech_.seeking()) {
                                n.queuedCallbacks_.push({
                                    callback: n['handleTech' + ga[e] + '_'].bind(n),
                                    event: t
                                });
                                return
                            }
                            n['handleTech' + ga[e] + '_'](t)
                        })
                    });
                    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);
                    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);
                    this.on(this.tech_, 'waiting', this.handleTechWaiting_);
                    this.on(this.tech_, 'ended', this.handleTechEnded_);
                    this.on(this.tech_, 'seeking', this.handleTechSeeking_);
                    this.on(this.tech_, 'play', this.handleTechPlay_);
                    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);
                    this.on(this.tech_, 'pause', this.handleTechPause_);
                    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);
                    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);
                    this.on(this.tech_, 'error', this.handleTechError_);
                    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);
                    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);
                    this.on(this.tech_, 'textdata', this.handleTechTextData_);
                    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);
                    this.usingNativeControls(this.techGet_('controls'));
                    if (this.controls() && !this.usingNativeControls()) {
                        this.addTechControlsListeners_()
                    }
                    if (this.tech_.el().parentNode !== this.el() && (i !== 'Html5' || !this.tag)) {
                        R(this.tech_.el(), this.el())
                    }
                    if (this.tag) {
                        this.tag.player = null;
                        this.tag = null
                    }
                };
                s.unloadTech_ = function e() {
                    var t = this;
                    Jr.names.forEach(function (e) {
                        var r = Jr[e];
                        t[r.privateName] = t[r.getterName]()
                    });
                    this.textTracksJson_ = Mt.textTracksToJson(this.tech_);
                    this.isReady_ = false;
                    this.tech_.dispose();
                    this.tech_ = false;
                    if (this.isPosterFromTech_) {
                        this.poster_ = '';
                        this.trigger('posterchange')
                    }
                    this.isPosterFromTech_ = false
                };
                s.tech = function e(t) {
                    if (t === undefined) {
                        f.warn(v(va()))
                    }
                    return this.tech_
                };
                s.addTechControlsListeners_ = function e() {
                    this.removeTechControlsListeners_();
                    this.on(this.tech_, 'mousedown', this.handleTechClick_);
                    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_);
                    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);
                    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);
                    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);
                    this.on(this.tech_, 'tap', this.handleTechTap_)
                };
                s.removeTechControlsListeners_ = function e() {
                    this.off(this.tech_, 'tap', this.handleTechTap_);
                    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);
                    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);
                    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);
                    this.off(this.tech_, 'mousedown', this.handleTechClick_);
                    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_)
                };
                s.handleTechReady_ = function e() {
                    this.triggerReady();
                    if (this.cache_.volume) {
                        this.techCall_('setVolume', this.cache_.volume)
                    }
                    this.handleTechPosterChange_();
                    this.handleTechDurationChange_()
                };
                s.handleTechLoadStart_ = function e() {
                    this.removeClass('vjs-ended');
                    this.removeClass('vjs-seeking');
                    this.error(null);
                    this.handleTechDurationChange_();
                    if (!this.paused()) {
                        this.trigger('loadstart');
                        this.trigger('firstplay')
                    } else {
                        this.hasStarted(false);
                        this.trigger('loadstart')
                    }
                    this.manualAutoplay_(this.autoplay())
                };
                s.manualAutoplay_ = function e(t) {
                    var r = this;
                    if (!this.tech_ || typeof t !== 'string') {
                        return
                    }
                    var n = function e() {
                        var t = r.muted();
                        r.muted(true);
                        var n = r.play();
                        if (!n || !n.then || !n.catch) {
                            return
                        }
                        return n.catch(function (e) {
                            r.muted(t)
                        })
                    };
                    var i;
                    if (t === 'any') {
                        i = this.play();
                        if (i && i.then && i.catch) {
                            i.catch(function () {
                                return n()
                            })
                        }
                    } else if (t === 'muted') {
                        i = n()
                    } else {
                        i = this.play()
                    }
                    if (!i || !i.then || !i.catch) {
                        return
                    }
                    return i.then(function () {
                        r.trigger({
                            type: 'autoplay-success',
                            autoplay: t
                        })
                    }).catch(function (e) {
                        r.trigger({
                            type: 'autoplay-failure',
                            autoplay: t
                        })
                    })
                };
                s.updateSourceCaches_ = function e(t) {
                    if (t === void 0) {
                        t = ''
                    }
                    var r = t;
                    var n = '';
                    if (typeof r !== 'string') {
                        r = t.src;
                        n = t.type
                    }
                    this.cache_.source = this.cache_.source || {
                    };
                    this.cache_.sources = this.cache_.sources || [
                    ];
                    if (r && !n) {
                        n = An(this, r)
                    }
                    this.cache_.source = We({
                    }, t, {
                        src: r,
                        type: n
                    });
                    var i = this.cache_.sources.filter(function (e) {
                        return e.src && e.src === r
                    });
                    var a = [
                    ];
                    var s = this.$$('source');
                    var o = [
                    ];
                    for (var u = 0; u < s.length; u++) {
                        var l = q(s[u]);
                        a.push(l);
                        if (l.src && l.src === r) {
                            o.push(l.src)
                        }
                    }
                    if (o.length && !i.length) {
                        this.cache_.sources = a
                    } else if (!i.length) {
                        this.cache_.sources = [
                            this.cache_.source
                        ]
                    }
                    this.cache_.src = r
                };
                s.handleTechSourceset_ = function e(t) {
                    var r = this;
                    if (!this.changingSrc_) {
                        var n = function e(t) {
                            return r.updateSourceCaches_(t)
                        };
                        var i = this.currentSource().src;
                        var a = t.src;
                        if (i && !/^blob:/.test(i) && /^blob:/.test(a)) {
                            if (!this.lastSource_ || this.lastSource_.tech !== a && this.lastSource_.player !== i) {
                                n = function e() {
                                }
                            }
                        }
                        n(a);
                        if (!t.src) {
                            var s = function e(t) {
                                if (t.type !== 'sourceset') {
                                    var n = r.techGet('currentSrc');
                                    r.lastSource_.tech = n;
                                    r.updateSourceCaches_(n)
                                }
                                r.tech_.off(['sourceset',
                                    'loadstart'], e)
                            };
                            this.tech_.one(['sourceset',
                                'loadstart'], s)
                        }
                    }
                    this.lastSource_ = {
                        player: this.currentSource().src,
                        tech: t.src
                    };
                    this.trigger({
                        src: t.src,
                        type: 'sourceset'
                    })
                };
                s.hasStarted = function e(t) {
                    if (t === undefined) {
                        return this.hasStarted_
                    }
                    if (t === this.hasStarted_) {
                        return
                    }
                    this.hasStarted_ = t;
                    if (this.hasStarted_) {
                        this.addClass('vjs-has-started');
                        this.trigger('firstplay')
                    } else {
                        this.removeClass('vjs-has-started')
                    }
                };
                s.handleTechPlay_ = function e() {
                    this.removeClass('vjs-ended');
                    this.removeClass('vjs-paused');
                    this.addClass('vjs-playing');
                    this.hasStarted(true);
                    this.trigger('play')
                };
                s.handleTechRateChange_ = function e() {
                    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {
                        this.queuedCallbacks_.forEach(function (e) {
                            return e.callback(e.event)
                        });
                        this.queuedCallbacks_ = [
                        ]
                    }
                    this.cache_.lastPlaybackRate = this.tech_.playbackRate();
                    this.trigger('ratechange')
                };
                s.handleTechWaiting_ = function e() {
                    var t = this;
                    this.addClass('vjs-waiting');
                    this.trigger('waiting');
                    var r = this.currentTime();
                    var n = function e() {
                        if (r !== t.currentTime()) {
                            t.removeClass('vjs-waiting');
                            t.off('timeupdate', e)
                        }
                    };
                    this.on('timeupdate', n)
                };
                s.handleTechCanPlay_ = function e() {
                    this.removeClass('vjs-waiting');
                    this.trigger('canplay')
                };
                s.handleTechCanPlayThrough_ = function e() {
                    this.removeClass('vjs-waiting');
                    this.trigger('canplaythrough')
                };
                s.handleTechPlaying_ = function e() {
                    this.removeClass('vjs-waiting');
                    this.trigger('playing')
                };
                s.handleTechSeeking_ = function e() {
                    this.addClass('vjs-seeking');
                    this.trigger('seeking')
                };
                s.handleTechSeeked_ = function e() {
                    this.removeClass('vjs-seeking');
                    this.removeClass('vjs-ended');
                    this.trigger('seeked')
                };
                s.handleTechFirstPlay_ = function e() {
                    if (this.options_.starttime) {
                        f.warn('Passing the `starttime` option to the player will be deprecated in 6.0');
                        this.currentTime(this.options_.starttime)
                    }
                    this.addClass('vjs-has-started');
                    this.trigger('firstplay')
                };
                s.handleTechPause_ = function e() {
                    this.removeClass('vjs-playing');
                    this.addClass('vjs-paused');
                    this.trigger('pause')
                };
                s.handleTechEnded_ = function e() {
                    this.addClass('vjs-ended');
                    if (this.options_.loop) {
                        this.currentTime(0);
                        this.play()
                    } else if (!this.paused()) {
                        this.pause()
                    }
                    this.trigger('ended')
                };
                s.handleTechDurationChange_ = function e() {
                    this.duration(this.techGet_('duration'))
                };
                s.handleTechClick_ = function e(t) {
                    if (!ee(t)) {
                        return
                    }
                    if (!this.controls_) {
                        return
                    }
                    if (this.paused()) {
                        xt(this.play())
                    } else {
                        this.pause()
                    }
                };
                s.handleTechDoubleClick_ = function e(t) {
                    if (!this.controls_) {
                        return
                    }
                    var r = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (e) {
                        return e.contains(t.target)
                    });
                    if (!r) {
                        if (this.isFullscreen()) {
                            this.exitFullscreen()
                        } else {
                            this.requestFullscreen()
                        }
                    }
                };
                s.handleTechTap_ = function e() {
                    this.userActive(!this.userActive())
                };
                s.handleTechTouchStart_ = function e() {
                    this.userWasActive = this.userActive()
                };
                s.handleTechTouchMove_ = function e() {
                    if (this.userWasActive) {
                        this.reportUserActivity()
                    }
                };
                s.handleTechTouchEnd_ = function e(t) {
                    t.preventDefault()
                };
                s.handleStageClick_ = function e() {
                    this.reportUserActivity()
                };
                s.toggleFullscreenClass_ = function e() {
                    if (this.isFullscreen()) {
                        this.addClass('vjs-fullscreen')
                    } else {
                        this.removeClass('vjs-fullscreen')
                    }
                };
                s.documentFullscreenChange_ = function e(r) {
                    var n = _t;
                    this.isFullscreen(t[n.fullscreenElement]);
                    if (this.isFullscreen() === false) {
                        ge(t, n.fullscreenchange, Ee(this, this.documentFullscreenChange_))
                    }
                    if (!St) {
                        this.trigger('fullscreenchange')
                    }
                };
                s.handleTechFullscreenChange_ = function e(t, r) {
                    if (r) {
                        this.isFullscreen(r.isFullscreen)
                    }
                    this.trigger('fullscreenchange')
                };
                s.handleTechError_ = function e() {
                    var t = this.tech_.error();
                    this.error(t)
                };
                s.handleTechTextData_ = function e() {
                    var t = null;
                    if (arguments.length > 1) {
                        t = arguments[1]
                    }
                    this.trigger('textdata', t)
                };
                s.getCache = function e() {
                    return this.cache_
                };
                s.techCall_ = function e(t, r) {
                    this.ready(function () {
                        if (t in hn) {
                            return cn(this.middleware_, this.tech_, t, r)
                        } else if (t in pn) {
                            return dn(this.middleware_, this.tech_, t, r)
                        }
                        try {
                            if (this.tech_) {
                                this.tech_[t](r)
                            }
                        } catch (e) {
                            f(e);
                            throw e
                        }
                    }, true)
                };
                s.techGet_ = function e(t) {
                    if (!this.tech_ || !this.tech_.isReady_) {
                        return
                    }
                    if (t in fn) {
                        return ln(this.middleware_, this.tech_, t)
                    } else if (t in pn) {
                        return dn(this.middleware_, this.tech_, t)
                    }
                    try {
                        return this.tech_[t]()
                    } catch (e) {
                        if (this.tech_[t] === undefined) {
                            f('Video.js: ' + t + ' method not defined for ' + this.techName_ + ' playback technology.', e);
                            throw e
                        }
                        if (e.name === 'TypeError') {
                            f('Video.js: ' + t + ' unavailable on ' + this.techName_ + ' playback technology element.', e);
                            this.tech_.isReady_ = false;
                            throw e
                        }
                        f(e);
                        throw e
                    }
                };
                s.play = function t() {
                    var r = this;
                    var n = this.options_.Promise || e.Promise;
                    if (n) {
                        return new n(function (e) {
                            r.play_(e)
                        })
                    }
                    return this.play_()
                };
                s.play_ = function e(t) {
                    var r = this;
                    if (t === void 0) {
                        t = xt
                    }
                    if (this.playOnLoadstart_) {
                        this.off('loadstart', this.playOnLoadstart_)
                    }
                    if (!this.isReady_) {
                        if (this.playWaitingForReady_) {
                            return
                        }
                        this.playWaitingForReady_ = true;
                        this.ready(function () {
                            r.playWaitingForReady_ = false;
                            t(r.play())
                        })
                    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {
                        t(this.techGet_('play'));
                        return
                    } else {
                        this.playOnLoadstart_ = function () {
                            r.playOnLoadstart_ = null;
                            t(r.play())
                        };
                        this.one('loadstart', this.playOnLoadstart_)
                    }
                };
                s.pause = function e() {
                    this.techCall_('pause')
                };
                s.paused = function e() {
                    return this.techGet_('paused') === false ? false : true
                };
                s.played = function e() {
                    return this.techGet_('played') || gt(0, 0)
                };
                s.scrubbing = function e(t) {
                    if (typeof t === 'undefined') {
                        return this.scrubbing_
                    }
                    this.scrubbing_ = !!t;
                    if (t) {
                        this.addClass('vjs-scrubbing')
                    } else {
                        this.removeClass('vjs-scrubbing')
                    }
                };
                s.currentTime = function e(t) {
                    if (typeof t !== 'undefined') {
                        if (t < 0) {
                            t = 0
                        }
                        this.techCall_('setCurrentTime', t);
                        return
                    }
                    this.cache_.currentTime = this.techGet_('currentTime') || 0;
                    return this.cache_.currentTime
                };
                s.duration = function e(t) {
                    if (t === undefined) {
                        return this.cache_.duration !== undefined ? this.cache_.duration : NaN
                    }
                    t = parseFloat(t);
                    if (t < 0) {
                        t = Infinity
                    }
                    if (t !== this.cache_.duration) {
                        this.cache_.duration = t;
                        if (t === Infinity) {
                            this.addClass('vjs-live');
                            if (this.options_.liveui && this.player_.liveTracker) {
                                this.addClass('vjs-liveui')
                            }
                        } else {
                            this.removeClass('vjs-live');
                            this.removeClass('vjs-liveui')
                        }
                        if (!isNaN(t)) {
                            this.trigger('durationchange')
                        }
                    }
                };
                s.remainingTime = function e() {
                    return this.duration() - this.currentTime()
                };
                s.remainingTimeDisplay = function e() {
                    return Math.floor(this.duration()) - Math.floor(this.currentTime())
                };
                s.buffered = function e() {
                    var e = this.techGet_('buffered');
                    if (!e || !e.length) {
                        e = gt(0, 0)
                    }
                    return e
                };
                s.bufferedPercent = function e() {
                    return yt(this.buffered(), this.duration())
                };
                s.bufferedEnd = function e() {
                    var t = this.buffered();
                    var r = this.duration();
                    var n = t.end(t.length - 1);
                    if (n > r) {
                        n = r
                    }
                    return n
                };
                s.volume = function e(t) {
                    var r;
                    if (t !== undefined) {
                        r = Math.max(0, Math.min(1, parseFloat(t)));
                        this.cache_.volume = r;
                        this.techCall_('setVolume', r);
                        if (r > 0) {
                            this.lastVolume_(r)
                        }
                        return
                    }
                    r = parseFloat(this.techGet_('volume'));
                    return isNaN(r) ? 1 : r
                };
                s.muted = function e(t) {
                    if (t !== undefined) {
                        this.techCall_('setMuted', t);
                        return
                    }
                    return this.techGet_('muted') || false
                };
                s.defaultMuted = function e(t) {
                    if (t !== undefined) {
                        return this.techCall_('setDefaultMuted', t)
                    }
                    return this.techGet_('defaultMuted') || false
                };
                s.lastVolume_ = function e(t) {
                    if (t !== undefined && t !== 0) {
                        this.cache_.lastVolume = t;
                        return
                    }
                    return this.cache_.lastVolume
                };
                s.supportsFullScreen = function e() {
                    return this.techGet_('supportsFullScreen') || false
                };
                s.isFullscreen = function e(t) {
                    if (t !== undefined) {
                        this.isFullscreen_ = !!t;
                        this.toggleFullscreenClass_();
                        return
                    }
                    return !!this.isFullscreen_
                };
                s.requestFullscreen = function e() {
                    var r = _t;
                    this.isFullscreen(true);
                    if (r.requestFullscreen) {
                        me(t, r.fullscreenchange, Ee(this, this.documentFullscreenChange_));
                        this.el_[r.requestFullscreen]()
                    } else if (this.tech_.supportsFullScreen()) {
                        this.techCall_('enterFullScreen')
                    } else {
                        this.enterFullWindow();
                        this.trigger('fullscreenchange')
                    }
                };
                s.exitFullscreen = function e() {
                    var r = _t;
                    this.isFullscreen(false);
                    if (r.requestFullscreen) {
                        t[r.exitFullscreen]()
                    } else if (this.tech_.supportsFullScreen()) {
                        this.techCall_('exitFullScreen')
                    } else {
                        this.exitFullWindow();
                        this.trigger('fullscreenchange')
                    }
                };
                s.enterFullWindow = function e() {
                    this.isFullWindow = true;
                    this.docOrigOverflow = t.documentElement.style.overflow;
                    me(t, 'keydown', Ee(this, this.fullWindowOnEscKey));
                    t.documentElement.style.overflow = 'hidden';
                    j(t.body, 'vjs-full-window');
                    this.trigger('enterFullWindow')
                };
                s.fullWindowOnEscKey = function e(t) {
                    if (t.keyCode === 27) {
                        if (this.isFullscreen() === true) {
                            this.exitFullscreen()
                        } else {
                            this.exitFullWindow()
                        }
                    }
                };
                s.exitFullWindow = function e() {
                    this.isFullWindow = false;
                    ge(t, 'keydown', this.fullWindowOnEscKey);
                    t.documentElement.style.overflow = this.docOrigOverflow;
                    U(t.body, 'vjs-full-window');
                    this.trigger('exitFullWindow')
                };
                s.canPlayType = function e(t) {
                    var r;
                    for (var n = 0, i = this.options_.techOrder; n < i.length; n++) {
                        var a = i[n];
                        var s = tn.getTech(a);
                        if (!s) {
                            s = Ye.getComponent(a)
                        }
                        if (!s) {
                            f.error('The "' + a + '" tech is undefined. Skipped browser support check for that tech.');
                            continue
                        }
                        if (s.isSupported()) {
                            r = s.canPlayType(t);
                            if (r) {
                                return r
                            }
                        }
                    }
                    return ''
                };
                s.selectSource = function e(t) {
                    var r = this;
                    var n = this.options_.techOrder.map(function (e) {
                        return [e,
                            tn.getTech(e)]
                    }).filter(function (e) {
                        var t = e[0],
                            r = e[1];
                        if (r) {
                            return r.isSupported()
                        }
                        f.error('The "' + t + '" tech is undefined. Skipped browser support check for that tech.');
                        return false
                    });
                    var i = function e(t, r, n) {
                        var i;
                        t.some(function (e) {
                            return r.some(function (t) {
                                i = n(e, t);
                                if (i) {
                                    return true
                                }
                            })
                        });
                        return i
                    };
                    var a;
                    var s = function e(t) {
                        return function (e, r) {
                            return t(r, e)
                        }
                    };
                    var o = function e(t, n) {
                        var i = t[0],
                            a = t[1];
                        if (a.canPlaySource(n, r.options_[i.toLowerCase()])) {
                            return {
                                source: n,
                                tech: i
                            }
                        }
                    };
                    if (this.options_.sourceOrder) {
                        a = i(t, n, s(o))
                    } else {
                        a = i(n, t, o)
                    }
                    return a || false
                };
                s.src = function e(t) {
                    var r = this;
                    if (typeof t === 'undefined') {
                        return this.cache_.src || ''
                    }
                    var n = Sn(t);
                    if (!n.length) {
                        this.setTimeout(function () {
                            this.error({
                                code: 4,
                                message: this.localize(this.options_.notSupportedMessage)
                            })
                        }, 0);
                        return
                    }
                    this.changingSrc_ = true;
                    this.cache_.sources = n;
                    this.updateSourceCaches_(n[0]);
                    on(this, n[0], function (e, t) {
                        r.middleware_ = t;
                        r.cache_.sources = n;
                        r.updateSourceCaches_(e);
                        var i = r.src_(e);
                        if (i) {
                            if (n.length > 1) {
                                return r.src(n.slice(1))
                            }
                            r.changingSrc_ = false;
                            r.setTimeout(function () {
                                this.error({
                                    code: 4,
                                    message: this.localize(this.options_.notSupportedMessage)
                                })
                            }, 0);
                            r.triggerReady();
                            return
                        }
                        un(t, r.tech_)
                    })
                };
                s.src_ = function e(t) {
                    var r = this;
                    var n = this.selectSource([t]);
                    if (!n) {
                        return true
                    }
                    if (!Ge(n.tech, this.techName_)) {
                        this.changingSrc_ = true;
                        this.loadTech_(n.tech, n.source);
                        this.tech_.ready(function () {
                            r.changingSrc_ = false
                        });
                        return false
                    }
                    this.ready(function () {
                        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {
                            this.techCall_('setSource', t)
                        } else {
                            this.techCall_('src', t.src)
                        }
                        this.changingSrc_ = false
                    }, true);
                    return false
                };
                s.load = function e() {
                    this.techCall_('load')
                };
                s.reset = function e() {
                    if (this.tech_) {
                        this.tech_.clearTracks('text')
                    }
                    this.loadTech_(this.options_.techOrder[0], null);
                    this.techCall_('reset');
                    if (Le(this)) {
                        this.trigger('playerreset')
                    }
                };
                s.currentSources = function e() {
                    var t = this.currentSource();
                    var r = [
                    ];
                    if (Object.keys(t).length !== 0) {
                        r.push(t)
                    }
                    return this.cache_.sources || r
                };
                s.currentSource = function e() {
                    return this.cache_.source || {
                    }
                };
                s.currentSrc = function e() {
                    return this.currentSource() && this.currentSource().src || ''
                };
                s.currentType = function e() {
                    return this.currentSource() && this.currentSource().type || ''
                };
                s.preload = function e(t) {
                    if (t !== undefined) {
                        this.techCall_('setPreload', t);
                        this.options_.preload = t;
                        return
                    }
                    return this.techGet_('preload')
                };
                s.autoplay = function e(t) {
                    if (t === undefined) {
                        return this.options_.autoplay || false
                    }
                    var r;
                    if (typeof t === 'string' && /(any|play|muted)/.test(t)) {
                        this.options_.autoplay = t;
                        this.manualAutoplay_(t);
                        r = false
                    } else if (!t) {
                        this.options_.autoplay = false
                    } else {
                        this.options_.autoplay = true
                    }
                    r = r || this.options_.autoplay;
                    if (this.tech_) {
                        this.techCall_('setAutoplay', r)
                    }
                };
                s.playsinline = function e(t) {
                    if (t !== undefined) {
                        this.techCall_('setPlaysinline', t);
                        this.options_.playsinline = t;
                        return this
                    }
                    return this.techGet_('playsinline')
                };
                s.loop = function e(t) {
                    if (t !== undefined) {
                        this.techCall_('setLoop', t);
                        this.options_.loop = t;
                        return
                    }
                    return this.techGet_('loop')
                };
                s.poster = function e(t) {
                    if (t === undefined) {
                        return this.poster_
                    }
                    if (!t) {
                        t = ''
                    }
                    if (t === this.poster_) {
                        return
                    }
                    this.poster_ = t;
                    this.techCall_('setPoster', t);
                    this.isPosterFromTech_ = false;
                    this.trigger('posterchange')
                };
                s.handleTechPosterChange_ = function e() {
                    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {
                        var t = this.tech_.poster() || '';
                        if (t !== this.poster_) {
                            this.poster_ = t;
                            this.isPosterFromTech_ = true;
                            this.trigger('posterchange')
                        }
                    }
                };
                s.controls = function e(t) {
                    if (t === undefined) {
                        return !!this.controls_
                    }
                    t = !!t;
                    if (this.controls_ === t) {
                        return
                    }
                    this.controls_ = t;
                    if (this.usingNativeControls()) {
                        this.techCall_('setControls', t)
                    }
                    if (this.controls_) {
                        this.removeClass('vjs-controls-disabled');
                        this.addClass('vjs-controls-enabled');
                        this.trigger('controlsenabled');
                        if (!this.usingNativeControls()) {
                            this.addTechControlsListeners_()
                        }
                    } else {
                        this.removeClass('vjs-controls-enabled');
                        this.addClass('vjs-controls-disabled');
                        this.trigger('controlsdisabled');
                        if (!this.usingNativeControls()) {
                            this.removeTechControlsListeners_()
                        }
                    }
                };
                s.usingNativeControls = function e(t) {
                    if (t === undefined) {
                        return !!this.usingNativeControls_
                    }
                    t = !!t;
                    if (this.usingNativeControls_ === t) {
                        return
                    }
                    this.usingNativeControls_ = t;
                    if (this.usingNativeControls_) {
                        this.addClass('vjs-using-native-controls');
                        this.trigger('usingnativecontrols')
                    } else {
                        this.removeClass('vjs-using-native-controls');
                        this.trigger('usingcustomcontrols')
                    }
                };
                s.error = function e(t) {
                    if (t === undefined) {
                        return this.error_ || null
                    }
                    if (t === null) {
                        this.error_ = t;
                        this.removeClass('vjs-error');
                        if (this.errorDisplay) {
                            this.errorDisplay.close()
                        }
                        return
                    }
                    this.error_ = new Ct(t);
                    this.addClass('vjs-error');
                    f.error('(CODE:' + this.error_.code + ' ' + Ct.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);
                    this.trigger('error');
                    return
                };
                s.reportUserActivity = function e(t) {
                    this.userActivity_ = true
                };
                s.userActive = function e(t) {
                    if (t === undefined) {
                        return this.userActive_
                    }
                    t = !!t;
                    if (t === this.userActive_) {
                        return
                    }
                    this.userActive_ = t;
                    if (this.userActive_) {
                        this.userActivity_ = true;
                        this.removeClass('vjs-user-inactive');
                        this.addClass('vjs-user-active');
                        this.trigger('useractive');
                        return
                    }
                    if (this.tech_) {
                        this.tech_.one('mousemove', function (e) {
                            e.stopPropagation();
                            e.preventDefault()
                        })
                    }
                    this.userActivity_ = false;
                    this.removeClass('vjs-user-active');
                    this.addClass('vjs-user-inactive');
                    this.trigger('userinactive')
                };
                s.listenForUserActivity_ = function e() {
                    var t;
                    var r;
                    var n;
                    var i = Ee(this, this.reportUserActivity);
                    var a = function e(t) {
                        if (t.screenX !== r || t.screenY !== n) {
                            r = t.screenX;
                            n = t.screenY;
                            i()
                        }
                    };
                    var s = function e() {
                        i();
                        this.clearInterval(t);
                        t = this.setInterval(i, 250)
                    };
                    var o = function e(r) {
                        i();
                        this.clearInterval(t)
                    };
                    this.on('mousedown', s);
                    this.on('mousemove', a);
                    this.on('mouseup', o);
                    var u = this.getChild('controlBar');
                    if (u) {
                        u.on('mouseenter', function (e) {
                            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;
                            this.player().options_.inactivityTimeout = 0
                        });
                        u.on('mouseleave', function (e) {
                            this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout
                        })
                    }
                    this.on('keydown', i);
                    this.on('keyup', i);
                    var l;
                    this.setInterval(function () {
                        if (!this.userActivity_) {
                            return
                        }
                        this.userActivity_ = false;
                        this.userActive(true);
                        this.clearTimeout(l);
                        var e = this.options_.inactivityTimeout;
                        if (e <= 0) {
                            return
                        }
                        l = this.setTimeout(function () {
                            if (!this.userActivity_) {
                                this.userActive(false)
                            }
                        }, e)
                    }, 250)
                };
                s.playbackRate = function e(t) {
                    if (t !== undefined) {
                        this.techCall_('setPlaybackRate', t);
                        return
                    }
                    if (this.tech_ && this.tech_.featuresPlaybackRate) {
                        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate')
                    }
                    return 1
                };
                s.defaultPlaybackRate = function e(t) {
                    if (t !== undefined) {
                        return this.techCall_('setDefaultPlaybackRate', t)
                    }
                    if (this.tech_ && this.tech_.featuresPlaybackRate) {
                        return this.techGet_('defaultPlaybackRate')
                    }
                    return 1
                };
                s.isAudio = function e(t) {
                    if (t !== undefined) {
                        this.isAudio_ = !!t;
                        return
                    }
                    return !!this.isAudio_
                };
                s.addTextTrack = function e(t, r, n) {
                    if (this.tech_) {
                        return this.tech_.addTextTrack(t, r, n)
                    }
                };
                s.addRemoteTextTrack = function e(t, r) {
                    if (this.tech_) {
                        return this.tech_.addRemoteTextTrack(t, r)
                    }
                };
                s.removeRemoteTextTrack = function e(t) {
                    if (t === void 0) {
                        t = {
                        }
                    }
                    var r = t,
                        n = r.track;
                    if (!n) {
                        n = t
                    }
                    if (this.tech_) {
                        return this.tech_.removeRemoteTextTrack(n)
                    }
                };
                s.getVideoPlaybackQuality = function e() {
                    return this.techGet_('getVideoPlaybackQuality')
                };
                s.videoWidth = function e() {
                    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0
                };
                s.videoHeight = function e() {
                    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0
                };
                s.language = function e(t) {
                    if (t === undefined) {
                        return this.language_
                    }
                    this.language_ = String(t).toLowerCase()
                };
                s.languages = function e() {
                    return We(a.prototype.options_.languages, this.languages_)
                };
                s.toJSON = function e() {
                    var t = We(this.options_);
                    var r = t.tracks;
                    t.tracks = [
                    ];
                    for (var n = 0; n < r.length; n++) {
                        var i = r[n];
                        i = We(i);
                        i.player = undefined;
                        t.tracks[n] = i
                    }
                    return t
                };
                s.createModal = function e(t, r) {
                    var n = this;
                    r = r || {
                    };
                    r.content = t || '';
                    var i = new Nt(this, r);
                    this.addChild(i);
                    i.on('dispose', function () {
                        n.removeChild(i)
                    });
                    i.open();
                    return i
                };
                s.updateCurrentBreakpoint_ = function e() {
                    if (!this.responsive()) {
                        return
                    }
                    var t = this.currentBreakpoint();
                    var r = this.currentWidth();
                    for (var n = 0; n < ya.length; n++) {
                        var i = ya[n];
                        var a = this.breakpoints_[i];
                        if (r <= a) {
                            if (t === i) {
                                return
                            }
                            if (t) {
                                this.removeClass(_a[t])
                            }
                            this.addClass(_a[i]);
                            this.breakpoint_ = i;
                            break
                        }
                    }
                };
                s.removeCurrentBreakpoint_ = function e() {
                    var t = this.currentBreakpointClass();
                    this.breakpoint_ = '';
                    if (t) {
                        this.removeClass(t)
                    }
                };
                s.breakpoints = function e(t) {
                    if (t === undefined) {
                        return b(this.breakpoints_)
                    }
                    this.breakpoint_ = '';
                    this.breakpoints_ = b({
                    }, ba, t);
                    this.updateCurrentBreakpoint_();
                    return b(this.breakpoints_)
                };
                s.responsive = function e(t) {
                    if (t === undefined) {
                        return this.responsive_
                    }
                    t = Boolean(t);
                    var r = this.responsive_;
                    if (t === r) {
                        return
                    }
                    this.responsive_ = t;
                    if (t) {
                        this.on('playerresize', this.updateCurrentBreakpoint_);
                        this.updateCurrentBreakpoint_()
                    } else {
                        this.off('playerresize', this.updateCurrentBreakpoint_);
                        this.removeCurrentBreakpoint_()
                    }
                    return t
                };
                s.currentBreakpoint = function e() {
                    return this.breakpoint_
                };
                s.currentBreakpointClass = function e() {
                    return _a[this.breakpoint_] || ''
                };
                a.getTagSettings = function e(t) {
                    var r = {
                        sources: [
                        ],
                        tracks: [
                        ]
                    };
                    var n = q(t);
                    var i = n['data-setup'];
                    if (M(t, 'vjs-fill')) {
                        n.fill = true
                    }
                    if (M(t, 'vjs-fluid')) {
                        n.fluid = true
                    }
                    if (i !== null) {
                        var a = It(i || '{}'),
                            s = a[0],
                            o = a[1];
                        if (s) {
                            f.error(s)
                        }
                        b(n, o)
                    }
                    b(r, n);
                    if (t.hasChildNodes()) {
                        var u = t.childNodes;
                        for (var l = 0, c = u.length; l < c; l++) {
                            var d = u[l];
                            var h = d.nodeName.toLowerCase();
                            if (h === 'source') {
                                r.sources.push(q(d))
                            } else if (h === 'track') {
                                r.tracks.push(q(d))
                            }
                        }
                    }
                    return r
                };
                s.flexNotSupported_ = function e() {
                    var r = t.createElement('i');
                    return !('flexBasis' in r.style || 'webkitFlexBasis' in r.style || 'mozFlexBasis' in r.style || 'msFlexBasis' in r.style || 'msFlexOrder' in r.style)
                };
                return a
            }(Ye); Jr.names.forEach(function (e) {
                var t = Jr[e];
                Ta.prototype[t.getterName] = function () {
                    if (this.tech_) {
                        return this.tech_[t.getterName]()
                    }
                    this[t.privateName] = this[t.privateName] || new t.ListClass;
                    return this[t.privateName]
                }
            }); Ta.players = {
            }; var Aa = e.navigator; Ta.prototype.options_ = {
                techOrder: tn.defaultTechOrder_,
                html5: {
                },
                flash: {
                },
                inactivityTimeout: 2000,
                playbackRates: [
                ],
                liveui: false,
                children: [
                    'mediaLoader',
                    'posterImage',
                    'textTrackDisplay',
                    'loadingSpinner',
                    'bigPlayButton',
                    'liveTracker',
                    'controlBar',
                    'errorDisplay',
                    'textTrackSettings',
                    'resizeManager'
                ],
                language: Aa && (Aa.languages && Aa.languages[0] || Aa.userLanguage || Aa.language) || 'en',
                languages: {
                },
                notSupportedMessage: 'No compatible source was found for this media.',
                breakpoints: {
                },
                responsive: false
            };[
                'ended',
                'seeking',
                'seekable',
                'networkState',
                'readyState'
            ].forEach(function (e) {
                Ta.prototype[e] = function () {
                    return this.techGet_(e)
                }
            }); ma.forEach(function (e) {
                Ta.prototype['handleTech' + ze(e) + '_'] = function () {
                    return this.trigger(e)
                }
            }); Ye.registerComponent('Player', Ta); var Sa = 'plugin'; var ka = 'activePlugins_'; var wa = {
            }; var Ca = function e(t) {
                return wa.hasOwnProperty(t)
            }; var Ea = function e(t) {
                return Ca(t) ? wa[t] : undefined
            }; var Ia = function e(t, r) {
                t[ka] = t[ka] || {
                };
                t[ka][r] = true
            }; var Pa = function e(t, r, n) {
                var i = (n ? 'before' : '') + 'pluginsetup';
                t.trigger(i, r);
                t.trigger(i + ':' + r.name, r)
            }; var Oa = function e(t, r) {
                var n = function e() {
                    Pa(this, {
                        name: t,
                        plugin: r,
                        instance: null
                    }, true);
                    var n = r.apply(this, arguments);
                    Ia(this, t);
                    Pa(this, {
                        name: t,
                        plugin: r,
                        instance: n
                    });
                    return n
                };
                Object.keys(r).forEach(function (e) {
                    n[e] = r[e]
                });
                return n
            }; var xa = function e(t, r) {
                r.prototype.name = t;
                return function () {
                    Pa(this, {
                        name: t,
                        plugin: r,
                        instance: null
                    }, true);
                    for (var e = arguments.length, n = new Array(e), i = 0; i < e; i++) {
                        n[i] = arguments[i]
                    }
                    var a = s(r, [
                        this
                    ].concat(n));
                    this[t] = function () {
                        return a
                    };
                    Pa(this, a.getEventHash());
                    return a
                }
            }; var La = function () {
                function e(t) {
                    if (this.constructor === e) {
                        throw new Error('Plugin must be sub-classed; not directly instantiated.')
                    }
                    this.player = t;
                    Fe(this);
                    delete this.trigger;
                    He(this, this.constructor.defaultState);
                    Ia(t, this.name);
                    this.dispose = Ee(this, this.dispose);
                    t.on('dispose', this.dispose)
                }
                var t = e.prototype;
                t.version = function e() {
                    return this.constructor.VERSION
                };
                t.getEventHash = function e(t) {
                    if (t === void 0) {
                        t = {
                        }
                    }
                    t.name = this.name;
                    t.plugin = this.constructor;
                    t.instance = this;
                    return t
                };
                t.trigger = function e(t, r) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    return ye(this.eventBusEl_, t, this.getEventHash(r))
                };
                t.handleStateChanged = function e(t) {
                };
                t.dispose = function e() {
                    var t = this.name,
                        r = this.player;
                    this.trigger('dispose');
                    this.off();
                    r.off('dispose', this.dispose);
                    r[ka][t] = false;
                    this.player = this.state = null;
                    r[t] = xa(t, wa[t])
                };
                e.isBasic = function t(r) {
                    var n = typeof r === 'string' ? Ea(r) : r;
                    return typeof n === 'function' && !e.prototype.isPrototypeOf(n.prototype)
                };
                e.registerPlugin = function t(r, n) {
                    if (typeof r !== 'string') {
                        throw new Error('Illegal plugin name, "' + r + '", must be a string, was ' + typeof r + '.')
                    }
                    if (Ca(r)) {
                        f.warn('A plugin named "' + r + '" already exists. You may want to avoid re-registering plugins!')
                    } else if (Ta.prototype.hasOwnProperty(r)) {
                        throw new Error('Illegal plugin name, "' + r + '", cannot share a name with an existing player method!')
                    }
                    if (typeof n !== 'function') {
                        throw new Error('Illegal plugin for "' + r + '", must be a function, was ' + typeof n + '.')
                    }
                    wa[r] = n;
                    if (r !== Sa) {
                        if (e.isBasic(n)) {
                            Ta.prototype[r] = Oa(r, n)
                        } else {
                            Ta.prototype[r] = xa(r, n)
                        }
                    }
                    return n
                };
                e.deregisterPlugin = function e(t) {
                    if (t === Sa) {
                        throw new Error('Cannot de-register base plugin.')
                    }
                    if (Ca(t)) {
                        delete wa[t];
                        delete Ta.prototype[t]
                    }
                };
                e.getPlugins = function e(t) {
                    if (t === void 0) {
                        t = Object.keys(wa)
                    }
                    var r;
                    t.forEach(function (e) {
                        var t = Ea(e);
                        if (t) {
                            r = r || {
                            };
                            r[e] = t
                        }
                    });
                    return r
                };
                e.getPluginVersion = function e(t) {
                    var r = Ea(t);
                    return r && r.VERSION || ''
                };
                return e
            }(); La.getPlugin = Ea; La.BASE_PLUGIN_NAME = Sa; La.registerPlugin(Sa, La); Ta.prototype.usingPlugin = function (e) {
                return !!this[ka] && this[ka][e] === true
            }; Ta.prototype.hasPlugin = function (e) {
                return !!Ca(e)
            }; var Da = function e(t, r) {
                if (typeof r !== 'function' && r !== null) {
                    throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
                }
                t.prototype = Object.create(r && r.prototype, {
                    constructor: {
                        value: t,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                if (r) {
                    t.super_ = r
                }
            }; var Ra = function e(t, r) {
                if (r === void 0) {
                    r = {
                    }
                }
                var n = function e() {
                    t.apply(this, arguments)
                };
                var i = {
                };
                if (typeof r === 'object') {
                    if (r.constructor !== Object.prototype.constructor) {
                        n = r.constructor
                    }
                    i = r
                } else if (typeof r === 'function') {
                    n = r
                }
                Da(n, t);
                for (var a in i) {
                    if (i.hasOwnProperty(a)) {
                        n.prototype[a] = i[a]
                    }
                }
                return n
            }; var Ma = function e(t) {
                return t.indexOf('#') === 0 ? t.slice(1) : t
            }; function ja(e, r, n) {
                var i = ja.getPlayer(e);
                if (i) {
                    if (r) {
                        f.warn('Player "' + e + '" is already initialised. Options will not be applied.')
                    }
                    if (n) {
                        i.ready(n)
                    }
                    return i
                }
                var a = typeof e === 'string' ? te('#' + Ma(e)) : e;
                if (!P(a)) {
                    throw new TypeError('The element or ID supplied is not valid. (videojs)')
                }
                if (!t.body.contains(a)) {
                    f.warn('The element supplied is not included in the DOM')
                }
                r = r || {
                };
                ja.hooks('beforesetup').forEach(function (e) {
                    var t = e(a, We(r));
                    if (!T(t) || Array.isArray(t)) {
                        f.error('please return an object in beforesetup hooks');
                        return
                    }
                    r = We(r, t)
                });
                var s = Ye.getComponent('Player');
                i = new s(a, r, n);
                ja.hooks('setup').forEach(function (e) {
                    return e(i)
                });
                return i
            }
            ja.hooks_ = {
            }; ja.hooks = function (e, t) {
                ja.hooks_[e] = ja.hooks_[e] || [
                ];
                if (t) {
                    ja.hooks_[e] = ja.hooks_[e].concat(t)
                }
                return ja.hooks_[e]
            }; ja.hook = function (e, t) {
                ja.hooks(e, t)
            }; ja.hookOnce = function (e, t) {
                ja.hooks(e, [
                ].concat(t).map(function (t) {
                    var r = function r() {
                        ja.removeHook(e, r);
                        return t.apply(void 0, arguments)
                    };
                    return r
                }))
            }; ja.removeHook = function (e, t) {
                var r = ja.hooks(e).indexOf(t);
                if (r <= - 1) {
                    return false
                }
                ja.hooks_[e] = ja.hooks_[e].slice();
                ja.hooks_[e].splice(r, 1);
                return true
            }; if (e.VIDEOJS_NO_DYNAMIC_STYLE !== true && I()) {
                var Ua = te('.vjs-styles-defaults');
                if (!Ua) {
                    Ua = we('vjs-styles-defaults');
                    var Na = te('head');
                    if (Na) {
                        Na.insertBefore(Ua, Na.firstChild)
                    }
                    Ce(Ua, '\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid {\n        padding-top: 56.25%\n      }\n    ')
                }
            }
            ke(1, ja); ja.VERSION = r; ja.options = Ta.prototype.options_; ja.getPlayers = function () {
                return Ta.players
            }; ja.getPlayer = function (e) {
                var t = Ta.players;
                var r;
                if (typeof e === 'string') {
                    var n = Ma(e);
                    var i = t[n];
                    if (i) {
                        return i
                    }
                    r = te('#' + n)
                } else {
                    r = e
                }
                if (P(r)) {
                    var a = r,
                        s = a.player,
                        o = a.playerId;
                    if (s || t[o]) {
                        return s || t[o]
                    }
                }
            }; ja.getAllPlayers = function () {
                return Object.keys(Ta.players).map(function (e) {
                    return Ta.players[e]
                }).filter(Boolean)
            }; ja.players = Ta.players; ja.getComponent = Ye.getComponent; ja.registerComponent = function (e, t) {
                if (tn.isTech(t)) {
                    f.warn('The ' + e + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)')
                }
                Ye.registerComponent.call(Ye, e, t)
            }; ja.getTech = tn.getTech; ja.registerTech = tn.registerTech; ja.use = sn; Object.defineProperty(ja, 'middleware', {
                value: {
                },
                writeable: false,
                enumerable: true
            }); Object.defineProperty(ja.middleware, 'TERMINATOR', {
                value: an,
                writeable: false,
                enumerable: true
            }); ja.browser = ht; ja.TOUCH_ENABLED = ft; ja.extend = Ra; ja.mergeOptions = We; ja.bind = Ee; ja.registerPlugin = La.registerPlugin; ja.deregisterPlugin = La.deregisterPlugin; ja.plugin = function (e, t) {
                f.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');
                return La.registerPlugin(e, t)
            }; ja.getPlugins = La.getPlugins; ja.getPlugin = La.getPlugin; ja.getPluginVersion = La.getPluginVersion; ja.addLanguage = function (e, t) {
                var r;
                e = ('' + e).toLowerCase();
                ja.options.languages = We(ja.options.languages, (r = {
                }, r[e] = t, r));
                return ja.options.languages[e]
            }; ja.log = f; ja.createLogger = h; ja.createTimeRange = ja.createTimeRanges = gt; ja.formatTime = Hn; ja.setFormatTime = Fn; ja.resetFormatTime = Vn; ja.parseUrl = Zt; ja.isCrossOrigin = rr; ja.EventTarget = Oe; ja.on = me; ja.one = _e; ja.off = ge; ja.trigger = ye; ja.xhr = Lr; ja.TextTrack = Vr; ja.AudioTrack = Hr; ja.VideoTrack = zr;[
                'isEl',
                'isTextNode',
                'createEl',
                'hasClass',
                'addClass',
                'removeClass',
                'toggleClass',
                'setAttributes',
                'getAttributes',
                'emptyEl',
                'appendContent',
                'insertContent'
            ].forEach(function (e) {
                ja[e] = function () {
                    f.warn('videojs.' + e + '() is deprecated; use videojs.dom.' + e + '() instead');
                    return ne[e].apply(null, arguments)
                }
            }); ja.computedStyle = S; ja.dom = ne; ja.url = nr; return ja
        });
        if (!iframe) {
            if (previousVideojs && previousVideojs.VERSION === window.videojs.VERSION) {
                window.videojs = previousVideojs
            } else if (window.bc) {
                (function (e) {
                    var t = Object.keys(e);
                    var r,
                        n,
                        i;
                    for (r = 0; r < t.length; r++) {
                        n = t[r];
                        i = e[n];
                        if (typeof i === 'function' && typeof i.videojs === 'function') {
                            if (i.videojs.VERSION === window.videojs.VERSION) {
                                window.videojs = i.videojs;
                                break
                            }
                        }
                    }
                })(window.bc)
            }
        }
        var videojs = window.videojs;
        videojs['default'] = videojs;
        (function (e, t) {
            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsLoscore = t(e.videojs)
        })(this, function (e) {
            'use strict';
            e = e && e.hasOwnProperty('default') ? e['default'] : e;
            var t = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
            };
            function r() {
                throw new Error('Dynamic requires are not currently supported by rollup-plugin-commonjs')
            }
            function n(e, t) {
                return t = {
                    exports: {
                    }
                },
                    e(t, t.exports),
                    t.exports
            }
            var i;
            if (typeof window !== 'undefined') {
                i = window
            } else if (typeof t !== 'undefined') {
                i = t
            } else if (typeof self !== 'undefined') {
                i = self
            } else {
                i = {
                }
            }
            var a = i;
            function s(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }
            var o = Array.isArray || function (e) {
                return Object.prototype.toString.call(e) === '[object Array]'
            };
            function u(e) {
                switch (typeof e) {
                    case 'string':
                        return e;
                    case 'boolean':
                        return e ? 'true' : 'false';
                    case 'number':
                        return isFinite(e) ? e : '';
                    default:
                        return ''
                }
            }
            function l(e, t, r, n) {
                t = t || '&';
                r = r || '=';
                if (e === null) {
                    e = undefined
                }
                if (typeof e === 'object') {
                    return c(d(e), function (n) {
                        var i = encodeURIComponent(u(n)) + r;
                        if (o(e[n])) {
                            return c(e[n], function (e) {
                                return i + encodeURIComponent(u(e))
                            }).join(t)
                        } else {
                            return i + encodeURIComponent(u(e[n]))
                        }
                    }).join(t)
                }
                if (!n) return '';
                return encodeURIComponent(u(n)) + r + encodeURIComponent(u(e))
            }
            function c(e, t) {
                if (e.map) return e.map(t);
                var r = [
                ];
                for (var n = 0; n < e.length; n++) {
                    r.push(t(e[n], n))
                }
                return r
            }
            var d = Object.keys || function (e) {
                var t = [
                ];
                for (var r in e) {
                    if (Object.prototype.hasOwnProperty.call(e, r)) t.push(r)
                }
                return t
            };
            function f(e, t, r, n) {
                t = t || '&';
                r = r || '=';
                var i = {
                };
                if (typeof e !== 'string' || e.length === 0) {
                    return i
                }
                var a = /\+/g;
                e = e.split(t);
                var u = 1000;
                if (n && typeof n.maxKeys === 'number') {
                    u = n.maxKeys
                }
                var l = e.length;
                if (u > 0 && l > u) {
                    l = u
                }
                for (var c = 0; c < l; ++c) {
                    var d = e[c].replace(a, '%20'),
                        f = d.indexOf(r),
                        h,
                        p,
                        v,
                        m;
                    if (f >= 0) {
                        h = d.substr(0, f);
                        p = d.substr(f + 1)
                    } else {
                        h = d;
                        p = ''
                    }
                    v = decodeURIComponent(h);
                    m = decodeURIComponent(p);
                    if (!s(i, v)) {
                        i[v] = m
                    } else if (o(i[v])) {
                        i[v].push(m)
                    } else {
                        i[v] = [
                            i[v],
                            m
                        ]
                    }
                }
                return i
            }
            var h = {
                encode: l,
                stringify: l,
                decode: f,
                parse: f
            };
            var p = n(function (e, n) {
                (function (t, r) {
                    e.exports = r()
                })(t, function () {
                    function e(e) {
                        var t = typeof e;
                        return e !== null && (t === 'object' || t === 'function')
                    }
                    function n(e) {
                        return typeof e === 'function'
                    }
                    var i = void 0;
                    if (Array.isArray) {
                        i = Array.isArray
                    } else {
                        i = function (e) {
                            return Object.prototype.toString.call(e) === '[object Array]'
                        }
                    }
                    var a = i;
                    var s = 0;
                    var o = void 0;
                    var u = void 0;
                    var l = function e(t, r) {
                        A[s] = t;
                        A[s + 1] = r;
                        s += 2;
                        if (s === 2) {
                            if (u) {
                                u(S)
                            } else {
                                w()
                            }
                        }
                    };
                    function c(e) {
                        u = e
                    }
                    function d(e) {
                        l = e
                    }
                    var f = typeof window !== 'undefined' ? window : undefined;
                    var h = f || {
                    };
                    var p = h.MutationObserver || h.WebKitMutationObserver;
                    var v = typeof self === 'undefined' && typeof process !== 'undefined' && {
                    }.toString.call(process) === '[object process]';
                    var m = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';
                    function g() {
                        return function () {
                            return process.nextTick(S)
                        }
                    }
                    function y() {
                        if (typeof o !== 'undefined') {
                            return function () {
                                o(S)
                            }
                        }
                        return T()
                    }
                    function _() {
                        var e = 0;
                        var t = new p(S);
                        var r = document.createTextNode('');
                        t.observe(r, {
                            characterData: true
                        });
                        return function () {
                            r.data = e = ++e % 2
                        }
                    }
                    function b() {
                        var e = new MessageChannel;
                        e.port1.onmessage = S;
                        return function () {
                            return e.port2.postMessage(0)
                        }
                    }
                    function T() {
                        var e = setTimeout;
                        return function () {
                            return e(S, 1)
                        }
                    }
                    var A = new Array(1000);
                    function S() {
                        for (var e = 0; e < s; e += 2) {
                            var t = A[e];
                            var r = A[e + 1];
                            t(r);
                            A[e] = undefined;
                            A[e + 1] = undefined
                        }
                        s = 0
                    }
                    function k() {
                        try {
                            var e = Function('return this')().require('vertx');
                            o = e.runOnLoop || e.runOnContext;
                            return y()
                        } catch (e) {
                            return T()
                        }
                    }
                    var w = void 0;
                    if (v) {
                        w = g()
                    } else if (p) {
                        w = _()
                    } else if (m) {
                        w = b()
                    } else if (f === undefined && typeof r === 'function') {
                        w = k()
                    } else {
                        w = T()
                    }
                    function C(e, t) {
                        var r = this;
                        var n = new this.constructor(P);
                        if (n[I] === undefined) {
                            J(n)
                        }
                        var i = r._state;
                        if (i) {
                            var a = arguments[i - 1];
                            l(function () {
                                return $(i, n, a, r._result)
                            })
                        } else {
                            G(r, n, e, t)
                        }
                        return n
                    }
                    function E(e) {
                        var t = this;
                        if (e && typeof e === 'object' && e.constructor === t) {
                            return e
                        }
                        var r = new t(P);
                        F(r, e);
                        return r
                    }
                    var I = Math.random().toString(36).substring(2);
                    function P() {
                    }
                    var O = void 0;
                    var x = 1;
                    var L = 2;
                    var D = {
                        error: null
                    };
                    function R() {
                        return new TypeError('You cannot resolve a promise with itself')
                    }
                    function M() {
                        return new TypeError('A promises callback cannot return that same promise.')
                    }
                    function j(e) {
                        try {
                            return e.then
                        } catch (e) {
                            D.error = e;
                            return D
                        }
                    }
                    function U(e, t, r, n) {
                        try {
                            e.call(t, r, n)
                        } catch (e) {
                            return e
                        }
                    }
                    function N(e, t, r) {
                        l(function (e) {
                            var n = false;
                            var i = U(r, t, function (r) {
                                if (n) {
                                    return
                                }
                                n = true;
                                if (t !== r) {
                                    F(e, r)
                                } else {
                                    H(e, r)
                                }
                            }, function (t) {
                                if (n) {
                                    return
                                }
                                n = true;
                                z(e, t)
                            }, 'Settle: ' + (e._label || ' unknown promise'));
                            if (!n && i) {
                                n = true;
                                z(e, i)
                            }
                        }, e)
                    }
                    function B(e, t) {
                        if (t._state === x) {
                            H(e, t._result)
                        } else if (t._state === L) {
                            z(e, t._result)
                        } else {
                            G(t, undefined, function (t) {
                                return F(e, t)
                            }, function (t) {
                                return z(e, t)
                            })
                        }
                    }
                    function q(e, t, r) {
                        if (t.constructor === e.constructor && r === C && t.constructor.resolve === E) {
                            B(e, t)
                        } else {
                            if (r === D) {
                                z(e, D.error);
                                D.error = null
                            } else if (r === undefined) {
                                H(e, t)
                            } else if (n(r)) {
                                N(e, t, r)
                            } else {
                                H(e, t)
                            }
                        }
                    }
                    function F(t, r) {
                        if (t === r) {
                            z(t, R())
                        } else if (e(r)) {
                            q(t, r, j(r))
                        } else {
                            H(t, r)
                        }
                    }
                    function V(e) {
                        if (e._onerror) {
                            e._onerror(e._result)
                        }
                        W(e)
                    }
                    function H(e, t) {
                        if (e._state !== O) {
                            return
                        }
                        e._result = t;
                        e._state = x;
                        if (e._subscribers.length !== 0) {
                            l(W, e)
                        }
                    }
                    function z(e, t) {
                        if (e._state !== O) {
                            return
                        }
                        e._state = L;
                        e._result = t;
                        l(V, e)
                    }
                    function G(e, t, r, n) {
                        var i = e._subscribers;
                        var a = i.length;
                        e._onerror = null;
                        i[a] = t;
                        i[a + x] = r;
                        i[a + L] = n;
                        if (a === 0 && e._state) {
                            l(W, e)
                        }
                    }
                    function W(e) {
                        var t = e._subscribers;
                        var r = e._state;
                        if (t.length === 0) {
                            return
                        }
                        var n = void 0,
                            i = void 0,
                            a = e._result;
                        for (var s = 0; s < t.length; s += 3) {
                            n = t[s];
                            i = t[s + r];
                            if (n) {
                                $(r, n, i, a)
                            } else {
                                i(a)
                            }
                        }
                        e._subscribers.length = 0
                    }
                    function Y(e, t) {
                        try {
                            return e(t)
                        } catch (e) {
                            D.error = e;
                            return D
                        }
                    }
                    function $(e, t, r, i) {
                        var a = n(r),
                            s = void 0,
                            o = void 0,
                            u = void 0,
                            l = void 0;
                        if (a) {
                            s = Y(r, i);
                            if (s === D) {
                                l = true;
                                o = s.error;
                                s.error = null
                            } else {
                                u = true
                            }
                            if (t === s) {
                                z(t, M());
                                return
                            }
                        } else {
                            s = i;
                            u = true
                        }
                        if (t._state !== O) {
                        } else if (a && u) {
                            F(t, s)
                        } else if (l) {
                            z(t, o)
                        } else if (e === x) {
                            H(t, s)
                        } else if (e === L) {
                            z(t, s)
                        }
                    }
                    function X(e, t) {
                        try {
                            t(function t(r) {
                                F(e, r)
                            }, function t(r) {
                                z(e, r)
                            })
                        } catch (t) {
                            z(e, t)
                        }
                    }
                    var K = 0;
                    function Q() {
                        return K++
                    }
                    function J(e) {
                        e[I] = K++;
                        e._state = undefined;
                        e._result = undefined;
                        e._subscribers = [
                        ]
                    }
                    function Z() {
                        return new Error('Array Methods must be provided an Array')
                    }
                    var ee = function () {
                        function e(e, t) {
                            this._instanceConstructor = e;
                            this.promise = new e(P);
                            if (!this.promise[I]) {
                                J(this.promise)
                            }
                            if (a(t)) {
                                this.length = t.length;
                                this._remaining = t.length;
                                this._result = new Array(this.length);
                                if (this.length === 0) {
                                    H(this.promise, this._result)
                                } else {
                                    this.length = this.length || 0;
                                    this._enumerate(t);
                                    if (this._remaining === 0) {
                                        H(this.promise, this._result)
                                    }
                                }
                            } else {
                                z(this.promise, Z())
                            }
                        }
                        e.prototype._enumerate = function e(t) {
                            for (var r = 0; this._state === O && r < t.length; r++) {
                                this._eachEntry(t[r], r)
                            }
                        };
                        e.prototype._eachEntry = function e(t, r) {
                            var n = this._instanceConstructor;
                            var i = n.resolve;
                            if (i === E) {
                                var a = j(t);
                                if (a === C && t._state !== O) {
                                    this._settledAt(t._state, r, t._result)
                                } else if (typeof a !== 'function') {
                                    this._remaining--;
                                    this._result[r] = t
                                } else if (n === se) {
                                    var s = new n(P);
                                    q(s, t, a);
                                    this._willSettleAt(s, r)
                                } else {
                                    this._willSettleAt(new n(function (e) {
                                        return e(t)
                                    }), r)
                                }
                            } else {
                                this._willSettleAt(i(t), r)
                            }
                        };
                        e.prototype._settledAt = function e(t, r, n) {
                            var i = this.promise;
                            if (i._state === O) {
                                this._remaining--;
                                if (t === L) {
                                    z(i, n)
                                } else {
                                    this._result[r] = n
                                }
                            }
                            if (this._remaining === 0) {
                                H(i, this._result)
                            }
                        };
                        e.prototype._willSettleAt = function e(t, r) {
                            var n = this;
                            G(t, undefined, function (e) {
                                return n._settledAt(x, r, e)
                            }, function (e) {
                                return n._settledAt(L, r, e)
                            })
                        };
                        return e
                    }();
                    function te(e) {
                        return new ee(this, e).promise
                    }
                    function re(e) {
                        var t = this;
                        if (!a(e)) {
                            return new t(function (e, t) {
                                return t(new TypeError('You must pass an array to race.'))
                            })
                        } else {
                            return new t(function (r, n) {
                                var i = e.length;
                                for (var a = 0; a < i; a++) {
                                    t.resolve(e[a]).then(r, n)
                                }
                            })
                        }
                    }
                    function ne(e) {
                        var t = this;
                        var r = new t(P);
                        z(r, e);
                        return r
                    }
                    function ie() {
                        throw new TypeError('You must pass a resolver function as the first argument to the promise constructor')
                    }
                    function ae() {
                        throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.')
                    }
                    var se = function () {
                        function e(t) {
                            this[I] = Q();
                            this._result = this._state = undefined;
                            this._subscribers = [
                            ];
                            if (P !== t) {
                                typeof t !== 'function' && ie();
                                this instanceof e ? X(this, t) : ae()
                            }
                        }
                        e.prototype.catch = function e(t) {
                            return this.then(null, t)
                        };
                        e.prototype.finally = function e(t) {
                            var r = this;
                            var n = r.constructor;
                            return r.then(function (e) {
                                return n.resolve(t()).then(function () {
                                    return e
                                })
                            }, function (e) {
                                return n.resolve(t()).then(function () {
                                    throw e
                                })
                            })
                        };
                        return e
                    }();
                    se.prototype.then = C;
                    se.all = te;
                    se.race = re;
                    se.resolve = E;
                    se.reject = ne;
                    se._setScheduler = c;
                    se._setAsap = d;
                    se._asap = l;
                    function oe() {
                        var e = void 0;
                        if (typeof t !== 'undefined') {
                            e = t
                        } else if (typeof self !== 'undefined') {
                            e = self
                        } else {
                            try {
                                e = Function('return this')()
                            } catch (e) {
                                throw new Error('polyfill failed because global object is unavailable in this environment')
                            }
                        }
                        var r = e.Promise;
                        if (r) {
                            var n = null;
                            try {
                                n = Object.prototype.toString.call(r.resolve())
                            } catch (e) {
                            }
                            if (n === '[object Promise]' && !r.cast) {
                                return
                            }
                        }
                        e.Promise = se
                    }
                    se.polyfill = oe;
                    se.Promise = se;
                    return se
                })
            });
            var v = '2.8.0';
            var m = {
                isArr: function e(t) {
                    return Array.isArray(t)
                },
                isFn: function e(t) {
                    return typeof t === 'function'
                },
                isNil: function e(t) {
                    return t === null || t === undefined
                },
                isNum: function e(t) {
                    return typeof t === 'number' && t === t
                },
                isNonEmptyStr: function e(t) {
                    return typeof t === 'string' && /\S/.test(t)
                },
                isObj: function e(t) {
                    return Object.prototype.toString.call(t) === '[object Object]'
                }
            };
            var g = a.performance;
            var y = {
            };
            [
                'memory',
                'navigation',
                'timing'
            ].forEach(function (e) {
                y[e] = g && g[e] || {
                }
            });
            [
                'clearMarks',
                'clearMeasures',
                'clearResourceTimings',
                'getEntries',
                'getEntriesByName',
                'getEntriesByType',
                'mark',
                'measure',
                'now',
                'setResourceTimingBufferSize',
                'toJSON'
            ].forEach(function (e) {
                y[e] = function () {
                    if (g && g[e]) {
                        return g[e].apply(g, arguments)
                    }
                }
            });
            var _ = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) {
                return typeof e
            }
                : function (e) {
                    return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e
                };
            var b = function () {
                var e = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 60103;
                return function t(r, n, i, a) {
                    var s = r && r.defaultProps;
                    var o = arguments.length - 3;
                    if (!n && o !== 0) {
                        n = {
                        }
                    }
                    if (n && s) {
                        for (var u in s) {
                            if (n[u] === void 0) {
                                n[u] = s[u]
                            }
                        }
                    } else if (!n) {
                        n = s || {
                        }
                    }
                    if (o === 1) {
                        n.children = a
                    } else if (o > 1) {
                        var l = Array(o);
                        for (var c = 0; c < o; c++) {
                            l[c] = arguments[c + 3]
                        }
                        n.children = l
                    }
                    return {
                        $$typeof: e,
                        type: r,
                        key: i === undefined ? null : '' + i,
                        ref: null,
                        props: n,
                        _owner: null
                    }
                }
            }();
            var T = function (e) {
                if (typeof Symbol === 'function') {
                    if (Symbol.asyncIterator) {
                        var t = e[Symbol.asyncIterator];
                        if (t != null) return t.call(e)
                    }
                    if (Symbol.iterator) {
                        return e[Symbol.iterator]()
                    }
                }
                throw new TypeError('Object is not async iterable')
            };
            var A = function () {
                function e(e) {
                    this.value = e
                }
                function t(t) {
                    var r,
                        n;
                    function i(e, t) {
                        return new Promise(function (i, s) {
                            var o = {
                                key: e,
                                arg: t,
                                resolve: i,
                                reject: s,
                                next: null
                            };
                            if (n) {
                                n = n.next = o
                            } else {
                                r = n = o;
                                a(e, t)
                            }
                        })
                    }
                    function a(r, n) {
                        try {
                            var i = t[r](n);
                            var o = i.value;
                            if (o instanceof e) {
                                Promise.resolve(o.value).then(function (e) {
                                    a('next', e)
                                }, function (e) {
                                    a('throw', e)
                                })
                            } else {
                                s(i.done ? 'return' : 'normal', i.value)
                            }
                        } catch (e) {
                            s('throw', e)
                        }
                    }
                    function s(e, t) {
                        switch (e) {
                            case 'return':
                                r.resolve({
                                    value: t,
                                    done: true
                                });
                                break;
                            case 'throw':
                                r.reject(t);
                                break;
                            default:
                                r.resolve({
                                    value: t,
                                    done: false
                                });
                                break
                        }
                        r = r.next;
                        if (r) {
                            a(r.key, r.arg)
                        } else {
                            n = null
                        }
                    }
                    this._invoke = i;
                    if (typeof t.return !== 'function') {
                        this.return = undefined
                    }
                }
                if (typeof Symbol === 'function' && Symbol.asyncIterator) {
                    t.prototype[Symbol.asyncIterator] = function () {
                        return this
                    }
                }
                t.prototype.next = function (e) {
                    return this._invoke('next', e)
                };
                t.prototype.throw = function (e) {
                    return this._invoke('throw', e)
                };
                t.prototype.return = function (e) {
                    return this._invoke('return', e)
                };
                return {
                    wrap: function (e) {
                        return function () {
                            return new t(e.apply(this, arguments))
                        }
                    },
                    await: function (t) {
                        return new e(t)
                    }
                }
            }();
            var S = function (e, t) {
                var r = {
                },
                    n = false;
                function i(r, i) {
                    n = true;
                    i = new Promise(function (t) {
                        t(e[r](i))
                    });
                    return {
                        done: false,
                        value: t(i)
                    }
                }
                if (typeof Symbol === 'function' && Symbol.iterator) {
                    r[Symbol.iterator] = function () {
                        return this
                    }
                }
                r.next = function (e) {
                    if (n) {
                        n = false;
                        return e
                    }
                    return i('next', e)
                };
                if (typeof e.throw === 'function') {
                    r.throw = function (e) {
                        if (n) {
                            n = false;
                            throw e
                        }
                        return i('throw', e)
                    }
                }
                if (typeof e.return === 'function') {
                    r.return = function (e) {
                        return i('return', e)
                    }
                }
                return r
            };
            var k = function (e) {
                return function () {
                    var t = e.apply(this, arguments);
                    return new Promise(function (e, r) {
                        function n(i, a) {
                            try {
                                var s = t[i](a);
                                var o = s.value
                            } catch (e) {
                                r(e);
                                return
                            }
                            if (s.done) {
                                e(o)
                            } else {
                                return Promise.resolve(o).then(function (e) {
                                    n('next', e)
                                }, function (e) {
                                    n('throw', e)
                                })
                            }
                        }
                        return n('next')
                    })
                }
            };
            var w = function (e, t) {
                if (!(e instanceof t)) {
                    throw new TypeError('Cannot call a class as a function')
                }
            };
            var C = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || false;
                        n.configurable = true;
                        if ('value' in n) n.writable = true;
                        Object.defineProperty(e, n.key, n)
                    }
                }
                return function (t, r, n) {
                    if (r) e(t.prototype, r);
                    if (n) e(t, n);
                    return t
                }
            }();
            var E = function (e, t) {
                for (var r in t) {
                    var n = t[r];
                    n.configurable = n.enumerable = true;
                    if ('value' in n) n.writable = true;
                    Object.defineProperty(e, r, n)
                }
                return e
            };
            var I = function (e, t) {
                var r = Object.getOwnPropertyNames(t);
                for (var n = 0; n < r.length; n++) {
                    var i = r[n];
                    var a = Object.getOwnPropertyDescriptor(t, i);
                    if (a && a.configurable && e[i] === undefined) {
                        Object.defineProperty(e, i, a)
                    }
                }
                return e
            };
            var P = function (e, t, r) {
                if (t in e) {
                    Object.defineProperty(e, t, {
                        value: r,
                        enumerable: true,
                        configurable: true,
                        writable: true
                    })
                } else {
                    e[t] = r
                }
                return e
            };
            var O = Object.assign || function (e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        if (Object.prototype.hasOwnProperty.call(r, n)) {
                            e[n] = r[n]
                        }
                    }
                }
                return e
            };
            var x = function e(t, r, n) {
                if (t === null) t = Function.prototype;
                var i = Object.getOwnPropertyDescriptor(t, r);
                if (i === undefined) {
                    var a = Object.getPrototypeOf(t);
                    if (a === null) {
                        return undefined
                    } else {
                        return e(a, r, n)
                    }
                } else if ('value' in i) {
                    return i.value
                } else {
                    var s = i.get;
                    if (s === undefined) {
                        return undefined
                    }
                    return s.call(n)
                }
            };
            var L = function (e, t) {
                if (typeof t !== 'function' && t !== null) {
                    throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
                }
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
            };
            var D = function (e, t) {
                if (t != null && typeof Symbol !== 'undefined' && t[Symbol.hasInstance]) {
                    return t[Symbol.hasInstance](e)
                } else {
                    return e instanceof t
                }
            };
            var R = function (e) {
                return e && e.__esModule ? e : {
                    default:
                        e
                }
            };
            var M = function (e) {
                if (e && e.__esModule) {
                    return e
                } else {
                    var t = {
                    };
                    if (e != null) {
                        for (var r in e) {
                            if (Object.prototype.hasOwnProperty.call(e, r)) t[r] = e[r]
                        }
                    }
                    t.default = e;
                    return t
                }
            };
            var j = function (e, t) {
                if (e !== t) {
                    throw new TypeError('Cannot instantiate an arrow function')
                }
            };
            var U = function (e) {
                if (e == null) throw new TypeError('Cannot destructure undefined')
            };
            var N = function (e, t) {
                var r = {
                };
                for (var n in e) {
                    if (t.indexOf(n) >= 0) continue;
                    if (!Object.prototype.hasOwnProperty.call(e, n)) continue;
                    r[n] = e[n]
                }
                return r
            };
            var B = function (e, t) {
                if (!e) {
                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                }
                return t && (typeof t === 'object' || typeof t === 'function') ? t : e
            };
            var q = typeof global === 'undefined' ? self : global;
            var F = function e(t, r, n, i) {
                var a = Object.getOwnPropertyDescriptor(t, r);
                if (a === undefined) {
                    var s = Object.getPrototypeOf(t);
                    if (s !== null) {
                        e(s, r, n, i)
                    }
                } else if ('value' in a && a.writable) {
                    a.value = n
                } else {
                    var o = a.set;
                    if (o !== undefined) {
                        o.call(i, n)
                    }
                }
                return n
            };
            var V = function () {
                function e(e, t) {
                    var r = [
                    ];
                    var n = true;
                    var i = false;
                    var a = undefined;
                    try {
                        for (var s = e[Symbol.iterator](), o; !(n = (o = s.next()).done); n = true) {
                            r.push(o.value);
                            if (t && r.length === t) break
                        }
                    } catch (e) {
                        i = true;
                        a = e
                    } finally {
                        try {
                            if (!n && s['return']) s['return']()
                        } finally {
                            if (i) throw a
                        }
                    }
                    return r
                }
                return function (t, r) {
                    if (Array.isArray(t)) {
                        return t
                    } else if (Symbol.iterator in Object(t)) {
                        return e(t, r)
                    } else {
                        throw new TypeError('Invalid attempt to destructure non-iterable instance')
                    }
                }
            }();
            var H = function (e, t) {
                if (Array.isArray(e)) {
                    return e
                } else if (Symbol.iterator in Object(e)) {
                    var r = [
                    ];
                    for (var n = e[Symbol.iterator](), i; !(i = n.next()).done;) {
                        r.push(i.value);
                        if (t && r.length === t) break
                    }
                    return r
                } else {
                    throw new TypeError('Invalid attempt to destructure non-iterable instance')
                }
            };
            var z = function (e, t) {
                return Object.freeze(Object.defineProperties(e, {
                    raw: {
                        value: Object.freeze(t)
                    }
                }))
            };
            var G = function (e, t) {
                e.raw = t;
                return e
            };
            var W = function (e, t, r) {
                if (e === r) {
                    throw new ReferenceError(t + ' is not defined - temporal dead zone')
                } else {
                    return e
                }
            };
            var Y = {
            };
            var $ = function (e) {
                return Array.isArray(e) ? e : Array.from(e)
            };
            var X = function (e) {
                if (Array.isArray(e)) {
                    for (var t = 0, r = Array(e.length); t < e.length; t++) r[t] = e[t];
                    return r
                } else {
                    return Array.from(e)
                }
            };
            var K = (Object.freeze || Object)({
                jsx: b,
                asyncIterator: T,
                asyncGenerator: A,
                asyncGeneratorDelegate: S,
                asyncToGenerator: k,
                classCallCheck: w,
                createClass: C,
                defineEnumerableProperties: E,
                defaults: I,
                defineProperty: P,
                get: x,
                inherits: L,
                interopRequireDefault: R,
                interopRequireWildcard: M,
                newArrowCheck: j,
                objectDestructuringEmpty: U,
                objectWithoutProperties: N,
                possibleConstructorReturn: B,
                selfGlobal: q,
                set: F,
                slicedToArray: V,
                slicedToArrayLoose: H,
                taggedTemplateLiteral: z,
                taggedTemplateLiteralLoose: G,
                temporalRef: W,
                temporalUndefined: Y,
                toArray: $,
                toConsumableArray: X,
                typeof: _,
                extends: O,
                instanceof: D
            });
            var Q = {
                perf: y,
                Promise: p,
                assign: function e() {
                    var t;
                    return (t = K).extends.apply(t, arguments)
                },
                withoutNilValues: function e(t) {
                    var r = t;
                    if (m.isArr(t)) {
                        r = t.filter(function (e) {
                            return !m.isNil(e)
                        }).map(Q.withoutNilValues)
                    } else if (m.isObj(t)) {
                        r = {
                        };
                        Object.keys(t).forEach(function (e) {
                            if (!m.isNil(t[e])) {
                                r[e] = Q.withoutNilValues(t[e])
                            }
                        })
                    }
                    return r
                },
                debounce: function e(t, r, n) {
                    var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : a;
                    var s = void 0;
                    return function () {
                        var e = this;
                        var a = arguments;
                        var o = function r() {
                            s = null;
                            o = null;
                            if (!n) {
                                t.apply(e, a)
                            }
                        };
                        if (!s && n) {
                            t.apply(e, a)
                        }
                        i.clearTimeout(s);
                        s = i.setTimeout(o, r)
                    }
                },
                throttle: function e(t, r) {
                    var n = Date.now();
                    return function () {
                        var e = Date.now();
                        if (e - n >= r) {
                            t.apply(undefined, arguments);
                            n = e
                        }
                    }
                },
                qs: function e() {
                    var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : a && a.location || {
                    };
                    return O({
                        hash: h.parse((t.hash || '#').substr(1)),
                        search: h.parse((t.search || '?').substr(1))
                    }, h)
                }
            };
            O(Q, m);
            Q.VERSION = v;
            if (e) {
                e.bc_ = Q
            }
            return Q
        });
        var _ = videojs.bc_;
        var usingAdBlocker;
        (function (e, t) {
            typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('global/document'), require('global/window'), require('video.js'), require('@brightcove/loscore')) : typeof define === 'function' && define.amd ? define(['global/document',
                'global/window',
                'video.js',
                '@brightcove/loscore'], t) : e.usingAdBlocker = t(e.document, e.window, e.videojs, e.videojs.bc_)
        })(this, function (e, t, r, n) {
            'use strict';
            e = e && e.hasOwnProperty('default') ? e['default'] : e;
            t = t && t.hasOwnProperty('default') ? t['default'] : t;
            r = r && r.hasOwnProperty('default') ? r['default'] : r;
            n = n && n.hasOwnProperty('default') ? n['default'] : n;
            var i = '1.1.1';
            var a = 3;
            var s = 50;
            var o = function n(i) {
                var o = e.body;
                var u = r.dom.createEl('div', {
                    className: 'pub_300x250 pub_300x250m pub_728x90 text-ad textAd text_ad text_ads text_ads_2 text-ads text-ad-links',
                    innerHTML: '&nbsp;'
                }, {
                    style: 'height:10px!important;font-size:20px;color:transparent;position:absolute;bottom:0;left:-10000px'
                });
                var l = 0;
                var c = function e() {
                    l++;
                    var r = u.offsetHeight === 0 || !o.contains(u) || u.style.display === 'none' || u.style.visibility === 'hidden';
                    if (r || l === a) {
                        if (u.parentNode) {
                            u.parentNode.removeChild(u)
                        }
                        return i(r)
                    }
                    t.setTimeout(e, s)
                };
                o.appendChild(u);
                c()
            };
            var u = null;
            var l;
            function c(t) {
                if (t || !l) {
                    l = new n.Promise(function (t) {
                        if (e.readyState === 'complete' || e.readyState !== 'loading' && !e.documentElement.doScroll) {
                            o(t)
                        } else {
                            e.addEventListener('DOMContentLoaded', function () {
                                o(t)
                            })
                        }
                    })
                }
                return l.then(function (e) {
                    u = e;
                    return e
                })
            }
            Object.defineProperties(c, {
                VERSION: {
                    enumerable: true,
                    value: i
                },
                lastResult: {
                    enumerable: true,
                    get: function e() {
                        return u
                    }
                },
                mightBe: {
                    enumerable: true,
                    get: function e() {
                        return u !== false
                    }
                },
                mightNotBe: {
                    enumerable: true,
                    get: function e() {
                        return u !== true
                    }
                }
            });
            return c
        });
        usingAdBlocker = window.usingAdBlocker;
        delete window.usingAdBlocker;
        _.perf.mark('bcAdBlockDetectStart');
        usingAdBlocker().then(function (e) {
            _.perf.mark('bcAdBlockDetectEnd');
            _.perf.measure('bcAdBlockDetect', 'bcAdBlockDetectStart', 'bcAdBlockDetectEnd')
        });
        if (!videojs.getTech('flash')) {
            (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsFlash = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                var t = '5.4.1';
                var r = '2.1.0';
                function n(e) {
                    e.streamingFormats = {
                        'rtmp/mp4': 'MP4',
                        'rtmp/flv': 'FLV'
                    };
                    e.streamFromParts = function (e, t) {
                        return e + '&' + t
                    };
                    e.streamToParts = function (e) {
                        var t = {
                            connection: '',
                            stream: ''
                        };
                        if (!e) {
                            return t
                        }
                        var r = e.search(/&(?!\w+=)/);
                        var n = void 0;
                        if (r !== - 1) {
                            n = r + 1
                        } else {
                            r = n = e.lastIndexOf('/') + 1;
                            if (r === 0) {
                                r = n = e.length
                            }
                        }
                        t.connection = e.substring(0, r);
                        t.stream = e.substring(n, e.length);
                        return t
                    };
                    e.isStreamingType = function (t) {
                        return t in e.streamingFormats
                    };
                    e.RTMP_RE = /^rtmp[set]?:\/\//i;
                    e.isStreamingSrc = function (t) {
                        return e.RTMP_RE.test(t)
                    };
                    e.rtmpSourceHandler = {
                    };
                    e.rtmpSourceHandler.canPlayType = function (t) {
                        if (e.isStreamingType(t)) {
                            return 'maybe'
                        }
                        return ''
                    };
                    e.rtmpSourceHandler.canHandleSource = function (t, r) {
                        var n = e.rtmpSourceHandler.canPlayType(t.type);
                        if (n) {
                            return n
                        }
                        if (e.isStreamingSrc(t.src)) {
                            return 'maybe'
                        }
                        return ''
                    };
                    e.rtmpSourceHandler.handleSource = function (t, r, n) {
                        var i = e.streamToParts(t.src);
                        r.setRtmpConnection(i.connection);
                        r.setRtmpStream(i.stream)
                    };
                    e.registerSourceHandler(e.rtmpSourceHandler);
                    return e
                }
                var i = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
                };
                var a;
                if (typeof window !== 'undefined') {
                    a = window
                } else if (typeof i !== 'undefined') {
                    a = i
                } else if (typeof self !== 'undefined') {
                    a = self
                } else {
                    a = {
                    }
                }
                var s = a;
                var o = function (e, t) {
                    if (!(e instanceof t)) {
                        throw new TypeError('Cannot call a class as a function')
                    }
                };
                var u = function (e, t) {
                    if (typeof t !== 'function' && t !== null) {
                        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
                    }
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                };
                var l = function (e, t) {
                    if (!e) {
                        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                    }
                    return t && (typeof t === 'object' || typeof t === 'function') ? t : e
                };
                var c = e.getComponent('Tech');
                var d = e.dom;
                var f = e.url;
                var h = e.createTimeRange;
                var p = e.mergeOptions;
                var v = s && s.navigator || {
                };
                var m = function (e) {
                    u(r, e);
                    function r(t, n) {
                        o(this, r);
                        var i = l(this, e.call(this, t, n));
                        if (t.source) {
                            i.ready(function () {
                                this.setSource(t.source)
                            }, true)
                        }
                        if (t.startTime) {
                            i.ready(function () {
                                this.load();
                                this.play();
                                this.currentTime(t.startTime)
                            }, true)
                        }
                        s.videojs = s.videojs || {
                        };
                        s.videojs.Flash = s.videojs.Flash || {
                        };
                        s.videojs.Flash.onReady = r.onReady;
                        s.videojs.Flash.onEvent = r.onEvent;
                        s.videojs.Flash.onError = r.onError;
                        i.on('seeked', function () {
                            this.lastSeekTarget_ = undefined
                        });
                        return i
                    }
                    r.prototype.createEl = function e() {
                        var n = this.options_;
                        if (!n.swf) {
                            n.swf = 'https://vjs.zencdn.net/swf/' + t + '/video-js.swf'
                        }
                        var i = n.techId;
                        var a = p({
                            readyFunction: 'videojs.Flash.onReady',
                            eventProxyFunction: 'videojs.Flash.onEvent',
                            errorEventProxyFunction: 'videojs.Flash.onError',
                            autoplay: n.autoplay,
                            preload: n.preload,
                            loop: n.loop,
                            muted: n.muted
                        }, n.flashVars);
                        var s = p({
                            wmode: 'opaque',
                            bgcolor: '#000000'
                        }, n.params);
                        var o = p({
                            id: i,
                            name: i,
                            class: 'vjs-tech'
                        }, n.attributes);
                        this.el_ = r.embed(n.swf, a, s, o);
                        this.el_.tech = this;
                        return this.el_
                    };
                    r.prototype.play = function e() {
                        if (this.ended()) {
                            this.setCurrentTime(0)
                        }
                        this.el_.vjs_play()
                    };
                    r.prototype.pause = function e() {
                        this.el_.vjs_pause()
                    };
                    r.prototype.src = function e(t) {
                        if (t === undefined) {
                            return this.currentSrc()
                        }
                        return this.setSrc(t)
                    };
                    r.prototype.setSrc = function e(t) {
                        var r = this;
                        t = f.getAbsoluteURL(t);
                        this.el_.vjs_src(t);
                        if (this.autoplay()) {
                            this.setTimeout(function () {
                                return r.play()
                            }, 0)
                        }
                    };
                    r.prototype.seeking = function e() {
                        return this.lastSeekTarget_ !== undefined
                    };
                    r.prototype.setCurrentTime = function t(r) {
                        var n = this.seekable();
                        if (n.length) {
                            r = r > n.start(0) ? r : n.start(0);
                            r = r < n.end(n.length - 1) ? r : n.end(n.length - 1);
                            this.lastSeekTarget_ = r;
                            this.trigger('seeking');
                            this.el_.vjs_setProperty('currentTime', r);
                            e.prototype.setCurrentTime.call(this)
                        }
                    };
                    r.prototype.currentTime = function e() {
                        if (this.seeking()) {
                            return this.lastSeekTarget_ || 0
                        }
                        return this.el_.vjs_getProperty('currentTime')
                    };
                    r.prototype.currentSrc = function e() {
                        if (this.currentSource_) {
                            return this.currentSource_.src
                        }
                        return this.el_.vjs_getProperty('currentSrc')
                    };
                    r.prototype.duration = function e() {
                        if (this.readyState() === 0) {
                            return NaN
                        }
                        var e = this.el_.vjs_getProperty('duration');
                        return e >= 0 ? e : Infinity
                    };
                    r.prototype.load = function e() {
                        this.el_.vjs_load()
                    };
                    r.prototype.poster = function e() {
                        this.el_.vjs_getProperty('poster')
                    };
                    r.prototype.setPoster = function e() {
                    };
                    r.prototype.seekable = function e() {
                        var t = this.duration();
                        if (t === 0) {
                            return h()
                        }
                        return h(0, t)
                    };
                    r.prototype.buffered = function e() {
                        var t = this.el_.vjs_getProperty('buffered');
                        if (t.length === 0) {
                            return h()
                        }
                        return h(t[0][0], t[0][1])
                    };
                    r.prototype.supportsFullScreen = function e() {
                        return false
                    };
                    r.prototype.enterFullScreen = function e() {
                        return false
                    };
                    r.prototype.getVideoPlaybackQuality = function e() {
                        var t = this.el_.vjs_getProperty('getVideoPlaybackQuality');
                        if (s.performance && typeof s.performance.now === 'function') {
                            t.creationTime = s.performance.now()
                        } else if (s.performance && s.performance.timing && typeof s.performance.timing.navigationStart === 'number') {
                            t.creationTime = s.Date.now() - s.performance.timing.navigationStart
                        }
                        return t
                    };
                    return r
                }(c);
                var g = [
                    'rtmpConnection',
                    'rtmpStream',
                    'preload',
                    'defaultPlaybackRate',
                    'playbackRate',
                    'autoplay',
                    'loop',
                    'controls',
                    'volume',
                    'muted',
                    'defaultMuted'
                ];
                var y = [
                    'networkState',
                    'readyState',
                    'initialTime',
                    'startOffsetTime',
                    'paused',
                    'ended',
                    'videoWidth',
                    'videoHeight'
                ];
                var _ = m.prototype;
                function b(e) {
                    var t = e.charAt(0).toUpperCase() + e.slice(1);
                    _['set' + t] = function (t) {
                        return this.el_.vjs_setProperty(e, t)
                    }
                }
                function T(e) {
                    _[e] = function () {
                        return this.el_.vjs_getProperty(e)
                    }
                }
                for (var A = 0; A < g.length; A++) {
                    T(g[A]);
                    b(g[A])
                }
                for (var S = 0; S < y.length; S++) {
                    T(y[S])
                }
                m.isSupported = function () {
                    if (e.browser.IS_CHROME && !e.browser.IS_ANDROID || e.browser.IS_SAFARI && !e.browser.IS_IOS) {
                        return true
                    }
                    return m.version()[0] >= 10
                };
                c.withSourceHandlers(m);
                m.nativeSourceHandler = {
                };
                m.nativeSourceHandler.canPlayType = function (e) {
                    if (e in m.formats) {
                        return 'maybe'
                    }
                    return ''
                };
                m.nativeSourceHandler.canHandleSource = function (e, t) {
                    var r = void 0;
                    function n(e) {
                        var t = f.getFileExtension(e);
                        if (t) {
                            return 'video/' + t
                        }
                        return ''
                    }
                    if (!e.type) {
                        r = n(e.src)
                    } else {
                        r = e.type.replace(/;.*/, '').toLowerCase()
                    }
                    return m.nativeSourceHandler.canPlayType(r)
                };
                m.nativeSourceHandler.handleSource = function (e, t, r) {
                    t.setSrc(e.src)
                };
                m.nativeSourceHandler.dispose = function () {
                };
                m.registerSourceHandler(m.nativeSourceHandler);
                m.formats = {
                    'video/flv': 'FLV',
                    'video/x-flv': 'FLV',
                    'video/mp4': 'MP4',
                    'video/m4v': 'MP4'
                };
                m.onReady = function (e) {
                    var t = d.$('#' + e);
                    var r = t && t.tech;
                    if (r && r.el()) {
                        m.checkReady(r)
                    }
                };
                m.checkReady = function (e) {
                    if (!e.el()) {
                        return
                    }
                    if (e.el().vjs_getProperty) {
                        e.triggerReady()
                    } else {
                        this.setTimeout(function () {
                            m.checkReady(e)
                        }, 50)
                    }
                };
                m.onEvent = function (e, t) {
                    var r = d.$('#' + e).tech;
                    var n = Array.prototype.slice.call(arguments, 2);
                    r.setTimeout(function () {
                        r.trigger(t, n)
                    }, 1)
                };
                m.onError = function (e, t) {
                    var r = d.$('#' + e).tech;
                    if (t === 'srcnotfound') {
                        return r.error(4)
                    }
                    if (typeof t === 'string') {
                        r.error('FLASH: ' + t)
                    } else {
                        t.origin = 'flash';
                        r.error(t)
                    }
                };
                m.version = function () {
                    var e = '0,0,0';
                    try {
                        e = new s.ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\D+/g, ',').match(/^,?(.+),?$/)[1]
                    } catch (t) {
                        try {
                            if (v.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {
                                e = (v.plugins['Shockwave Flash 2.0'] || v.plugins['Shockwave Flash']).description.replace(/\D+/g, ',').match(/^,?(.+),?$/)[1]
                            }
                        } catch (e) {
                        }
                    }
                    return e.split(',')
                };
                m.embed = function (e, t, r, n) {
                    var i = m.getEmbedCode(e, t, r, n);
                    var a = d.createEl('div', {
                        innerHTML: i
                    }).childNodes[0];
                    return a
                };
                m.getEmbedCode = function (e, t, r, n) {
                    var i = '<object type="application/x-shockwave-flash" ';
                    var a = '';
                    var s = '';
                    var o = '';
                    if (t) {
                        Object.getOwnPropertyNames(t).forEach(function (e) {
                            a += e + '=' + t[e] + '&amp;'
                        })
                    }
                    r = p({
                        movie: e,
                        flashvars: a,
                        allowScriptAccess: 'always',
                        allowNetworking: 'all'
                    }, r);
                    Object.getOwnPropertyNames(r).forEach(function (e) {
                        s += '<param name="' + e + '" value="' + r[e] + '" />'
                    });
                    n = p({
                        data: e,
                        width: '100%',
                        height: '100%'
                    }, n);
                    Object.getOwnPropertyNames(n).forEach(function (e) {
                        o += e + '="' + n[e] + '" '
                    });
                    return '' + i + o + '>' + s + '</object>'
                };
                n(m);
                if (c.getTech('Flash')) {
                    e.log.warn('Not using videojs-flash as it appears to already be registered');
                    e.log.warn('videojs-flash should only be used with video.js@6 and above')
                } else {
                    e.registerTech('Flash', m)
                }
                m.VERSION = r;
                return m
            })
        } (function (e, t) {
            typeof exports === 'object' && typeof module !== 'undefined' ? t(exports, require('global/window'), require('video.js')) : typeof define === 'function' && define.amd ? define(['exports',
                'global/window',
                'video.js'], t) : t(e.videojsFlashlsSourceHandler = {
                }, e.window, e.videojs)
        })(this, function (e, t, r) {
            'use strict';
            t = t && t.hasOwnProperty('default') ? t['default'] : t;
            r = r && r.hasOwnProperty('default') ? r['default'] : r;
            var n = function () {
                this.init = function () {
                    var e = {
                    };
                    this.on = function (t, r) {
                        if (!e[t]) {
                            e[t] = [
                            ]
                        }
                        e[t] = e[t].concat(r)
                    };
                    this.off = function (t, r) {
                        var n;
                        if (!e[t]) {
                            return false
                        }
                        n = e[t].indexOf(r);
                        e[t] = e[t].slice();
                        e[t].splice(n, 1);
                        return n > - 1
                    };
                    this.trigger = function (t) {
                        var r,
                            n,
                            i,
                            a;
                        r = e[t];
                        if (!r) {
                            return
                        }
                        if (arguments.length === 2) {
                            i = r.length;
                            for (n = 0; n < i; ++n) {
                                r[n].call(this, arguments[1])
                            }
                        } else {
                            a = [
                            ];
                            n = arguments.length;
                            for (n = 1; n < arguments.length; ++n) {
                                a.push(arguments[n])
                            }
                            i = r.length;
                            for (n = 0; n < i; ++n) {
                                r[n].apply(this, a)
                            }
                        }
                    };
                    this.dispose = function () {
                        e = {
                        }
                    }
                }
            };
            n.prototype.pipe = function (e) {
                this.on('data', function (t) {
                    e.push(t)
                });
                this.on('done', function (t) {
                    e.flush(t)
                });
                return e
            };
            n.prototype.push = function (e) {
                this.trigger('data', e)
            };
            n.prototype.flush = function (e) {
                this.trigger('done', e)
            };
            var i = n;
            var a = 4,
                s = 128;
            var o = function (e) {
                var t = 0,
                    r = {
                        payloadType: - 1,
                        payloadSize: 0
                    },
                    n = 0,
                    i = 0;
                while (t < e.byteLength) {
                    if (e[t] === s) {
                        break
                    }
                    while (e[t] === 255) {
                        n += 255;
                        t++
                    }
                    n += e[t++];
                    while (e[t] === 255) {
                        i += 255;
                        t++
                    }
                    i += e[t++];
                    if (!r.payload && n === a) {
                        r.payloadType = n;
                        r.payloadSize = i;
                        r.payload = e.subarray(t, t + i);
                        break
                    }
                    t += i;
                    n = 0;
                    i = 0
                }
                return r
            };
            var u = function (e) {
                if (e.payload[0] !== 181) {
                    return null
                }
                if ((e.payload[1] << 8 | e.payload[2]) !== 49) {
                    return null
                }
                if (String.fromCharCode(e.payload[3], e.payload[4], e.payload[5], e.payload[6]) !== 'GA94') {
                    return null
                }
                if (e.payload[7] !== 3) {
                    return null
                }
                return e.payload.subarray(8, e.payload.length - 1)
            };
            var l = function (e, t) {
                var r = [
                ],
                    n,
                    i,
                    a,
                    s;
                if (!(t[0] & 64)) {
                    return r
                }
                i = t[0] & 31;
                for (n = 0; n < i; n++) {
                    a = n * 3;
                    s = {
                        type: t[a + 2] & 3,
                        pts: e
                    };
                    if (t[a + 2] & 4) {
                        s.ccData = t[a + 3] << 8 | t[a + 4];
                        r.push(s)
                    }
                }
                return r
            };
            var c = function (e) {
                var t = e.byteLength,
                    r = [
                    ],
                    n = 1,
                    i,
                    a;
                while (n < t - 2) {
                    if (e[n] === 0 && e[n + 1] === 0 && e[n + 2] === 3) {
                        r.push(n + 2);
                        n += 2
                    } else {
                        n++
                    }
                }
                if (r.length === 0) {
                    return e
                }
                i = t - r.length;
                a = new Uint8Array(i);
                var s = 0;
                for (n = 0; n < i; s++, n++) {
                    if (s === r[0]) {
                        s++;
                        r.shift()
                    }
                    a[n] = e[s]
                }
                return a
            };
            var d = {
                parseSei: o,
                parseUserData: u,
                parseCaptionPackets: l,
                discardEmulationPreventionBytes: c,
                USER_DATA_REGISTERED_ITU_T_T35: a
            };
            var f = function () {
                f.prototype.init.call(this);
                this.captionPackets_ = [
                ];
                this.ccStreams_ = [
                    new y(0, 0),
                    new y(0, 1),
                    new y(1, 0),
                    new y(1, 1)
                ];
                this.reset();
                this.ccStreams_.forEach(function (e) {
                    e.on('data', this.trigger.bind(this, 'data'));
                    e.on('done', this.trigger.bind(this, 'done'))
                }, this)
            };
            f.prototype = new i;
            f.prototype.push = function (e) {
                var t,
                    r,
                    n;
                if (e.nalUnitType !== 'sei_rbsp') {
                    return
                }
                t = d.parseSei(e.escapedRBSP);
                if (t.payloadType !== d.USER_DATA_REGISTERED_ITU_T_T35) {
                    return
                }
                r = d.parseUserData(t);
                if (!r) {
                    return
                }
                if (e.dts < this.latestDts_) {
                    this.ignoreNextEqualDts_ = true;
                    return
                } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                    this.numSameDts_--;
                    if (!this.numSameDts_) {
                        this.ignoreNextEqualDts_ = false
                    }
                    return
                }
                n = d.parseCaptionPackets(e.pts, r);
                this.captionPackets_ = this.captionPackets_.concat(n);
                if (this.latestDts_ !== e.dts) {
                    this.numSameDts_ = 0
                }
                this.numSameDts_++;
                this.latestDts_ = e.dts
            };
            f.prototype.flush = function () {
                if (!this.captionPackets_.length) {
                    this.ccStreams_.forEach(function (e) {
                        e.flush()
                    }, this);
                    return
                }
                this.captionPackets_.forEach(function (e, t) {
                    e.presortIndex = t
                });
                this.captionPackets_.sort(function (e, t) {
                    if (e.pts === t.pts) {
                        return e.presortIndex - t.presortIndex
                    }
                    return e.pts - t.pts
                });
                this.captionPackets_.forEach(function (e) {
                    if (e.type < 2) {
                        this.dispatchCea608Packet(e)
                    }
                }, this);
                this.captionPackets_.length = 0;
                this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this);
                return
            };
            f.prototype.reset = function () {
                this.latestDts_ = null;
                this.ignoreNextEqualDts_ = false;
                this.numSameDts_ = 0;
                this.activeCea608Channel_ = [
                    null,
                    null
                ];
                this.ccStreams_.forEach(function (e) {
                    e.reset()
                })
            };
            f.prototype.dispatchCea608Packet = function (e) {
                if (this.setsChannel1Active(e)) {
                    this.activeCea608Channel_[e.type] = 0
                } else if (this.setsChannel2Active(e)) {
                    this.activeCea608Channel_[e.type] = 1
                }
                if (this.activeCea608Channel_[e.type] === null) {
                    return
                }
                this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
            };
            f.prototype.setsChannel1Active = function (e) {
                return (e.ccData & 30720) === 4096
            };
            f.prototype.setsChannel2Active = function (e) {
                return (e.ccData & 30720) === 6144
            };
            var h = {
                42: 225,
                92: 233,
                94: 237,
                95: 243,
                96: 250,
                123: 231,
                124: 247,
                125: 209,
                126: 241,
                127: 9608,
                304: 174,
                305: 176,
                306: 189,
                307: 191,
                308: 8482,
                309: 162,
                310: 163,
                311: 9834,
                312: 224,
                313: 160,
                314: 232,
                315: 226,
                316: 234,
                317: 238,
                318: 244,
                319: 251,
                544: 193,
                545: 201,
                546: 211,
                547: 218,
                548: 220,
                549: 252,
                550: 8216,
                551: 161,
                552: 42,
                553: 39,
                554: 8212,
                555: 169,
                556: 8480,
                557: 8226,
                558: 8220,
                559: 8221,
                560: 192,
                561: 194,
                562: 199,
                563: 200,
                564: 202,
                565: 203,
                566: 235,
                567: 206,
                568: 207,
                569: 239,
                570: 212,
                571: 217,
                572: 249,
                573: 219,
                574: 171,
                575: 187,
                800: 195,
                801: 227,
                802: 205,
                803: 204,
                804: 236,
                805: 210,
                806: 242,
                807: 213,
                808: 245,
                809: 123,
                810: 125,
                811: 92,
                812: 94,
                813: 95,
                814: 124,
                815: 126,
                816: 196,
                817: 228,
                818: 214,
                819: 246,
                820: 223,
                821: 165,
                822: 164,
                823: 9474,
                824: 197,
                825: 229,
                826: 216,
                827: 248,
                828: 9484,
                829: 9488,
                830: 9492,
                831: 9496
            };
            var p = function (e) {
                if (e === null) {
                    return ''
                }
                e = h[e] || e;
                return String.fromCharCode(e)
            };
            var v = 14;
            var m = [
                4352,
                4384,
                4608,
                4640,
                5376,
                5408,
                5632,
                5664,
                5888,
                5920,
                4096,
                4864,
                4896,
                5120,
                5152
            ];
            var g = function () {
                var e = [
                ],
                    t = v + 1;
                while (t--) {
                    e.push('')
                }
                return e
            };
            var y = function (e, t) {
                y.prototype.init.call(this);
                this.field_ = e || 0;
                this.dataChannel_ = t || 0;
                this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);
                this.setConstants();
                this.reset();
                this.push = function (e) {
                    var t,
                        r,
                        n,
                        i,
                        a;
                    t = e.ccData & 32639;
                    if (t === this.lastControlCode_) {
                        this.lastControlCode_ = null;
                        return
                    }
                    if ((t & 61440) === 4096) {
                        this.lastControlCode_ = t
                    } else if (t !== this.PADDING_) {
                        this.lastControlCode_ = null
                    }
                    n = t >>> 8;
                    i = t & 255;
                    if (t === this.PADDING_) {
                        return
                    } else if (t === this.RESUME_CAPTION_LOADING_) {
                        this.mode_ = 'popOn'
                    } else if (t === this.END_OF_CAPTION_) {
                        this.mode_ = 'popOn';
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        r = this.displayed_;
                        this.displayed_ = this.nonDisplayed_;
                        this.nonDisplayed_ = r;
                        this.startPts_ = e.pts
                    } else if (t === this.ROLL_UP_2_ROWS_) {
                        this.rollUpRows_ = 2;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_3_ROWS_) {
                        this.rollUpRows_ = 3;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_4_ROWS_) {
                        this.rollUpRows_ = 4;
                        this.setRollUp(e.pts)
                    } else if (t === this.CARRIAGE_RETURN_) {
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        this.shiftRowsUp_();
                        this.startPts_ = e.pts
                    } else if (t === this.BACKSPACE_) {
                        if (this.mode_ === 'popOn') {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                        }
                    } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                        this.flushDisplayed(e.pts);
                        this.displayed_ = g()
                    } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                        this.nonDisplayed_ = g()
                    } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                        if (this.mode_ !== 'paintOn') {
                            this.flushDisplayed(e.pts);
                            this.displayed_ = g()
                        }
                        this.mode_ = 'paintOn';
                        this.startPts_ = e.pts
                    } else if (this.isSpecialCharacter(n, i)) {
                        n = (n & 3) << 8;
                        a = p(n | i);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isExtCharacter(n, i)) {
                        if (this.mode_ === 'popOn') {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                        }
                        n = (n & 3) << 8;
                        a = p(n | i);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isMidRowCode(n, i)) {
                        this.clearFormatting(e.pts);
                        this[this.mode_](e.pts, ' ');
                        this.column_++;
                        if ((i & 14) === 14) {
                            this.addFormatting(e.pts, [
                                'i'
                            ])
                        }
                        if ((i & 1) === 1) {
                            this.addFormatting(e.pts, [
                                'u'
                            ])
                        }
                    } else if (this.isOffsetControlCode(n, i)) {
                        this.column_ += i & 3
                    } else if (this.isPAC(n, i)) {
                        var s = m.indexOf(t & 7968);
                        if (this.mode_ === 'rollUp') {
                            this.setRollUp(e.pts, s)
                        }
                        if (s !== this.row_) {
                            this.clearFormatting(e.pts);
                            this.row_ = s
                        }
                        if (i & 1 && this.formatting_.indexOf('u') === - 1) {
                            this.addFormatting(e.pts, [
                                'u'
                            ])
                        }
                        if ((t & 16) === 16) {
                            this.column_ = ((t & 14) >> 1) * 4
                        }
                        if (this.isColorPAC(i)) {
                            if ((i & 14) === 14) {
                                this.addFormatting(e.pts, [
                                    'i'
                                ])
                            }
                        }
                    } else if (this.isNormalChar(n)) {
                        if (i === 0) {
                            i = null
                        }
                        a = p(n);
                        a += p(i);
                        this[this.mode_](e.pts, a);
                        this.column_ += a.length
                    }
                }
            };
            y.prototype = new i;
            y.prototype.flushDisplayed = function (e) {
                var t = this.displayed_.map(function (e) {
                    return e.trim()
                }).join('\n').replace(/^\n+|\n+$/g, '');
                if (t.length) {
                    this.trigger('data', {
                        startPts: this.startPts_,
                        endPts: e,
                        text: t,
                        stream: this.name_
                    })
                }
            };
            y.prototype.reset = function () {
                this.mode_ = 'popOn';
                this.topRow_ = 0;
                this.startPts_ = 0;
                this.displayed_ = g();
                this.nonDisplayed_ = g();
                this.lastControlCode_ = null;
                this.column_ = 0;
                this.row_ = v;
                this.rollUpRows_ = 2;
                this.formatting_ = [
                ]
            };
            y.prototype.setConstants = function () {
                if (this.dataChannel_ === 0) {
                    this.BASE_ = 16;
                    this.EXT_ = 17;
                    this.CONTROL_ = (20 | this.field_) << 8;
                    this.OFFSET_ = 23
                } else if (this.dataChannel_ === 1) {
                    this.BASE_ = 24;
                    this.EXT_ = 25;
                    this.CONTROL_ = (28 | this.field_) << 8;
                    this.OFFSET_ = 31
                }
                this.PADDING_ = 0;
                this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                this.BACKSPACE_ = this.CONTROL_ | 33;
                this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
            };
            y.prototype.isSpecialCharacter = function (e, t) {
                return e === this.EXT_ && t >= 48 && t <= 63
            };
            y.prototype.isExtCharacter = function (e, t) {
                return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && (t >= 32 && t <= 63)
            };
            y.prototype.isMidRowCode = function (e, t) {
                return e === this.EXT_ && (t >= 32 && t <= 47)
            };
            y.prototype.isOffsetControlCode = function (e, t) {
                return e === this.OFFSET_ && (t >= 33 && t <= 35)
            };
            y.prototype.isPAC = function (e, t) {
                return e >= this.BASE_ && e < this.BASE_ + 8 && (t >= 64 && t <= 127)
            };
            y.prototype.isColorPAC = function (e) {
                return e >= 64 && e <= 79 || e >= 96 && e <= 127
            };
            y.prototype.isNormalChar = function (e) {
                return e >= 32 && e <= 127
            };
            y.prototype.setRollUp = function (e, t) {
                if (this.mode_ !== 'rollUp') {
                    this.row_ = v;
                    this.mode_ = 'rollUp';
                    this.flushDisplayed(e);
                    this.nonDisplayed_ = g();
                    this.displayed_ = g()
                }
                if (t !== undefined && t !== this.row_) {
                    for (var r = 0; r < this.rollUpRows_; r++) {
                        this.displayed_[t - r] = this.displayed_[this.row_ - r];
                        this.displayed_[this.row_ - r] = ''
                    }
                }
                if (t === undefined) {
                    t = this.row_
                }
                this.topRow_ = t - this.rollUpRows_ + 1
            };
            y.prototype.addFormatting = function (e, t) {
                this.formatting_ = this.formatting_.concat(t);
                var r = t.reduce(function (e, t) {
                    return e + '<' + t + '>'
                }, '');
                this[this.mode_](e, r)
            };
            y.prototype.clearFormatting = function (e) {
                if (!this.formatting_.length) {
                    return
                }
                var t = this.formatting_.reverse().reduce(function (e, t) {
                    return e + '</' + t + '>'
                }, '');
                this.formatting_ = [
                ];
                this[this.mode_](e, t)
            };
            y.prototype.popOn = function (e, t) {
                var r = this.nonDisplayed_[this.row_];
                r += t;
                this.nonDisplayed_[this.row_] = r
            };
            y.prototype.rollUp = function (e, t) {
                var r = this.displayed_[this.row_];
                r += t;
                this.displayed_[this.row_] = r
            };
            y.prototype.shiftRowsUp_ = function () {
                var e;
                for (e = 0; e < this.topRow_; e++) {
                    this.displayed_[e] = ''
                }
                for (e = this.row_ + 1; e < v + 1; e++) {
                    this.displayed_[e] = ''
                }
                for (e = this.topRow_; e < this.row_; e++) {
                    this.displayed_[e] = this.displayed_[e + 1]
                }
                this.displayed_[this.row_] = ''
            };
            y.prototype.paintOn = function (e, t) {
                var r = this.displayed_[this.row_];
                r += t;
                this.displayed_[this.row_] = r
            };
            var _ = {
                CaptionStream: f,
                Cea608Stream: y
            };
            var b = _.CaptionStream;
            var T = {
                H264_STREAM_TYPE: 27,
                ADTS_STREAM_TYPE: 15,
                METADATA_STREAM_TYPE: 21
            };
            var A = function (e, t, r) {
                var n,
                    i = '';
                for (n = t; n < r; n++) {
                    i += '%' + ('00' + e[n].toString(16)).slice(- 2)
                }
                return i
            },
                S = function (e, t, r) {
                    return decodeURIComponent(A(e, t, r))
                },
                k = function (e, t, r) {
                    return unescape(A(e, t, r))
                },
                w = function (e) {
                    return e[0] << 21 | e[1] << 14 | e[2] << 7 | e[3]
                },
                C = {
                    TXXX: function (e) {
                        var t;
                        if (e.data[0] !== 3) {
                            return
                        }
                        for (t = 1; t < e.data.length; t++) {
                            if (e.data[t] === 0) {
                                e.description = S(e.data, 1, t);
                                e.value = S(e.data, t + 1, e.data.length).replace(/\0*$/, '');
                                break
                            }
                        }
                        e.data = e.value
                    },
                    WXXX: function (e) {
                        var t;
                        if (e.data[0] !== 3) {
                            return
                        }
                        for (t = 1; t < e.data.length; t++) {
                            if (e.data[t] === 0) {
                                e.description = S(e.data, 1, t);
                                e.url = S(e.data, t + 1, e.data.length);
                                break
                            }
                        }
                    },
                    PRIV: function (e) {
                        var t;
                        for (t = 0; t < e.data.length; t++) {
                            if (e.data[t] === 0) {
                                e.owner = k(e.data, 0, t);
                                break
                            }
                        }
                        e.privateData = e.data.subarray(t + 1);
                        e.data = e.privateData
                    }
                },
                E;
            E = function (e) {
                var t = {
                    debug: !!(e && e.debug),
                    descriptor: e && e.descriptor
                },
                    r = 0,
                    n = [
                    ],
                    i = 0,
                    a;
                E.prototype.init.call(this);
                this.dispatchType = T.METADATA_STREAM_TYPE.toString(16);
                if (t.descriptor) {
                    for (a = 0; a < t.descriptor.length; a++) {
                        this.dispatchType += ('00' + t.descriptor[a].toString(16)).slice(- 2)
                    }
                }
                this.push = function (e) {
                    var a,
                        s,
                        o,
                        u,
                        l,
                        c;
                    if (e.type !== 'timed-metadata') {
                        return
                    }
                    if (e.dataAlignmentIndicator) {
                        i = 0;
                        n.length = 0
                    }
                    if (n.length === 0 && (e.data.length < 10 || e.data[0] !== 'I'.charCodeAt(0) || e.data[1] !== 'D'.charCodeAt(0) || e.data[2] !== '3'.charCodeAt(0))) {
                        if (t.debug) {
                            console.log('Skipping unrecognized metadata packet')
                        }
                        return
                    }
                    n.push(e);
                    i += e.data.byteLength;
                    if (n.length === 1) {
                        r = w(e.data.subarray(6, 10));
                        r += 10
                    }
                    if (i < r) {
                        return
                    }
                    a = {
                        data: new Uint8Array(r),
                        frames: [
                        ],
                        pts: n[0].pts,
                        dts: n[0].dts
                    };
                    for (l = 0; l < r;) {
                        a.data.set(n[0].data.subarray(0, r - l), l);
                        l += n[0].data.byteLength;
                        i -= n[0].data.byteLength;
                        n.shift()
                    }
                    s = 10;
                    if (a.data[5] & 64) {
                        s += 4;
                        s += w(a.data.subarray(10, 14));
                        r -= w(a.data.subarray(16, 20))
                    }
                    do {
                        o = w(a.data.subarray(s + 4, s + 8));
                        if (o < 1) {
                            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.')
                        }
                        c = String.fromCharCode(a.data[s], a.data[s + 1], a.data[s + 2], a.data[s + 3]);
                        u = {
                            id: c,
                            data: a.data.subarray(s + 10, s + o + 10)
                        };
                        u.key = u.id;
                        if (C[u.id]) {
                            C[u.id](u);
                            if (u.owner === 'com.apple.streaming.transportStreamTimestamp') {
                                var d = u.data,
                                    f = (d[3] & 1) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
                                f *= 4;
                                f += d[7] & 3;
                                u.timeStamp = f;
                                if (a.pts === undefined && a.dts === undefined) {
                                    a.pts = u.timeStamp;
                                    a.dts = u.timeStamp
                                }
                                this.trigger('timestamp', u)
                            }
                        }
                        a.frames.push(u);
                        s += 10;
                        s += o
                    } while (s < r);
                    this.trigger('data', a)
                }
            };
            E.prototype = new i;
            var I = E;
            var P = function e(t, r) {
                var n = {
                    id: r.index + '',
                    width: r.width,
                    height: r.height,
                    bandwidth: r.bitrate,
                    isEnabled_: true
                };
                n.enabled = function (e) {
                    if (typeof e === 'undefined') {
                        return n.isEnabled_
                    }
                    if (e === n.isEnabled_) {
                        return
                    }
                    if (e === true || e === false) {
                        n.isEnabled_ = e;
                        t()
                    }
                };
                return n
            };
            var O = function e(t) {
                var r = null;
                var n = function e() {
                    var n = r.filter(function (e) {
                        return e.enabled()
                    });
                    if (n.length === r.length || n.length === 0) {
                        t.el_.vjs_setProperty('autoLevelCapping', - 1);
                        t.el_.vjs_setProperty('level', - 1);
                        return
                    }
                    if (n.length === 1) {
                        t.el_.vjs_setProperty('level', parseInt(n[0].id, 10));
                        t.el_.vjs_setProperty('autoLevelCapping', - 1);
                        return
                    }
                    var i = n[n.length - 1].id;
                    t.el_.vjs_setProperty('autoLevelCapping', parseInt(i, 10));
                    t.el_.vjs_setProperty('level', - 1)
                };
                return function () {
                    if (!r) {
                        var e = t.el_.vjs_getProperty('levels');
                        r = e.filter(function (e) {
                            return !e.audio
                        }).map(P.bind(null, n))
                    }
                    return r
                }
            };
            var x = function e(t) {
                var r = t.el_.vjs_getProperty('audioTracks');
                var n = t.audioTracks();
                var i = null;
                for (var a = 0; a < n.length; a++) {
                    if (n[a].enabled) {
                        i = n[a].id;
                        break
                    }
                }
                if (i === null) {
                    return
                }
                for (var s = 0; s < r.length; s++) {
                    if (i === r[s].title) {
                        t.el_.vjs_setProperty('audioTrack', s);
                        return
                    }
                }
            };
            var L = function e(t) {
                var n = t.el_.vjs_getProperty('altAudioTracks');
                var i = t.el_.vjs_getProperty('audioTracks');
                var a = t.el_.vjs_getProperty('audioTrack');
                i.forEach(function (e, i) {
                    var s = n[e.id];
                    t.audioTracks().addTrack(new r.AudioTrack({
                        id: s.name,
                        enabled: a === i,
                        language: s.lang,
                        default:
                            s.default_track,
                        label: s.name
                    }))
                })
            };
            var D = '1.4.6';
            var R = function e(t) {
                Object.defineProperties(t.frame, {
                    id: {
                        get: function e() {
                            r.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');
                            return t.value.key
                        }
                    },
                    value: {
                        get: function e() {
                            r.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');
                            return t.value.data
                        }
                    },
                    privateData: {
                        get: function e() {
                            r.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');
                            return t.value.data
                        }
                    }
                })
            };
            var M = function e(t, r, n) {
                var i = t.remoteTextTracks() || [
                ];
                for (var a = 0; a < i.length; a++) {
                    var s = i[a];
                    if (s.kind === r && s.label === n) {
                        t.removeRemoteTextTrack(s)
                    }
                }
            };
            var j = function e(t) {
                var r = new Uint8Array(t.length);
                for (var n = 0; n < t.length; n++) {
                    r[n] = t.charCodeAt(n)
                }
                return r
            };
            var U = function e(t, r, n) {
                var i;
                var a;
                if (!n) {
                    return
                }
                if (!n.cues) {
                    return
                }
                i = n.cues.length;
                while (i--) {
                    a = n.cues[i];
                    if (a.startTime <= r && a.endTime >= t) {
                        n.removeCue(a)
                    }
                }
            };
            var N = function e(t, r) {
                if (t.length) {
                    U(0, t.start(0), r)
                }
            };
            var B = function e(t, r) {
                var n = - 1;
                for (var i = 0; i < t.length; i++) {
                    if (t[i].id === r) {
                        n = i;
                        break
                    }
                }
                t.selectedIndex_ = n;
                t.trigger({
                    selectedIndex: n,
                    type: 'change'
                })
            };
            var q = 1 / 30;
            var F = function e(t, n) {
                var i = [
                ];
                if (t && t.length) {
                    for (var a = 0; a < t.length; a++) {
                        if (n(t.start(a), t.end(a))) {
                            i.push([t.start(a),
                            t.end(a)])
                        }
                    }
                }
                return r.createTimeRanges(i)
            };
            var V = function e(t, r) {
                return F(t, function (e, t) {
                    return e - q <= r && t + q >= r
                })
            };
            var H = function () {
                function e(e, t, n) {
                    var i = this;
                    if (t.options_ && t.options_.playerId) {
                        var a = r(t.options_.playerId);
                        if (!a.hasOwnProperty('hls')) {
                            Object.defineProperty(a, 'hls', {
                                get: function e() {
                                    r.log.warn('player.hls is deprecated. Use player.tech_.hls instead.');
                                    t.trigger({
                                        type: 'usage',
                                        name: 'flashls-player-access'
                                    });
                                    return i
                                }
                            })
                        }
                    }
                    Object.defineProperties(this, {
                        stats: {
                            get: function e() {
                                return this.tech_.el_.vjs_getProperty('stats')
                            }
                        },
                        bandwidth: {
                            get: function e() {
                                return this.tech_.el_.vjs_getProperty('stats').bandwidth
                            }
                        }
                    });
                    this.tech_ = t;
                    this.metadataTrack_ = null;
                    this.inbandTextTracks_ = {
                    };
                    this.metadataStream_ = new I;
                    this.captionStream_ = new b;
                    this.offsetPts = null;
                    this.offsetDts = null;
                    this.onLoadedmetadata_ = this.onLoadedmetadata_.bind(this);
                    this.onSeeking_ = this.onSeeking_.bind(this);
                    this.onId3updated_ = this.onId3updated_.bind(this);
                    this.onCaptionData_ = this.onCaptionData_.bind(this);
                    this.onMetadataStreamData_ = this.onMetadataStreamData_.bind(this);
                    this.onCaptionStreamData_ = this.onCaptionStreamData_.bind(this);
                    this.onLevelSwitch_ = this.onLevelSwitch_.bind(this);
                    this.onLevelLoaded_ = this.onLevelLoaded_.bind(this);
                    this.onFragmentLoaded_ = this.onFragmentLoaded_.bind(this);
                    this.onAudioTrackChanged = this.onAudioTrackChanged.bind(this);
                    this.onPlay_ = this.onPlay_.bind(this);
                    this.tech_.on('loadedmetadata', this.onLoadedmetadata_);
                    this.tech_.on('seeking', this.onSeeking_);
                    this.tech_.on('id3updated', this.onId3updated_);
                    this.tech_.on('captiondata', this.onCaptionData_);
                    this.tech_.on('levelswitch', this.onLevelSwitch_);
                    this.tech_.on('levelloaded', this.onLevelLoaded_);
                    this.tech_.on('fragmentloaded', this.onFragmentLoaded_);
                    this.tech_.on('play', this.onPlay_);
                    this.metadataStream_.on('data', this.onMetadataStreamData_);
                    this.captionStream_.on('data', this.onCaptionStreamData_);
                    this.playlists = new r.EventTarget;
                    this.playlists.media = function () {
                        return i.media_()
                    }
                }
                var n = e.prototype;
                n.src = function e(t) {
                    if (!t) {
                        return
                    }
                    this.tech_.setSrc(t.src)
                };
                n.onPlay_ = function e() {
                    if (this.tech_.duration() === Infinity) {
                        var t = this.seekable();
                        if (this.tech_.currentTime() < t.start(0)) {
                            return this.tech_.setCurrentTime(t.end(t.length - 1))
                        }
                    }
                };
                n.seekable = function e() {
                    var t = this.tech_.el_.vjs_getProperty('seekableStart');
                    var n = this.tech_.el_.vjs_getProperty('seekableEnd');
                    if (n === 0) {
                        return r.createTimeRange()
                    }
                    return r.createTimeRange(t, n)
                };
                n.media_ = function e() {
                    var t = this.tech_.el_.vjs_getProperty('levels');
                    var r = this.tech_.el_.vjs_getProperty('level');
                    var n;
                    if (t.length) {
                        n = {
                            resolvedUri: t[r].url,
                            attributes: {
                                BANDWIDTH: t[r].bitrate,
                                RESOLUTION: {
                                    width: t[r].width,
                                    height: t[r].height
                                }
                            }
                        }
                    }
                    return n
                };
                n.onLoadedmetadata_ = function e() {
                    var t = this;
                    this.representations = O(this.tech_);
                    var n = r.players[this.tech_.options_.playerId];
                    if (n && n.qualityLevels) {
                        this.qualityLevels_ = n.qualityLevels();
                        this.representations().forEach(function (e) {
                            t.qualityLevels_.addQualityLevel(e)
                        });
                        B(this.qualityLevels_, this.tech_.el_.vjs_getProperty('level') + '')
                    }
                    L(this.tech_);
                    this.tech_.audioTracks().on('change', this.onAudioTrackChanged)
                };
                n.onAudioTrackChanged = function e() {
                    x(this.tech_)
                };
                n.onLevelSwitch_ = function e(t, r) {
                    if (this.qualityLevels_) {
                        B(this.qualityLevels_, r[0].levelIndex + '')
                    }
                    this.playlists.trigger('mediachange');
                    this.tech_.trigger({
                        type: 'mediachange',
                        bubbles: true
                    })
                };
                n.onLevelLoaded_ = function e() {
                    this.playlists.trigger('loadedplaylist')
                };
                n.onFragmentLoaded_ = function e() {
                    this.tech_.trigger('bandwidthupdate');
                    this.captionStream_.flush()
                };
                n.onSeeking_ = function e() {
                    var t = this;
                    U(0, Infinity, this.metadataTrack_);
                    var r = V(this.tech_.buffered(), this.tech_.currentTime());
                    if (!r.length) {
                        Object.keys(this.inbandTextTracks_).forEach(function (e) {
                            U(0, Infinity, t.inbandTextTracks_[e])
                        });
                        this.captionStream_.reset()
                    }
                };
                n.onId3updated_ = function e(r, n) {
                    var i = t.atob(n[0]);
                    var a = j(i);
                    var s = {
                        type: 'timed-metadata',
                        dataAlignmentIndicator: true,
                        data: a
                    };
                    this.metadataStream_.push(s)
                };
                n.onMetadataStreamData_ = function e(r) {
                    var n = this;
                    if (!this.metadataTrack_) {
                        this.metadataTrack_ = this.tech_.addRemoteTextTrack({
                            kind: 'metadata',
                            label: 'Timed Metadata'
                        }, false).track;
                        this.metadataTrack_.inBandMetadataTrackDispatchType = ''
                    }
                    N(this.tech_.buffered(), this.metadataTrack_);
                    var i = this.tech_.currentTime();
                    r.frames.forEach(function (e) {
                        var r = new t.VTTCue(i, i + 0.1, e.value || e.url || e.data || '');
                        r.frame = e;
                        r.value = e;
                        R(r);
                        n.metadataTrack_.addCue(r)
                    });
                    if (this.metadataTrack_.cues && this.metadataTrack_.cues.length) {
                        var a = this.metadataTrack_.cues;
                        var s = [
                        ];
                        var o = this.tech_.duration();
                        if (isNaN(o) || Math.abs(o) === Infinity) {
                            o = Number.MAX_VALUE
                        }
                        for (var u = 0; u < a.length; u++) {
                            s.push(a[u])
                        }
                        s.sort(function (e, t) {
                            return e.startTime - t.startTime
                        });
                        for (var l = 0; l < s.length - 1; l++) {
                            if (s[l].endTime !== s[l + 1].startTime) {
                                s[l].endTime = s[l + 1].startTime
                            }
                        }
                        s[s.length - 1].endTime = o
                    }
                };
                n.onCaptionData_ = function e(r, n) {
                    var i = this;
                    n[0].forEach(function (e) {
                        if (!i.offsetPts) {
                            i.offsetPts = e.pos
                        }
                        if (!i.offsetDts) {
                            i.offsetDts = e.dts
                        }
                        i.captionStream_.push({
                            pts: (e.pos - i.offsetPts) * 90000,
                            dts: (e.dts - i.offsetDts) * 90000,
                            escapedRBSP: j(t.atob(e.data)),
                            nalUnitType: 'sei_rbsp'
                        })
                    })
                };
                n.onCaptionStreamData_ = function e(r) {
                    if (r) {
                        if (!this.inbandTextTracks_[r.stream]) {
                            M(this.tech_, 'captions', r.stream);
                            this.inbandTextTracks_[r.stream] = this.tech_.addRemoteTextTrack({
                                kind: 'captions',
                                label: r.stream,
                                id: r.stream
                            }, false).track
                        }
                        N(this.tech_.buffered(), this.inbandTextTracks_[r.stream]);
                        this.inbandTextTracks_[r.stream].addCue(new t.VTTCue(r.startPts / 90000, r.endPts / 90000, r.text))
                    }
                };
                n.dispose = function e() {
                    this.tech_.off('loadedmetadata', this.onLoadedmetadata_);
                    this.tech_.off('seeked', this.onSeeking_);
                    this.tech_.off('id3updated', this.onId3updated_);
                    this.tech_.off('captiondata', this.onCaptionData_);
                    this.tech_.audioTracks().off('change', this.onAudioTrackChanged);
                    this.tech_.off('levelswitch', this.onLevelSwitch_);
                    this.tech_.off('levelloaded', this.onLevelLoaded_);
                    this.tech_.off('fragmentloaded', this.onFragmentLoaded_);
                    this.tech_.off('play', this.onPlay_);
                    if (this.qualityLevels_) {
                        this.qualityLevels_.dispose()
                    }
                };
                return e
            }();
            var z = {
            };
            var G = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
            z.canPlayType = function (e) {
                return G.test(e) ? 'maybe' : ''
            };
            z.canHandleSource = function (e, t) {
                return z.canPlayType(e.type) === 'maybe'
            };
            z.handleSource = function (e, t, r) {
                t.hls = new H(e, t, r);
                t.hls.src(e);
                return t.hls
            };
            r.getTech('Flash').registerSourceHandler(z, 0);
            z.VERSION = D;
            e.FlashlsHandler = H;
            e.default = z;
            Object.defineProperty(e, '__esModule', {
                value: true
            })
        }); (function (e, t) {
            typeof exports === 'object' && typeof module !== 'undefined' ? t(exports, require('video.js')) : typeof define === 'function' && define.amd ? define(['exports',
                'video.js'], t) : t(e.videojsHttpStreaming = {
                }, e.videojs)
        })(this, function (e, t) {
            'use strict';
            t = t && t.hasOwnProperty('default') ? t['default'] : t;
            var r = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
            };
            function n(e, t) {
                return t = {
                    exports: {
                    }
                },
                    e(t, t.exports),
                    t.exports
            }
            var i = {
            };
            var a = Object.freeze({
                default:
                    i
            });
            var s = a && i || a;
            var o = typeof r !== 'undefined' ? r : typeof window !== 'undefined' ? window : {
            };
            var u;
            if (typeof document !== 'undefined') {
                u = document
            } else {
                u = o['__GLOBAL_DOCUMENT_CACHE@4'];
                if (!u) {
                    u = o['__GLOBAL_DOCUMENT_CACHE@4'] = s
                }
            }
            var l = u;
            var c = n(function (e, t) {
                (function (t) {
                    var r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/;
                    var n = /^([^\/;?#]*)(.*)$/;
                    var i = /(?:\/|^)\.(?=\/)/g;
                    var a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g;
                    var s = {
                        buildAbsoluteURL: function e(t, r, i) {
                            i = i || {
                            };
                            t = t.trim();
                            r = r.trim();
                            if (!r) {
                                if (!i.alwaysNormalize) {
                                    return t
                                }
                                var a = this.parseURL(t);
                                if (!a) {
                                    throw new Error('Error trying to parse base URL.')
                                }
                                a.path = s.normalizePath(a.path);
                                return s.buildURLFromParts(a)
                            }
                            var o = this.parseURL(r);
                            if (!o) {
                                throw new Error('Error trying to parse relative URL.')
                            }
                            if (o.scheme) {
                                if (!i.alwaysNormalize) {
                                    return r
                                }
                                o.path = s.normalizePath(o.path);
                                return s.buildURLFromParts(o)
                            }
                            var u = this.parseURL(t);
                            if (!u) {
                                throw new Error('Error trying to parse base URL.')
                            }
                            if (!u.netLoc && u.path && u.path[0] !== '/') {
                                var l = n.exec(u.path);
                                u.netLoc = l[1];
                                u.path = l[2]
                            }
                            if (u.netLoc && !u.path) {
                                u.path = '/'
                            }
                            var c = {
                                scheme: u.scheme,
                                netLoc: o.netLoc,
                                path: null,
                                params: o.params,
                                query: o.query,
                                fragment: o.fragment
                            };
                            if (!o.netLoc) {
                                c.netLoc = u.netLoc;
                                if (o.path[0] !== '/') {
                                    if (!o.path) {
                                        c.path = u.path;
                                        if (!o.params) {
                                            c.params = u.params;
                                            if (!o.query) {
                                                c.query = u.query
                                            }
                                        }
                                    } else {
                                        var d = u.path;
                                        var f = d.substring(0, d.lastIndexOf('/') + 1) + o.path;
                                        c.path = s.normalizePath(f)
                                    }
                                }
                            }
                            if (c.path === null) {
                                c.path = i.alwaysNormalize ? s.normalizePath(o.path) : o.path
                            }
                            return s.buildURLFromParts(c)
                        },
                        parseURL: function e(t) {
                            var n = r.exec(t);
                            if (!n) {
                                return null
                            }
                            return {
                                scheme: n[1] || '',
                                netLoc: n[2] || '',
                                path: n[3] || '',
                                params: n[4] || '',
                                query: n[5] || '',
                                fragment: n[6] || ''
                            }
                        },
                        normalizePath: function e(t) {
                            t = t.split('').reverse().join('').replace(i, '');
                            while (t.length !== (t = t.replace(a, '')).length) {
                            }
                            return t.split('').reverse().join('')
                        },
                        buildURLFromParts: function e(t) {
                            return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                        }
                    };
                    e.exports = s
                })(r)
            });
            var d;
            if (typeof window !== 'undefined') {
                d = window
            } else if (typeof r !== 'undefined') {
                d = r
            } else if (typeof self !== 'undefined') {
                d = self
            } else {
                d = {
                }
            }
            var f = d;
            var h = function e(t, r) {
                if (/^[a-z]+:/i.test(r)) {
                    return r
                }
                if (!/\/\//i.test(t)) {
                    t = c.buildAbsoluteURL(f.location.href, t)
                }
                return c.buildAbsoluteURL(t, r)
            };
            function p() {
                p = Object.assign || function (e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var r = arguments[t];
                        for (var n in r) {
                            if (Object.prototype.hasOwnProperty.call(r, n)) {
                                e[n] = r[n]
                            }
                        }
                    }
                    return e
                };
                return p.apply(this, arguments)
            }
            function v(e, t) {
                e.prototype = Object.create(t.prototype);
                e.prototype.constructor = e;
                e.__proto__ = t
            }
            function m(e) {
                if (e === void 0) {
                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                }
                return e
            }
            var g = function () {
                function e() {
                    this.listeners = {
                    }
                }
                var t = e.prototype;
                t.on = function e(t, r) {
                    if (!this.listeners[t]) {
                        this.listeners[t] = [
                        ]
                    }
                    this.listeners[t].push(r)
                };
                t.off = function e(t, r) {
                    if (!this.listeners[t]) {
                        return false
                    }
                    var n = this.listeners[t].indexOf(r);
                    this.listeners[t].splice(n, 1);
                    return n > - 1
                };
                t.trigger = function e(t) {
                    var r = this.listeners[t];
                    var n;
                    var i;
                    var a;
                    if (!r) {
                        return
                    }
                    if (arguments.length === 2) {
                        i = r.length;
                        for (n = 0; n < i; ++n) {
                            r[n].call(this, arguments[1])
                        }
                    } else {
                        a = Array.prototype.slice.call(arguments, 1);
                        i = r.length;
                        for (n = 0; n < i; ++n) {
                            r[n].apply(this, a)
                        }
                    }
                };
                t.dispose = function e() {
                    this.listeners = {
                    }
                };
                t.pipe = function e(t) {
                    this.on('data', function (e) {
                        t.push(e)
                    })
                };
                return e
            }();
            var y = function (e) {
                v(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.buffer = '';
                    return t
                }
                var r = t.prototype;
                r.push = function e(t) {
                    var r;
                    this.buffer += t;
                    r = this.buffer.indexOf('\n');
                    for (; r > - 1; r = this.buffer.indexOf('\n')) {
                        this.trigger('data', this.buffer.substring(0, r));
                        this.buffer = this.buffer.substring(r + 1)
                    }
                };
                return t
            }(g);
            var _ = function e() {
                var t = '[^=]*';
                var r = '"[^"]*"|[^,]*';
                var n = '(?:' + t + ')=(?:' + r + ')';
                return new RegExp('(?:^|,)(' + n + ')')
            };
            var b = function e(t) {
                var r = t.split(_());
                var n = {
                };
                var i = r.length;
                var a;
                while (i--) {
                    if (r[i] === '') {
                        continue
                    }
                    a = /([^=]*)=(.*)/.exec(r[i]).slice(1);
                    a[0] = a[0].replace(/^\s+|\s+$/g, '');
                    a[1] = a[1].replace(/^\s+|\s+$/g, '');
                    a[1] = a[1].replace(/^['"](.*)['"]$/g, '$1');
                    n[a[0]] = a[1]
                }
                return n
            };
            var T = function (e) {
                v(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.customParsers = [
                    ];
                    t.tagMappers = [
                    ];
                    return t
                }
                var r = t.prototype;
                r.push = function e(t) {
                    var r = this;
                    var n;
                    var i;
                    t = t.trim();
                    if (t.length === 0) {
                        return
                    }
                    if (t[0] !== '#') {
                        this.trigger('data', {
                            type: 'uri',
                            uri: t
                        });
                        return
                    }
                    var a = this.tagMappers.reduce(function (e, r) {
                        var n = r(t);
                        if (n === t) {
                            return e
                        }
                        return e.concat([n])
                    }, [
                        t
                    ]);
                    a.forEach(function (e) {
                        for (var t = 0; t < r.customParsers.length; t++) {
                            if (r.customParsers[t].call(r, e)) {
                                return
                            }
                        }
                        if (e.indexOf('#EXT') !== 0) {
                            r.trigger('data', {
                                type: 'comment',
                                text: e.slice(1)
                            });
                            return
                        }
                        e = e.replace('\r', '');
                        n = /^#EXTM3U/.exec(e);
                        if (n) {
                            r.trigger('data', {
                                type: 'tag',
                                tagType: 'm3u'
                            });
                            return
                        }
                        n = /^#EXTINF:?([0-9\.]*)?,?(.*)?$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'inf'
                            };
                            if (n[1]) {
                                i.duration = parseFloat(n[1])
                            }
                            if (n[2]) {
                                i.title = n[2]
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'targetduration'
                            };
                            if (n[1]) {
                                i.duration = parseInt(n[1], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'totalduration'
                            };
                            if (n[1]) {
                                i.duration = parseInt(n[1], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'version'
                            };
                            if (n[1]) {
                                i.version = parseInt(n[1], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-MEDIA-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'media-sequence'
                            };
                            if (n[1]) {
                                i.number = parseInt(n[1], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\-?[0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'discontinuity-sequence'
                            };
                            if (n[1]) {
                                i.number = parseInt(n[1], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'playlist-type'
                            };
                            if (n[1]) {
                                i.playlistType = n[1]
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'byterange'
                            };
                            if (n[1]) {
                                i.length = parseInt(n[1], 10)
                            }
                            if (n[2]) {
                                i.offset = parseInt(n[2], 10)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'allow-cache'
                            };
                            if (n[1]) {
                                i.allowed = !/NO/.test(n[1])
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-MAP:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'map'
                            };
                            if (n[1]) {
                                var a = b(n[1]);
                                if (a.URI) {
                                    i.uri = a.URI
                                }
                                if (a.BYTERANGE) {
                                    var s = a.BYTERANGE.split('@'),
                                        o = s[0],
                                        u = s[1];
                                    i.byterange = {
                                    };
                                    if (o) {
                                        i.byterange.length = parseInt(o, 10)
                                    }
                                    if (u) {
                                        i.byterange.offset = parseInt(u, 10)
                                    }
                                }
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-STREAM-INF:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'stream-inf'
                            };
                            if (n[1]) {
                                i.attributes = b(n[1]);
                                if (i.attributes.RESOLUTION) {
                                    var l = i.attributes.RESOLUTION.split('x');
                                    var c = {
                                    };
                                    if (l[0]) {
                                        c.width = parseInt(l[0], 10)
                                    }
                                    if (l[1]) {
                                        c.height = parseInt(l[1], 10)
                                    }
                                    i.attributes.RESOLUTION = c
                                }
                                if (i.attributes.BANDWIDTH) {
                                    i.attributes.BANDWIDTH = parseInt(i.attributes.BANDWIDTH, 10)
                                }
                                if (i.attributes['PROGRAM-ID']) {
                                    i.attributes['PROGRAM-ID'] = parseInt(i.attributes['PROGRAM-ID'], 10)
                                }
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-MEDIA:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'media'
                            };
                            if (n[1]) {
                                i.attributes = b(n[1])
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-ENDLIST/.exec(e);
                        if (n) {
                            r.trigger('data', {
                                type: 'tag',
                                tagType: 'endlist'
                            });
                            return
                        }
                        n = /^#EXT-X-DISCONTINUITY/.exec(e);
                        if (n) {
                            r.trigger('data', {
                                type: 'tag',
                                tagType: 'discontinuity'
                            });
                            return
                        }
                        n = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'program-date-time'
                            };
                            if (n[1]) {
                                i.dateTimeString = n[1];
                                i.dateTimeObject = new Date(n[1])
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-KEY:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'key'
                            };
                            if (n[1]) {
                                i.attributes = b(n[1]);
                                if (i.attributes.IV) {
                                    if (i.attributes.IV.substring(0, 2).toLowerCase() === '0x') {
                                        i.attributes.IV = i.attributes.IV.substring(2)
                                    }
                                    i.attributes.IV = i.attributes.IV.match(/.{8}/g);
                                    i.attributes.IV[0] = parseInt(i.attributes.IV[0], 16);
                                    i.attributes.IV[1] = parseInt(i.attributes.IV[1], 16);
                                    i.attributes.IV[2] = parseInt(i.attributes.IV[2], 16);
                                    i.attributes.IV[3] = parseInt(i.attributes.IV[3], 16);
                                    i.attributes.IV = new Uint32Array(i.attributes.IV)
                                }
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-START:?(.*)$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'start'
                            };
                            if (n[1]) {
                                i.attributes = b(n[1]);
                                i.attributes['TIME-OFFSET'] = parseFloat(i.attributes['TIME-OFFSET']);
                                i.attributes.PRECISE = /YES/.test(i.attributes.PRECISE)
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'cue-out-cont'
                            };
                            if (n[1]) {
                                i.data = n[1]
                            } else {
                                i.data = ''
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'cue-out'
                            };
                            if (n[1]) {
                                i.data = n[1]
                            } else {
                                i.data = ''
                            }
                            r.trigger('data', i);
                            return
                        }
                        n = /^#EXT-X-CUE-IN:?(.*)?$/.exec(e);
                        if (n) {
                            i = {
                                type: 'tag',
                                tagType: 'cue-in'
                            };
                            if (n[1]) {
                                i.data = n[1]
                            } else {
                                i.data = ''
                            }
                            r.trigger('data', i);
                            return
                        }
                        r.trigger('data', {
                            type: 'tag',
                            data: e.slice(4)
                        })
                    })
                };
                r.addParser = function e(t) {
                    var r = this;
                    var n = t.expression,
                        i = t.customType,
                        a = t.dataParser,
                        s = t.segment;
                    if (typeof a !== 'function') {
                        a = function e(t) {
                            return t
                        }
                    }
                    this.customParsers.push(function (e) {
                        var t = n.exec(e);
                        if (t) {
                            r.trigger('data', {
                                type: 'custom',
                                data: a(e),
                                customType: i,
                                segment: s
                            });
                            return true
                        }
                    })
                };
                r.addTagMapper = function e(t) {
                    var r = t.expression,
                        n = t.map;
                    var i = function e(t) {
                        if (r.test(t)) {
                            return n(t)
                        }
                        return t
                    };
                    this.tagMappers.push(i)
                };
                return t
            }(g);
            var A = function (e) {
                v(t, e);
                function t() {
                    var t;
                    t = e.call(this) || this;
                    t.lineStream = new y;
                    t.parseStream = new T;
                    t.lineStream.pipe(t.parseStream);
                    var r = m(m(t));
                    var n = [
                    ];
                    var i = {
                    };
                    var a;
                    var s;
                    var o = function e() {
                    };
                    var u = {
                        AUDIO: {
                        },
                        VIDEO: {
                        },
                        'CLOSED-CAPTIONS': {
                        },
                        SUBTITLES: {
                        }
                    };
                    var l = 0;
                    t.manifest = {
                        allowCache: true,
                        discontinuityStarts: [
                        ],
                        segments: [
                        ]
                    };
                    t.parseStream.on('data', function (e) {
                        var t;
                        var c;
                        ({
                            tag: function d() {
                                (({
                                    'allow-cache': function t() {
                                        this.manifest.allowCache = e.allowed;
                                        if (!('allowed' in e)) {
                                            this.trigger('info', {
                                                message: 'defaulting allowCache to YES'
                                            });
                                            this.manifest.allowCache = true
                                        }
                                    },
                                    byterange: function t() {
                                        var t = {
                                        };
                                        if ('length' in e) {
                                            i.byterange = t;
                                            t.length = e.length;
                                            if (!('offset' in e)) {
                                                this.trigger('info', {
                                                    message: 'defaulting offset to zero'
                                                });
                                                e.offset = 0
                                            }
                                        }
                                        if ('offset' in e) {
                                            i.byterange = t;
                                            t.offset = e.offset
                                        }
                                    },
                                    endlist: function e() {
                                        this.manifest.endList = true
                                    },
                                    inf: function t() {
                                        if (!('mediaSequence' in this.manifest)) {
                                            this.manifest.mediaSequence = 0;
                                            this.trigger('info', {
                                                message: 'defaulting media sequence to zero'
                                            })
                                        }
                                        if (!('discontinuitySequence' in this.manifest)) {
                                            this.manifest.discontinuitySequence = 0;
                                            this.trigger('info', {
                                                message: 'defaulting discontinuity sequence to zero'
                                            })
                                        }
                                        if (e.duration > 0) {
                                            i.duration = e.duration
                                        }
                                        if (e.duration === 0) {
                                            i.duration = 0.01;
                                            this.trigger('info', {
                                                message: 'updating zero segment duration to a small value'
                                            })
                                        }
                                        this.manifest.segments = n
                                    },
                                    key: function t() {
                                        if (!e.attributes) {
                                            this.trigger('warn', {
                                                message: 'ignoring key declaration without attribute list'
                                            });
                                            return
                                        }
                                        if (e.attributes.METHOD === 'NONE') {
                                            s = null;
                                            return
                                        }
                                        if (!e.attributes.URI) {
                                            this.trigger('warn', {
                                                message: 'ignoring key declaration without URI'
                                            });
                                            return
                                        }
                                        if (!e.attributes.METHOD) {
                                            this.trigger('warn', {
                                                message: 'defaulting key method to AES-128'
                                            })
                                        }
                                        s = {
                                            method: e.attributes.METHOD || 'AES-128',
                                            uri: e.attributes.URI
                                        };
                                        if (typeof e.attributes.IV !== 'undefined') {
                                            s.iv = e.attributes.IV
                                        }
                                    },
                                    'media-sequence': function t() {
                                        if (!isFinite(e.number)) {
                                            this.trigger('warn', {
                                                message: 'ignoring invalid media sequence: ' + e.number
                                            });
                                            return
                                        }
                                        this.manifest.mediaSequence = e.number
                                    },
                                    'discontinuity-sequence': function t() {
                                        if (!isFinite(e.number)) {
                                            this.trigger('warn', {
                                                message: 'ignoring invalid discontinuity sequence: ' + e.number
                                            });
                                            return
                                        }
                                        this.manifest.discontinuitySequence = e.number;
                                        l = e.number
                                    },
                                    'playlist-type': function t() {
                                        if (!/VOD|EVENT/.test(e.playlistType)) {
                                            this.trigger('warn', {
                                                message: 'ignoring unknown playlist type: ' + e.playlist
                                            });
                                            return
                                        }
                                        this.manifest.playlistType = e.playlistType
                                    },
                                    map: function t() {
                                        a = {
                                        };
                                        if (e.uri) {
                                            a.uri = e.uri
                                        }
                                        if (e.byterange) {
                                            a.byterange = e.byterange
                                        }
                                    },
                                    'stream-inf': function t() {
                                        this.manifest.playlists = n;
                                        this.manifest.mediaGroups = this.manifest.mediaGroups || u;
                                        if (!e.attributes) {
                                            this.trigger('warn', {
                                                message: 'ignoring empty stream-inf attributes'
                                            });
                                            return
                                        }
                                        if (!i.attributes) {
                                            i.attributes = {
                                            }
                                        }
                                        p(i.attributes, e.attributes)
                                    },
                                    media: function r() {
                                        this.manifest.mediaGroups = this.manifest.mediaGroups || u;
                                        if (!(e.attributes && e.attributes.TYPE && e.attributes['GROUP-ID'] && e.attributes.NAME)) {
                                            this.trigger('warn', {
                                                message: 'ignoring incomplete or missing media group'
                                            });
                                            return
                                        }
                                        var n = this.manifest.mediaGroups[e.attributes.TYPE];
                                        n[e.attributes['GROUP-ID']] = n[e.attributes['GROUP-ID']] || {
                                        };
                                        t = n[e.attributes['GROUP-ID']];
                                        c = {
                                            default:
                                                /yes/i.test(e.attributes.DEFAULT)
                                        };
                                        if (c.default) {
                                            c.autoselect = true
                                        } else {
                                            c.autoselect = /yes/i.test(e.attributes.AUTOSELECT)
                                        }
                                        if (e.attributes.LANGUAGE) {
                                            c.language = e.attributes.LANGUAGE
                                        }
                                        if (e.attributes.URI) {
                                            c.uri = e.attributes.URI
                                        }
                                        if (e.attributes['INSTREAM-ID']) {
                                            c.instreamId = e.attributes['INSTREAM-ID']
                                        }
                                        if (e.attributes.CHARACTERISTICS) {
                                            c.characteristics = e.attributes.CHARACTERISTICS
                                        }
                                        if (e.attributes.FORCED) {
                                            c.forced = /yes/i.test(e.attributes.FORCED)
                                        }
                                        t[e.attributes.NAME] = c
                                    },
                                    discontinuity: function e() {
                                        l += 1;
                                        i.discontinuity = true;
                                        this.manifest.discontinuityStarts.push(n.length)
                                    },
                                    'program-date-time': function t() {
                                        if (typeof this.manifest.dateTimeString === 'undefined') {
                                            this.manifest.dateTimeString = e.dateTimeString;
                                            this.manifest.dateTimeObject = e.dateTimeObject
                                        }
                                        i.dateTimeString = e.dateTimeString;
                                        i.dateTimeObject = e.dateTimeObject
                                    },
                                    targetduration: function t() {
                                        if (!isFinite(e.duration) || e.duration < 0) {
                                            this.trigger('warn', {
                                                message: 'ignoring invalid target duration: ' + e.duration
                                            });
                                            return
                                        }
                                        this.manifest.targetDuration = e.duration
                                    },
                                    totalduration: function t() {
                                        if (!isFinite(e.duration) || e.duration < 0) {
                                            this.trigger('warn', {
                                                message: 'ignoring invalid total duration: ' + e.duration
                                            });
                                            return
                                        }
                                        this.manifest.totalDuration = e.duration
                                    },
                                    start: function t() {
                                        if (!e.attributes || isNaN(e.attributes['TIME-OFFSET'])) {
                                            this.trigger('warn', {
                                                message: 'ignoring start declaration without appropriate attribute list'
                                            });
                                            return
                                        }
                                        this.manifest.start = {
                                            timeOffset: e.attributes['TIME-OFFSET'],
                                            precise: e.attributes.PRECISE
                                        }
                                    },
                                    'cue-out': function t() {
                                        i.cueOut = e.data
                                    },
                                    'cue-out-cont': function t() {
                                        i.cueOutCont = e.data
                                    },
                                    'cue-in': function t() {
                                        i.cueIn = e.data
                                    }
                                })[e.tagType] || o).call(r)
                            },
                            uri: function t() {
                                i.uri = e.uri;
                                n.push(i);
                                if (this.manifest.targetDuration && !('duration' in i)) {
                                    this.trigger('warn', {
                                        message: 'defaulting segment duration to the target duration'
                                    });
                                    i.duration = this.manifest.targetDuration
                                }
                                if (s) {
                                    i.key = s
                                }
                                i.timeline = l;
                                if (a) {
                                    i.map = a
                                }
                                i = {
                                }
                            },
                            comment: function e() {
                            },
                            custom: function t() {
                                if (e.segment) {
                                    i.custom = i.custom || {
                                    };
                                    i.custom[e.customType] = e.data
                                } else {
                                    this.manifest.custom = this.manifest.custom || {
                                    };
                                    this.manifest.custom[e.customType] = e.data
                                }
                            }
                        })[e.type].call(r)
                    }); return t
                }
                var r = t.prototype;
                r.push = function e(t) {
                    this.lineStream.push(t)
                };
                r.end = function e() {
                    this.lineStream.push('\n')
                };
                r.addParser = function e(t) {
                    this.parseStream.addParser(t)
                };
                r.addTagMapper = function e(t) {
                    this.parseStream.addTagMapper(t)
                };
                return t
            }(g);
            var S = function (e, t) {
                if (!(e instanceof t)) {
                    throw new TypeError('Cannot call a class as a function')
                }
            };
            var k = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || false;
                        n.configurable = true;
                        if ('value' in n) n.writable = true;
                        Object.defineProperty(e, n.key, n)
                    }
                }
                return function (t, r, n) {
                    if (r) e(t.prototype, r);
                    if (n) e(t, n);
                    return t
                }
            }();
            var w = function e(t, r, n) {
                if (t === null) t = Function.prototype;
                var i = Object.getOwnPropertyDescriptor(t, r);
                if (i === undefined) {
                    var a = Object.getPrototypeOf(t);
                    if (a === null) {
                        return undefined
                    } else {
                        return e(a, r, n)
                    }
                } else if ('value' in i) {
                    return i.value
                } else {
                    var s = i.get;
                    if (s === undefined) {
                        return undefined
                    }
                    return s.call(n)
                }
            };
            var C = function (e, t) {
                if (typeof t !== 'function' && t !== null) {
                    throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
                }
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
            };
            var E = function (e, t) {
                if (!e) {
                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                }
                return t && (typeof t === 'object' || typeof t === 'function') ? t : e
            };
            var I = function () {
                function e(e, t) {
                    var r = [
                    ];
                    var n = true;
                    var i = false;
                    var a = undefined;
                    try {
                        for (var s = e[Symbol.iterator](), o; !(n = (o = s.next()).done); n = true) {
                            r.push(o.value);
                            if (t && r.length === t) break
                        }
                    } catch (e) {
                        i = true;
                        a = e
                    } finally {
                        try {
                            if (!n && s['return']) s['return']()
                        } finally {
                            if (i) throw a
                        }
                    }
                    return r
                }
                return function (t, r) {
                    if (Array.isArray(t)) {
                        return t
                    } else if (Symbol.iterator in Object(t)) {
                        return e(t, r)
                    } else {
                        throw new TypeError('Invalid attempt to destructure non-iterable instance')
                    }
                }
            }();
            var P = t.mergeOptions,
                O = t.EventTarget,
                x = t.log;
            var L = function e(t, r) {
                [
                    'AUDIO',
                    'SUBTITLES'
                ].forEach(function (e) {
                    for (var n in t.mediaGroups[e]) {
                        for (var i in t.mediaGroups[e][n]) {
                            var a = t.mediaGroups[e][n][i];
                            r(a, e, n, i)
                        }
                    }
                })
            };
            var D = function e(t, r, n) {
                var i = r.slice();
                n = n || 0;
                var a = Math.min(t.length, r.length + n);
                for (var s = n; s < a; s++) {
                    i[s - n] = P(t[s], i[s - n])
                }
                return i
            };
            var R = function e(t, r) {
                if (!t.resolvedUri) {
                    t.resolvedUri = h(r, t.uri)
                }
                if (t.key && !t.key.resolvedUri) {
                    t.key.resolvedUri = h(r, t.key.uri)
                }
                if (t.map && !t.map.resolvedUri) {
                    t.map.resolvedUri = h(r, t.map.uri)
                }
            };
            var M = function e(t, r) {
                var n = P(t, {
                });
                var i = n.playlists[r.uri];
                if (!i) {
                    return null
                }
                if (i.segments && r.segments && i.segments.length === r.segments.length && i.mediaSequence === r.mediaSequence) {
                    return null
                }
                var a = P(i, r);
                if (i.segments) {
                    a.segments = D(i.segments, r.segments, r.mediaSequence - i.mediaSequence)
                }
                a.segments.forEach(function (e) {
                    R(e, a.resolvedUri)
                });
                for (var s = 0; s < n.playlists.length; s++) {
                    if (n.playlists[s].uri === r.uri) {
                        n.playlists[s] = a
                    }
                }
                n.playlists[r.uri] = a;
                return n
            };
            var j = function e(t) {
                var r = t.playlists.length;
                while (r--) {
                    var n = t.playlists[r];
                    t.playlists[n.uri] = n;
                    n.resolvedUri = h(t.uri, n.uri);
                    n.id = r;
                    if (!n.attributes) {
                        n.attributes = {
                        };
                        x.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.')
                    }
                }
            };
            var U = function e(t) {
                L(t, function (e) {
                    if (e.uri) {
                        e.resolvedUri = h(t.uri, e.uri)
                    }
                })
            };
            var N = function e(t, r) {
                var n = t.segments[t.segments.length - 1];
                var i = void 0;
                if (r && n && n.duration) {
                    i = n.duration * 1000
                } else {
                    i = (t.targetDuration || 10) * 500
                }
                return i
            };
            var B = function (e) {
                C(t, e);
                function t(e, r, n) {
                    S(this, t);
                    var i = E(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                    i.srcUrl = e;
                    i.hls_ = r;
                    i.withCredentials = n;
                    var a = r.options_;
                    i.customTagParsers = a && a.customTagParsers || [
                    ];
                    i.customTagMappers = a && a.customTagMappers || [
                    ];
                    if (!i.srcUrl) {
                        throw new Error('A non-empty playlist URL is required')
                    }
                    i.state = 'HAVE_NOTHING';
                    i.on('mediaupdatetimeout', function () {
                        if (i.state !== 'HAVE_METADATA') {
                            return
                        }
                        i.state = 'HAVE_CURRENT_METADATA';
                        i.request = i.hls_.xhr({
                            uri: h(i.master.uri, i.media().uri),
                            withCredentials: i.withCredentials
                        }, function (e, t) {
                            if (!i.request) {
                                return
                            }
                            if (e) {
                                return i.playlistRequestError(i.request, i.media().uri, 'HAVE_METADATA')
                            }
                            i.haveMetadata(i.request, i.media().uri)
                        })
                    });
                    return i
                }
                k(t, [
                    {
                        key: 'playlistRequestError',
                        value: function e(t, r, n) {
                            this.request = null;
                            if (n) {
                                this.state = n
                            }
                            this.error = {
                                playlist: this.master.playlists[r],
                                status: t.status,
                                message: 'HLS playlist request error at URL: ' + r,
                                responseText: t.responseText,
                                code: t.status >= 500 ? 4 : 2
                            };
                            this.trigger('error')
                        }
                    },
                    {
                        key: 'haveMetadata',
                        value: function e(t, r) {
                            var n = this;
                            this.request = null;
                            this.state = 'HAVE_METADATA';
                            var i = new A;
                            this.customTagParsers.forEach(function (e) {
                                return i.addParser(e)
                            });
                            this.customTagMappers.forEach(function (e) {
                                return i.addTagMapper(e)
                            });
                            i.push(t.responseText);
                            i.end();
                            i.manifest.uri = r;
                            i.manifest.attributes = i.manifest.attributes || {
                            };
                            var a = M(this.master, i.manifest);
                            this.targetDuration = i.manifest.targetDuration;
                            if (a) {
                                this.master = a;
                                this.media_ = this.master.playlists[i.manifest.uri]
                            } else {
                                this.trigger('playlistunchanged')
                            }
                            if (!this.media().endList) {
                                f.clearTimeout(this.mediaUpdateTimeout);
                                this.mediaUpdateTimeout = f.setTimeout(function () {
                                    n.trigger('mediaupdatetimeout')
                                }, N(this.media(), !!a))
                            }
                            this.trigger('loadedplaylist')
                        }
                    },
                    {
                        key: 'dispose',
                        value: function e() {
                            this.stopRequest();
                            f.clearTimeout(this.mediaUpdateTimeout)
                        }
                    },
                    {
                        key: 'stopRequest',
                        value: function e() {
                            if (this.request) {
                                var t = this.request;
                                this.request = null;
                                t.onreadystatechange = null;
                                t.abort()
                            }
                        }
                    },
                    {
                        key: 'media',
                        value: function e(t) {
                            var r = this;
                            if (!t) {
                                return this.media_
                            }
                            if (this.state === 'HAVE_NOTHING') {
                                throw new Error('Cannot switch media playlist from ' + this.state)
                            }
                            var n = this.state;
                            if (typeof t === 'string') {
                                if (!this.master.playlists[t]) {
                                    throw new Error('Unknown playlist URI: ' + t)
                                }
                                t = this.master.playlists[t]
                            }
                            var i = !this.media_ || t.uri !== this.media_.uri;
                            if (this.master.playlists[t.uri].endList) {
                                if (this.request) {
                                    this.request.onreadystatechange = null;
                                    this.request.abort();
                                    this.request = null
                                }
                                this.state = 'HAVE_METADATA';
                                this.media_ = t;
                                if (i) {
                                    this.trigger('mediachanging');
                                    this.trigger('mediachange')
                                }
                                return
                            }
                            if (!i) {
                                return
                            }
                            this.state = 'SWITCHING_MEDIA';
                            if (this.request) {
                                if (h(this.master.uri, t.uri) === this.request.url) {
                                    return
                                }
                                this.request.onreadystatechange = null;
                                this.request.abort();
                                this.request = null
                            }
                            if (this.media_) {
                                this.trigger('mediachanging')
                            }
                            this.request = this.hls_.xhr({
                                uri: h(this.master.uri, t.uri),
                                withCredentials: this.withCredentials
                            }, function (e, i) {
                                if (!r.request) {
                                    return
                                }
                                if (e) {
                                    return r.playlistRequestError(r.request, t.uri, n)
                                }
                                r.haveMetadata(i, t.uri);
                                if (n === 'HAVE_MASTER') {
                                    r.trigger('loadedmetadata')
                                } else {
                                    r.trigger('mediachange')
                                }
                            })
                        }
                    },
                    {
                        key: 'pause',
                        value: function e() {
                            this.stopRequest();
                            f.clearTimeout(this.mediaUpdateTimeout);
                            if (this.state === 'HAVE_NOTHING') {
                                this.started = false
                            }
                            if (this.state === 'SWITCHING_MEDIA') {
                                if (this.media_) {
                                    this.state = 'HAVE_METADATA'
                                } else {
                                    this.state = 'HAVE_MASTER'
                                }
                            } else if (this.state === 'HAVE_CURRENT_METADATA') {
                                this.state = 'HAVE_METADATA'
                            }
                        }
                    },
                    {
                        key: 'load',
                        value: function e(t) {
                            var r = this;
                            f.clearTimeout(this.mediaUpdateTimeout);
                            var n = this.media();
                            if (t) {
                                var i = n ? n.targetDuration / 2 * 1000 : 5 * 1000;
                                this.mediaUpdateTimeout = f.setTimeout(function () {
                                    return r.load()
                                }, i);
                                return
                            }
                            if (!this.started) {
                                this.start();
                                return
                            }
                            if (n && !n.endList) {
                                this.trigger('mediaupdatetimeout')
                            } else {
                                this.trigger('loadedplaylist')
                            }
                        }
                    },
                    {
                        key: 'start',
                        value: function e() {
                            var t = this;
                            this.started = true;
                            this.request = this.hls_.xhr({
                                uri: this.srcUrl,
                                withCredentials: this.withCredentials
                            }, function (e, r) {
                                if (!t.request) {
                                    return
                                }
                                t.request = null;
                                if (e) {
                                    t.error = {
                                        status: r.status,
                                        message: 'HLS playlist request error at URL: ' + t.srcUrl,
                                        responseText: r.responseText,
                                        code: 2
                                    };
                                    if (t.state === 'HAVE_NOTHING') {
                                        t.started = false
                                    }
                                    return t.trigger('error')
                                }
                                var n = new A;
                                t.customTagParsers.forEach(function (e) {
                                    return n.addParser(e)
                                });
                                t.customTagMappers.forEach(function (e) {
                                    return n.addTagMapper(e)
                                });
                                n.push(r.responseText);
                                n.end();
                                t.state = 'HAVE_MASTER';
                                n.manifest.uri = t.srcUrl;
                                if (n.manifest.playlists) {
                                    t.master = n.manifest;
                                    j(t.master);
                                    U(t.master);
                                    t.trigger('loadedplaylist');
                                    if (!t.request) {
                                        t.media(n.manifest.playlists[0])
                                    }
                                    return
                                }
                                t.master = {
                                    mediaGroups: {
                                        AUDIO: {
                                        },
                                        VIDEO: {
                                        },
                                        'CLOSED-CAPTIONS': {
                                        },
                                        SUBTITLES: {
                                        }
                                    },
                                    uri: f.location.href,
                                    playlists: [
                                        {
                                            uri: t.srcUrl,
                                            id: 0
                                        }
                                    ]
                                };
                                t.master.playlists[t.srcUrl] = t.master.playlists[0];
                                t.master.playlists[0].resolvedUri = t.srcUrl;
                                t.master.playlists[0].attributes = t.master.playlists[0].attributes || {
                                };
                                t.haveMetadata(r, t.srcUrl);
                                return t.trigger('loadedmetadata')
                            })
                        }
                    }
                ]);
                return t
            }(O);
            var q = t.createTimeRange;
            var F = function e(t, r) {
                var n = 0;
                var i = r - t.mediaSequence;
                var a = t.segments[i];
                if (a) {
                    if (typeof a.start !== 'undefined') {
                        return {
                            result: a.start,
                            precise: true
                        }
                    }
                    if (typeof a.end !== 'undefined') {
                        return {
                            result: a.end - a.duration,
                            precise: true
                        }
                    }
                }
                while (i--) {
                    a = t.segments[i];
                    if (typeof a.end !== 'undefined') {
                        return {
                            result: n + a.end,
                            precise: true
                        }
                    }
                    n += a.duration;
                    if (typeof a.start !== 'undefined') {
                        return {
                            result: n + a.start,
                            precise: true
                        }
                    }
                }
                return {
                    result: n,
                    precise: false
                }
            };
            var V = function e(t, r) {
                var n = 0;
                var i = void 0;
                var a = r - t.mediaSequence;
                for (; a < t.segments.length; a++) {
                    i = t.segments[a];
                    if (typeof i.start !== 'undefined') {
                        return {
                            result: i.start - n,
                            precise: true
                        }
                    }
                    n += i.duration;
                    if (typeof i.end !== 'undefined') {
                        return {
                            result: i.end - n,
                            precise: true
                        }
                    }
                }
                return {
                    result: - 1,
                    precise: false
                }
            };
            var H = function e(t, r, n) {
                var i = void 0;
                var a = void 0;
                if (typeof r === 'undefined') {
                    r = t.mediaSequence + t.segments.length
                }
                if (r < t.mediaSequence) {
                    return 0
                }
                i = F(t, r);
                if (i.precise) {
                    return i.result
                }
                a = V(t, r);
                if (a.precise) {
                    return a.result
                }
                return i.result + n
            };
            var z = function e(t, r, n) {
                if (!t) {
                    return 0
                }
                if (typeof n !== 'number') {
                    n = 0
                }
                if (typeof r === 'undefined') {
                    if (t.totalDuration) {
                        return t.totalDuration
                    }
                    if (!t.endList) {
                        return f.Infinity
                    }
                }
                return H(t, r, n)
            };
            var G = function e(t, r, n) {
                var i = 0;
                if (r > n) {
                    var a = [
                        n,
                        r
                    ];
                    r = a[0];
                    n = a[1]
                }
                if (r < 0) {
                    for (var s = r; s < Math.min(0, n); s++) {
                        i += t.targetDuration
                    }
                    r = 0
                }
                for (var o = r; o < n; o++) {
                    i += t.segments[o].duration
                }
                return i
            };
            var W = function e(t) {
                if (!t.segments.length) {
                    return 0
                }
                var r = t.segments.length - 1;
                var n = t.segments[r].duration || t.targetDuration;
                var i = n + t.targetDuration * 2;
                while (r--) {
                    n += t.segments[r].duration;
                    if (n >= i) {
                        break
                    }
                }
                return Math.max(0, r)
            };
            var Y = function e(t, r, n) {
                if (!t || !t.segments) {
                    return null
                }
                if (t.endList) {
                    return z(t)
                }
                if (r === null) {
                    return null
                }
                r = r || 0;
                var i = n ? W(t) : t.segments.length;
                return H(t, t.mediaSequence + i, r)
            };
            var $ = function e(t, r) {
                var n = true;
                var i = r || 0;
                var a = Y(t, r, n);
                if (a === null) {
                    return q()
                }
                return q(i, a)
            };
            var X = function e(t) {
                return t - Math.floor(t) === 0
            };
            var K = function e(t, r) {
                if (X(r)) {
                    return r + t * 0.1
                }
                var n = r.toString().split('.')[1].length;
                for (var i = 1; i <= n; i++) {
                    var a = Math.pow(10, i);
                    var s = r * a;
                    if (X(s) || i === n) {
                        return (s + t) / a
                    }
                }
            };
            var Q = K.bind(null, 1);
            var J = K.bind(null, - 1);
            var Z = function e(t, r, n, i) {
                var a = void 0;
                var s = void 0;
                var o = t.segments.length;
                var u = r - i;
                if (u < 0) {
                    if (n > 0) {
                        for (a = n - 1; a >= 0; a--) {
                            s = t.segments[a];
                            u += J(s.duration);
                            if (u > 0) {
                                return {
                                    mediaIndex: a,
                                    startTime: i - G(t, n, a)
                                }
                            }
                        }
                    }
                    return {
                        mediaIndex: 0,
                        startTime: r
                    }
                }
                if (n < 0) {
                    for (a = n; a < 0; a++) {
                        u -= t.targetDuration;
                        if (u < 0) {
                            return {
                                mediaIndex: 0,
                                startTime: r
                            }
                        }
                    }
                    n = 0
                }
                for (a = n; a < o; a++) {
                    s = t.segments[a];
                    u -= Q(s.duration);
                    if (u < 0) {
                        return {
                            mediaIndex: a,
                            startTime: i + G(t, n, a)
                        }
                    }
                }
                return {
                    mediaIndex: o - 1,
                    startTime: r
                }
            };
            var ee = function e(t) {
                return t.excludeUntil && t.excludeUntil > Date.now()
            };
            var te = function e(t) {
                return t.excludeUntil && t.excludeUntil === Infinity
            };
            var re = function e(t) {
                var r = ee(t);
                return !t.disabled && !r
            };
            var ne = function e(t) {
                return t.disabled
            };
            var ie = function e(t) {
                for (var r = 0; r < t.segments.length; r++) {
                    if (t.segments[r].key) {
                        return true
                    }
                }
                return false
            };
            var ae = function e(t) {
                for (var r = 0; r < t.segments.length; r++) {
                    if (t.segments[r].map) {
                        return true
                    }
                }
                return false
            };
            var se = function e(t, r) {
                return r.attributes && r.attributes[t]
            };
            var oe = function e(t, r, n) {
                var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
                if (!se('BANDWIDTH', n)) {
                    return NaN
                }
                var a = t * n.attributes.BANDWIDTH;
                return (a - i * 8) / r
            };
            var ue = function e(t, r) {
                if (t.playlists.length === 1) {
                    return true
                }
                var n = r.attributes.BANDWIDTH || Number.MAX_VALUE;
                return t.playlists.filter(function (e) {
                    if (!re(e)) {
                        return false
                    }
                    return (e.attributes.BANDWIDTH || 0) < n
                }).length === 0
            };
            var le = {
                duration: z,
                seekable: $,
                safeLiveIndex: W,
                getMediaInfoForTime: Z,
                isEnabled: re,
                isDisabled: ne,
                isBlacklisted: ee,
                isIncompatible: te,
                playlistEnd: Y,
                isAes: ie,
                isFmp4: ae,
                hasAttribute: se,
                estimateSegmentRequestTime: oe,
                isLowestEnabledRendition: ue
            };
            var ce = t.xhr,
                de = t.mergeOptions;
            var fe = function e() {
                var r = function e(r, n) {
                    r = de({
                        timeout: 45000
                    }, r);
                    var i = e.beforeRequest || t.Hls.xhr.beforeRequest;
                    if (i && typeof i === 'function') {
                        var a = i(r);
                        if (a) {
                            r = a
                        }
                    }
                    var s = ce(r, function (e, t) {
                        var r = s.response;
                        if (!e && r) {
                            s.responseTime = Date.now();
                            s.roundTripTime = s.responseTime - s.requestTime;
                            s.bytesReceived = r.byteLength || r.length;
                            if (!s.bandwidth) {
                                s.bandwidth = Math.floor(s.bytesReceived / s.roundTripTime * 8 * 1000)
                            }
                        }
                        if (t.headers) {
                            s.responseHeaders = t.headers
                        }
                        if (e && e.code === 'ETIMEDOUT') {
                            s.timedout = true
                        }
                        if (!e && !s.aborted && t.statusCode !== 200 && t.statusCode !== 206 && t.statusCode !== 0) {
                            e = new Error('XHR Failed with a response of: ' + (s && (r || s.responseText)))
                        }
                        n(e, s)
                    });
                    var o = s.abort;
                    s.abort = function () {
                        s.aborted = true;
                        return o.apply(s, arguments)
                    };
                    s.uri = r.uri;
                    s.requestTime = Date.now();
                    return s
                };
                return r
            };
            function he(e) {
                return e.subarray(0, e.byteLength - e[e.byteLength - 1])
            }
            var pe = function e(t, r) {
                if (!(t instanceof r)) {
                    throw new TypeError('Cannot call a class as a function')
                }
            };
            var ve = function () {
                function e(e, t) {
                    for (var r = 0; r < t.length; r++) {
                        var n = t[r];
                        n.enumerable = n.enumerable || false;
                        n.configurable = true;
                        if ('value' in n) n.writable = true;
                        Object.defineProperty(e, n.key, n)
                    }
                }
                return function (t, r, n) {
                    if (r) e(t.prototype, r);
                    if (n) e(t, n);
                    return t
                }
            }();
            var me = function e(t, r) {
                if (typeof r !== 'function' && r !== null) {
                    throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
                }
                t.prototype = Object.create(r && r.prototype, {
                    constructor: {
                        value: t,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                if (r) Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : t.__proto__ = r
            };
            var ge = function e(t, r) {
                if (!t) {
                    throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                }
                return r && (typeof r === 'object' || typeof r === 'function') ? r : t
            };
            var ye = function e() {
                var t = [
                    [[],
                    [
                    ],
                    [
                    ],
                    [
                    ],
                    [
                    ]],
                    [
                        [],
                        [
                        ],
                        [
                        ],
                        [
                        ],
                        [
                        ]
                    ]
                ];
                var r = t[0];
                var n = t[1];
                var i = r[4];
                var a = n[4];
                var s = void 0;
                var o = void 0;
                var u = void 0;
                var l = [
                ];
                var c = [
                ];
                var d = void 0;
                var f = void 0;
                var h = void 0;
                var p = void 0;
                var v = void 0;
                var m = void 0;
                for (s = 0; s < 256; s++) {
                    c[(l[s] = s << 1 ^ (s >> 7) * 283) ^ s] = s
                }
                for (o = u = 0; !i[o]; o ^= d || 1, u = c[u] || 1) {
                    p = u ^ u << 1 ^ u << 2 ^ u << 3 ^ u << 4;
                    p = p >> 8 ^ p & 255 ^ 99;
                    i[o] = p;
                    a[p] = o;
                    h = l[f = l[d = l[o]]];
                    m = h * 16843009 ^ f * 65537 ^ d * 257 ^ o * 16843008;
                    v = l[p] * 257 ^ p * 16843008;
                    for (s = 0; s < 4; s++) {
                        r[s][o] = v = v << 24 ^ v >>> 8;
                        n[s][p] = m = m << 24 ^ m >>> 8
                    }
                }
                for (s = 0; s < 5; s++) {
                    r[s] = r[s].slice(0);
                    n[s] = n[s].slice(0)
                }
                return t
            };
            var _e = null;
            var be = function () {
                function e(t) {
                    pe(this, e);
                    if (!_e) {
                        _e = ye()
                    }
                    this._tables = [
                        [_e[0][0].slice(),
                        _e[0][1].slice(),
                        _e[0][2].slice(),
                        _e[0][3].slice(),
                        _e[0][4].slice()],
                        [
                            _e[1][0].slice(),
                            _e[1][1].slice(),
                            _e[1][2].slice(),
                            _e[1][3].slice(),
                            _e[1][4].slice()
                        ]
                    ];
                    var r = void 0;
                    var n = void 0;
                    var i = void 0;
                    var a = void 0;
                    var s = void 0;
                    var o = this._tables[0][4];
                    var u = this._tables[1];
                    var l = t.length;
                    var c = 1;
                    if (l !== 4 && l !== 6 && l !== 8) {
                        throw new Error('Invalid aes key size')
                    }
                    a = t.slice(0);
                    s = [
                    ];
                    this._key = [
                        a,
                        s
                    ];
                    for (r = l; r < 4 * l + 28; r++) {
                        i = a[r - 1];
                        if (r % l === 0 || l === 8 && r % l === 4) {
                            i = o[i >>> 24] << 24 ^ o[i >> 16 & 255] << 16 ^ o[i >> 8 & 255] << 8 ^ o[i & 255];
                            if (r % l === 0) {
                                i = i << 8 ^ i >>> 24 ^ c << 24;
                                c = c << 1 ^ (c >> 7) * 283
                            }
                        }
                        a[r] = a[r - l] ^ i
                    }
                    for (n = 0; r; n++, r--) {
                        i = a[n & 3 ? r : r - 4];
                        if (r <= 4 || n < 4) {
                            s[n] = i
                        } else {
                            s[n] = u[0][o[i >>> 24]] ^ u[1][o[i >> 16 & 255]] ^ u[2][o[i >> 8 & 255]] ^ u[3][o[i & 255]]
                        }
                    }
                }
                e.prototype.decrypt = function e(t, r, n, i, a, s) {
                    var o = this._key[1];
                    var u = t ^ o[0];
                    var l = i ^ o[1];
                    var c = n ^ o[2];
                    var d = r ^ o[3];
                    var f = void 0;
                    var h = void 0;
                    var p = void 0;
                    var v = o.length / 4 - 2;
                    var m = void 0;
                    var g = 4;
                    var y = this._tables[1];
                    var _ = y[0];
                    var b = y[1];
                    var T = y[2];
                    var A = y[3];
                    var S = y[4];
                    for (m = 0; m < v; m++) {
                        f = _[u >>> 24] ^ b[l >> 16 & 255] ^ T[c >> 8 & 255] ^ A[d & 255] ^ o[g];
                        h = _[l >>> 24] ^ b[c >> 16 & 255] ^ T[d >> 8 & 255] ^ A[u & 255] ^ o[g + 1];
                        p = _[c >>> 24] ^ b[d >> 16 & 255] ^ T[u >> 8 & 255] ^ A[l & 255] ^ o[g + 2];
                        d = _[d >>> 24] ^ b[u >> 16 & 255] ^ T[l >> 8 & 255] ^ A[c & 255] ^ o[g + 3];
                        g += 4;
                        u = f;
                        l = h;
                        c = p
                    }
                    for (m = 0; m < 4; m++) {
                        a[(3 & - m) + s] = S[u >>> 24] << 24 ^ S[l >> 16 & 255] << 16 ^ S[c >> 8 & 255] << 8 ^ S[d & 255] ^ o[g++];
                        f = u;
                        u = l;
                        l = c;
                        c = d;
                        d = f
                    }
                };
                return e
            }();
            var Te = function () {
                function e() {
                    pe(this, e);
                    this.listeners = {
                    }
                }
                e.prototype.on = function e(t, r) {
                    if (!this.listeners[t]) {
                        this.listeners[t] = [
                        ]
                    }
                    this.listeners[t].push(r)
                };
                e.prototype.off = function e(t, r) {
                    if (!this.listeners[t]) {
                        return false
                    }
                    var n = this.listeners[t].indexOf(r);
                    this.listeners[t].splice(n, 1);
                    return n > - 1
                };
                e.prototype.trigger = function e(t) {
                    var r = this.listeners[t];
                    if (!r) {
                        return
                    }
                    if (arguments.length === 2) {
                        var n = r.length;
                        for (var i = 0; i < n; ++i) {
                            r[i].call(this, arguments[1])
                        }
                    } else {
                        var a = Array.prototype.slice.call(arguments, 1);
                        var s = r.length;
                        for (var o = 0; o < s; ++o) {
                            r[o].apply(this, a)
                        }
                    }
                };
                e.prototype.dispose = function e() {
                    this.listeners = {
                    }
                };
                e.prototype.pipe = function e(t) {
                    this.on('data', function (e) {
                        t.push(e)
                    })
                };
                return e
            }();
            var Ae = function (e) {
                me(t, e);
                function t() {
                    pe(this, t);
                    var r = ge(this, e.call(this, Te));
                    r.jobs = [
                    ];
                    r.delay = 1;
                    r.timeout_ = null;
                    return r
                }
                t.prototype.processJob_ = function e() {
                    this.jobs.shift()();
                    if (this.jobs.length) {
                        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                    } else {
                        this.timeout_ = null
                    }
                };
                t.prototype.push = function e(t) {
                    this.jobs.push(t);
                    if (!this.timeout_) {
                        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                    }
                };
                return t
            }(Te);
            var Se = function e(t) {
                return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
            };
            var ke = function e(t, r, n) {
                var i = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2);
                var a = new be(Array.prototype.slice.call(r));
                var s = new Uint8Array(t.byteLength);
                var o = new Int32Array(s.buffer);
                var u = void 0;
                var l = void 0;
                var c = void 0;
                var d = void 0;
                var f = void 0;
                var h = void 0;
                var p = void 0;
                var v = void 0;
                var m = void 0;
                u = n[0];
                l = n[1];
                c = n[2];
                d = n[3];
                for (m = 0; m < i.length; m += 4) {
                    f = Se(i[m]);
                    h = Se(i[m + 1]);
                    p = Se(i[m + 2]);
                    v = Se(i[m + 3]);
                    a.decrypt(f, h, p, v, o, m);
                    o[m] = Se(o[m] ^ u);
                    o[m + 1] = Se(o[m + 1] ^ l);
                    o[m + 2] = Se(o[m + 2] ^ c);
                    o[m + 3] = Se(o[m + 3] ^ d);
                    u = f;
                    l = h;
                    c = p;
                    d = v
                }
                return s
            };
            var we = function () {
                function e(t, r, n, i) {
                    pe(this, e);
                    var a = e.STEP;
                    var s = new Int32Array(t.buffer);
                    var o = new Uint8Array(t.byteLength);
                    var u = 0;
                    this.asyncStream_ = new Ae;
                    this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), r, n, o));
                    for (u = a; u < s.length; u += a) {
                        n = new Uint32Array([Se(s[u - 4]),
                        Se(s[u - 3]),
                        Se(s[u - 2]),
                        Se(s[u - 1])]);
                        this.asyncStream_.push(this.decryptChunk_(s.subarray(u, u + a), r, n, o))
                    }
                    this.asyncStream_.push(function () {
                        i(null, he(o))
                    })
                }
                e.prototype.decryptChunk_ = function e(t, r, n, i) {
                    return function () {
                        var e = ke(t, r, n);
                        i.set(e, t.byteOffset)
                    }
                };
                ve(e, null, [
                    {
                        key: 'STEP',
                        get: function e() {
                            return 32000
                        }
                    }
                ]);
                return e
            }();
            var Ce = function e(t, r) {
                return t.start(r) + '-' + t.end(r)
            };
            var Ee = function e(t, r) {
                var n = t.toString(16);
                return '00'.substring(0, 2 - n.length) + n + (r % 2 ? ' ' : '')
            };
            var Ie = function e(t) {
                if (t >= 32 && t < 126) {
                    return String.fromCharCode(t)
                }
                return '.'
            };
            var Pe = function e(t) {
                var r = {
                };
                Object.keys(t).forEach(function (e) {
                    var n = t[e];
                    if (ArrayBuffer.isView(n)) {
                        r[e] = {
                            bytes: n.buffer,
                            byteOffset: n.byteOffset,
                            byteLength: n.byteLength
                        }
                    } else {
                        r[e] = n
                    }
                });
                return r
            };
            var Oe = function e(t) {
                var r = t.byterange || {
                    length: Infinity,
                    offset: 0
                };
                return [r.length,
                r.offset,
                t.resolvedUri].join(',')
            };
            var xe = function e(t) {
                var r = Array.prototype.slice.call(t);
                var n = 16;
                var i = '';
                var a = void 0;
                var s = void 0;
                for (var o = 0; o < r.length / n; o++) {
                    a = r.slice(o * n, o * n + n).map(Ee).join('');
                    s = r.slice(o * n, o * n + n).map(Ie).join('');
                    i += a + ' ' + s + '\n'
                }
                return i
            };
            var Le = function e(t) {
                var r = t.bytes;
                return xe(r)
            };
            var De = function e(t) {
                var r = '';
                var n = void 0;
                for (n = 0; n < t.length; n++) {
                    r += Ce(t, n) + ' '
                }
                return r
            };
            var Re = Object.freeze({
                createTransferableMessage: Pe,
                initSegmentId: Oe,
                hexDump: xe,
                tagDump: Le,
                textRanges: De
            });
            var Me = function e(t, r, n, i) {
                var a = void 0;
                if (r === 'stream') {
                    a = new Date(i * 1000 + n.getTime());
                    var s = t.toISOString();
                    var o = n.toISOString();
                    var u = a.toISOString();
                    return o <= s && s <= u
                } else if (r === 'player') {
                    a = i + n;
                    return n <= t && t <= a
                }
            };
            var je = function e(t, r, n) {
                if (!n.segments || n.segments.length === 0) {
                    return null
                }
                if (r !== 'player' && r !== 'stream') {
                    return null
                }
                var i = 0;
                for (var a = 0; a < n.segments.length; a++) {
                    var s = n.segments[a];
                    var o = i + s.duration;
                    var u = void 0;
                    var l = void 0;
                    if (r === 'player') {
                        u = s.start;
                        l = i
                    } else {
                        u = s.dateTimeObject;
                        l = s.dateTimeObject
                    }
                    var c = typeof s.start !== 'undefined' && typeof s.end !== 'undefined' && Me(t, r, u, s.end - s.start);
                    var d = Me(t, r, l, s.duration);
                    if (c) {
                        return {
                            segment: s,
                            estimatedStart: l,
                            type: 'accurate'
                        }
                    } else if (d) {
                        return {
                            segment: s,
                            estimatedStart: l,
                            type: 'estimate'
                        }
                    }
                    i = o
                }
                return null
            };
            var Ue = function e(t, r) {
                return je(t, 'player', r)
            };
            var Ne = function e(t, r) {
                var n = void 0;
                try {
                    n = new Date(t)
                } catch (e) {
                    return null
                }
                return je(n, 'stream', r)
            };
            var Be = function e(t, r) {
                var n = void 0;
                var i = void 0;
                try {
                    n = new Date(t);
                    i = new Date(r)
                } catch (e) {
                }
                var a = n.getTime();
                var s = i.getTime();
                return (s - a) / 1000
            };
            var qe = function e(t) {
                if (!t.segments || t.segments.length === 0) {
                    return false
                }
                for (var r = 0; r < t.segments.length; r++) {
                    var n = t.segments[r];
                    if (!n.dateTimeObject) {
                        return false
                    }
                }
                return true
            };
            var Fe = function e(t) {
                var r = t.playlist,
                    n = t.time,
                    i = n === undefined ? undefined : n,
                    a = t.callback;
                if (!a) {
                    throw new Error('getStreamTime: callback must be provided')
                }
                if (!r || i === undefined) {
                    return a({
                        message: 'getStreamTime: playlist and time must be provided'
                    })
                }
                var s = Ue(i, r);
                if (!s) {
                    return a({
                        message: 'valid streamTime was not found'
                    })
                }
                if (s.type === 'estimate') {
                    return a({
                        message: 'Accurate streamTime could not be determined. Please seek to e.seekTime and try again',
                        seekTime: s.estimatedStart
                    })
                }
                var o = {
                    mediaSeconds: i
                };
                if (s.segment.dateTimeObject) {
                    o.programDateTime = s.segment.dateTimeObject.toISOString()
                }
                return a(null, o)
            };
            var Ve = function e(t) {
                var r = t.streamTime,
                    n = t.playlist,
                    i = t.retryCount,
                    a = i === undefined ? 2 : i,
                    s = t.seekTo,
                    o = t.pauseAfterSeek,
                    u = o === undefined ? true : o,
                    l = t.tech,
                    c = t.callback;
                if (!c) {
                    throw new Error('seekToStreamTime: callback must be provided')
                }
                if (typeof r === 'undefined' || !n || !s) {
                    return c({
                        message: 'seekToStreamTime: streamTime, seekTo and playlist must be provided'
                    })
                }
                if (!n.endList && !l.hasStarted_) {
                    return c({
                        message: 'player must be playing a live stream to start buffering'
                    })
                }
                if (!qe(n)) {
                    return c({
                        message: 'programDateTime tags must be provided in the manifest ' + n.resolvedUri
                    })
                }
                var d = Ne(r, n);
                if (!d) {
                    return c({
                        message: r + ' was not found in the stream'
                    })
                }
                if (d.type === 'estimate') {
                    if (a === 0) {
                        return c({
                            message: r + ' is not buffered yet. Try again'
                        })
                    }
                    return e({
                        streamTime: r,
                        playlist: n,
                        retryCount: a - 1,
                        seekTo: s,
                        pauseAfterSeek: u,
                        tech: l,
                        callback: c
                    })
                }
                var f = d.segment;
                var h = Be(f.dateTimeObject, r);
                var p = f.start + h;
                var v = function e() {
                    return c(null, l.currentTime())
                };
                l.one('seeked', v);
                if (u) {
                    l.pause()
                }
                s(p)
            };
            var He = 1 / 30;
            var ze = He * 3;
            var Ge = function e(r, n) {
                var i = [
                ];
                var a = void 0;
                if (r && r.length) {
                    for (a = 0; a < r.length; a++) {
                        if (n(r.start(a), r.end(a))) {
                            i.push([r.start(a),
                            r.end(a)])
                        }
                    }
                }
                return t.createTimeRanges(i)
            };
            var We = function e(t, r) {
                return Ge(t, function (e, t) {
                    return e - He <= r && t + He >= r
                })
            };
            var Ye = function e(t, r) {
                return Ge(t, function (e) {
                    return e - He >= r
                })
            };
            var $e = function e(r) {
                if (r.length < 2) {
                    return t.createTimeRanges()
                }
                var n = [
                ];
                for (var i = 1; i < r.length; i++) {
                    var a = r.end(i - 1);
                    var s = r.start(i);
                    n.push([a,
                        s])
                }
                return t.createTimeRanges(n)
            };
            var Xe = function e(t) {
                var r = [
                ];
                if (!t || !t.length) {
                    return ''
                }
                for (var n = 0; n < t.length; n++) {
                    r.push(t.start(n) + ' => ' + t.end(n))
                }
                return r.join(', ')
            };
            var Ke = function e(t, r) {
                var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
                var i = t.length ? t.end(t.length - 1) : 0;
                return (i - r) / n
            };
            var Qe = function e(t) {
                var r = [
                ];
                for (var n = 0; n < t.length; n++) {
                    r.push({
                        start: t.start(n),
                        end: t.end(n)
                    })
                }
                return r
            };
            var Je = function e(t, r, n) {
                var i = r.player_;
                if (n.captions && n.captions.length) {
                    if (!t.inbandTextTracks_) {
                        t.inbandTextTracks_ = {
                        }
                    }
                    for (var a in n.captionStreams) {
                        if (!t.inbandTextTracks_[a]) {
                            i.tech_.trigger({
                                type: 'usage',
                                name: 'hls-608'
                            });
                            var s = i.textTracks().getTrackById(a);
                            if (s) {
                                t.inbandTextTracks_[a] = s
                            } else {
                                t.inbandTextTracks_[a] = i.addRemoteTextTrack({
                                    kind: 'captions',
                                    id: a,
                                    label: a
                                }, false).track
                            }
                        }
                    }
                }
                if (n.metadata && n.metadata.length && !t.metadataTrack_) {
                    t.metadataTrack_ = i.addRemoteTextTrack({
                        kind: 'metadata',
                        label: 'Timed Metadata'
                    }, false).track;
                    t.metadataTrack_.inBandMetadataTrackDispatchType = n.metadata.dispatchType
                }
            };
            var Ze = function e(t, r, n) {
                var i = void 0;
                var a = void 0;
                if (!n) {
                    return
                }
                if (!n.cues) {
                    return
                }
                i = n.cues.length;
                while (i--) {
                    a = n.cues[i];
                    if (a.startTime <= r && a.endTime >= t) {
                        n.removeCue(a)
                    }
                }
            };
            var et = function e(r) {
                Object.defineProperties(r.frame, {
                    id: {
                        get: function e() {
                            t.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');
                            return r.value.key
                        }
                    },
                    value: {
                        get: function e() {
                            t.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');
                            return r.value.data
                        }
                    },
                    privateData: {
                        get: function e() {
                            t.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');
                            return r.value.data
                        }
                    }
                })
            };
            var tt = function e(t) {
                var r = void 0;
                if (isNaN(t) || Math.abs(t) === Infinity) {
                    r = Number.MAX_VALUE
                } else {
                    r = t
                }
                return r
            };
            var rt = function e(t, r, n) {
                var i = f.WebKitDataCue || f.VTTCue;
                if (r) {
                    r.forEach(function (e) {
                        var t = e.stream;
                        this.inbandTextTracks_[t].addCue(new i(e.startTime + this.timestampOffset, e.endTime + this.timestampOffset, e.text))
                    }, t)
                }
                if (n) {
                    var a = tt(t.mediaSource_.duration);
                    n.forEach(function (e) {
                        var t = e.cueTime + this.timestampOffset;
                        e.frames.forEach(function (e) {
                            var r = new i(t, t, e.value || e.url || e.data || '');
                            r.frame = e;
                            r.value = e;
                            et(r);
                            this.metadataTrack_.addCue(r)
                        }, this)
                    }, t);
                    if (t.metadataTrack_ && t.metadataTrack_.cues && t.metadataTrack_.cues.length) {
                        var s = t.metadataTrack_.cues;
                        var o = [
                        ];
                        for (var u = 0; u < s.length; u++) {
                            if (s[u]) {
                                o.push(s[u])
                            }
                        }
                        var l = o.reduce(function (e, t) {
                            var r = e[t.startTime] || [
                            ];
                            r.push(t);
                            e[t.startTime] = r;
                            return e
                        }, {
                        });
                        var c = Object.keys(l).sort(function (e, t) {
                            return Number(e) - Number(t)
                        });
                        c.forEach(function (e, t) {
                            var r = l[e];
                            var n = Number(c[t + 1]) || a;
                            r.forEach(function (e) {
                                e.endTime = n
                            })
                        })
                    }
                }
            };
            var nt = typeof window !== 'undefined' ? window : {
            },
                it = typeof Symbol === 'undefined' ? '__target' : Symbol(),
                at = 'application/javascript',
                st = nt.BlobBuilder || nt.WebKitBlobBuilder || nt.MozBlobBuilder || nt.MSBlobBuilder,
                ot = nt.URL || nt.webkitURL || ot && ot.msURL,
                ut = nt.Worker;
            function lt(e, t) {
                return function r(n) {
                    var i = this;
                    if (!t) {
                        return new ut(e)
                    } else if (ut && !n) {
                        var a = t.toString().replace(/^function.+?{/, '').slice(0, - 1),
                            s = ht(a);
                        this[it] = new ut(s);
                        pt(this[it], s);
                        return this[it]
                    } else {
                        var o = {
                            postMessage: function e(t) {
                                if (i.onmessage) {
                                    setTimeout(function () {
                                        i.onmessage({
                                            data: t,
                                            target: o
                                        })
                                    })
                                }
                            }
                        };
                        t.call(o);
                        this.postMessage = function (e) {
                            setTimeout(function () {
                                o.onmessage({
                                    data: e,
                                    target: i
                                })
                            })
                        };
                        this.isThisThread = true
                    }
                }
            }
            if (ut) {
                var ct,
                    dt = ht('self.onmessage = function () {}'),
                    ft = new Uint8Array(1);
                try {
                    ct = new ut(dt);
                    ct.postMessage(ft, [
                        ft.buffer
                    ])
                } catch (e) {
                    ut = null
                } finally {
                    ot.revokeObjectURL(dt);
                    if (ct) {
                        ct.terminate()
                    }
                }
            }
            function ht(e) {
                try {
                    return ot.createObjectURL(new Blob([e], {
                        type: at
                    }))
                } catch (r) {
                    var t = new st;
                    t.append(e);
                    return ot.createObjectURL(t.getBlob(type))
                }
            }
            function pt(e, t) {
                if (!e || !t) return;
                var r = e.terminate;
                e.objURL = t;
                e.terminate = function () {
                    if (e.objURL) ot.revokeObjectURL(e.objURL);
                    r.call(e)
                }
            }
            var vt = new lt('./transmuxer-worker.worker.js', function (e, t) {
                var r = this;
                var n = function () {
                    var e = Math.pow(2, 32) - 1;
                    var t,
                        n,
                        i,
                        a,
                        s,
                        o,
                        u,
                        l,
                        c,
                        d,
                        f,
                        h,
                        p,
                        v,
                        m,
                        g,
                        y,
                        _,
                        b,
                        T,
                        A,
                        S,
                        k,
                        w,
                        C,
                        E,
                        I,
                        P,
                        O,
                        x,
                        L,
                        D,
                        R,
                        M,
                        j,
                        U;
                    (function () {
                        var e;
                        k = {
                            avc1: [
                            ],
                            avcC: [
                            ],
                            btrt: [
                            ],
                            dinf: [
                            ],
                            dref: [
                            ],
                            esds: [
                            ],
                            ftyp: [
                            ],
                            hdlr: [
                            ],
                            mdat: [
                            ],
                            mdhd: [
                            ],
                            mdia: [
                            ],
                            mfhd: [
                            ],
                            minf: [
                            ],
                            moof: [
                            ],
                            moov: [
                            ],
                            mp4a: [
                            ],
                            mvex: [
                            ],
                            mvhd: [
                            ],
                            sdtp: [
                            ],
                            smhd: [
                            ],
                            stbl: [
                            ],
                            stco: [
                            ],
                            stsc: [
                            ],
                            stsd: [
                            ],
                            stsz: [
                            ],
                            stts: [
                            ],
                            styp: [
                            ],
                            tfdt: [
                            ],
                            tfhd: [
                            ],
                            traf: [
                            ],
                            trak: [
                            ],
                            trun: [
                            ],
                            trex: [
                            ],
                            tkhd: [
                            ],
                            vmhd: [
                            ]
                        };
                        if (typeof Uint8Array === 'undefined') {
                            return
                        }
                        for (e in k) {
                            if (k.hasOwnProperty(e)) {
                                k[e] = [
                                    e.charCodeAt(0),
                                    e.charCodeAt(1),
                                    e.charCodeAt(2),
                                    e.charCodeAt(3)
                                ]
                            }
                        }
                        w = new Uint8Array(['i'.charCodeAt(0),
                        's'.charCodeAt(0),
                        'o'.charCodeAt(0),
                        'm'.charCodeAt(0)]);
                        E = new Uint8Array(['a'.charCodeAt(0),
                        'v'.charCodeAt(0),
                        'c'.charCodeAt(0),
                        '1'.charCodeAt(0)]);
                        C = new Uint8Array([0,
                            0,
                            0,
                            1]);
                        I = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            118,
                            105,
                            100,
                            101,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            86,
                            105,
                            100,
                            101,
                            111,
                            72,
                            97,
                            110,
                            100,
                            108,
                            101,
                            114,
                            0]);
                        P = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            115,
                            111,
                            117,
                            110,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            83,
                            111,
                            117,
                            110,
                            100,
                            72,
                            97,
                            110,
                            100,
                            108,
                            101,
                            114,
                            0]);
                        O = {
                            video: I,
                            audio: P
                        };
                        D = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            12,
                            117,
                            114,
                            108,
                            32,
                            0,
                            0,
                            0,
                            1]);
                        L = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0]);
                        R = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0]);
                        M = R;
                        j = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0]);
                        U = R;
                        x = new Uint8Array([0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0])
                    })();
                    t = function e(t) {
                        var r = [
                        ],
                            n = 0,
                            i,
                            a,
                            s;
                        for (i = 1; i < arguments.length; i++) {
                            r.push(arguments[i])
                        }
                        i = r.length;
                        while (i--) {
                            n += r[i].byteLength
                        }
                        a = new Uint8Array(n + 8);
                        s = new DataView(a.buffer, a.byteOffset, a.byteLength);
                        s.setUint32(0, a.byteLength);
                        a.set(t, 4);
                        for (i = 0, n = 8; i < r.length; i++) {
                            a.set(r[i], n);
                            n += r[i].byteLength
                        }
                        return a
                    };
                    n = function e() {
                        return t(k.dinf, t(k.dref, D))
                    };
                    i = function e(r) {
                        return t(k.esds, new Uint8Array([0,
                            0,
                            0,
                            0,
                            3,
                            25,
                            0,
                            0,
                            0,
                            4,
                            17,
                            64,
                            21,
                            0,
                            6,
                            0,
                            0,
                            0,
                            218,
                            192,
                            0,
                            0,
                            218,
                            192,
                            5,
                            2,
                            r.audioobjecttype << 3 | r.samplingfrequencyindex >>> 1,
                            r.samplingfrequencyindex << 7 | r.channelcount << 3,
                            6,
                            1,
                            2]))
                    };
                    a = function e() {
                        return t(k.ftyp, w, C, w, E)
                    };
                    g = function e(r) {
                        return t(k.hdlr, O[r])
                    };
                    s = function e(r) {
                        return t(k.mdat, r)
                    };
                    m = function e(r) {
                        var n = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            2,
                            0,
                            0,
                            0,
                            3,
                            0,
                            1,
                            95,
                            144,
                            r.duration >>> 24 & 255,
                            r.duration >>> 16 & 255,
                            r.duration >>> 8 & 255,
                            r.duration & 255,
                            85,
                            196,
                            0,
                            0]);
                        if (r.samplerate) {
                            n[12] = r.samplerate >>> 24 & 255;
                            n[13] = r.samplerate >>> 16 & 255;
                            n[14] = r.samplerate >>> 8 & 255;
                            n[15] = r.samplerate & 255
                        }
                        return t(k.mdhd, n)
                    };
                    v = function e(r) {
                        return t(k.mdia, m(r), g(r.type), u(r))
                    };
                    o = function e(r) {
                        return t(k.mfhd, new Uint8Array([0,
                            0,
                            0,
                            0,
                            (r & 4278190080) >> 24,
                            (r & 16711680) >> 16,
                            (r & 65280) >> 8,
                            r & 255]))
                    };
                    u = function e(r) {
                        return t(k.minf, r.type === 'video' ? t(k.vmhd, x) : t(k.smhd, L), n(), _(r))
                    };
                    l = function e(r, n) {
                        var i = [
                        ],
                            a = n.length;
                        while (a--) {
                            i[a] = T(n[a])
                        }
                        return t.apply(null, [
                            k.moof,
                            o(r)
                        ].concat(i))
                    };
                    c = function e(r) {
                        var n = r.length,
                            i = [
                            ];
                        while (n--) {
                            i[n] = h(r[n])
                        }
                        return t.apply(null, [
                            k.moov,
                            f(4294967295)
                        ].concat(i).concat(d(r)))
                    };
                    d = function e(r) {
                        var n = r.length,
                            i = [
                            ];
                        while (n--) {
                            i[n] = A(r[n])
                        }
                        return t.apply(null, [
                            k.mvex
                        ].concat(i))
                    };
                    f = function e(r) {
                        var n = new Uint8Array([0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            2,
                            0,
                            1,
                            95,
                            144,
                            (r & 4278190080) >> 24,
                            (r & 16711680) >> 16,
                            (r & 65280) >> 8,
                            r & 255,
                            0,
                            1,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            64,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            255,
                            255,
                            255,
                            255]);
                        return t(k.mvhd, n)
                    };
                    y = function e(r) {
                        var n = r.samples || [
                        ],
                            i = new Uint8Array(4 + n.length),
                            a,
                            s;
                        for (s = 0; s < n.length; s++) {
                            a = n[s].flags;
                            i[s + 4] = a.dependsOn << 4 | a.isDependedOn << 2 | a.hasRedundancy
                        }
                        return t(k.sdtp, i)
                    };
                    _ = function e(r) {
                        return t(k.stbl, b(r), t(k.stts, U), t(k.stsc, M), t(k.stsz, j), t(k.stco, R))
                    };
                    (function () {
                        var e,
                            r;
                        b = function n(i) {
                            return t(k.stsd, new Uint8Array([0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                1]), i.type === 'video' ? e(i) : r(i))
                        };
                        e = function e(r) {
                            var n = r.sps || [
                            ],
                                i = r.pps || [
                                ],
                                a = [
                                ],
                                s = [
                                ],
                                o;
                            for (o = 0; o < n.length; o++) {
                                a.push((n[o].byteLength & 65280) >>> 8);
                                a.push(n[o].byteLength & 255);
                                a = a.concat(Array.prototype.slice.call(n[o]))
                            }
                            for (o = 0; o < i.length; o++) {
                                s.push((i[o].byteLength & 65280) >>> 8);
                                s.push(i[o].byteLength & 255);
                                s = s.concat(Array.prototype.slice.call(i[o]))
                            }
                            return t(k.avc1, new Uint8Array([0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                (r.width & 65280) >> 8,
                                r.width & 255,
                                (r.height & 65280) >> 8,
                                r.height & 255,
                                0,
                                72,
                                0,
                                0,
                                0,
                                72,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                1,
                                19,
                                118,
                                105,
                                100,
                                101,
                                111,
                                106,
                                115,
                                45,
                                99,
                                111,
                                110,
                                116,
                                114,
                                105,
                                98,
                                45,
                                104,
                                108,
                                115,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                24,
                                17,
                                17]), t(k.avcC, new Uint8Array([1,
                                    r.profileIdc,
                                    r.profileCompatibility,
                                    r.levelIdc,
                                    255].concat([n.length]).concat(a).concat([i.length]).concat(s))), t(k.btrt, new Uint8Array([0,
                                        28,
                                        156,
                                        128,
                                        0,
                                        45,
                                        198,
                                        192,
                                        0,
                                        45,
                                        198,
                                        192])))
                        };
                        r = function e(r) {
                            return t(k.mp4a, new Uint8Array([0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                1,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                0,
                                (r.channelcount & 65280) >> 8,
                                r.channelcount & 255,
                                (r.samplesize & 65280) >> 8,
                                r.samplesize & 255,
                                0,
                                0,
                                0,
                                0,
                                (r.samplerate & 65280) >> 8,
                                r.samplerate & 255,
                                0,
                                0]), i(r))
                        }
                    })();
                    p = function e(r) {
                        var n = new Uint8Array([0,
                            0,
                            0,
                            7,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            (r.id & 4278190080) >> 24,
                            (r.id & 16711680) >> 16,
                            (r.id & 65280) >> 8,
                            r.id & 255,
                            0,
                            0,
                            0,
                            0,
                            (r.duration & 4278190080) >> 24,
                            (r.duration & 16711680) >> 16,
                            (r.duration & 65280) >> 8,
                            r.duration & 255,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            64,
                            0,
                            0,
                            0,
                            (r.width & 65280) >> 8,
                            r.width & 255,
                            0,
                            0,
                            (r.height & 65280) >> 8,
                            r.height & 255,
                            0,
                            0]);
                        return t(k.tkhd, n)
                    };
                    T = function r(n) {
                        var i,
                            a,
                            s,
                            o,
                            u,
                            l,
                            c;
                        i = t(k.tfhd, new Uint8Array([0,
                            0,
                            0,
                            58,
                            (n.id & 4278190080) >> 24,
                            (n.id & 16711680) >> 16,
                            (n.id & 65280) >> 8,
                            n.id & 255,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0]));
                        l = Math.floor(n.baseMediaDecodeTime / (e + 1));
                        c = Math.floor(n.baseMediaDecodeTime % (e + 1));
                        a = t(k.tfdt, new Uint8Array([1,
                            0,
                            0,
                            0,
                            l >>> 24 & 255,
                            l >>> 16 & 255,
                            l >>> 8 & 255,
                            l & 255,
                            c >>> 24 & 255,
                            c >>> 16 & 255,
                            c >>> 8 & 255,
                            c & 255]));
                        u = 32 + 20 + 8 + 16 + 8 + 8;
                        if (n.type === 'audio') {
                            s = S(n, u);
                            return t(k.traf, i, a, s)
                        }
                        o = y(n);
                        s = S(n, o.length + u);
                        return t(k.traf, i, a, s, o)
                    };
                    h = function e(r) {
                        r.duration = r.duration || 4294967295;
                        return t(k.trak, p(r), v(r))
                    };
                    A = function e(r) {
                        var n = new Uint8Array([0,
                            0,
                            0,
                            0,
                            (r.id & 4278190080) >> 24,
                            (r.id & 16711680) >> 16,
                            (r.id & 65280) >> 8,
                            r.id & 255,
                            0,
                            0,
                            0,
                            1,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            0,
                            1,
                            0,
                            1]);
                        if (r.type !== 'video') {
                            n[n.length - 1] = 0
                        }
                        return t(k.trex, n)
                    };
                    (function () {
                        var e,
                            r,
                            n;
                        n = function e(t, r) {
                            var n = 0,
                                i = 0,
                                a = 0,
                                s = 0;
                            if (t.length) {
                                if (t[0].duration !== undefined) {
                                    n = 1
                                }
                                if (t[0].size !== undefined) {
                                    i = 2
                                }
                                if (t[0].flags !== undefined) {
                                    a = 4
                                }
                                if (t[0].compositionTimeOffset !== undefined) {
                                    s = 8
                                }
                            }
                            return [0,
                                0,
                                n | i | a | s,
                                1,
                                (t.length & 4278190080) >>> 24,
                                (t.length & 16711680) >>> 16,
                                (t.length & 65280) >>> 8,
                                t.length & 255,
                                (r & 4278190080) >>> 24,
                                (r & 16711680) >>> 16,
                                (r & 65280) >>> 8,
                                r & 255]
                        };
                        r = function e(r, i) {
                            var a,
                                s,
                                o,
                                u;
                            s = r.samples || [
                            ];
                            i += 8 + 12 + 16 * s.length;
                            a = n(s, i);
                            for (u = 0; u < s.length; u++) {
                                o = s[u];
                                a = a.concat([(o.duration & 4278190080) >>> 24,
                                (o.duration & 16711680) >>> 16,
                                (o.duration & 65280) >>> 8,
                                o.duration & 255,
                                (o.size & 4278190080) >>> 24,
                                (o.size & 16711680) >>> 16,
                                (o.size & 65280) >>> 8,
                                o.size & 255,
                                o.flags.isLeading << 2 | o.flags.dependsOn,
                                o.flags.isDependedOn << 6 | o.flags.hasRedundancy << 4 | o.flags.paddingValue << 1 | o.flags.isNonSyncSample,
                                o.flags.degradationPriority & 240 << 8,
                                o.flags.degradationPriority & 15,
                                (o.compositionTimeOffset & 4278190080) >>> 24,
                                (o.compositionTimeOffset & 16711680) >>> 16,
                                (o.compositionTimeOffset & 65280) >>> 8,
                                o.compositionTimeOffset & 255])
                            }
                            return t(k.trun, new Uint8Array(a))
                        };
                        e = function e(r, i) {
                            var a,
                                s,
                                o,
                                u;
                            s = r.samples || [
                            ];
                            i += 8 + 12 + 8 * s.length;
                            a = n(s, i);
                            for (u = 0; u < s.length; u++) {
                                o = s[u];
                                a = a.concat([(o.duration & 4278190080) >>> 24,
                                (o.duration & 16711680) >>> 16,
                                (o.duration & 65280) >>> 8,
                                o.duration & 255,
                                (o.size & 4278190080) >>> 24,
                                (o.size & 16711680) >>> 16,
                                (o.size & 65280) >>> 8,
                                o.size & 255])
                            }
                            return t(k.trun, new Uint8Array(a))
                        };
                        S = function t(n, i) {
                            if (n.type === 'audio') {
                                return e(n, i)
                            }
                            return r(n, i)
                        }
                    })();
                    var N = {
                        ftyp: a,
                        mdat: s,
                        moof: l,
                        moov: c,
                        initSegment: function e(t) {
                            var r = a(),
                                n = c(t),
                                i;
                            i = new Uint8Array(r.byteLength + n.byteLength);
                            i.set(r);
                            i.set(n, r.byteLength);
                            return i
                        }
                    };
                    var B = function e(t) {
                        return t >>> 0
                    };
                    var q = {
                        toUnsigned: B
                    };
                    var F = q.toUnsigned;
                    var V,
                        H,
                        z,
                        G,
                        W;
                    V = function e(t, r) {
                        var n = [
                        ],
                            i,
                            a,
                            s,
                            o,
                            u;
                        if (!r.length) {
                            return null
                        }
                        for (i = 0; i < t.byteLength;) {
                            a = F(t[i] << 24 | t[i + 1] << 16 | t[i + 2] << 8 | t[i + 3]);
                            s = H(t.subarray(i + 4, i + 8));
                            o = a > 1 ? i + a : t.byteLength;
                            if (s === r[0]) {
                                if (r.length === 1) {
                                    n.push(t.subarray(i + 8, o))
                                } else {
                                    u = V(t.subarray(i + 8, o), r.slice(1));
                                    if (u.length) {
                                        n = n.concat(u)
                                    }
                                }
                            }
                            i = o
                        }
                        return n
                    };
                    H = function e(t) {
                        var r = '';
                        r += String.fromCharCode(t[0]);
                        r += String.fromCharCode(t[1]);
                        r += String.fromCharCode(t[2]);
                        r += String.fromCharCode(t[3]);
                        return r
                    };
                    z = function e(t) {
                        var r = {
                        },
                            n = V(t, [
                                'moov',
                                'trak'
                            ]);
                        return n.reduce(function (e, t) {
                            var r,
                                n,
                                i,
                                a,
                                s;
                            r = V(t, [
                                'tkhd'
                            ])[0];
                            if (!r) {
                                return null
                            }
                            n = r[0];
                            i = n === 0 ? 12 : 20;
                            a = F(r[i] << 24 | r[i + 1] << 16 | r[i + 2] << 8 | r[i + 3]);
                            s = V(t, [
                                'mdia',
                                'mdhd'
                            ])[0];
                            if (!s) {
                                return null
                            }
                            n = s[0];
                            i = n === 0 ? 12 : 20;
                            e[a] = F(s[i] << 24 | s[i + 1] << 16 | s[i + 2] << 8 | s[i + 3]);
                            return e
                        }, r)
                    };
                    G = function e(t, r) {
                        var n,
                            i,
                            a;
                        n = V(r, [
                            'moof',
                            'traf'
                        ]);
                        i = [
                        ].concat.apply([], n.map(function (e) {
                            return V(e, [
                                'tfhd'
                            ]).map(function (r) {
                                var n,
                                    i,
                                    a;
                                n = F(r[4] << 24 | r[5] << 16 | r[6] << 8 | r[7]);
                                i = t[n] || 90000;
                                a = V(e, [
                                    'tfdt'
                                ]).map(function (e) {
                                    var t,
                                        r;
                                    t = e[0];
                                    r = F(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]);
                                    if (t === 1) {
                                        r *= Math.pow(2, 32);
                                        r += F(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])
                                    }
                                    return r
                                })[0];
                                a = a || Infinity;
                                return a / i
                            })
                        }));
                        a = Math.min.apply(null, i);
                        return isFinite(a) ? a : 0
                    };
                    W = function e(t) {
                        var r = V(t, [
                            'moov',
                            'trak'
                        ]);
                        var n = [
                        ];
                        r.forEach(function (e) {
                            var t = V(e, [
                                'mdia',
                                'hdlr'
                            ]);
                            var r = V(e, [
                                'tkhd'
                            ]);
                            t.forEach(function (e, t) {
                                var i = H(e.subarray(8, 12));
                                var a = r[t];
                                var s;
                                var o;
                                var u;
                                if (i === 'vide') {
                                    s = new DataView(a.buffer, a.byteOffset, a.byteLength);
                                    o = s.getUint8(0);
                                    u = o === 0 ? s.getUint32(12) : s.getUint32(20);
                                    n.push(u)
                                }
                            })
                        });
                        return n
                    };
                    var Y = {
                        findBox: V,
                        parseType: H,
                        timescale: z,
                        startTime: G,
                        videoTrackIds: W
                    };
                    var $ = function e() {
                        this.init = function () {
                            var e = {
                            };
                            this.on = function (t, r) {
                                if (!e[t]) {
                                    e[t] = [
                                    ]
                                }
                                e[t] = e[t].concat(r)
                            };
                            this.off = function (t, r) {
                                var n;
                                if (!e[t]) {
                                    return false
                                }
                                n = e[t].indexOf(r);
                                e[t] = e[t].slice();
                                e[t].splice(n, 1);
                                return n > - 1
                            };
                            this.trigger = function (t) {
                                var r,
                                    n,
                                    i,
                                    a;
                                r = e[t];
                                if (!r) {
                                    return
                                }
                                if (arguments.length === 2) {
                                    i = r.length;
                                    for (n = 0; n < i; ++n) {
                                        r[n].call(this, arguments[1])
                                    }
                                } else {
                                    a = [
                                    ];
                                    n = arguments.length;
                                    for (n = 1; n < arguments.length; ++n) {
                                        a.push(arguments[n])
                                    }
                                    i = r.length;
                                    for (n = 0; n < i; ++n) {
                                        r[n].apply(this, a)
                                    }
                                }
                            };
                            this.dispose = function () {
                                e = {
                                }
                            }
                        }
                    };
                    $.prototype.pipe = function (e) {
                        this.on('data', function (t) {
                            e.push(t)
                        });
                        this.on('done', function (t) {
                            e.flush(t)
                        });
                        return e
                    };
                    $.prototype.push = function (e) {
                        this.trigger('data', e)
                    };
                    $.prototype.flush = function (e) {
                        this.trigger('done', e)
                    };
                    var X = $;
                    var K = function e(t) {
                        var r,
                            n,
                            i = [
                            ],
                            a = [
                            ];
                        i.byteLength = 0;
                        for (r = 0; r < t.length; r++) {
                            n = t[r];
                            if (n.nalUnitType === 'access_unit_delimiter_rbsp') {
                                if (i.length) {
                                    i.duration = n.dts - i.dts;
                                    a.push(i)
                                }
                                i = [
                                    n
                                ];
                                i.byteLength = n.data.byteLength;
                                i.pts = n.pts;
                                i.dts = n.dts
                            } else {
                                if (n.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {
                                    i.keyFrame = true
                                }
                                i.duration = n.dts - i.dts;
                                i.byteLength += n.data.byteLength;
                                i.push(n)
                            }
                        }
                        if (a.length && (!i.duration || i.duration <= 0)) {
                            i.duration = a[a.length - 1].duration
                        }
                        a.push(i);
                        return a
                    };
                    var Q = function e(t) {
                        var r,
                            n,
                            i = [
                            ],
                            a = [
                            ];
                        i.byteLength = 0;
                        i.nalCount = 0;
                        i.duration = 0;
                        i.pts = t[0].pts;
                        i.dts = t[0].dts;
                        a.byteLength = 0;
                        a.nalCount = 0;
                        a.duration = 0;
                        a.pts = t[0].pts;
                        a.dts = t[0].dts;
                        for (r = 0; r < t.length; r++) {
                            n = t[r];
                            if (n.keyFrame) {
                                if (i.length) {
                                    a.push(i);
                                    a.byteLength += i.byteLength;
                                    a.nalCount += i.nalCount;
                                    a.duration += i.duration
                                }
                                i = [
                                    n
                                ];
                                i.nalCount = n.length;
                                i.byteLength = n.byteLength;
                                i.pts = n.pts;
                                i.dts = n.dts;
                                i.duration = n.duration
                            } else {
                                i.duration += n.duration;
                                i.nalCount += n.length;
                                i.byteLength += n.byteLength;
                                i.push(n)
                            }
                        }
                        if (a.length && i.duration <= 0) {
                            i.duration = a[a.length - 1].duration
                        }
                        a.byteLength += i.byteLength;
                        a.nalCount += i.nalCount;
                        a.duration += i.duration;
                        a.push(i);
                        return a
                    };
                    var J = function e(t) {
                        var r;
                        if (!t[0][0].keyFrame && t.length > 1) {
                            r = t.shift();
                            t.byteLength -= r.byteLength;
                            t.nalCount -= r.nalCount;
                            t[0][0].dts = r.dts;
                            t[0][0].pts = r.pts;
                            t[0][0].duration += r.duration
                        }
                        return t
                    };
                    var Z = function e() {
                        return {
                            size: 0,
                            flags: {
                                isLeading: 0,
                                dependsOn: 1,
                                isDependedOn: 0,
                                hasRedundancy: 0,
                                degradationPriority: 0,
                                isNonSyncSample: 1
                            }
                        }
                    };
                    var ee = function e(t, r) {
                        var n = Z();
                        n.dataOffset = r;
                        n.compositionTimeOffset = t.pts - t.dts;
                        n.duration = t.duration;
                        n.size = 4 * t.length;
                        n.size += t.byteLength;
                        if (t.keyFrame) {
                            n.flags.dependsOn = 2;
                            n.flags.isNonSyncSample = 0
                        }
                        return n
                    };
                    var te = function e(t, r) {
                        var n,
                            i,
                            a,
                            s,
                            o,
                            u = r || 0,
                            l = [
                            ];
                        for (n = 0; n < t.length; n++) {
                            s = t[n];
                            for (i = 0; i < s.length; i++) {
                                o = s[i];
                                a = ee(o, u);
                                u += a.size;
                                l.push(a)
                            }
                        }
                        return l
                    };
                    var re = function e(t) {
                        var r,
                            n,
                            i,
                            a,
                            s,
                            o,
                            u = 0,
                            l = t.byteLength,
                            c = t.nalCount,
                            d = l + 4 * c,
                            f = new Uint8Array(d),
                            h = new DataView(f.buffer);
                        for (r = 0; r < t.length; r++) {
                            a = t[r];
                            for (n = 0; n < a.length; n++) {
                                s = a[n];
                                for (i = 0; i < s.length; i++) {
                                    o = s[i];
                                    h.setUint32(u, o.data.byteLength);
                                    u += 4;
                                    f.set(o.data, u);
                                    u += o.data.byteLength
                                }
                            }
                        }
                        return f
                    };
                    var ne = {
                        groupNalsIntoFrames: K,
                        groupFramesIntoGops: Q,
                        extendFirstKeyFrame: J,
                        generateSampleTable: te,
                        concatenateNalData: re
                    };
                    var ie = [
                        33,
                        16,
                        5,
                        32,
                        164,
                        27
                    ];
                    var ae = [
                        33,
                        65,
                        108,
                        84,
                        1,
                        2,
                        4,
                        8,
                        168,
                        2,
                        4,
                        8,
                        17,
                        191,
                        252
                    ];
                    var se = function e(t) {
                        var r = [
                        ];
                        while (t--) {
                            r.push(0)
                        }
                        return r
                    };
                    var oe = function e(t) {
                        return Object.keys(t).reduce(function (e, r) {
                            e[r] = new Uint8Array(t[r].reduce(function (e, t) {
                                return e.concat(t)
                            }, [
                            ]));
                            return e
                        }, {
                        })
                    };
                    var ue = {
                        96000: [
                            ie,
                            [
                                227,
                                64
                            ],
                            se(154),
                            [
                                56
                            ]
                        ],
                        88200: [
                            ie,
                            [
                                231
                            ],
                            se(170),
                            [
                                56
                            ]
                        ],
                        64000: [
                            ie,
                            [
                                248,
                                192
                            ],
                            se(240),
                            [
                                56
                            ]
                        ],
                        48000: [
                            ie,
                            [
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                148,
                                128
                            ],
                            se(54),
                            [
                                112
                            ]
                        ],
                        44100: [
                            ie,
                            [
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                163,
                                128
                            ],
                            se(84),
                            [
                                112
                            ]
                        ],
                        32000: [
                            ie,
                            [
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                234
                            ],
                            se(226),
                            [
                                112
                            ]
                        ],
                        24000: [
                            ie,
                            [
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                255,
                                128
                            ],
                            se(268),
                            [
                                111,
                                112
                            ],
                            se(126),
                            [
                                224
                            ]
                        ],
                        16000: [
                            ie,
                            [
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                255,
                                128
                            ],
                            se(268),
                            [
                                111,
                                255
                            ],
                            se(269),
                            [
                                223,
                                108
                            ],
                            se(195),
                            [
                                1,
                                192
                            ]
                        ],
                        12000: [
                            ae,
                            se(268),
                            [
                                3,
                                127,
                                248
                            ],
                            se(268),
                            [
                                6,
                                255,
                                240
                            ],
                            se(268),
                            [
                                13,
                                255,
                                224
                            ],
                            se(268),
                            [
                                27,
                                253,
                                128
                            ],
                            se(259),
                            [
                                56
                            ]
                        ],
                        11025: [
                            ae,
                            se(268),
                            [
                                3,
                                127,
                                248
                            ],
                            se(268),
                            [
                                6,
                                255,
                                240
                            ],
                            se(268),
                            [
                                13,
                                255,
                                224
                            ],
                            se(268),
                            [
                                27,
                                255,
                                192
                            ],
                            se(268),
                            [
                                55,
                                175,
                                128
                            ],
                            se(108),
                            [
                                112
                            ]
                        ],
                        8000: [
                            ae,
                            se(268),
                            [
                                3,
                                121,
                                16
                            ],
                            se(47),
                            [
                                7
                            ]
                        ]
                    };
                    var le = oe(ue);
                    var ce = 90000,
                        de,
                        fe,
                        he,
                        pe,
                        ve,
                        me;
                    de = function e(t) {
                        return t * ce
                    };
                    fe = function e(t, r) {
                        return t * r
                    };
                    he = function e(t) {
                        return t / ce
                    };
                    pe = function e(t, r) {
                        return t / r
                    };
                    ve = function e(t, r) {
                        return de(pe(t, r))
                    };
                    me = function e(t, r) {
                        return fe(he(t), r)
                    };
                    var ge = {
                        secondsToVideoTs: de,
                        secondsToAudioTs: fe,
                        videoTsToSeconds: he,
                        audioTsToSeconds: pe,
                        audioTsToVideoTs: ve,
                        videoTsToAudioTs: me
                    };
                    var ye = 90000;
                    var _e = function e(t) {
                        var r,
                            n,
                            i = 0;
                        for (r = 0; r < t.length; r++) {
                            n = t[r];
                            i += n.data.byteLength
                        }
                        return i
                    };
                    var be = function e(t, r, n, i) {
                        var a,
                            s = 0,
                            o = 0,
                            u = 0,
                            l = 0,
                            c,
                            d;
                        if (!r.length) {
                            return
                        }
                        a = ge.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate);
                        s = Math.ceil(ye / (t.samplerate / 1024));
                        if (n && i) {
                            o = a - Math.max(n, i);
                            u = Math.floor(o / s);
                            l = u * s
                        }
                        if (u < 1 || l > ye / 2) {
                            return
                        }
                        c = le[t.samplerate];
                        if (!c) {
                            c = r[0].data
                        }
                        for (d = 0; d < u; d++) {
                            r.splice(d, 0, {
                                data: c
                            })
                        }
                        t.baseMediaDecodeTime -= Math.floor(ge.videoTsToAudioTs(l, t.samplerate))
                    };
                    var Te = function e(t, r, n) {
                        if (r.minSegmentDts >= n) {
                            return t
                        }
                        r.minSegmentDts = Infinity;
                        return t.filter(function (e) {
                            if (e.dts >= n) {
                                r.minSegmentDts = Math.min(r.minSegmentDts, e.dts);
                                r.minSegmentPts = r.minSegmentDts;
                                return true
                            }
                            return false
                        })
                    };
                    var Ae = function e(t) {
                        var r,
                            n,
                            i = [
                            ];
                        for (r = 0; r < t.length; r++) {
                            n = t[r];
                            i.push({
                                size: n.data.byteLength,
                                duration: 1024
                            })
                        }
                        return i
                    };
                    var Se = function e(t) {
                        var r,
                            n,
                            i = 0,
                            a = new Uint8Array(_e(t));
                        for (r = 0; r < t.length; r++) {
                            n = t[r];
                            a.set(n.data, i);
                            i += n.data.byteLength
                        }
                        return a
                    };
                    var ke = {
                        prefixWithSilence: be,
                        trimAdtsFramesByEarliestDts: Te,
                        generateSampleTable: Ae,
                        concatenateFrameData: Se
                    };
                    var we = 90000;
                    var Ce = function e(t, r) {
                        if (typeof r.pts === 'number') {
                            if (t.timelineStartInfo.pts === undefined) {
                                t.timelineStartInfo.pts = r.pts
                            }
                            if (t.minSegmentPts === undefined) {
                                t.minSegmentPts = r.pts
                            } else {
                                t.minSegmentPts = Math.min(t.minSegmentPts, r.pts)
                            }
                            if (t.maxSegmentPts === undefined) {
                                t.maxSegmentPts = r.pts
                            } else {
                                t.maxSegmentPts = Math.max(t.maxSegmentPts, r.pts)
                            }
                        }
                        if (typeof r.dts === 'number') {
                            if (t.timelineStartInfo.dts === undefined) {
                                t.timelineStartInfo.dts = r.dts
                            }
                            if (t.minSegmentDts === undefined) {
                                t.minSegmentDts = r.dts
                            } else {
                                t.minSegmentDts = Math.min(t.minSegmentDts, r.dts)
                            }
                            if (t.maxSegmentDts === undefined) {
                                t.maxSegmentDts = r.dts
                            } else {
                                t.maxSegmentDts = Math.max(t.maxSegmentDts, r.dts)
                            }
                        }
                    };
                    var Ee = function e(t) {
                        delete t.minSegmentDts;
                        delete t.maxSegmentDts;
                        delete t.minSegmentPts;
                        delete t.maxSegmentPts
                    };
                    var Ie = function e(t, r) {
                        var n,
                            i,
                            a = t.minSegmentDts;
                        if (!r) {
                            a -= t.timelineStartInfo.dts
                        }
                        n = t.timelineStartInfo.baseMediaDecodeTime;
                        n += a;
                        n = Math.max(0, n);
                        if (t.type === 'audio') {
                            i = t.samplerate / we;
                            n *= i;
                            n = Math.floor(n)
                        }
                        return n
                    };
                    var Pe = {
                        clearDtsInfo: Ee,
                        calculateTrackBaseMediaDecodeTime: Ie,
                        collectDtsInfo: Ce
                    };
                    var Oe = 4,
                        xe = 128;
                    var Le = function e(t) {
                        var r = 0,
                            n = {
                                payloadType: - 1,
                                payloadSize: 0
                            },
                            i = 0,
                            a = 0;
                        while (r < t.byteLength) {
                            if (t[r] === xe) {
                                break
                            }
                            while (t[r] === 255) {
                                i += 255;
                                r++
                            }
                            i += t[r++];
                            while (t[r] === 255) {
                                a += 255;
                                r++
                            }
                            a += t[r++];
                            if (!n.payload && i === Oe) {
                                n.payloadType = i;
                                n.payloadSize = a;
                                n.payload = t.subarray(r, r + a);
                                break
                            }
                            r += a;
                            i = 0;
                            a = 0
                        }
                        return n
                    };
                    var De = function e(t) {
                        if (t.payload[0] !== 181) {
                            return null
                        }
                        if ((t.payload[1] << 8 | t.payload[2]) !== 49) {
                            return null
                        }
                        if (String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== 'GA94') {
                            return null
                        }
                        if (t.payload[7] !== 3) {
                            return null
                        }
                        return t.payload.subarray(8, t.payload.length - 1)
                    };
                    var Re = function e(t, r) {
                        var n = [
                        ],
                            i,
                            a,
                            s,
                            o;
                        if (!(r[0] & 64)) {
                            return n
                        }
                        a = r[0] & 31;
                        for (i = 0; i < a; i++) {
                            s = i * 3;
                            o = {
                                type: r[s + 2] & 3,
                                pts: t
                            };
                            if (r[s + 2] & 4) {
                                o.ccData = r[s + 3] << 8 | r[s + 4];
                                n.push(o)
                            }
                        }
                        return n
                    };
                    var Me = function e(t) {
                        var r = t.byteLength,
                            n = [
                            ],
                            i = 1,
                            a,
                            s;
                        while (i < r - 2) {
                            if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                                n.push(i + 2);
                                i += 2
                            } else {
                                i++
                            }
                        }
                        if (n.length === 0) {
                            return t
                        }
                        a = r - n.length;
                        s = new Uint8Array(a);
                        var o = 0;
                        for (i = 0; i < a; o++, i++) {
                            if (o === n[0]) {
                                o++;
                                n.shift()
                            }
                            s[i] = t[o]
                        }
                        return s
                    };
                    var je = {
                        parseSei: Le,
                        parseUserData: De,
                        parseCaptionPackets: Re,
                        discardEmulationPreventionBytes: Me,
                        USER_DATA_REGISTERED_ITU_T_T35: Oe
                    };
                    var Ue = function e() {
                        e.prototype.init.call(this);
                        this.captionPackets_ = [
                        ];
                        this.ccStreams_ = [
                            new He(0, 0),
                            new He(0, 1),
                            new He(1, 0),
                            new He(1, 1)
                        ];
                        this.reset();
                        this.ccStreams_.forEach(function (e) {
                            e.on('data', this.trigger.bind(this, 'data'));
                            e.on('done', this.trigger.bind(this, 'done'))
                        }, this)
                    };
                    Ue.prototype = new X;
                    Ue.prototype.push = function (e) {
                        var t,
                            r,
                            n;
                        if (e.nalUnitType !== 'sei_rbsp') {
                            return
                        }
                        t = je.parseSei(e.escapedRBSP);
                        if (t.payloadType !== je.USER_DATA_REGISTERED_ITU_T_T35) {
                            return
                        }
                        r = je.parseUserData(t);
                        if (!r) {
                            return
                        }
                        if (e.dts < this.latestDts_) {
                            this.ignoreNextEqualDts_ = true;
                            return
                        } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                            this.numSameDts_--;
                            if (!this.numSameDts_) {
                                this.ignoreNextEqualDts_ = false
                            }
                            return
                        }
                        n = je.parseCaptionPackets(e.pts, r);
                        this.captionPackets_ = this.captionPackets_.concat(n);
                        if (this.latestDts_ !== e.dts) {
                            this.numSameDts_ = 0
                        }
                        this.numSameDts_++;
                        this.latestDts_ = e.dts
                    };
                    Ue.prototype.flush = function () {
                        if (!this.captionPackets_.length) {
                            this.ccStreams_.forEach(function (e) {
                                e.flush()
                            }, this);
                            return
                        }
                        this.captionPackets_.forEach(function (e, t) {
                            e.presortIndex = t
                        });
                        this.captionPackets_.sort(function (e, t) {
                            if (e.pts === t.pts) {
                                return e.presortIndex - t.presortIndex
                            }
                            return e.pts - t.pts
                        });
                        this.captionPackets_.forEach(function (e) {
                            if (e.type < 2) {
                                this.dispatchCea608Packet(e)
                            }
                        }, this);
                        this.captionPackets_.length = 0;
                        this.ccStreams_.forEach(function (e) {
                            e.flush()
                        }, this);
                        return
                    };
                    Ue.prototype.reset = function () {
                        this.latestDts_ = null;
                        this.ignoreNextEqualDts_ = false;
                        this.numSameDts_ = 0;
                        this.activeCea608Channel_ = [
                            null,
                            null
                        ];
                        this.ccStreams_.forEach(function (e) {
                            e.reset()
                        })
                    };
                    Ue.prototype.dispatchCea608Packet = function (e) {
                        if (this.setsChannel1Active(e)) {
                            this.activeCea608Channel_[e.type] = 0
                        } else if (this.setsChannel2Active(e)) {
                            this.activeCea608Channel_[e.type] = 1
                        }
                        if (this.activeCea608Channel_[e.type] === null) {
                            return
                        }
                        this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
                    };
                    Ue.prototype.setsChannel1Active = function (e) {
                        return (e.ccData & 30720) === 4096
                    };
                    Ue.prototype.setsChannel2Active = function (e) {
                        return (e.ccData & 30720) === 6144
                    };
                    var Ne = {
                        42: 225,
                        92: 233,
                        94: 237,
                        95: 243,
                        96: 250,
                        123: 231,
                        124: 247,
                        125: 209,
                        126: 241,
                        127: 9608,
                        304: 174,
                        305: 176,
                        306: 189,
                        307: 191,
                        308: 8482,
                        309: 162,
                        310: 163,
                        311: 9834,
                        312: 224,
                        313: 160,
                        314: 232,
                        315: 226,
                        316: 234,
                        317: 238,
                        318: 244,
                        319: 251,
                        544: 193,
                        545: 201,
                        546: 211,
                        547: 218,
                        548: 220,
                        549: 252,
                        550: 8216,
                        551: 161,
                        552: 42,
                        553: 39,
                        554: 8212,
                        555: 169,
                        556: 8480,
                        557: 8226,
                        558: 8220,
                        559: 8221,
                        560: 192,
                        561: 194,
                        562: 199,
                        563: 200,
                        564: 202,
                        565: 203,
                        566: 235,
                        567: 206,
                        568: 207,
                        569: 239,
                        570: 212,
                        571: 217,
                        572: 249,
                        573: 219,
                        574: 171,
                        575: 187,
                        800: 195,
                        801: 227,
                        802: 205,
                        803: 204,
                        804: 236,
                        805: 210,
                        806: 242,
                        807: 213,
                        808: 245,
                        809: 123,
                        810: 125,
                        811: 92,
                        812: 94,
                        813: 95,
                        814: 124,
                        815: 126,
                        816: 196,
                        817: 228,
                        818: 214,
                        819: 246,
                        820: 223,
                        821: 165,
                        822: 164,
                        823: 9474,
                        824: 197,
                        825: 229,
                        826: 216,
                        827: 248,
                        828: 9484,
                        829: 9488,
                        830: 9492,
                        831: 9496
                    };
                    var Be = function e(t) {
                        if (t === null) {
                            return ''
                        }
                        t = Ne[t] || t;
                        return String.fromCharCode(t)
                    };
                    var qe = 14;
                    var Fe = [
                        4352,
                        4384,
                        4608,
                        4640,
                        5376,
                        5408,
                        5632,
                        5664,
                        5888,
                        5920,
                        4096,
                        4864,
                        4896,
                        5120,
                        5152
                    ];
                    var Ve = function e() {
                        var t = [
                        ],
                            r = qe + 1;
                        while (r--) {
                            t.push('')
                        }
                        return t
                    };
                    var He = function e(t, r) {
                        e.prototype.init.call(this);
                        this.field_ = t || 0;
                        this.dataChannel_ = r || 0;
                        this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);
                        this.setConstants();
                        this.reset();
                        this.push = function (e) {
                            var t,
                                r,
                                n,
                                i,
                                a;
                            t = e.ccData & 32639;
                            if (t === this.lastControlCode_) {
                                this.lastControlCode_ = null;
                                return
                            }
                            if ((t & 61440) === 4096) {
                                this.lastControlCode_ = t
                            } else if (t !== this.PADDING_) {
                                this.lastControlCode_ = null
                            }
                            n = t >>> 8;
                            i = t & 255;
                            if (t === this.PADDING_) {
                                return
                            } else if (t === this.RESUME_CAPTION_LOADING_) {
                                this.mode_ = 'popOn'
                            } else if (t === this.END_OF_CAPTION_) {
                                this.mode_ = 'popOn';
                                this.clearFormatting(e.pts);
                                this.flushDisplayed(e.pts);
                                r = this.displayed_;
                                this.displayed_ = this.nonDisplayed_;
                                this.nonDisplayed_ = r;
                                this.startPts_ = e.pts
                            } else if (t === this.ROLL_UP_2_ROWS_) {
                                this.rollUpRows_ = 2;
                                this.setRollUp(e.pts)
                            } else if (t === this.ROLL_UP_3_ROWS_) {
                                this.rollUpRows_ = 3;
                                this.setRollUp(e.pts)
                            } else if (t === this.ROLL_UP_4_ROWS_) {
                                this.rollUpRows_ = 4;
                                this.setRollUp(e.pts)
                            } else if (t === this.CARRIAGE_RETURN_) {
                                this.clearFormatting(e.pts);
                                this.flushDisplayed(e.pts);
                                this.shiftRowsUp_();
                                this.startPts_ = e.pts
                            } else if (t === this.BACKSPACE_) {
                                if (this.mode_ === 'popOn') {
                                    this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                                } else {
                                    this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                                }
                            } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                                this.flushDisplayed(e.pts);
                                this.displayed_ = Ve()
                            } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                                this.nonDisplayed_ = Ve()
                            } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                                if (this.mode_ !== 'paintOn') {
                                    this.flushDisplayed(e.pts);
                                    this.displayed_ = Ve()
                                }
                                this.mode_ = 'paintOn';
                                this.startPts_ = e.pts
                            } else if (this.isSpecialCharacter(n, i)) {
                                n = (n & 3) << 8;
                                a = Be(n | i);
                                this[this.mode_](e.pts, a);
                                this.column_++
                            } else if (this.isExtCharacter(n, i)) {
                                if (this.mode_ === 'popOn') {
                                    this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                                } else {
                                    this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                                }
                                n = (n & 3) << 8;
                                a = Be(n | i);
                                this[this.mode_](e.pts, a);
                                this.column_++
                            } else if (this.isMidRowCode(n, i)) {
                                this.clearFormatting(e.pts);
                                this[this.mode_](e.pts, ' ');
                                this.column_++;
                                if ((i & 14) === 14) {
                                    this.addFormatting(e.pts, [
                                        'i'
                                    ])
                                }
                                if ((i & 1) === 1) {
                                    this.addFormatting(e.pts, [
                                        'u'
                                    ])
                                }
                            } else if (this.isOffsetControlCode(n, i)) {
                                this.column_ += i & 3
                            } else if (this.isPAC(n, i)) {
                                var s = Fe.indexOf(t & 7968);
                                if (this.mode_ === 'rollUp') {
                                    if (s - this.rollUpRows_ + 1 < 0) {
                                        s = this.rollUpRows_ - 1
                                    }
                                    this.setRollUp(e.pts, s)
                                }
                                if (s !== this.row_) {
                                    this.clearFormatting(e.pts);
                                    this.row_ = s
                                }
                                if (i & 1 && this.formatting_.indexOf('u') === - 1) {
                                    this.addFormatting(e.pts, [
                                        'u'
                                    ])
                                }
                                if ((t & 16) === 16) {
                                    this.column_ = ((t & 14) >> 1) * 4
                                }
                                if (this.isColorPAC(i)) {
                                    if ((i & 14) === 14) {
                                        this.addFormatting(e.pts, [
                                            'i'
                                        ])
                                    }
                                }
                            } else if (this.isNormalChar(n)) {
                                if (i === 0) {
                                    i = null
                                }
                                a = Be(n);
                                a += Be(i);
                                this[this.mode_](e.pts, a);
                                this.column_ += a.length
                            }
                        }
                    };
                    He.prototype = new X;
                    He.prototype.flushDisplayed = function (e) {
                        var t = this.displayed_.map(function (e) {
                            try {
                                return e.trim()
                            } catch (e) {
                                console.error('Skipping malformed caption.');
                                return ''
                            }
                        }).join('\n').replace(/^\n+|\n+$/g, '');
                        if (t.length) {
                            this.trigger('data', {
                                startPts: this.startPts_,
                                endPts: e,
                                text: t,
                                stream: this.name_
                            })
                        }
                    };
                    He.prototype.reset = function () {
                        this.mode_ = 'popOn';
                        this.topRow_ = 0;
                        this.startPts_ = 0;
                        this.displayed_ = Ve();
                        this.nonDisplayed_ = Ve();
                        this.lastControlCode_ = null;
                        this.column_ = 0;
                        this.row_ = qe;
                        this.rollUpRows_ = 2;
                        this.formatting_ = [
                        ]
                    };
                    He.prototype.setConstants = function () {
                        if (this.dataChannel_ === 0) {
                            this.BASE_ = 16;
                            this.EXT_ = 17;
                            this.CONTROL_ = (20 | this.field_) << 8;
                            this.OFFSET_ = 23
                        } else if (this.dataChannel_ === 1) {
                            this.BASE_ = 24;
                            this.EXT_ = 25;
                            this.CONTROL_ = (28 | this.field_) << 8;
                            this.OFFSET_ = 31
                        }
                        this.PADDING_ = 0;
                        this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                        this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                        this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                        this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                        this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                        this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                        this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                        this.BACKSPACE_ = this.CONTROL_ | 33;
                        this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                        this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
                    };
                    He.prototype.isSpecialCharacter = function (e, t) {
                        return e === this.EXT_ && t >= 48 && t <= 63
                    };
                    He.prototype.isExtCharacter = function (e, t) {
                        return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
                    };
                    He.prototype.isMidRowCode = function (e, t) {
                        return e === this.EXT_ && t >= 32 && t <= 47
                    };
                    He.prototype.isOffsetControlCode = function (e, t) {
                        return e === this.OFFSET_ && t >= 33 && t <= 35
                    };
                    He.prototype.isPAC = function (e, t) {
                        return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
                    };
                    He.prototype.isColorPAC = function (e) {
                        return e >= 64 && e <= 79 || e >= 96 && e <= 127
                    };
                    He.prototype.isNormalChar = function (e) {
                        return e >= 32 && e <= 127
                    };
                    He.prototype.setRollUp = function (e, t) {
                        if (this.mode_ !== 'rollUp') {
                            this.row_ = qe;
                            this.mode_ = 'rollUp';
                            this.flushDisplayed(e);
                            this.nonDisplayed_ = Ve();
                            this.displayed_ = Ve()
                        }
                        if (t !== undefined && t !== this.row_) {
                            for (var r = 0; r < this.rollUpRows_; r++) {
                                this.displayed_[t - r] = this.displayed_[this.row_ - r];
                                this.displayed_[this.row_ - r] = ''
                            }
                        }
                        if (t === undefined) {
                            t = this.row_
                        }
                        this.topRow_ = t - this.rollUpRows_ + 1
                    };
                    He.prototype.addFormatting = function (e, t) {
                        this.formatting_ = this.formatting_.concat(t);
                        var r = t.reduce(function (e, t) {
                            return e + '<' + t + '>'
                        }, '');
                        this[this.mode_](e, r)
                    };
                    He.prototype.clearFormatting = function (e) {
                        if (!this.formatting_.length) {
                            return
                        }
                        var t = this.formatting_.reverse().reduce(function (e, t) {
                            return e + '</' + t + '>'
                        }, '');
                        this.formatting_ = [
                        ];
                        this[this.mode_](e, t)
                    };
                    He.prototype.popOn = function (e, t) {
                        var r = this.nonDisplayed_[this.row_];
                        r += t;
                        this.nonDisplayed_[this.row_] = r
                    };
                    He.prototype.rollUp = function (e, t) {
                        var r = this.displayed_[this.row_];
                        r += t;
                        this.displayed_[this.row_] = r
                    };
                    He.prototype.shiftRowsUp_ = function () {
                        var e;
                        for (e = 0; e < this.topRow_; e++) {
                            this.displayed_[e] = ''
                        }
                        for (e = this.row_ + 1; e < qe + 1; e++) {
                            this.displayed_[e] = ''
                        }
                        for (e = this.topRow_; e < this.row_; e++) {
                            this.displayed_[e] = this.displayed_[e + 1]
                        }
                        this.displayed_[this.row_] = ''
                    };
                    He.prototype.paintOn = function (e, t) {
                        var r = this.displayed_[this.row_];
                        r += t;
                        this.displayed_[this.row_] = r
                    };
                    var ze = {
                        CaptionStream: Ue,
                        Cea608Stream: He
                    };
                    var Ge = {
                        H264_STREAM_TYPE: 27,
                        ADTS_STREAM_TYPE: 15,
                        METADATA_STREAM_TYPE: 21
                    };
                    var We = 8589934592;
                    var Ye = 4294967296;
                    var $e = function e(t, r) {
                        var n = 1;
                        if (t > r) {
                            n = - 1
                        }
                        while (Math.abs(r - t) > Ye) {
                            t += n * We
                        }
                        return t
                    };
                    var Xe = function e(t) {
                        var r,
                            n;
                        e.prototype.init.call(this);
                        this.type_ = t;
                        this.push = function (e) {
                            if (e.type !== this.type_) {
                                return
                            }
                            if (n === undefined) {
                                n = e.dts
                            }
                            e.dts = $e(e.dts, n);
                            e.pts = $e(e.pts, n);
                            r = e.dts;
                            this.trigger('data', e)
                        };
                        this.flush = function () {
                            n = r;
                            this.trigger('done')
                        };
                        this.discontinuity = function () {
                            n = void 0;
                            r = void 0
                        }
                    };
                    Xe.prototype = new X;
                    var Ke = {
                        TimestampRolloverStream: Xe,
                        handleRollover: $e
                    };
                    var Qe = function e(t, r, n) {
                        var i,
                            a = '';
                        for (i = r; i < n; i++) {
                            a += '%' + ('00' + t[i].toString(16)).slice(- 2)
                        }
                        return a
                    },
                        Je = function e(t, r, n) {
                            return decodeURIComponent(Qe(t, r, n))
                        },
                        Ze = function e(t, r, n) {
                            return unescape(Qe(t, r, n))
                        },
                        et = function e(t) {
                            return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                        },
                        tt = {
                            TXXX: function e(t) {
                                var r;
                                if (t.data[0] !== 3) {
                                    return
                                }
                                for (r = 1; r < t.data.length; r++) {
                                    if (t.data[r] === 0) {
                                        t.description = Je(t.data, 1, r);
                                        t.value = Je(t.data, r + 1, t.data.length).replace(/\0*$/, '');
                                        break
                                    }
                                }
                                t.data = t.value
                            },
                            WXXX: function e(t) {
                                var r;
                                if (t.data[0] !== 3) {
                                    return
                                }
                                for (r = 1; r < t.data.length; r++) {
                                    if (t.data[r] === 0) {
                                        t.description = Je(t.data, 1, r);
                                        t.url = Je(t.data, r + 1, t.data.length);
                                        break
                                    }
                                }
                            },
                            PRIV: function e(t) {
                                var r;
                                for (r = 0; r < t.data.length; r++) {
                                    if (t.data[r] === 0) {
                                        t.owner = Ze(t.data, 0, r);
                                        break
                                    }
                                }
                                t.privateData = t.data.subarray(r + 1);
                                t.data = t.privateData
                            }
                        },
                        rt;
                    rt = function e(t) {
                        var r = {
                            debug: !!(t && t.debug),
                            descriptor: t && t.descriptor
                        },
                            n = 0,
                            i = [
                            ],
                            a = 0,
                            s;
                        rt.prototype.init.call(this);
                        this.dispatchType = Ge.METADATA_STREAM_TYPE.toString(16);
                        if (r.descriptor) {
                            for (s = 0; s < r.descriptor.length; s++) {
                                this.dispatchType += ('00' + r.descriptor[s].toString(16)).slice(- 2)
                            }
                        }
                        this.push = function (e) {
                            var t,
                                s,
                                o,
                                u,
                                l,
                                c;
                            if (e.type !== 'timed-metadata') {
                                return
                            }
                            if (e.dataAlignmentIndicator) {
                                a = 0;
                                i.length = 0
                            }
                            if (i.length === 0 && (e.data.length < 10 || e.data[0] !== 'I'.charCodeAt(0) || e.data[1] !== 'D'.charCodeAt(0) || e.data[2] !== '3'.charCodeAt(0))) {
                                if (r.debug) {
                                    console.log('Skipping unrecognized metadata packet')
                                }
                                return
                            }
                            i.push(e);
                            a += e.data.byteLength;
                            if (i.length === 1) {
                                n = et(e.data.subarray(6, 10));
                                n += 10
                            }
                            if (a < n) {
                                return
                            }
                            t = {
                                data: new Uint8Array(n),
                                frames: [
                                ],
                                pts: i[0].pts,
                                dts: i[0].dts
                            };
                            for (l = 0; l < n;) {
                                t.data.set(i[0].data.subarray(0, n - l), l);
                                l += i[0].data.byteLength;
                                a -= i[0].data.byteLength;
                                i.shift()
                            }
                            s = 10;
                            if (t.data[5] & 64) {
                                s += 4;
                                s += et(t.data.subarray(10, 14));
                                n -= et(t.data.subarray(16, 20))
                            }
                            do {
                                o = et(t.data.subarray(s + 4, s + 8));
                                if (o < 1) {
                                    return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.')
                                }
                                c = String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]);
                                u = {
                                    id: c,
                                    data: t.data.subarray(s + 10, s + o + 10)
                                };
                                u.key = u.id;
                                if (tt[u.id]) {
                                    tt[u.id](u);
                                    if (u.owner === 'com.apple.streaming.transportStreamTimestamp') {
                                        var d = u.data,
                                            f = (d[3] & 1) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
                                        f *= 4;
                                        f += d[7] & 3;
                                        u.timeStamp = f;
                                        if (t.pts === undefined && t.dts === undefined) {
                                            t.pts = u.timeStamp;
                                            t.dts = u.timeStamp
                                        }
                                        this.trigger('timestamp', u)
                                    }
                                }
                                t.frames.push(u);
                                s += 10;
                                s += o
                            } while (s < n);
                            this.trigger('data', t)
                        }
                    };
                    rt.prototype = new X;
                    var nt = rt;
                    var it = Ke.TimestampRolloverStream;
                    var at,
                        st,
                        ot;
                    var ut = 188,
                        lt = 71;
                    at = function e() {
                        var t = new Uint8Array(ut),
                            r = 0;
                        at.prototype.init.call(this);
                        this.push = function (e) {
                            var n = 0,
                                i = ut,
                                a;
                            if (r) {
                                a = new Uint8Array(e.byteLength + r);
                                a.set(t.subarray(0, r));
                                a.set(e, r);
                                r = 0
                            } else {
                                a = e
                            }
                            while (i < a.byteLength) {
                                if (a[n] === lt && a[i] === lt) {
                                    this.trigger('data', a.subarray(n, i));
                                    n += ut;
                                    i += ut;
                                    continue
                                }
                                n++;
                                i++
                            }
                            if (n < a.byteLength) {
                                t.set(a.subarray(n), 0);
                                r = a.byteLength - n
                            }
                        };
                        this.flush = function () {
                            if (r === ut && t[0] === lt) {
                                this.trigger('data', t);
                                r = 0
                            }
                            this.trigger('done')
                        }
                    };
                    at.prototype = new X;
                    st = function e() {
                        var t,
                            r,
                            n,
                            i;
                        st.prototype.init.call(this);
                        i = this;
                        this.packetsWaitingForPmt = [
                        ];
                        this.programMapTable = undefined;
                        t = function e(t, i) {
                            var a = 0;
                            if (i.payloadUnitStartIndicator) {
                                a += t[a] + 1
                            }
                            if (i.type === 'pat') {
                                r(t.subarray(a), i)
                            } else {
                                n(t.subarray(a), i)
                            }
                        };
                        r = function e(t, r) {
                            r.section_number = t[7];
                            r.last_section_number = t[8];
                            i.pmtPid = (t[10] & 31) << 8 | t[11];
                            r.pmtPid = i.pmtPid
                        };
                        n = function e(t, r) {
                            var n,
                                a,
                                s,
                                o;
                            if (!(t[5] & 1)) {
                                return
                            }
                            i.programMapTable = {
                                video: null,
                                audio: null,
                                'timed-metadata': {
                                }
                            };
                            n = (t[1] & 15) << 8 | t[2];
                            a = 3 + n - 4;
                            s = (t[10] & 15) << 8 | t[11];
                            o = 12 + s;
                            while (o < a) {
                                var u = t[o];
                                var l = (t[o + 1] & 31) << 8 | t[o + 2];
                                if (u === Ge.H264_STREAM_TYPE && i.programMapTable.video === null) {
                                    i.programMapTable.video = l
                                } else if (u === Ge.ADTS_STREAM_TYPE && i.programMapTable.audio === null) {
                                    i.programMapTable.audio = l
                                } else if (u === Ge.METADATA_STREAM_TYPE) {
                                    i.programMapTable['timed-metadata'][l] = u
                                }
                                o += ((t[o + 3] & 15) << 8 | t[o + 4]) + 5
                            }
                            r.programMapTable = i.programMapTable
                        };
                        this.push = function (e) {
                            var r = {
                            },
                                n = 4;
                            r.payloadUnitStartIndicator = !!(e[1] & 64);
                            r.pid = e[1] & 31;
                            r.pid <<= 8;
                            r.pid |= e[2];
                            if ((e[3] & 48) >>> 4 > 1) {
                                n += e[n] + 1
                            }
                            if (r.pid === 0) {
                                r.type = 'pat';
                                t(e.subarray(n), r);
                                this.trigger('data', r)
                            } else if (r.pid === this.pmtPid) {
                                r.type = 'pmt';
                                t(e.subarray(n), r);
                                this.trigger('data', r);
                                while (this.packetsWaitingForPmt.length) {
                                    this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                                }
                            } else if (this.programMapTable === undefined) {
                                this.packetsWaitingForPmt.push([e,
                                    n,
                                    r])
                            } else {
                                this.processPes_(e, n, r)
                            }
                        };
                        this.processPes_ = function (e, t, r) {
                            if (r.pid === this.programMapTable.video) {
                                r.streamType = Ge.H264_STREAM_TYPE
                            } else if (r.pid === this.programMapTable.audio) {
                                r.streamType = Ge.ADTS_STREAM_TYPE
                            } else {
                                r.streamType = this.programMapTable['timed-metadata'][r.pid]
                            }
                            r.type = 'pes';
                            r.data = e.subarray(t);
                            this.trigger('data', r)
                        }
                    };
                    st.prototype = new X;
                    st.STREAM_TYPES = {
                        h264: 27,
                        adts: 15
                    };
                    ot = function e() {
                        var t = this,
                            r = {
                                data: [
                                ],
                                size: 0
                            },
                            n = {
                                data: [
                                ],
                                size: 0
                            },
                            i = {
                                data: [
                                ],
                                size: 0
                            },
                            a = function e(t, r) {
                                var n;
                                r.packetLength = 6 + (t[4] << 8 | t[5]);
                                r.dataAlignmentIndicator = (t[6] & 4) !== 0;
                                n = t[7];
                                if (n & 192) {
                                    r.pts = (t[9] & 14) << 27 | (t[10] & 255) << 20 | (t[11] & 254) << 12 | (t[12] & 255) << 5 | (t[13] & 254) >>> 3;
                                    r.pts *= 4;
                                    r.pts += (t[13] & 6) >>> 1;
                                    r.dts = r.pts;
                                    if (n & 64) {
                                        r.dts = (t[14] & 14) << 27 | (t[15] & 255) << 20 | (t[16] & 254) << 12 | (t[17] & 255) << 5 | (t[18] & 254) >>> 3;
                                        r.dts *= 4;
                                        r.dts += (t[18] & 6) >>> 1
                                    }
                                }
                                r.data = t.subarray(9 + t[8])
                            },
                            s = function e(r, n, i) {
                                var s = new Uint8Array(r.size),
                                    o = {
                                        type: n
                                    },
                                    u = 0,
                                    l = 0,
                                    c = false,
                                    d;
                                if (!r.data.length || r.size < 9) {
                                    return
                                }
                                o.trackId = r.data[0].pid;
                                for (u = 0; u < r.data.length; u++) {
                                    d = r.data[u];
                                    s.set(d.data, l);
                                    l += d.data.byteLength
                                }
                                a(s, o);
                                c = n === 'video' || o.packetLength <= r.size;
                                if (i || c) {
                                    r.size = 0;
                                    r.data.length = 0
                                }
                                if (c) {
                                    t.trigger('data', o)
                                }
                            };
                        ot.prototype.init.call(this);
                        this.push = function (e) {
                            ({
                                pat: function e() {
                                },
                                pes: function t() {
                                    var a,
                                        o;
                                    switch (e.streamType) {
                                        case Ge.H264_STREAM_TYPE:
                                        case Ge.H264_STREAM_TYPE:
                                            a = r;
                                            o = 'video';
                                            break;
                                        case Ge.ADTS_STREAM_TYPE:
                                            a = n;
                                            o = 'audio';
                                            break;
                                        case Ge.METADATA_STREAM_TYPE:
                                            a = i;
                                            o = 'timed-metadata';
                                            break;
                                        default:
                                            return
                                    }
                                    if (e.payloadUnitStartIndicator) {
                                        s(a, o, true)
                                    }
                                    a.data.push(e);
                                    a.size += e.data.byteLength
                                },
                                pmt: function r() {
                                    var n = {
                                        type: 'metadata',
                                        tracks: [
                                        ]
                                    },
                                        i = e.programMapTable;
                                    if (i.video !== null) {
                                        n.tracks.push({
                                            timelineStartInfo: {
                                                baseMediaDecodeTime: 0
                                            },
                                            id: + i.video,
                                            codec: 'avc',
                                            type: 'video'
                                        })
                                    }
                                    if (i.audio !== null) {
                                        n.tracks.push({
                                            timelineStartInfo: {
                                                baseMediaDecodeTime: 0
                                            },
                                            id: + i.audio,
                                            codec: 'adts',
                                            type: 'audio'
                                        })
                                    }
                                    t.trigger('data', n)
                                }
                            })[e.type]()
                        };
                        this.flush = function () {
                            s(r, 'video');
                            s(n, 'audio');
                            s(i, 'timed-metadata');
                            this.trigger('done')
                        }
                    };
                    ot.prototype = new X;
                    var ct = {
                        PAT_PID: 0,
                        MP2T_PACKET_LENGTH: ut,
                        TransportPacketStream: at,
                        TransportParseStream: st,
                        ElementaryStream: ot,
                        TimestampRolloverStream: it,
                        CaptionStream: ze.CaptionStream,
                        Cea608Stream: ze.Cea608Stream,
                        MetadataStream: nt
                    };
                    for (var dt in Ge) {
                        if (Ge.hasOwnProperty(dt)) {
                            ct[dt] = Ge[dt]
                        }
                    }
                    var ft = ct;
                    var ht;
                    var pt = [
                        96000,
                        88200,
                        64000,
                        48000,
                        44100,
                        32000,
                        24000,
                        22050,
                        16000,
                        12000,
                        11025,
                        8000,
                        7350
                    ];
                    ht = function e() {
                        var t;
                        ht.prototype.init.call(this);
                        this.push = function (e) {
                            var r = 0,
                                n = 0,
                                i,
                                a,
                                s,
                                o,
                                u,
                                l;
                            if (e.type !== 'audio') {
                                return
                            }
                            if (t) {
                                o = t;
                                t = new Uint8Array(o.byteLength + e.data.byteLength);
                                t.set(o);
                                t.set(e.data, o.byteLength)
                            } else {
                                t = e.data
                            }
                            while (r + 5 < t.length) {
                                if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
                                    r++;
                                    continue
                                }
                                a = (~t[r + 1] & 1) * 2;
                                i = (t[r + 3] & 3) << 11 | t[r + 4] << 3 | (t[r + 5] & 224) >> 5;
                                u = ((t[r + 6] & 3) + 1) * 1024;
                                l = u * 90000 / pt[(t[r + 2] & 60) >>> 2];
                                s = r + i;
                                if (t.byteLength < s) {
                                    return
                                }
                                this.trigger('data', {
                                    pts: e.pts + n * l,
                                    dts: e.dts + n * l,
                                    sampleCount: u,
                                    audioobjecttype: (t[r + 2] >>> 6 & 3) + 1,
                                    channelcount: (t[r + 2] & 1) << 2 | (t[r + 3] & 192) >>> 6,
                                    samplerate: pt[(t[r + 2] & 60) >>> 2],
                                    samplingfrequencyindex: (t[r + 2] & 60) >>> 2,
                                    samplesize: 16,
                                    data: t.subarray(r + 7 + a, s)
                                });
                                if (t.byteLength === s) {
                                    t = undefined;
                                    return
                                }
                                n++;
                                t = t.subarray(s)
                            }
                        };
                        this.flush = function () {
                            this.trigger('done')
                        }
                    };
                    ht.prototype = new X;
                    var vt = ht;
                    var mt;
                    mt = function e(t) {
                        var r = t.byteLength,
                            n = 0,
                            i = 0;
                        this.length = function () {
                            return 8 * r
                        };
                        this.bitsAvailable = function () {
                            return 8 * r + i
                        };
                        this.loadWord = function () {
                            var e = t.byteLength - r,
                                a = new Uint8Array(4),
                                s = Math.min(4, r);
                            if (s === 0) {
                                throw new Error('no bytes available')
                            }
                            a.set(t.subarray(e, e + s));
                            n = new DataView(a.buffer).getUint32(0);
                            i = s * 8;
                            r -= s
                        };
                        this.skipBits = function (e) {
                            var t;
                            if (i > e) {
                                n <<= e;
                                i -= e
                            } else {
                                e -= i;
                                t = Math.floor(e / 8);
                                e -= t * 8;
                                r -= t;
                                this.loadWord();
                                n <<= e;
                                i -= e
                            }
                        };
                        this.readBits = function (e) {
                            var t = Math.min(i, e),
                                a = n >>> 32 - t;
                            i -= t;
                            if (i > 0) {
                                n <<= t
                            } else if (r > 0) {
                                this.loadWord()
                            }
                            t = e - t;
                            if (t > 0) {
                                return a << t | this.readBits(t)
                            }
                            return a
                        };
                        this.skipLeadingZeros = function () {
                            var e;
                            for (e = 0; e < i; ++e) {
                                if ((n & 2147483648 >>> e) !== 0) {
                                    n <<= e;
                                    i -= e;
                                    return e
                                }
                            }
                            this.loadWord();
                            return e + this.skipLeadingZeros()
                        };
                        this.skipUnsignedExpGolomb = function () {
                            this.skipBits(1 + this.skipLeadingZeros())
                        };
                        this.skipExpGolomb = function () {
                            this.skipBits(1 + this.skipLeadingZeros())
                        };
                        this.readUnsignedExpGolomb = function () {
                            var e = this.skipLeadingZeros();
                            return this.readBits(e + 1) - 1
                        };
                        this.readExpGolomb = function () {
                            var e = this.readUnsignedExpGolomb();
                            if (1 & e) {
                                return 1 + e >>> 1
                            }
                            return - 1 * (e >>> 1)
                        };
                        this.readBoolean = function () {
                            return this.readBits(1) === 1
                        };
                        this.readUnsignedByte = function () {
                            return this.readBits(8)
                        };
                        this.loadWord()
                    };
                    var gt = mt;
                    var yt,
                        _t;
                    var bt;
                    _t = function e() {
                        var t = 0,
                            r,
                            n;
                        _t.prototype.init.call(this);
                        this.push = function (e) {
                            var i;
                            if (!n) {
                                n = e.data
                            } else {
                                i = new Uint8Array(n.byteLength + e.data.byteLength);
                                i.set(n);
                                i.set(e.data, n.byteLength);
                                n = i
                            }
                            for (; t < n.byteLength - 3; t++) {
                                if (n[t + 2] === 1) {
                                    r = t + 5;
                                    break
                                }
                            }
                            while (r < n.byteLength) {
                                switch (n[r]) {
                                    case 0:
                                        if (n[r - 1] !== 0) {
                                            r += 2;
                                            break
                                        } else if (n[r - 2] !== 0) {
                                            r++;
                                            break
                                        }
                                        if (t + 3 !== r - 2) {
                                            this.trigger('data', n.subarray(t + 3, r - 2))
                                        }
                                        do {
                                            r++
                                        } while (n[r] !== 1 && r < n.length);
                                        t = r - 2;
                                        r += 3;
                                        break;
                                    case 1:
                                        if (n[r - 1] !== 0 || n[r - 2] !== 0) {
                                            r += 3;
                                            break
                                        }
                                        this.trigger('data', n.subarray(t + 3, r - 2));
                                        t = r - 2;
                                        r += 3;
                                        break;
                                    default:
                                        r += 3;
                                        break
                                }
                            }
                            n = n.subarray(t);
                            r -= t;
                            t = 0
                        };
                        this.flush = function () {
                            if (n && n.byteLength > 3) {
                                this.trigger('data', n.subarray(t + 3))
                            }
                            n = null;
                            t = 0;
                            this.trigger('done')
                        }
                    };
                    _t.prototype = new X;
                    bt = {
                        100: true,
                        110: true,
                        122: true,
                        244: true,
                        44: true,
                        83: true,
                        86: true,
                        118: true,
                        128: true,
                        138: true,
                        139: true,
                        134: true
                    };
                    yt = function e() {
                        var t = new _t,
                            r,
                            n,
                            i,
                            a,
                            s,
                            o,
                            u;
                        yt.prototype.init.call(this);
                        r = this;
                        this.push = function (e) {
                            if (e.type !== 'video') {
                                return
                            }
                            n = e.trackId;
                            i = e.pts;
                            a = e.dts;
                            t.push(e)
                        };
                        t.on('data', function (e) {
                            var t = {
                                trackId: n,
                                pts: i,
                                dts: a,
                                data: e
                            };
                            switch (e[0] & 31) {
                                case 5:
                                    t.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';
                                    break;
                                case 6:
                                    t.nalUnitType = 'sei_rbsp';
                                    t.escapedRBSP = s(e.subarray(1));
                                    break;
                                case 7:
                                    t.nalUnitType = 'seq_parameter_set_rbsp';
                                    t.escapedRBSP = s(e.subarray(1));
                                    t.config = o(t.escapedRBSP);
                                    break;
                                case 8:
                                    t.nalUnitType = 'pic_parameter_set_rbsp';
                                    break;
                                case 9:
                                    t.nalUnitType = 'access_unit_delimiter_rbsp';
                                    break;
                                default:
                                    break
                            }
                            r.trigger('data', t)
                        }); t.on('done', function () {
                            r.trigger('done')
                        }); this.flush = function () {
                            t.flush()
                        }; u = function e(t, r) {
                            var n = 8,
                                i = 8,
                                a,
                                s;
                            for (a = 0; a < t; a++) {
                                if (i !== 0) {
                                    s = r.readExpGolomb();
                                    i = (n + s + 256) % 256
                                }
                                n = i === 0 ? n : i
                            }
                        }; s = function e(t) {
                            var r = t.byteLength,
                                n = [
                                ],
                                i = 1,
                                a,
                                s;
                            while (i < r - 2) {
                                if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                                    n.push(i + 2);
                                    i += 2
                                } else {
                                    i++
                                }
                            }
                            if (n.length === 0) {
                                return t
                            }
                            a = r - n.length;
                            s = new Uint8Array(a);
                            var o = 0;
                            for (i = 0; i < a; o++, i++) {
                                if (o === n[0]) {
                                    o++;
                                    n.shift()
                                }
                                s[i] = t[o]
                            }
                            return s
                        }; o = function e(t) {
                            var r = 0,
                                n = 0,
                                i = 0,
                                a = 0,
                                s = 1,
                                o,
                                l,
                                c,
                                d,
                                f,
                                h,
                                p,
                                v,
                                m,
                                g,
                                y,
                                _,
                                b,
                                T;
                            o = new gt(t);
                            l = o.readUnsignedByte();
                            d = o.readUnsignedByte();
                            c = o.readUnsignedByte();
                            o.skipUnsignedExpGolomb();
                            if (bt[l]) {
                                f = o.readUnsignedExpGolomb();
                                if (f === 3) {
                                    o.skipBits(1)
                                }
                                o.skipUnsignedExpGolomb();
                                o.skipUnsignedExpGolomb();
                                o.skipBits(1);
                                if (o.readBoolean()) {
                                    y = f !== 3 ? 8 : 12;
                                    for (T = 0; T < y; T++) {
                                        if (o.readBoolean()) {
                                            if (T < 6) {
                                                u(16, o)
                                            } else {
                                                u(64, o)
                                            }
                                        }
                                    }
                                }
                            }
                            o.skipUnsignedExpGolomb();
                            h = o.readUnsignedExpGolomb();
                            if (h === 0) {
                                o.readUnsignedExpGolomb()
                            } else if (h === 1) {
                                o.skipBits(1);
                                o.skipExpGolomb();
                                o.skipExpGolomb();
                                p = o.readUnsignedExpGolomb();
                                for (T = 0; T < p; T++) {
                                    o.skipExpGolomb()
                                }
                            }
                            o.skipUnsignedExpGolomb();
                            o.skipBits(1);
                            v = o.readUnsignedExpGolomb();
                            m = o.readUnsignedExpGolomb();
                            g = o.readBits(1);
                            if (g === 0) {
                                o.skipBits(1)
                            }
                            o.skipBits(1);
                            if (o.readBoolean()) {
                                r = o.readUnsignedExpGolomb();
                                n = o.readUnsignedExpGolomb();
                                i = o.readUnsignedExpGolomb();
                                a = o.readUnsignedExpGolomb()
                            }
                            if (o.readBoolean()) {
                                if (o.readBoolean()) {
                                    b = o.readUnsignedByte();
                                    switch (b) {
                                        case 1:
                                            _ = [
                                                1,
                                                1
                                            ];
                                            break;
                                        case 2:
                                            _ = [
                                                12,
                                                11
                                            ];
                                            break;
                                        case 3:
                                            _ = [
                                                10,
                                                11
                                            ];
                                            break;
                                        case 4:
                                            _ = [
                                                16,
                                                11
                                            ];
                                            break;
                                        case 5:
                                            _ = [
                                                40,
                                                33
                                            ];
                                            break;
                                        case 6:
                                            _ = [
                                                24,
                                                11
                                            ];
                                            break;
                                        case 7:
                                            _ = [
                                                20,
                                                11
                                            ];
                                            break;
                                        case 8:
                                            _ = [
                                                32,
                                                11
                                            ];
                                            break;
                                        case 9:
                                            _ = [
                                                80,
                                                33
                                            ];
                                            break;
                                        case 10:
                                            _ = [
                                                18,
                                                11
                                            ];
                                            break;
                                        case 11:
                                            _ = [
                                                15,
                                                11
                                            ];
                                            break;
                                        case 12:
                                            _ = [
                                                64,
                                                33
                                            ];
                                            break;
                                        case 13:
                                            _ = [
                                                160,
                                                99
                                            ];
                                            break;
                                        case 14:
                                            _ = [
                                                4,
                                                3
                                            ];
                                            break;
                                        case 15:
                                            _ = [
                                                3,
                                                2
                                            ];
                                            break;
                                        case 16:
                                            _ = [
                                                2,
                                                1
                                            ];
                                            break;
                                        case 255:
                                            {
                                                _ = [
                                                    o.readUnsignedByte() << 8 | o.readUnsignedByte(),
                                                    o.readUnsignedByte() << 8 | o.readUnsignedByte()
                                                ];
                                                break
                                            }
                                    }
                                    if (_) {
                                        s = _[0] / _[1]
                                    }
                                }
                            }
                            return {
                                profileIdc: l,
                                levelIdc: c,
                                profileCompatibility: d,
                                width: Math.ceil(((v + 1) * 16 - r * 2 - n * 2) * s),
                                height: (2 - g) * (m + 1) * 16 - i * 2 - a * 2
                            }
                        }
                    }; yt.prototype = new X; var Tt = {
                        H264Stream: yt,
                        NalByteStream: _t
                    }; var At = [
                        96000,
                        88200,
                        64000,
                        48000,
                        44100,
                        32000,
                        24000,
                        22050,
                        16000,
                        12000,
                        11025,
                        8000,
                        7350
                    ]; var St = function e(t) {
                        if (t[0] === 'I'.charCodeAt(0) && t[1] === 'D'.charCodeAt(0) && t[2] === '3'.charCodeAt(0)) {
                            return true
                        }
                        return false
                    }; var kt = function e(t) {
                        return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                    }; var wt = function e(t, r, n) {
                        var i,
                            a = '';
                        for (i = r; i < n; i++) {
                            a += '%' + ('00' + t[i].toString(16)).slice(- 2)
                        }
                        return a
                    }; var Ct = function e(t, r, n) {
                        return unescape(wt(t, r, n))
                    }; var Et = function e(t, r) {
                        var n = t[r + 6] << 21 | t[r + 7] << 14 | t[r + 8] << 7 | t[r + 9],
                            i = t[r + 5],
                            a = (i & 16) >> 4;
                        if (a) {
                            return n + 20
                        }
                        return n + 10
                    }; var It = function e(t, r) {
                        var n = (t[r + 5] & 224) >> 5,
                            i = t[r + 4] << 3,
                            a = t[r + 3] & 3 << 11;
                        return a | i | n
                    }; var Pt = function e(t, r) {
                        if (t[r] === 'I'.charCodeAt(0) && t[r + 1] === 'D'.charCodeAt(0) && t[r + 2] === '3'.charCodeAt(0)) {
                            return 'timed-metadata'
                        } else if (t[r] & 255 === 255 && (t[r + 1] & 240) === 240) {
                            return 'audio'
                        }
                        return null
                    }; var Ot = function e(t) {
                        var r = 0;
                        while (r + 5 < t.length) {
                            if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
                                r++;
                                continue
                            }
                            return At[(t[r + 2] & 60) >>> 2]
                        }
                        return null
                    }; var xt = function e(t) {
                        var r,
                            n,
                            i,
                            a;
                        r = 10;
                        if (t[5] & 64) {
                            r += 4;
                            r += kt(t.subarray(10, 14))
                        }
                        do {
                            n = kt(t.subarray(r + 4, r + 8));
                            if (n < 1) {
                                return null
                            }
                            a = String.fromCharCode(t[r], t[r + 1], t[r + 2], t[r + 3]);
                            if (a === 'PRIV') {
                                i = t.subarray(r + 10, r + n + 10);
                                for (var s = 0; s < i.byteLength; s++) {
                                    if (i[s] === 0) {
                                        var o = Ct(i, 0, s);
                                        if (o === 'com.apple.streaming.transportStreamTimestamp') {
                                            var u = i.subarray(s + 1);
                                            var l = (u[3] & 1) << 30 | u[4] << 22 | u[5] << 14 | u[6] << 6 | u[7] >>> 2;
                                            l *= 4;
                                            l += u[7] & 3;
                                            return l
                                        }
                                        break
                                    }
                                }
                            }
                            r += 10;
                            r += n
                        } while (r < t.byteLength);
                        return null
                    }; var Lt = {
                        isLikelyAacData: St,
                        parseId3TagSize: Et,
                        parseAdtsSize: It,
                        parseType: Pt,
                        parseSampleRate: Ot,
                        parseAacTimestamp: xt
                    }; var Dt; Dt = function e() {
                        var t = new Uint8Array,
                            r = 0;
                        Dt.prototype.init.call(this);
                        this.setTimestamp = function (e) {
                            r = e
                        };
                        this.push = function (e) {
                            var n = 0,
                                i = 0,
                                a,
                                s,
                                o,
                                u;
                            if (t.length) {
                                u = t.length;
                                t = new Uint8Array(e.byteLength + u);
                                t.set(t.subarray(0, u));
                                t.set(e, u)
                            } else {
                                t = e
                            }
                            while (t.length - i >= 3) {
                                if (t[i] === 'I'.charCodeAt(0) && t[i + 1] === 'D'.charCodeAt(0) && t[i + 2] === '3'.charCodeAt(0)) {
                                    if (t.length - i < 10) {
                                        break
                                    }
                                    n = Lt.parseId3TagSize(t, i);
                                    if (i + n > t.length) {
                                        break
                                    }
                                    s = {
                                        type: 'timed-metadata',
                                        data: t.subarray(i, i + n)
                                    };
                                    this.trigger('data', s);
                                    i += n;
                                    continue
                                } else if ((t[i] & 255) === 255 && (t[i + 1] & 240) === 240) {
                                    if (t.length - i < 7) {
                                        break
                                    }
                                    n = Lt.parseAdtsSize(t, i);
                                    if (i + n > t.length) {
                                        break
                                    }
                                    o = {
                                        type: 'audio',
                                        data: t.subarray(i, i + n),
                                        pts: r,
                                        dts: r
                                    };
                                    this.trigger('data', o);
                                    i += n;
                                    continue
                                }
                                i++
                            }
                            a = t.length - i;
                            if (a > 0) {
                                t = t.subarray(i)
                            } else {
                                t = new Uint8Array
                            }
                        }
                    }; Dt.prototype = new X; var Rt = Dt; var Mt = Tt.H264Stream; var jt = Lt.isLikelyAacData; var Ut = [
                        'audioobjecttype',
                        'channelcount',
                        'samplerate',
                        'samplingfrequencyindex',
                        'samplesize'
                    ]; var Nt = [
                        'width',
                        'height',
                        'profileIdc',
                        'levelIdc',
                        'profileCompatibility'
                    ]; var Bt, qt, Ft, Vt; var Ht = function e(t, r) {
                        var n;
                        if (t.length !== r.length) {
                            return false
                        }
                        for (n = 0; n < t.length; n++) {
                            if (t[n] !== r[n]) {
                                return false
                            }
                        }
                        return true
                    }; qt = function e(t, r) {
                        var n = [
                        ],
                            i = 0,
                            a = 0,
                            s = 0,
                            o = Infinity;
                        r = r || {
                        };
                        qt.prototype.init.call(this);
                        this.push = function (e) {
                            Pe.collectDtsInfo(t, e);
                            if (t) {
                                Ut.forEach(function (r) {
                                    t[r] = e[r]
                                })
                            }
                            n.push(e)
                        };
                        this.setEarliestDts = function (e) {
                            a = e - t.timelineStartInfo.baseMediaDecodeTime
                        };
                        this.setVideoBaseMediaDecodeTime = function (e) {
                            o = e
                        };
                        this.setAudioAppendStart = function (e) {
                            s = e
                        };
                        this.flush = function () {
                            var e,
                                u,
                                l,
                                c;
                            if (n.length === 0) {
                                this.trigger('done', 'AudioSegmentStream');
                                return
                            }
                            e = ke.trimAdtsFramesByEarliestDts(n, t, a);
                            t.baseMediaDecodeTime = Pe.calculateTrackBaseMediaDecodeTime(t, r.keepOriginalTimestamps);
                            ke.prefixWithSilence(t, e, s, o);
                            t.samples = ke.generateSampleTable(e);
                            l = N.mdat(ke.concatenateFrameData(e));
                            n = [
                            ];
                            u = N.moof(i, [
                                t
                            ]);
                            c = new Uint8Array(u.byteLength + l.byteLength);
                            i++;
                            c.set(u);
                            c.set(l, u.byteLength);
                            Pe.clearDtsInfo(t);
                            this.trigger('data', {
                                track: t,
                                boxes: c
                            });
                            this.trigger('done', 'AudioSegmentStream')
                        }
                    }; qt.prototype = new X; Bt = function e(t, r) {
                        var n = 0,
                            i = [
                            ],
                            a = [
                            ],
                            s,
                            o;
                        r = r || {
                        };
                        Bt.prototype.init.call(this);
                        delete t.minPTS;
                        this.gopCache_ = [
                        ];
                        this.push = function (e) {
                            Pe.collectDtsInfo(t, e);
                            if (e.nalUnitType === 'seq_parameter_set_rbsp' && !s) {
                                s = e.config;
                                t.sps = [
                                    e.data
                                ];
                                Nt.forEach(function (e) {
                                    t[e] = s[e]
                                }, this)
                            }
                            if (e.nalUnitType === 'pic_parameter_set_rbsp' && !o) {
                                o = e.data;
                                t.pps = [
                                    e.data
                                ]
                            }
                            i.push(e)
                        };
                        this.flush = function () {
                            var e,
                                s,
                                o,
                                u,
                                l,
                                c;
                            while (i.length) {
                                if (i[0].nalUnitType === 'access_unit_delimiter_rbsp') {
                                    break
                                }
                                i.shift()
                            }
                            if (i.length === 0) {
                                this.resetStream_();
                                this.trigger('done', 'VideoSegmentStream');
                                return
                            }
                            e = ne.groupNalsIntoFrames(i);
                            o = ne.groupFramesIntoGops(e);
                            if (!o[0][0].keyFrame) {
                                s = this.getGopForFusion_(i[0], t);
                                if (s) {
                                    o.unshift(s);
                                    o.byteLength += s.byteLength;
                                    o.nalCount += s.nalCount;
                                    o.pts = s.pts;
                                    o.dts = s.dts;
                                    o.duration += s.duration
                                } else {
                                    o = ne.extendFirstKeyFrame(o)
                                }
                            }
                            if (a.length) {
                                var d;
                                if (r.alignGopsAtEnd) {
                                    d = this.alignGopsAtEnd_(o)
                                } else {
                                    d = this.alignGopsAtStart_(o)
                                }
                                if (!d) {
                                    this.gopCache_.unshift({
                                        gop: o.pop(),
                                        pps: t.pps,
                                        sps: t.sps
                                    });
                                    this.gopCache_.length = Math.min(6, this.gopCache_.length);
                                    i = [
                                    ];
                                    this.resetStream_();
                                    this.trigger('done', 'VideoSegmentStream');
                                    return
                                }
                                Pe.clearDtsInfo(t);
                                o = d
                            }
                            Pe.collectDtsInfo(t, o);
                            t.samples = ne.generateSampleTable(o);
                            l = N.mdat(ne.concatenateNalData(o));
                            t.baseMediaDecodeTime = Pe.calculateTrackBaseMediaDecodeTime(t, r.keepOriginalTimestamps);
                            this.trigger('processedGopsInfo', o.map(function (e) {
                                return {
                                    pts: e.pts,
                                    dts: e.dts,
                                    byteLength: e.byteLength
                                }
                            }));
                            this.gopCache_.unshift({
                                gop: o.pop(),
                                pps: t.pps,
                                sps: t.sps
                            });
                            this.gopCache_.length = Math.min(6, this.gopCache_.length);
                            i = [
                            ];
                            this.trigger('baseMediaDecodeTime', t.baseMediaDecodeTime);
                            this.trigger('timelineStartInfo', t.timelineStartInfo);
                            u = N.moof(n, [
                                t
                            ]);
                            c = new Uint8Array(u.byteLength + l.byteLength);
                            n++;
                            c.set(u);
                            c.set(l, u.byteLength);
                            this.trigger('data', {
                                track: t,
                                boxes: c
                            });
                            this.resetStream_();
                            this.trigger('done', 'VideoSegmentStream')
                        };
                        this.resetStream_ = function () {
                            Pe.clearDtsInfo(t);
                            s = undefined;
                            o = undefined
                        };
                        this.getGopForFusion_ = function (e) {
                            var r = 45000,
                                n = 10000,
                                i = Infinity,
                                a,
                                s,
                                o,
                                u,
                                l;
                            for (l = 0; l < this.gopCache_.length; l++) {
                                u = this.gopCache_[l];
                                o = u.gop;
                                if (!(t.pps && Ht(t.pps[0], u.pps[0])) || !(t.sps && Ht(t.sps[0], u.sps[0]))) {
                                    continue
                                }
                                if (o.dts < t.timelineStartInfo.dts) {
                                    continue
                                }
                                a = e.dts - o.dts - o.duration;
                                if (a >= - n && a <= r) {
                                    if (!s || i > a) {
                                        s = u;
                                        i = a
                                    }
                                }
                            }
                            if (s) {
                                return s.gop
                            }
                            return null
                        };
                        this.alignGopsAtStart_ = function (e) {
                            var t,
                                r,
                                n,
                                i,
                                s,
                                o,
                                u,
                                l;
                            s = e.byteLength;
                            o = e.nalCount;
                            u = e.duration;
                            t = r = 0;
                            while (t < a.length && r < e.length) {
                                n = a[t];
                                i = e[r];
                                if (n.pts === i.pts) {
                                    break
                                }
                                if (i.pts > n.pts) {
                                    t++;
                                    continue
                                }
                                r++;
                                s -= i.byteLength;
                                o -= i.nalCount;
                                u -= i.duration
                            }
                            if (r === 0) {
                                return e
                            }
                            if (r === e.length) {
                                return null
                            }
                            l = e.slice(r);
                            l.byteLength = s;
                            l.duration = u;
                            l.nalCount = o;
                            l.pts = l[0].pts;
                            l.dts = l[0].dts;
                            return l
                        };
                        this.alignGopsAtEnd_ = function (e) {
                            var t,
                                r,
                                n,
                                i,
                                s,
                                o;
                            t = a.length - 1;
                            r = e.length - 1;
                            s = null;
                            o = false;
                            while (t >= 0 && r >= 0) {
                                n = a[t];
                                i = e[r];
                                if (n.pts === i.pts) {
                                    o = true;
                                    break
                                }
                                if (n.pts > i.pts) {
                                    t--;
                                    continue
                                }
                                if (t === a.length - 1) {
                                    s = r
                                }
                                r--
                            }
                            if (!o && s === null) {
                                return null
                            }
                            var u;
                            if (o) {
                                u = r
                            } else {
                                u = s
                            }
                            if (u === 0) {
                                return e
                            }
                            var l = e.slice(u);
                            var c = l.reduce(function (e, t) {
                                e.byteLength += t.byteLength;
                                e.duration += t.duration;
                                e.nalCount += t.nalCount;
                                return e
                            }, {
                                byteLength: 0,
                                duration: 0,
                                nalCount: 0
                            });
                            l.byteLength = c.byteLength;
                            l.duration = c.duration;
                            l.nalCount = c.nalCount;
                            l.pts = l[0].pts;
                            l.dts = l[0].dts;
                            return l
                        };
                        this.alignGopsWith = function (e) {
                            a = e
                        }
                    }; Bt.prototype = new X; Vt = function e(t, r) {
                        this.numberOfTracks = 0;
                        this.metadataStream = r;
                        t = t || {
                        };
                        if (typeof t.remux !== 'undefined') {
                            this.remuxTracks = !!t.remux
                        } else {
                            this.remuxTracks = true
                        }
                        if (typeof t.keepOriginalTimestamps === 'boolean') {
                            this.keepOriginalTimestamps = t.keepOriginalTimestamps
                        }
                        this.pendingTracks = [
                        ];
                        this.videoTrack = null;
                        this.pendingBoxes = [
                        ];
                        this.pendingCaptions = [
                        ];
                        this.pendingMetadata = [
                        ];
                        this.pendingBytes = 0;
                        this.emittedTracks = 0;
                        Vt.prototype.init.call(this);
                        this.push = function (e) {
                            if (e.text) {
                                return this.pendingCaptions.push(e)
                            }
                            if (e.frames) {
                                return this.pendingMetadata.push(e)
                            }
                            this.pendingTracks.push(e.track);
                            this.pendingBoxes.push(e.boxes);
                            this.pendingBytes += e.boxes.byteLength;
                            if (e.track.type === 'video') {
                                this.videoTrack = e.track
                            }
                            if (e.track.type === 'audio') {
                                this.audioTrack = e.track
                            }
                        }
                    }; Vt.prototype = new X; Vt.prototype.flush = function (e) {
                        var t = 0,
                            r = {
                                captions: [
                                ],
                                captionStreams: {
                                },
                                metadata: [
                                ],
                                info: {
                                }
                            },
                            n,
                            i,
                            a,
                            s = 0,
                            o;
                        if (this.pendingTracks.length < this.numberOfTracks) {
                            if (e !== 'VideoSegmentStream' && e !== 'AudioSegmentStream') {
                                return
                            } else if (this.remuxTracks) {
                                return
                            } else if (this.pendingTracks.length === 0) {
                                this.emittedTracks++;
                                if (this.emittedTracks >= this.numberOfTracks) {
                                    this.trigger('done');
                                    this.emittedTracks = 0
                                }
                                return
                            }
                        }
                        if (this.videoTrack) {
                            s = this.videoTrack.timelineStartInfo.pts;
                            Nt.forEach(function (e) {
                                r.info[e] = this.videoTrack[e]
                            }, this)
                        } else if (this.audioTrack) {
                            s = this.audioTrack.timelineStartInfo.pts;
                            Ut.forEach(function (e) {
                                r.info[e] = this.audioTrack[e]
                            }, this)
                        }
                        if (this.pendingTracks.length === 1) {
                            r.type = this.pendingTracks[0].type
                        } else {
                            r.type = 'combined'
                        }
                        this.emittedTracks += this.pendingTracks.length;
                        a = N.initSegment(this.pendingTracks);
                        r.initSegment = new Uint8Array(a.byteLength);
                        r.initSegment.set(a);
                        r.data = new Uint8Array(this.pendingBytes);
                        for (o = 0; o < this.pendingBoxes.length; o++) {
                            r.data.set(this.pendingBoxes[o], t);
                            t += this.pendingBoxes[o].byteLength
                        }
                        for (o = 0; o < this.pendingCaptions.length; o++) {
                            n = this.pendingCaptions[o];
                            n.startTime = n.startPts;
                            if (!this.keepOriginalTimestamps) {
                                n.startTime -= s
                            }
                            n.startTime /= 90000;
                            n.endTime = n.endPts;
                            if (!this.keepOriginalTimestamps) {
                                n.endTime -= s
                            }
                            n.endTime /= 90000;
                            r.captionStreams[n.stream] = true;
                            r.captions.push(n)
                        }
                        for (o = 0; o < this.pendingMetadata.length; o++) {
                            i = this.pendingMetadata[o];
                            i.cueTime = i.pts;
                            if (!this.keepOriginalTimestamps) {
                                i.cueTime -= s
                            }
                            i.cueTime /= 90000;
                            r.metadata.push(i)
                        }
                        r.metadata.dispatchType = this.metadataStream.dispatchType;
                        this.pendingTracks.length = 0;
                        this.videoTrack = null;
                        this.pendingBoxes.length = 0;
                        this.pendingCaptions.length = 0;
                        this.pendingBytes = 0;
                        this.pendingMetadata.length = 0;
                        this.trigger('data', r);
                        if (this.emittedTracks >= this.numberOfTracks) {
                            this.trigger('done');
                            this.emittedTracks = 0
                        }
                    }; Ft = function e(t) {
                        var r = this,
                            n = true,
                            i,
                            a;
                        Ft.prototype.init.call(this);
                        t = t || {
                        };
                        this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
                        this.transmuxPipeline_ = {
                        };
                        this.setupAacPipeline = function () {
                            var e = {
                            };
                            this.transmuxPipeline_ = e;
                            e.type = 'aac';
                            e.metadataStream = new ft.MetadataStream;
                            e.aacStream = new Rt;
                            e.audioTimestampRolloverStream = new ft.TimestampRolloverStream('audio');
                            e.timedMetadataTimestampRolloverStream = new ft.TimestampRolloverStream('timed-metadata');
                            e.adtsStream = new vt;
                            e.coalesceStream = new Vt(t, e.metadataStream);
                            e.headOfPipeline = e.aacStream;
                            e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                            e.aacStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                            e.metadataStream.on('timestamp', function (t) {
                                e.aacStream.setTimestamp(t.timeStamp)
                            });
                            e.aacStream.on('data', function (n) {
                                if (n.type === 'timed-metadata' && !e.audioSegmentStream) {
                                    a = a || {
                                        timelineStartInfo: {
                                            baseMediaDecodeTime: r.baseMediaDecodeTime
                                        },
                                        codec: 'adts',
                                        type: 'audio'
                                    };
                                    e.coalesceStream.numberOfTracks++;
                                    e.audioSegmentStream = new qt(a, t);
                                    e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                                }
                            });
                            e.coalesceStream.on('data', this.trigger.bind(this, 'data'));
                            e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                        };
                        this.setupTsPipeline = function () {
                            var e = {
                            };
                            this.transmuxPipeline_ = e;
                            e.type = 'ts';
                            e.metadataStream = new ft.MetadataStream;
                            e.packetStream = new ft.TransportPacketStream;
                            e.parseStream = new ft.TransportParseStream;
                            e.elementaryStream = new ft.ElementaryStream;
                            e.videoTimestampRolloverStream = new ft.TimestampRolloverStream('video');
                            e.audioTimestampRolloverStream = new ft.TimestampRolloverStream('audio');
                            e.timedMetadataTimestampRolloverStream = new ft.TimestampRolloverStream('timed-metadata');
                            e.adtsStream = new vt;
                            e.h264Stream = new Mt;
                            e.captionStream = new ft.CaptionStream;
                            e.coalesceStream = new Vt(t, e.metadataStream);
                            e.headOfPipeline = e.packetStream;
                            e.packetStream.pipe(e.parseStream).pipe(e.elementaryStream);
                            e.elementaryStream.pipe(e.videoTimestampRolloverStream).pipe(e.h264Stream);
                            e.elementaryStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                            e.elementaryStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                            e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream);
                            e.elementaryStream.on('data', function (n) {
                                var s;
                                if (n.type === 'metadata') {
                                    s = n.tracks.length;
                                    while (s--) {
                                        if (!i && n.tracks[s].type === 'video') {
                                            i = n.tracks[s];
                                            i.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                                        } else if (!a && n.tracks[s].type === 'audio') {
                                            a = n.tracks[s];
                                            a.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                                        }
                                    }
                                    if (i && !e.videoSegmentStream) {
                                        e.coalesceStream.numberOfTracks++;
                                        e.videoSegmentStream = new Bt(i, t);
                                        e.videoSegmentStream.on('timelineStartInfo', function (t) {
                                            if (a) {
                                                a.timelineStartInfo = t;
                                                e.audioSegmentStream.setEarliestDts(t.dts)
                                            }
                                        });
                                        e.videoSegmentStream.on('processedGopsInfo', r.trigger.bind(r, 'gopInfo'));
                                        e.videoSegmentStream.on('baseMediaDecodeTime', function (t) {
                                            if (a) {
                                                e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
                                            }
                                        });
                                        e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
                                    }
                                    if (a && !e.audioSegmentStream) {
                                        e.coalesceStream.numberOfTracks++;
                                        e.audioSegmentStream = new qt(a, t);
                                        e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                                    }
                                }
                            });
                            e.coalesceStream.on('data', this.trigger.bind(this, 'data'));
                            e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                        };
                        this.setBaseMediaDecodeTime = function (e) {
                            var r = this.transmuxPipeline_;
                            if (!t.keepOriginalTimestamps) {
                                this.baseMediaDecodeTime = e
                            }
                            if (a) {
                                a.timelineStartInfo.dts = undefined;
                                a.timelineStartInfo.pts = undefined;
                                Pe.clearDtsInfo(a);
                                if (!t.keepOriginalTimestamps) {
                                    a.timelineStartInfo.baseMediaDecodeTime = e
                                }
                                if (r.audioTimestampRolloverStream) {
                                    r.audioTimestampRolloverStream.discontinuity()
                                }
                            }
                            if (i) {
                                if (r.videoSegmentStream) {
                                    r.videoSegmentStream.gopCache_ = [
                                    ];
                                    r.videoTimestampRolloverStream.discontinuity()
                                }
                                i.timelineStartInfo.dts = undefined;
                                i.timelineStartInfo.pts = undefined;
                                Pe.clearDtsInfo(i);
                                r.captionStream.reset();
                                if (!t.keepOriginalTimestamps) {
                                    i.timelineStartInfo.baseMediaDecodeTime = e
                                }
                            }
                            if (r.timedMetadataTimestampRolloverStream) {
                                r.timedMetadataTimestampRolloverStream.discontinuity()
                            }
                        };
                        this.setAudioAppendStart = function (e) {
                            if (a) {
                                this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                            }
                        };
                        this.alignGopsWith = function (e) {
                            if (i && this.transmuxPipeline_.videoSegmentStream) {
                                this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                            }
                        };
                        this.push = function (e) {
                            if (n) {
                                var t = jt(e);
                                if (t && this.transmuxPipeline_.type !== 'aac') {
                                    this.setupAacPipeline()
                                } else if (!t && this.transmuxPipeline_.type !== 'ts') {
                                    this.setupTsPipeline()
                                }
                                n = false
                            }
                            this.transmuxPipeline_.headOfPipeline.push(e)
                        };
                        this.flush = function () {
                            n = true;
                            this.transmuxPipeline_.headOfPipeline.flush()
                        };
                        this.resetCaptions = function () {
                            if (this.transmuxPipeline_.captionStream) {
                                this.transmuxPipeline_.captionStream.reset()
                            }
                        }
                    }; Ft.prototype = new X; var zt = {
                        Transmuxer: Ft,
                        VideoSegmentStream: Bt,
                        AudioSegmentStream: qt,
                        AUDIO_PROPERTIES: Ut,
                        VIDEO_PROPERTIES: Nt
                    }; var Gt, Wt, Yt = Y.parseType, $t = function e(t) {
                        return new Date(t * 1000 - 2082844800000)
                    }, Xt = function e(t) {
                        return {
                            isLeading: (t[0] & 12) >>> 2,
                            dependsOn: t[0] & 3,
                            isDependedOn: (t[1] & 192) >>> 6,
                            hasRedundancy: (t[1] & 48) >>> 4,
                            paddingValue: (t[1] & 14) >>> 1,
                            isNonSyncSample: t[1] & 1,
                            degradationPriority: t[2] << 8 | t[3]
                        }
                    }, Kt = function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = [
                            ],
                            i,
                            a;
                        for (i = 0; i + 4 < t.length; i += a) {
                            a = r.getUint32(i);
                            i += 4;
                            if (a <= 0) {
                                n.push('<span style=\'color:red;\'>MALFORMED DATA</span>');
                                continue
                            }
                            switch (t[i] & 31) {
                                case 1:
                                    n.push('slice_layer_without_partitioning_rbsp');
                                    break;
                                case 5:
                                    n.push('slice_layer_without_partitioning_rbsp_idr');
                                    break;
                                case 6:
                                    n.push('sei_rbsp');
                                    break;
                                case 7:
                                    n.push('seq_parameter_set_rbsp');
                                    break;
                                case 8:
                                    n.push('pic_parameter_set_rbsp');
                                    break;
                                case 9:
                                    n.push('access_unit_delimiter_rbsp');
                                    break;
                                default:
                                    n.push('UNKNOWN NAL - ' + t[i] & 31);
                                    break
                            }
                        }
                        return n
                    },
                        Qt = {
                            avc1: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                return {
                                    dataReferenceIndex: r.getUint16(6),
                                    width: r.getUint16(24),
                                    height: r.getUint16(26),
                                    horizresolution: r.getUint16(28) + r.getUint16(30) / 16,
                                    vertresolution: r.getUint16(32) + r.getUint16(34) / 16,
                                    frameCount: r.getUint16(40),
                                    depth: r.getUint16(74),
                                    config: Gt(t.subarray(78, t.byteLength))
                                }
                            },
                            avcC: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        configurationVersion: t[0],
                                        avcProfileIndication: t[1],
                                        profileCompatibility: t[2],
                                        avcLevelIndication: t[3],
                                        lengthSizeMinusOne: t[4] & 3,
                                        sps: [
                                        ],
                                        pps: [
                                        ]
                                    },
                                    i = t[5] & 31,
                                    a,
                                    s,
                                    o,
                                    u;
                                o = 6;
                                for (u = 0; u < i; u++) {
                                    s = r.getUint16(o);
                                    o += 2;
                                    n.sps.push(new Uint8Array(t.subarray(o, o + s)));
                                    o += s
                                }
                                a = t[o];
                                o++;
                                for (u = 0; u < a; u++) {
                                    s = r.getUint16(o);
                                    o += 2;
                                    n.pps.push(new Uint8Array(t.subarray(o, o + s)));
                                    o += s
                                }
                                return n
                            },
                            btrt: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                return {
                                    bufferSizeDB: r.getUint32(0),
                                    maxBitrate: r.getUint32(4),
                                    avgBitrate: r.getUint32(8)
                                }
                            },
                            esds: function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    esId: t[6] << 8 | t[7],
                                    streamPriority: t[8] & 31,
                                    decoderConfig: {
                                        objectProfileIndication: t[11],
                                        streamType: t[12] >>> 2 & 63,
                                        bufferSize: t[13] << 16 | t[14] << 8 | t[15],
                                        maxBitrate: t[16] << 24 | t[17] << 16 | t[18] << 8 | t[19],
                                        avgBitrate: t[20] << 24 | t[21] << 16 | t[22] << 8 | t[23],
                                        decoderConfigDescriptor: {
                                            tag: t[24],
                                            length: t[25],
                                            audioObjectType: t[26] >>> 3 & 31,
                                            samplingFrequencyIndex: (t[26] & 7) << 1 | t[27] >>> 7 & 1,
                                            channelConfiguration: t[27] >>> 3 & 15
                                        }
                                    }
                                }
                            },
                            ftyp: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        majorBrand: Yt(t.subarray(0, 4)),
                                        minorVersion: r.getUint32(4),
                                        compatibleBrands: [
                                        ]
                                    },
                                    i = 8;
                                while (i < t.byteLength) {
                                    n.compatibleBrands.push(Yt(t.subarray(i, i + 4)));
                                    i += 4
                                }
                                return n
                            },
                            dinf: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            dref: function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    dataReferences: Gt(t.subarray(8))
                                }
                            },
                            hdlr: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: r.getUint8(0),
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        handlerType: Yt(t.subarray(8, 12)),
                                        name: ''
                                    },
                                    i = 8;
                                for (i = 24; i < t.byteLength; i++) {
                                    if (t[i] === 0) {
                                        i++;
                                        break
                                    }
                                    n.name += String.fromCharCode(t[i])
                                }
                                n.name = decodeURIComponent(escape(n.name));
                                return n
                            },
                            mdat: function e(t) {
                                return {
                                    byteLength: t.byteLength,
                                    nals: Kt(t)
                                }
                            },
                            mdhd: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = 4,
                                    i,
                                    a = {
                                        version: r.getUint8(0),
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        language: ''
                                    };
                                if (a.version === 1) {
                                    n += 4;
                                    a.creationTime = $t(r.getUint32(n));
                                    n += 8;
                                    a.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    a.timescale = r.getUint32(n);
                                    n += 8;
                                    a.duration = r.getUint32(n)
                                } else {
                                    a.creationTime = $t(r.getUint32(n));
                                    n += 4;
                                    a.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    a.timescale = r.getUint32(n);
                                    n += 4;
                                    a.duration = r.getUint32(n)
                                }
                                n += 4;
                                i = r.getUint16(n);
                                a.language += String.fromCharCode((i >> 10) + 96);
                                a.language += String.fromCharCode(((i & 992) >> 5) + 96);
                                a.language += String.fromCharCode((i & 31) + 96);
                                return a
                            },
                            mdia: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            mfhd: function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    sequenceNumber: t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7]
                                }
                            },
                            minf: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            mp4a: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        dataReferenceIndex: r.getUint16(6),
                                        channelcount: r.getUint16(16),
                                        samplesize: r.getUint16(18),
                                        samplerate: r.getUint16(24) + r.getUint16(26) / 65536
                                    };
                                if (t.byteLength > 28) {
                                    n.streamDescriptor = Gt(t.subarray(28))[0]
                                }
                                return n
                            },
                            moof: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            moov: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            mvex: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            mvhd: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = 4,
                                    i = {
                                        version: r.getUint8(0),
                                        flags: new Uint8Array(t.subarray(1, 4))
                                    };
                                if (i.version === 1) {
                                    n += 4;
                                    i.creationTime = $t(r.getUint32(n));
                                    n += 8;
                                    i.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.timescale = r.getUint32(n);
                                    n += 8;
                                    i.duration = r.getUint32(n)
                                } else {
                                    i.creationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.timescale = r.getUint32(n);
                                    n += 4;
                                    i.duration = r.getUint32(n)
                                }
                                n += 4;
                                i.rate = r.getUint16(n) + r.getUint16(n + 2) / 16;
                                n += 4;
                                i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8;
                                n += 2;
                                n += 2;
                                n += 2 * 4;
                                i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4));
                                n += 9 * 4;
                                n += 6 * 4;
                                i.nextTrackId = r.getUint32(n);
                                return i
                            },
                            pdin: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                return {
                                    version: r.getUint8(0),
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    rate: r.getUint32(4),
                                    initialDelay: r.getUint32(8)
                                }
                            },
                            sdtp: function e(t) {
                                var r = {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    samples: [
                                    ]
                                },
                                    n;
                                for (n = 4; n < t.byteLength; n++) {
                                    r.samples.push({
                                        dependsOn: (t[n] & 48) >> 4,
                                        isDependedOn: (t[n] & 12) >> 2,
                                        hasRedundancy: t[n] & 3
                                    })
                                }
                                return r
                            },
                            sidx: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        references: [
                                        ],
                                        referenceId: r.getUint32(4),
                                        timescale: r.getUint32(8),
                                        earliestPresentationTime: r.getUint32(12),
                                        firstOffset: r.getUint32(16)
                                    },
                                    i = r.getUint16(22),
                                    a;
                                for (a = 24; i; a += 12, i--) {
                                    n.references.push({
                                        referenceType: (t[a] & 128) >>> 7,
                                        referencedSize: r.getUint32(a) & 2147483647,
                                        subsegmentDuration: r.getUint32(a + 4),
                                        startsWithSap: !!(t[a + 8] & 128),
                                        sapType: (t[a + 8] & 112) >>> 4,
                                        sapDeltaTime: r.getUint32(a + 8) & 268435455
                                    })
                                }
                                return n
                            },
                            smhd: function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    balance: t[4] + t[5] / 256
                                }
                            },
                            stbl: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            stco: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        chunkOffsets: [
                                        ]
                                    },
                                    i = r.getUint32(4),
                                    a;
                                for (a = 8; i; a += 4, i--) {
                                    n.chunkOffsets.push(r.getUint32(a))
                                }
                                return n
                            },
                            stsc: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = r.getUint32(4),
                                    i = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        sampleToChunks: [
                                        ]
                                    },
                                    a;
                                for (a = 8; n; a += 12, n--) {
                                    i.sampleToChunks.push({
                                        firstChunk: r.getUint32(a),
                                        samplesPerChunk: r.getUint32(a + 4),
                                        sampleDescriptionIndex: r.getUint32(a + 8)
                                    })
                                }
                                return i
                            },
                            stsd: function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    sampleDescriptions: Gt(t.subarray(8))
                                }
                            },
                            stsz: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        sampleSize: r.getUint32(4),
                                        entries: [
                                        ]
                                    },
                                    i;
                                for (i = 12; i < t.byteLength; i += 4) {
                                    n.entries.push(r.getUint32(i))
                                }
                                return n
                            },
                            stts: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        timeToSamples: [
                                        ]
                                    },
                                    i = r.getUint32(4),
                                    a;
                                for (a = 8; i; a += 8, i--) {
                                    n.timeToSamples.push({
                                        sampleCount: r.getUint32(a),
                                        sampleDelta: r.getUint32(a + 4)
                                    })
                                }
                                return n
                            },
                            styp: function e(t) {
                                return Qt.ftyp(t)
                            },
                            tfdt: function e(t) {
                                var r = {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    baseMediaDecodeTime: t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7]
                                };
                                if (r.version === 1) {
                                    r.baseMediaDecodeTime *= Math.pow(2, 32);
                                    r.baseMediaDecodeTime += t[8] << 24 | t[9] << 16 | t[10] << 8 | t[11]
                                }
                                return r
                            },
                            tfhd: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = {
                                        version: t[0],
                                        flags: new Uint8Array(t.subarray(1, 4)),
                                        trackId: r.getUint32(4)
                                    },
                                    i = n.flags[2] & 1,
                                    a = n.flags[2] & 2,
                                    s = n.flags[2] & 8,
                                    o = n.flags[2] & 16,
                                    u = n.flags[2] & 32,
                                    l = n.flags[0] & 65536,
                                    c = n.flags[0] & 131072,
                                    d;
                                d = 8;
                                if (i) {
                                    d += 4;
                                    n.baseDataOffset = r.getUint32(12);
                                    d += 4
                                }
                                if (a) {
                                    n.sampleDescriptionIndex = r.getUint32(d);
                                    d += 4
                                }
                                if (s) {
                                    n.defaultSampleDuration = r.getUint32(d);
                                    d += 4
                                }
                                if (o) {
                                    n.defaultSampleSize = r.getUint32(d);
                                    d += 4
                                }
                                if (u) {
                                    n.defaultSampleFlags = r.getUint32(d)
                                }
                                if (l) {
                                    n.durationIsEmpty = true
                                }
                                if (!i && c) {
                                    n.baseDataOffsetIsMoof = true
                                }
                                return n
                            },
                            tkhd: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    n = 4,
                                    i = {
                                        version: r.getUint8(0),
                                        flags: new Uint8Array(t.subarray(1, 4))
                                    };
                                if (i.version === 1) {
                                    n += 4;
                                    i.creationTime = $t(r.getUint32(n));
                                    n += 8;
                                    i.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.trackId = r.getUint32(n);
                                    n += 4;
                                    n += 8;
                                    i.duration = r.getUint32(n)
                                } else {
                                    i.creationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.modificationTime = $t(r.getUint32(n));
                                    n += 4;
                                    i.trackId = r.getUint32(n);
                                    n += 4;
                                    n += 4;
                                    i.duration = r.getUint32(n)
                                }
                                n += 4;
                                n += 2 * 4;
                                i.layer = r.getUint16(n);
                                n += 2;
                                i.alternateGroup = r.getUint16(n);
                                n += 2;
                                i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8;
                                n += 2;
                                n += 2;
                                i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4));
                                n += 9 * 4;
                                i.width = r.getUint16(n) + r.getUint16(n + 2) / 16;
                                n += 4;
                                i.height = r.getUint16(n) + r.getUint16(n + 2) / 16;
                                return i
                            },
                            traf: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            trak: function e(t) {
                                return {
                                    boxes: Gt(t)
                                }
                            },
                            trex: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    trackId: r.getUint32(4),
                                    defaultSampleDescriptionIndex: r.getUint32(8),
                                    defaultSampleDuration: r.getUint32(12),
                                    defaultSampleSize: r.getUint32(16),
                                    sampleDependsOn: t[20] & 3,
                                    sampleIsDependedOn: (t[21] & 192) >> 6,
                                    sampleHasRedundancy: (t[21] & 48) >> 4,
                                    samplePaddingValue: (t[21] & 14) >> 1,
                                    sampleIsDifferenceSample: !!(t[21] & 1),
                                    sampleDegradationPriority: r.getUint16(22)
                                }
                            },
                            trun: function e(t) {
                                var r = {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    samples: [
                                    ]
                                },
                                    n = new DataView(t.buffer, t.byteOffset, t.byteLength),
                                    i = r.flags[2] & 1,
                                    a = r.flags[2] & 4,
                                    s = r.flags[1] & 1,
                                    o = r.flags[1] & 2,
                                    u = r.flags[1] & 4,
                                    l = r.flags[1] & 8,
                                    c = n.getUint32(4),
                                    d = 8,
                                    f;
                                if (i) {
                                    r.dataOffset = n.getInt32(d);
                                    d += 4
                                }
                                if (a && c) {
                                    f = {
                                        flags: Xt(t.subarray(d, d + 4))
                                    };
                                    d += 4;
                                    if (s) {
                                        f.duration = n.getUint32(d);
                                        d += 4
                                    }
                                    if (o) {
                                        f.size = n.getUint32(d);
                                        d += 4
                                    }
                                    if (l) {
                                        f.compositionTimeOffset = n.getUint32(d);
                                        d += 4
                                    }
                                    r.samples.push(f);
                                    c--
                                }
                                while (c--) {
                                    f = {
                                    };
                                    if (s) {
                                        f.duration = n.getUint32(d);
                                        d += 4
                                    }
                                    if (o) {
                                        f.size = n.getUint32(d);
                                        d += 4
                                    }
                                    if (u) {
                                        f.flags = Xt(t.subarray(d, d + 4));
                                        d += 4
                                    }
                                    if (l) {
                                        f.compositionTimeOffset = n.getUint32(d);
                                        d += 4
                                    }
                                    r.samples.push(f)
                                }
                                return r
                            },
                            'url ': function e(t) {
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4))
                                }
                            },
                            vmhd: function e(t) {
                                var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                                return {
                                    version: t[0],
                                    flags: new Uint8Array(t.subarray(1, 4)),
                                    graphicsmode: r.getUint16(4),
                                    opcolor: new Uint16Array([r.getUint16(6),
                                    r.getUint16(8),
                                    r.getUint16(10)])
                                }
                            }
                        };
                    Gt = function e(t) {
                        var r = 0,
                            n = [
                            ],
                            i,
                            a,
                            s,
                            o,
                            u;
                        var l = new ArrayBuffer(t.length);
                        var c = new Uint8Array(l);
                        for (var d = 0; d < t.length; ++d) {
                            c[d] = t[d]
                        }
                        i = new DataView(l);
                        while (r < t.byteLength) {
                            a = i.getUint32(r);
                            s = Yt(t.subarray(r + 4, r + 8));
                            o = a > 1 ? r + a : t.byteLength;
                            u = (Qt[s] || function (e) {
                                return {
                                    data: e
                                }
                            })(t.subarray(r + 8, o));
                            u.size = a;
                            u.type = s;
                            n.push(u);
                            r = o
                        }
                        return n
                    };
                    Wt = function e(t, r) {
                        var n;
                        r = r || 0;
                        n = new Array(r * 2 + 1).join(' ');
                        return t.map(function (e, t) {
                            return n + e.type + '\n' + Object.keys(e).filter(function (e) {
                                return e !== 'type' && e !== 'boxes'
                            }).map(function (t) {
                                var r = n + '  ' + t + ': ',
                                    i = e[t];
                                if (i instanceof Uint8Array || i instanceof Uint32Array) {
                                    var a = Array.prototype.slice.call(new Uint8Array(i.buffer, i.byteOffset, i.byteLength)).map(function (e) {
                                        return ' ' + ('00' + e.toString(16)).slice(- 2)
                                    }).join('').match(/.{1,24}/g);
                                    if (!a) {
                                        return r + '<>'
                                    }
                                    if (a.length === 1) {
                                        return r + '<' + a.join('').slice(1) + '>'
                                    }
                                    return r + '<\n' + a.map(function (e) {
                                        return n + '  ' + e
                                    }).join('\n') + '\n' + n + '  >'
                                }
                                return r + JSON.stringify(i, null, 2).split('\n').map(function (e, t) {
                                    if (t === 0) {
                                        return e
                                    }
                                    return n + '  ' + e
                                }).join('\n')
                            }).join('\n') + (e.boxes ? '\n' + Wt(e.boxes, r + 1) : '')
                        }).join('\n')
                    };
                    var Jt = {
                        inspect: Gt,
                        textify: Wt,
                        parseTfdt: Qt.tfdt,
                        parseHdlr: Qt.hdlr,
                        parseTfhd: Qt.tfhd,
                        parseTrun: Qt.trun
                    };
                    var Zt = je.discardEmulationPreventionBytes;
                    var er = ze.CaptionStream;
                    var tr = function e(t, r) {
                        var n = t;
                        for (var i = 0; i < r.length; i++) {
                            var a = r[i];
                            if (n < a.size) {
                                return a
                            }
                            n -= a.size
                        }
                        return null
                    };
                    var rr = function e(t, r, n) {
                        var i = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            a = [
                            ],
                            s,
                            o,
                            u,
                            l;
                        for (o = 0; o + 4 < t.length; o += u) {
                            u = i.getUint32(o);
                            o += 4;
                            if (u <= 0) {
                                continue
                            }
                            switch (t[o] & 31) {
                                case 6:
                                    var c = t.subarray(o + 1, o + 1 + u);
                                    var d = tr(o, r);
                                    s = {
                                        nalUnitType: 'sei_rbsp',
                                        size: u,
                                        data: c,
                                        escapedRBSP: Zt(c),
                                        trackId: n
                                    };
                                    if (d) {
                                        s.pts = d.pts;
                                        s.dts = d.dts;
                                        l = d
                                    } else {
                                        s.pts = l.pts;
                                        s.dts = l.dts
                                    }
                                    a.push(s);
                                    break;
                                default:
                                    break
                            }
                        }
                        return a
                    };
                    var nr = function e(t, r, n) {
                        var i = r;
                        var a = n.defaultSampleDuration || 0;
                        var s = n.defaultSampleSize || 0;
                        var o = n.trackId;
                        var u = [
                        ];
                        t.forEach(function (e) {
                            var t = Jt.parseTrun(e);
                            var r = t.samples;
                            r.forEach(function (e) {
                                if (e.duration === undefined) {
                                    e.duration = a
                                }
                                if (e.size === undefined) {
                                    e.size = s
                                }
                                e.trackId = o;
                                e.dts = i;
                                if (e.compositionTimeOffset === undefined) {
                                    e.compositionTimeOffset = 0
                                }
                                e.pts = i + e.compositionTimeOffset;
                                i += e.duration
                            });
                            u = u.concat(r)
                        });
                        return u
                    };
                    var ir = function e(t, r) {
                        var n = Y.findBox(t, [
                            'moof',
                            'traf'
                        ]);
                        var i = Y.findBox(t, [
                            'mdat'
                        ]);
                        var a = {
                        };
                        var s = [
                        ];
                        i.forEach(function (e, t) {
                            var r = n[t];
                            s.push({
                                mdat: e,
                                traf: r
                            })
                        });
                        s.forEach(function (e) {
                            var t = e.mdat;
                            var n = e.traf;
                            var i = Y.findBox(n, [
                                'tfhd'
                            ]);
                            var s = Jt.parseTfhd(i[0]);
                            var o = s.trackId;
                            var u = Y.findBox(n, [
                                'tfdt'
                            ]);
                            var l = u.length > 0 ? Jt.parseTfdt(u[0]).baseMediaDecodeTime : 0;
                            var c = Y.findBox(n, [
                                'trun'
                            ]);
                            var d;
                            var f;
                            if (r === o && c.length > 0) {
                                d = nr(c, l, s);
                                f = rr(t, d, o);
                                if (!a[o]) {
                                    a[o] = [
                                    ]
                                }
                                a[o] = a[o].concat(f)
                            }
                        });
                        return a
                    };
                    var ar = function e(t, r, n) {
                        var i;
                        if (!r) {
                            return null
                        }
                        i = ir(t, r);
                        return {
                            seiNals: i[r],
                            timescale: n
                        }
                    };
                    var sr = function e() {
                        var t = false;
                        var r;
                        var n;
                        var i;
                        var a;
                        var s;
                        this.isInitialized = function () {
                            return t
                        };
                        this.init = function () {
                            r = new er;
                            t = true;
                            r.on('data', function (e) {
                                e.startTime = e.startPts / a;
                                e.endTime = e.endPts / a;
                                s.captions.push(e);
                                s.captionStreams[e.stream] = true
                            })
                        };
                        this.isNewInit = function (e, t) {
                            if (e && e.length === 0 || t && typeof t === 'object' && Object.keys(t).length === 0) {
                                return false
                            }
                            return i !== e[0] || a !== t[i]
                        };
                        this.parse = function (e, t, r) {
                            var o;
                            if (!this.isInitialized()) {
                                return null
                            } else if (!t || !r) {
                                return null
                            } else if (this.isNewInit(t, r)) {
                                i = t[0];
                                a = r[i]
                            } else if (!i || !a) {
                                n.push(e);
                                return null
                            }
                            while (n.length > 0) {
                                var u = n.shift();
                                this.parse(u, t, r)
                            }
                            o = ar(e, i, a);
                            if (o === null || !o.seiNals) {
                                return null
                            }
                            this.pushNals(o.seiNals);
                            this.flushStream();
                            return s
                        };
                        this.pushNals = function (e) {
                            if (!this.isInitialized() || !e || e.length === 0) {
                                return null
                            }
                            e.forEach(function (e) {
                                r.push(e)
                            })
                        };
                        this.flushStream = function () {
                            if (!this.isInitialized()) {
                                return null
                            }
                            r.flush()
                        };
                        this.clearParsedCaptions = function () {
                            s.captions = [
                            ];
                            s.captionStreams = {
                            }
                        };
                        this.resetCaptionStream = function () {
                            if (!this.isInitialized()) {
                                return null
                            }
                            r.reset()
                        };
                        this.clearAllCaptions = function () {
                            this.clearParsedCaptions();
                            this.resetCaptionStream()
                        };
                        this.reset = function () {
                            n = [
                            ];
                            i = null;
                            a = null;
                            if (!s) {
                                s = {
                                    captions: [
                                    ],
                                    captionStreams: {
                                    }
                                }
                            } else {
                                this.clearParsedCaptions()
                            }
                            this.resetCaptionStream()
                        };
                        this.reset()
                    };
                    var or = sr;
                    var ur = {
                        generator: N,
                        probe: Y,
                        Transmuxer: zt.Transmuxer,
                        AudioSegmentStream: zt.AudioSegmentStream,
                        VideoSegmentStream: zt.VideoSegmentStream,
                        CaptionParser: or
                    };
                    var lr = function e(t, r) {
                        if (!(t instanceof r)) {
                            throw new TypeError('Cannot call a class as a function')
                        }
                    };
                    var cr = function () {
                        function e(e, t) {
                            for (var r = 0; r < t.length; r++) {
                                var n = t[r];
                                n.enumerable = n.enumerable || false;
                                n.configurable = true;
                                if ('value' in n) n.writable = true;
                                Object.defineProperty(e, n.key, n)
                            }
                        }
                        return function (t, r, n) {
                            if (r) e(t.prototype, r);
                            if (n) e(t, n);
                            return t
                        }
                    }();
                    var dr = function e(t, r) {
                        r.on('data', function (e) {
                            var r = e.initSegment;
                            e.initSegment = {
                                data: r.buffer,
                                byteOffset: r.byteOffset,
                                byteLength: r.byteLength
                            };
                            var n = e.data;
                            e.data = n.buffer;
                            t.postMessage({
                                action: 'data',
                                segment: e,
                                byteOffset: n.byteOffset,
                                byteLength: n.byteLength
                            }, [
                                e.data
                            ])
                        });
                        if (r.captionStream) {
                            r.captionStream.on('data', function (e) {
                                t.postMessage({
                                    action: 'caption',
                                    data: e
                                })
                            })
                        }
                        r.on('done', function (e) {
                            t.postMessage({
                                action: 'done'
                            })
                        });
                        r.on('gopInfo', function (e) {
                            t.postMessage({
                                action: 'gopInfo',
                                gopInfo: e
                            })
                        })
                    };
                    var fr = function () {
                        function e(t, r) {
                            lr(this, e);
                            this.options = r || {
                            };
                            this.self = t;
                            this.init()
                        }
                        cr(e, [
                            {
                                key: 'init',
                                value: function e() {
                                    if (this.transmuxer) {
                                        this.transmuxer.dispose()
                                    }
                                    this.transmuxer = new ur.Transmuxer(this.options);
                                    dr(this.self, this.transmuxer)
                                }
                            },
                            {
                                key: 'push',
                                value: function e(t) {
                                    var r = new Uint8Array(t.data, t.byteOffset, t.byteLength);
                                    this.transmuxer.push(r)
                                }
                            },
                            {
                                key: 'reset',
                                value: function e() {
                                    this.init()
                                }
                            },
                            {
                                key: 'setTimestampOffset',
                                value: function e(t) {
                                    var r = t.timestampOffset || 0;
                                    this.transmuxer.setBaseMediaDecodeTime(Math.round(r * 90000))
                                }
                            },
                            {
                                key: 'setAudioAppendStart',
                                value: function e(t) {
                                    this.transmuxer.setAudioAppendStart(Math.ceil(t.appendStart * 90000))
                                }
                            },
                            {
                                key: 'flush',
                                value: function e(t) {
                                    this.transmuxer.flush()
                                }
                            },
                            {
                                key: 'resetCaptions',
                                value: function e() {
                                    this.transmuxer.resetCaptions()
                                }
                            },
                            {
                                key: 'alignGopsWith',
                                value: function e(t) {
                                    this.transmuxer.alignGopsWith(t.gopsToAlignWith.slice())
                                }
                            }
                        ]);
                        return e
                    }();
                    var hr = function e(t) {
                        t.onmessage = function (e) {
                            if (e.data.action === 'init' && e.data.options) {
                                this.messageHandlers = new fr(t, e.data.options);
                                return
                            }
                            if (!this.messageHandlers) {
                                this.messageHandlers = new fr(t)
                            }
                            if (e.data && e.data.action && e.data.action !== 'init') {
                                if (this.messageHandlers[e.data.action]) {
                                    this.messageHandlers[e.data.action](e.data)
                                }
                            }
                        }
                    };
                    var pr = new hr(r);
                    return pr
                }()
            });
            var mt = {
                videoCodec: 'avc1',
                videoObjectTypeIndicator: '.4d400d',
                audioProfile: '2'
            };
            var gt = function e(t) {
                return t.map(function (e) {
                    return e.replace(/avc1\.(\d+)\.(\d+)/i, function (e, t, r) {
                        var n = ('00' + Number(t).toString(16)).slice(- 2);
                        var i = ('00' + Number(r).toString(16)).slice(- 2);
                        return 'avc1.' + n + '00' + i
                    })
                })
            };
            var yt = function e() {
                var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
                var r = {
                    codecCount: 0
                };
                var n = void 0;
                r.codecCount = t.split(',').length;
                r.codecCount = r.codecCount || 2;
                n = /(^|\s|,)+(avc[13])([^ ,]*)/i.exec(t);
                if (n) {
                    r.videoCodec = n[2];
                    r.videoObjectTypeIndicator = n[3]
                }
                r.audioProfile = /(^|\s|,)+mp4a.[0-9A-Fa-f]+\.([0-9A-Fa-f]+)/i.exec(t);
                r.audioProfile = r.audioProfile && r.audioProfile[2];
                return r
            };
            var _t = function e(t) {
                return t.replace(/avc1\.(\d+)\.(\d+)/i, function (e) {
                    return gt([e])[0]
                })
            };
            var bt = function e(t, r, n) {
                return t + '/' + r + '; codecs="' + n.filter(function (e) {
                    return !!e
                }).join(', ') + '"'
            };
            var Tt = function e(t) {
                if (t.segments && t.segments.length && t.segments[0].map) {
                    return 'mp4'
                }
                return 'mp2t'
            };
            var At = function e(t) {
                var r = t.attributes || {
                };
                if (r.CODECS) {
                    return yt(r.CODECS)
                }
                return mt
            };
            var St = function e(t, r) {
                if (!t.mediaGroups.AUDIO || !r) {
                    return null
                }
                var n = t.mediaGroups.AUDIO[r];
                if (!n) {
                    return null
                }
                for (var i in n) {
                    var a = n[i];
                    if (a.default && a.playlists) {
                        return yt(a.playlists[0].attributes.CODECS).audioProfile
                    }
                }
                return null
            };
            var kt = function e(r, n) {
                var i = Tt(n);
                var a = At(n);
                var s = n.attributes || {
                };
                var o = true;
                var u = false;
                if (!n) {
                    return []
                }
                if (r.mediaGroups.AUDIO && s.AUDIO) {
                    var l = r.mediaGroups.AUDIO[s.AUDIO];
                    if (l) {
                        u = true;
                        o = false;
                        for (var c in l) {
                            if (!l[c].uri && !l[c].playlists) {
                                o = true;
                                break
                            }
                        }
                    }
                }
                if (u && !a.audioProfile) {
                    if (!o) {
                        a.audioProfile = St(r, s.AUDIO)
                    }
                    if (!a.audioProfile) {
                        t.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');
                        a.audioProfile = mt.audioProfile
                    }
                }
                var d = {
                };
                if (a.videoCodec) {
                    d.video = '' + a.videoCodec + a.videoObjectTypeIndicator
                }
                if (a.audioProfile) {
                    d.audio = 'mp4a.40.' + a.audioProfile
                }
                var f = bt('audio', i, [
                    d.audio
                ]);
                var h = bt('video', i, [
                    d.video
                ]);
                var p = bt('video', i, [
                    d.video,
                    d.audio
                ]);
                if (u) {
                    if (!o && d.video) {
                        return [h,
                            f]
                    }
                    if (!o && !d.video) {
                        return [f,
                            f]
                    }
                    return [p,
                        f]
                }
                if (!d.video) {
                    return [f]
                }
                return [p]
            };
            var wt = function e(t) {
                var r = {
                    type: '',
                    parameters: {
                    }
                };
                var n = t.trim().split(';');
                r.type = n.shift().trim();
                n.forEach(function (e) {
                    var t = e.trim().split('=');
                    if (t.length > 1) {
                        var n = t[0].replace(/"/g, '').trim();
                        var i = t[1].replace(/"/g, '').trim();
                        r.parameters[n] = i
                    }
                });
                return r
            };
            var Ct = function e(t) {
                return /mp4a\.\d+.\d+/i.test(t)
            };
            var Et = function e(t) {
                return /avc1\.[\da-f]+/i.test(t)
            };
            var It = function e(t, r, n) {
                if (typeof r === 'undefined' || r === null || !t.length) {
                    return []
                }
                var i = Math.ceil((r - n + 3) * 90000);
                var a = void 0;
                for (a = 0; a < t.length; a++) {
                    if (t[a].pts > i) {
                        break
                    }
                }
                return t.slice(a)
            };
            var Pt = function e(t, r, n) {
                if (!r.length) {
                    return t
                }
                if (n) {
                    return r.slice()
                }
                var i = r[0].pts;
                var a = 0;
                for (a; a < t.length; a++) {
                    if (t[a].pts >= i) {
                        break
                    }
                }
                return t.slice(0, a).concat(r)
            };
            var Ot = function e(t, r, n, i) {
                var a = Math.ceil((r - i) * 90000);
                var s = Math.ceil((n - i) * 90000);
                var o = t.slice();
                var u = t.length;
                while (u--) {
                    if (t[u].pts <= s) {
                        break
                    }
                }
                if (u === - 1) {
                    return o
                }
                var l = u + 1;
                while (l--) {
                    if (t[l].pts <= a) {
                        break
                    }
                }
                l = Math.max(l, 0);
                o.splice(l, u - l + 1);
                return o
            };
            var xt = function e(r, n, i) {
                var a = null;
                var s = null;
                var o = 0;
                var u = [
                ];
                var l = [
                ];
                if (!r && !n) {
                    return t.createTimeRange()
                }
                if (!r) {
                    return n.buffered
                }
                if (!n) {
                    return r.buffered
                }
                if (i) {
                    return r.buffered
                }
                if (r.buffered.length === 0 && n.buffered.length === 0) {
                    return t.createTimeRange()
                }
                var c = r.buffered;
                var d = n.buffered;
                var f = c.length;
                while (f--) {
                    u.push({
                        time: c.start(f),
                        type: 'start'
                    });
                    u.push({
                        time: c.end(f),
                        type: 'end'
                    })
                }
                f = d.length;
                while (f--) {
                    u.push({
                        time: d.start(f),
                        type: 'start'
                    });
                    u.push({
                        time: d.end(f),
                        type: 'end'
                    })
                }
                u.sort(function (e, t) {
                    return e.time - t.time
                });
                for (f = 0; f < u.length; f++) {
                    if (u[f].type === 'start') {
                        o++;
                        if (o === 2) {
                            a = u[f].time
                        }
                    } else if (u[f].type === 'end') {
                        o--;
                        if (o === 1) {
                            s = u[f].time
                        }
                    }
                    if (a !== null && s !== null) {
                        l.push([a,
                            s]);
                        a = null;
                        s = null
                    }
                }
                return t.createTimeRanges(l)
            };
            var Lt = function e(t, r) {
                var n = t.addSourceBuffer(r);
                var i = Object.create(null);
                i.updating = false;
                i.realBuffer_ = n;
                var a = function e(t) {
                    if (typeof n[t] === 'function') {
                        i[t] = function () {
                            return n[t].apply(n, arguments)
                        }
                    } else if (typeof i[t] === 'undefined') {
                        Object.defineProperty(i, t, {
                            get: function e() {
                                return n[t]
                            },
                            set: function e(r) {
                                return n[t] = r
                            }
                        })
                    }
                };
                for (var s in n) {
                    a(s)
                }
                return i
            };
            var Dt = function (e) {
                C(r, e);
                function r(e, n) {
                    S(this, r);
                    var i = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, t.EventTarget));
                    i.timestampOffset_ = 0;
                    i.pendingBuffers_ = [
                    ];
                    i.bufferUpdating_ = false;
                    i.mediaSource_ = e;
                    i.codecs_ = n;
                    i.audioCodec_ = null;
                    i.videoCodec_ = null;
                    i.audioDisabled_ = false;
                    i.appendAudioInitSegment_ = true;
                    i.gopBuffer_ = [
                    ];
                    i.timeMapping_ = 0;
                    i.safeAppend_ = t.browser.IE_VERSION >= 11;
                    var a = {
                        remux: false,
                        alignGopsAtEnd: i.safeAppend_
                    };
                    i.codecs_.forEach(function (e) {
                        if (Ct(e)) {
                            i.audioCodec_ = e
                        } else if (Et(e)) {
                            i.videoCodec_ = e
                        }
                    });
                    i.transmuxer_ = new vt;
                    i.transmuxer_.postMessage({
                        action: 'init',
                        options: a
                    });
                    i.transmuxer_.onmessage = function (e) {
                        if (e.data.action === 'data') {
                            return i.data_(e)
                        }
                        if (e.data.action === 'done') {
                            return i.done_(e)
                        }
                        if (e.data.action === 'gopInfo') {
                            return i.appendGopInfo_(e)
                        }
                    };
                    Object.defineProperty(i, 'timestampOffset', {
                        get: function e() {
                            return this.timestampOffset_
                        },
                        set: function e(t) {
                            if (typeof t === 'number' && t >= 0) {
                                this.timestampOffset_ = t;
                                this.appendAudioInitSegment_ = true;
                                this.gopBuffer_.length = 0;
                                this.timeMapping_ = 0;
                                this.transmuxer_.postMessage({
                                    action: 'setTimestampOffset',
                                    timestampOffset: t
                                })
                            }
                        }
                    });
                    Object.defineProperty(i, 'appendWindowStart', {
                        get: function e() {
                            return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart
                        },
                        set: function e(t) {
                            if (this.videoBuffer_) {
                                this.videoBuffer_.appendWindowStart = t
                            }
                            if (this.audioBuffer_) {
                                this.audioBuffer_.appendWindowStart = t
                            }
                        }
                    });
                    Object.defineProperty(i, 'updating', {
                        get: function e() {
                            return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating)
                        }
                    });
                    Object.defineProperty(i, 'buffered', {
                        get: function e() {
                            return xt(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_)
                        }
                    });
                    return i
                }
                k(r, [
                    {
                        key: 'data_',
                        value: function e(t) {
                            var r = t.data.segment;
                            r.data = new Uint8Array(r.data, t.data.byteOffset, t.data.byteLength);
                            r.initSegment = new Uint8Array(r.initSegment.data, r.initSegment.byteOffset, r.initSegment.byteLength);
                            Je(this, this.mediaSource_, r);
                            this.pendingBuffers_.push(r);
                            return
                        }
                    },
                    {
                        key: 'done_',
                        value: function e(t) {
                            if (this.mediaSource_.readyState === 'closed') {
                                this.pendingBuffers_.length = 0;
                                return
                            }
                            this.processPendingSegments_();
                            return
                        }
                    },
                    {
                        key: 'createRealSourceBuffers_',
                        value: function e() {
                            var t = this;
                            var r = [
                                'audio',
                                'video'
                            ];
                            r.forEach(function (e) {
                                if (!t[e + 'Codec_']) {
                                    return
                                }
                                if (t[e + 'Buffer_']) {
                                    return
                                }
                                var n = null;
                                if (t.mediaSource_[e + 'Buffer_']) {
                                    n = t.mediaSource_[e + 'Buffer_'];
                                    n.updating = false
                                } else {
                                    var i = e + 'Codec_';
                                    var a = e + '/mp4;codecs="' + t[i] + '"';
                                    n = Lt(t.mediaSource_.nativeMediaSource_, a);
                                    t.mediaSource_[e + 'Buffer_'] = n
                                }
                                t[e + 'Buffer_'] = n;
                                [
                                    'update',
                                    'updatestart',
                                    'updateend'
                                ].forEach(function (i) {
                                    n.addEventListener(i, function () {
                                        if (e === 'audio' && t.audioDisabled_) {
                                            return
                                        }
                                        if (i === 'updateend') {
                                            t[e + 'Buffer_'].updating = false
                                        }
                                        var n = r.every(function (r) {
                                            if (r === 'audio' && t.audioDisabled_) {
                                                return true
                                            }
                                            if (e !== r && t[r + 'Buffer_'] && t[r + 'Buffer_'].updating) {
                                                return false
                                            }
                                            return true
                                        });
                                        if (n) {
                                            return t.trigger(i)
                                        }
                                    })
                                })
                            })
                        }
                    },
                    {
                        key: 'appendBuffer',
                        value: function e(t) {
                            this.bufferUpdating_ = true;
                            if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {
                                var r = this.audioBuffer_.buffered;
                                this.transmuxer_.postMessage({
                                    action: 'setAudioAppendStart',
                                    appendStart: r.end(r.length - 1)
                                })
                            }
                            if (this.videoBuffer_) {
                                this.transmuxer_.postMessage({
                                    action: 'alignGopsWith',
                                    gopsToAlignWith: It(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)
                                })
                            }
                            this.transmuxer_.postMessage({
                                action: 'push',
                                data: t.buffer,
                                byteOffset: t.byteOffset,
                                byteLength: t.byteLength
                            }, [
                                t.buffer
                            ]);
                            this.transmuxer_.postMessage({
                                action: 'flush'
                            })
                        }
                    },
                    {
                        key: 'appendGopInfo_',
                        value: function e(t) {
                            this.gopBuffer_ = Pt(this.gopBuffer_, t.data.gopInfo, this.safeAppend_)
                        }
                    },
                    {
                        key: 'remove',
                        value: function e(t, r) {
                            if (this.videoBuffer_) {
                                this.videoBuffer_.updating = true;
                                this.videoBuffer_.remove(t, r);
                                this.gopBuffer_ = Ot(this.gopBuffer_, t, r, this.timeMapping_)
                            }
                            if (!this.audioDisabled_ && this.audioBuffer_) {
                                this.audioBuffer_.updating = true;
                                this.audioBuffer_.remove(t, r)
                            }
                            Ze(t, r, this.metadataTrack_);
                            if (this.inbandTextTracks_) {
                                for (var n in this.inbandTextTracks_) {
                                    Ze(t, r, this.inbandTextTracks_[n])
                                }
                            }
                        }
                    },
                    {
                        key: 'processPendingSegments_',
                        value: function e() {
                            var t = {
                                video: {
                                    segments: [
                                    ],
                                    bytes: 0
                                },
                                audio: {
                                    segments: [
                                    ],
                                    bytes: 0
                                },
                                captions: [
                                ],
                                metadata: [
                                ]
                            };
                            t = this.pendingBuffers_.reduce(function (e, t) {
                                var r = t.type;
                                var n = t.data;
                                var i = t.initSegment;
                                e[r].segments.push(n);
                                e[r].bytes += n.byteLength;
                                e[r].initSegment = i;
                                if (t.captions) {
                                    e.captions = e.captions.concat(t.captions)
                                }
                                if (t.info) {
                                    e[r].info = t.info
                                }
                                if (t.metadata) {
                                    e.metadata = e.metadata.concat(t.metadata)
                                }
                                return e
                            }, t);
                            if (!this.videoBuffer_ && !this.audioBuffer_) {
                                if (t.video.bytes === 0) {
                                    this.videoCodec_ = null
                                }
                                if (t.audio.bytes === 0) {
                                    this.audioCodec_ = null
                                }
                                this.createRealSourceBuffers_()
                            }
                            if (t.audio.info) {
                                this.mediaSource_.trigger({
                                    type: 'audioinfo',
                                    info: t.audio.info
                                })
                            }
                            if (t.video.info) {
                                this.mediaSource_.trigger({
                                    type: 'videoinfo',
                                    info: t.video.info
                                })
                            }
                            if (this.appendAudioInitSegment_) {
                                if (!this.audioDisabled_ && this.audioBuffer_) {
                                    t.audio.segments.unshift(t.audio.initSegment);
                                    t.audio.bytes += t.audio.initSegment.byteLength
                                }
                                this.appendAudioInitSegment_ = false
                            }
                            var r = false;
                            if (this.videoBuffer_ && t.video.bytes) {
                                t.video.segments.unshift(t.video.initSegment);
                                t.video.bytes += t.video.initSegment.byteLength;
                                this.concatAndAppendSegments_(t.video, this.videoBuffer_)
                            } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {
                                r = true
                            }
                            rt(this, t.captions, t.metadata);
                            if (!this.audioDisabled_ && this.audioBuffer_) {
                                this.concatAndAppendSegments_(t.audio, this.audioBuffer_)
                            }
                            this.pendingBuffers_.length = 0;
                            if (r) {
                                this.trigger('updateend')
                            }
                            this.bufferUpdating_ = false
                        }
                    },
                    {
                        key: 'concatAndAppendSegments_',
                        value: function e(t, r) {
                            var n = 0;
                            var i = void 0;
                            if (t.bytes) {
                                i = new Uint8Array(t.bytes);
                                t.segments.forEach(function (e) {
                                    i.set(e, n);
                                    n += e.byteLength
                                });
                                try {
                                    r.updating = true;
                                    r.appendBuffer(i)
                                } catch (e) {
                                    if (this.mediaSource_.player_) {
                                        this.mediaSource_.player_.error({
                                            code: - 3,
                                            type: 'APPEND_BUFFER_ERR',
                                            message: e.message,
                                            originalError: e
                                        })
                                    }
                                }
                            }
                        }
                    },
                    {
                        key: 'abort',
                        value: function e() {
                            if (this.videoBuffer_) {
                                this.videoBuffer_.abort()
                            }
                            if (!this.audioDisabled_ && this.audioBuffer_) {
                                this.audioBuffer_.abort()
                            }
                            if (this.transmuxer_) {
                                this.transmuxer_.postMessage({
                                    action: 'reset'
                                })
                            }
                            this.pendingBuffers_.length = 0;
                            this.bufferUpdating_ = false
                        }
                    }
                ]);
                return r
            }(t.EventTarget);
            var Rt = function (e) {
                C(r, e);
                function r() {
                    S(this, r);
                    var e = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
                    var n = void 0;
                    e.nativeMediaSource_ = new f.MediaSource;
                    for (n in e.nativeMediaSource_) {
                        if (!(n in r.prototype) && typeof e.nativeMediaSource_[n] === 'function') {
                            e[n] = e.nativeMediaSource_[n].bind(e.nativeMediaSource_)
                        }
                    }
                    e.duration_ = NaN;
                    Object.defineProperty(e, 'duration', {
                        get: function e() {
                            if (this.duration_ === Infinity) {
                                return this.duration_
                            }
                            return this.nativeMediaSource_.duration
                        },
                        set: function e(t) {
                            this.duration_ = t;
                            if (t !== Infinity) {
                                this.nativeMediaSource_.duration = t;
                                return
                            }
                        }
                    });
                    Object.defineProperty(e, 'seekable', {
                        get: function e() {
                            if (this.duration_ === Infinity) {
                                return t.createTimeRanges([[0,
                                    this.nativeMediaSource_.duration]])
                            }
                            return this.nativeMediaSource_.seekable
                        }
                    });
                    Object.defineProperty(e, 'readyState', {
                        get: function e() {
                            return this.nativeMediaSource_.readyState
                        }
                    });
                    Object.defineProperty(e, 'activeSourceBuffers', {
                        get: function e() {
                            return this.activeSourceBuffers_
                        }
                    });
                    e.sourceBuffers = [
                    ];
                    e.activeSourceBuffers_ = [
                    ];
                    e.updateActiveSourceBuffers_ = function () {
                        e.activeSourceBuffers_.length = 0;
                        if (e.sourceBuffers.length === 1) {
                            var t = e.sourceBuffers[0];
                            t.appendAudioInitSegment_ = true;
                            t.audioDisabled_ = !t.audioCodec_;
                            e.activeSourceBuffers_.push(t);
                            return
                        }
                        var r = false;
                        var n = true;
                        for (var i = 0; i < e.player_.audioTracks().length; i++) {
                            var a = e.player_.audioTracks()[i];
                            if (a.enabled && a.kind !== 'main') {
                                r = true;
                                n = false;
                                break
                            }
                        }
                        e.sourceBuffers.forEach(function (t, i) {
                            t.appendAudioInitSegment_ = true;
                            if (t.videoCodec_ && t.audioCodec_) {
                                t.audioDisabled_ = r
                            } else if (t.videoCodec_ && !t.audioCodec_) {
                                t.audioDisabled_ = true;
                                n = false
                            } else if (!t.videoCodec_ && t.audioCodec_) {
                                t.audioDisabled_ = i ? n : !n;
                                if (t.audioDisabled_) {
                                    return
                                }
                            }
                            e.activeSourceBuffers_.push(t)
                        })
                    };
                    e.onPlayerMediachange_ = function () {
                        e.sourceBuffers.forEach(function (e) {
                            e.appendAudioInitSegment_ = true
                        })
                    };
                    e.onHlsReset_ = function () {
                        e.sourceBuffers.forEach(function (e) {
                            if (e.transmuxer_) {
                                e.transmuxer_.postMessage({
                                    action: 'resetCaptions'
                                })
                            }
                        })
                    };
                    e.onHlsSegmentTimeMapping_ = function (t) {
                        e.sourceBuffers.forEach(function (e) {
                            return e.timeMapping_ = t.mapping
                        })
                    };
                    [
                        'sourceopen',
                        'sourceclose',
                        'sourceended'
                    ].forEach(function (e) {
                        this.nativeMediaSource_.addEventListener(e, this.trigger.bind(this))
                    }, e);
                    e.on('sourceopen', function (r) {
                        var n = l.querySelector('[src="' + e.url_ + '"]');
                        if (!n) {
                            return
                        }
                        e.player_ = t(n.parentNode);
                        if (!e.player_) {
                            return
                        }
                        e.player_.tech_.on('hls-reset', e.onHlsReset_);
                        e.player_.tech_.on('hls-segment-time-mapping', e.onHlsSegmentTimeMapping_);
                        if (e.player_.audioTracks && e.player_.audioTracks()) {
                            e.player_.audioTracks().on('change', e.updateActiveSourceBuffers_);
                            e.player_.audioTracks().on('addtrack', e.updateActiveSourceBuffers_);
                            e.player_.audioTracks().on('removetrack', e.updateActiveSourceBuffers_)
                        }
                        e.player_.on('mediachange', e.onPlayerMediachange_)
                    });
                    e.on('sourceended', function (t) {
                        var r = tt(e.duration);
                        for (var n = 0; n < e.sourceBuffers.length; n++) {
                            var i = e.sourceBuffers[n];
                            var a = i.metadataTrack_ && i.metadataTrack_.cues;
                            if (a && a.length) {
                                a[a.length - 1].endTime = r
                            }
                        }
                    });
                    e.on('sourceclose', function (e) {
                        this.sourceBuffers.forEach(function (e) {
                            if (e.transmuxer_) {
                                e.transmuxer_.terminate()
                            }
                        });
                        this.sourceBuffers.length = 0;
                        if (!this.player_) {
                            return
                        }
                        if (this.player_.audioTracks && this.player_.audioTracks()) {
                            this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);
                            this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);
                            this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_)
                        }
                        if (this.player_.el_) {
                            this.player_.off('mediachange', this.onPlayerMediachange_)
                        }
                        if (this.player_.tech_ && this.player_.tech_.el_) {
                            this.player_.tech_.off('hls-reset', this.onHlsReset_);
                            this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_)
                        }
                    });
                    return e
                }
                k(r, [
                    {
                        key: 'addSeekableRange_',
                        value: function e(t, r) {
                            var n = void 0;
                            if (this.duration !== Infinity) {
                                n = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');
                                n.name = 'InvalidStateError';
                                n.code = 11;
                                throw n
                            }
                            if (r > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {
                                this.nativeMediaSource_.duration = r
                            }
                        }
                    },
                    {
                        key: 'addSourceBuffer',
                        value: function e(t) {
                            var r = void 0;
                            var n = wt(t);
                            if (/^(video|audio)\/mp2t$/i.test(n.type)) {
                                var i = [
                                ];
                                if (n.parameters && n.parameters.codecs) {
                                    i = n.parameters.codecs.split(',');
                                    i = gt(i);
                                    i = i.filter(function (e) {
                                        return Ct(e) || Et(e)
                                    })
                                }
                                if (i.length === 0) {
                                    i = [
                                        'avc1.4d400d',
                                        'mp4a.40.2'
                                    ]
                                }
                                r = new Dt(this, i);
                                if (this.sourceBuffers.length !== 0) {
                                    this.sourceBuffers[0].createRealSourceBuffers_();
                                    r.createRealSourceBuffers_();
                                    this.sourceBuffers[0].audioDisabled_ = true
                                }
                            } else {
                                r = this.nativeMediaSource_.addSourceBuffer(t)
                            }
                            this.sourceBuffers.push(r);
                            return r
                        }
                    }
                ]);
                return r
            }(t.EventTarget);
            var Mt = 0;
            t.mediaSources = {
            };
            var jt = function e(r, n) {
                var i = t.mediaSources[r];
                if (i) {
                    i.trigger({
                        type: 'sourceopen',
                        swfId: n
                    })
                } else {
                    throw new Error('Media Source not found (Video.js)')
                }
            };
            var Ut = function e() {
                return !!f.MediaSource && !!f.MediaSource.isTypeSupported && f.MediaSource.isTypeSupported('video/mp4;codecs="avc1.4d400d,mp4a.40.2"')
            };
            var Nt = function e() {
                this.MediaSource = {
                    open: jt,
                    supportsNativeMediaSources: Ut
                };
                if (Ut()) {
                    return new Rt
                }
                throw new Error('Cannot use create a virtual MediaSource for this video')
            };
            Nt.open = jt;
            Nt.supportsNativeMediaSources = Ut;
            var Bt = {
                createObjectURL: function e(r) {
                    var n = 'blob:vjs-media-source/';
                    var i = void 0;
                    if (r instanceof Rt) {
                        i = f.URL.createObjectURL(r.nativeMediaSource_);
                        r.url_ = i;
                        return i
                    }
                    if (!(r instanceof Rt)) {
                        i = f.URL.createObjectURL(r);
                        r.url_ = i;
                        return i
                    }
                    i = n + Mt;
                    Mt++;
                    t.mediaSources[i] = r;
                    return i
                }
            };
            t.MediaSource = Nt;
            t.URL = Bt;
            var qt = function e(t) {
                return !!t && typeof t === 'object'
            };
            var Ft = function e() {
                for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
                    r[n] = arguments[n]
                }
                return r.reduce(function (t, r) {
                    Object.keys(r).forEach(function (n) {
                        if (Array.isArray(t[n]) && Array.isArray(r[n])) {
                            t[n] = t[n].concat(r[n])
                        } else if (qt(t[n]) && qt(r[n])) {
                            t[n] = e(t[n], r[n])
                        } else {
                            t[n] = r[n]
                        }
                    });
                    return t
                }, {
                })
            };
            var Vt = function e(t) {
                return Object.keys(t).map(function (e) {
                    return t[e]
                })
            };
            var Ht = function e(t, r) {
                var n = [
                ];
                for (var i = t; i < r; i++) {
                    n.push(i)
                }
                return n
            };
            var zt = function e(t) {
                return t.reduce(function (e, t) {
                    return e.concat(t)
                }, [
                ])
            };
            var Gt = function e(t) {
                if (!t.length) {
                    return []
                }
                var r = [
                ];
                for (var n = 0; n < t.length; n++) {
                    r.push(t[n])
                }
                return r
            };
            var Wt = function e(t, r) {
                return t.reduce(function (e, t, n) {
                    if (t[r]) {
                        e.push(n)
                    }
                    return e
                }, [
                ])
            };
            var Yt = function e(t) {
                var r = Vt(t.reduce(function (e, t) {
                    var r = t.attributes.id + (t.attributes.lang || '');
                    if (e[r]) {
                        var n;
                        t.segments[0].discontinuity = true;
                        (n = e[r].segments).push.apply(n, t.segments);
                        if (t.attributes.contentProtection) {
                            e[r].attributes.contentProtection = t.attributes.contentProtection
                        }
                    } else {
                        e[r] = t
                    }
                    return e
                }, {
                }));
                return r.map(function (e) {
                    e.discontinuityStarts = Wt(e.segments, 'discontinuity');
                    return e
                })
            };
            var $t = function e(t) {
                var r;
                var n = t.attributes,
                    i = t.segments;
                var a = {
                    attributes: (r = {
                        NAME: n.id,
                        BANDWIDTH: n.bandwidth,
                        CODECS: n.codecs
                    }, r['PROGRAM-ID'] = 1, r),
                    uri: '',
                    endList: (n.type || 'static') === 'static',
                    timeline: n.periodIndex,
                    resolvedUri: '',
                    targetDuration: n.duration,
                    segments: i,
                    mediaSequence: i.length ? i[0].number : 1
                };
                if (n.contentProtection) {
                    a.contentProtection = n.contentProtection
                }
                return a
            };
            var Xt = function e(t) {
                var r;
                var n = t.attributes,
                    i = t.segments;
                if (typeof i === 'undefined') {
                    i = [
                        {
                            uri: n.baseUrl,
                            timeline: n.periodIndex,
                            resolvedUri: n.baseUrl || '',
                            duration: n.sourceDuration,
                            number: 0
                        }
                    ];
                    n.duration = n.sourceDuration
                }
                return {
                    attributes: (r = {
                        NAME: n.id,
                        BANDWIDTH: n.bandwidth
                    }, r['PROGRAM-ID'] = 1, r),
                    uri: '',
                    endList: (n.type || 'static') === 'static',
                    timeline: n.periodIndex,
                    resolvedUri: n.baseUrl || '',
                    targetDuration: n.duration,
                    segments: i,
                    mediaSequence: i.length ? i[0].number : 1
                }
            };
            var Kt = function e(t) {
                return t.reduce(function (e, t) {
                    var r = t.attributes.role && t.attributes.role.value || 'main';
                    var n = t.attributes.lang || '';
                    var i = 'main';
                    if (n) {
                        i = t.attributes.lang + ' (' + r + ')'
                    }
                    if (e[i] && e[i].playlists[0].attributes.BANDWIDTH > t.attributes.bandwidth) {
                        return e
                    }
                    e[i] = {
                        language: n,
                        autoselect: true,
                        default:
                            r === 'main',
                        playlists: [
                            $t(t)
                        ],
                        uri: ''
                    };
                    return e
                }, {
                })
            };
            var Qt = function e(t) {
                return t.reduce(function (e, t) {
                    var r = t.attributes.lang || 'text';
                    if (e[r]) {
                        return e
                    }
                    e[r] = {
                        language: r,
                        default:
                            false,
                        autoselect: false,
                        playlists: [
                            Xt(t)
                        ],
                        uri: ''
                    };
                    return e
                }, {
                })
            };
            var Jt = function e(t) {
                var r;
                var n = t.attributes,
                    i = t.segments;
                var a = {
                    attributes: (r = {
                        NAME: n.id,
                        AUDIO: 'audio',
                        SUBTITLES: 'subs',
                        RESOLUTION: {
                            width: n.width,
                            height: n.height
                        },
                        CODECS: n.codecs,
                        BANDWIDTH: n.bandwidth
                    }, r['PROGRAM-ID'] = 1, r),
                    uri: '',
                    endList: (n.type || 'static') === 'static',
                    timeline: n.periodIndex,
                    resolvedUri: '',
                    targetDuration: n.duration,
                    segments: i,
                    mediaSequence: i.length ? i[0].number : 1
                };
                if (n.contentProtection) {
                    a.contentProtection = n.contentProtection
                }
                return a
            };
            var Zt = function e(t) {
                var r;
                if (!t.length) {
                    return {
                    }
                }
                var n = t[0].attributes,
                    i = n.sourceDuration,
                    a = n.minimumUpdatePeriod,
                    s = a === void 0 ? 0 : a;
                var o = function e(t) {
                    var r = t.attributes;
                    return r.mimeType === 'video/mp4' || r.contentType === 'video'
                };
                var u = function e(t) {
                    var r = t.attributes;
                    return r.mimeType === 'audio/mp4' || r.contentType === 'audio'
                };
                var l = function e(t) {
                    var r = t.attributes;
                    return r.mimeType === 'text/vtt' || r.contentType === 'text'
                };
                var c = Yt(t.filter(o)).map(Jt);
                var d = Yt(t.filter(u));
                var f = t.filter(l);
                var h = {
                    allowCache: true,
                    discontinuityStarts: [
                    ],
                    segments: [
                    ],
                    endList: true,
                    mediaGroups: (r = {
                        AUDIO: {
                        },
                        VIDEO: {
                        }
                    }, r['CLOSED-CAPTIONS'] = {
                    }, r.SUBTITLES = {
                    }, r),
                    uri: '',
                    duration: i,
                    playlists: c,
                    minimumUpdatePeriod: s * 1000
                };
                if (d.length) {
                    h.mediaGroups.AUDIO.audio = Kt(d)
                }
                if (f.length) {
                    h.mediaGroups.SUBTITLES.subs = Qt(f)
                }
                return h
            };
            var er = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
            };
            function tr(e, t) {
                return t = {
                    exports: {
                    }
                },
                    e(t, t.exports),
                    t.exports
            }
            var rr = tr(function (e, t) {
                (function (t) {
                    var r = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/\?#]*\/)*.*?)??(;.*?)?(\?.*?)?(#.*?)?$/;
                    var n = /^([^\/?#]*)(.*)$/;
                    var i = /(?:\/|^)\.(?=\/)/g;
                    var a = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g;
                    var s = {
                        buildAbsoluteURL: function e(t, r, i) {
                            i = i || {
                            };
                            t = t.trim();
                            r = r.trim();
                            if (!r) {
                                if (!i.alwaysNormalize) {
                                    return t
                                }
                                var a = s.parseURL(t);
                                if (!a) {
                                    throw new Error('Error trying to parse base URL.')
                                }
                                a.path = s.normalizePath(a.path);
                                return s.buildURLFromParts(a)
                            }
                            var o = s.parseURL(r);
                            if (!o) {
                                throw new Error('Error trying to parse relative URL.')
                            }
                            if (o.scheme) {
                                if (!i.alwaysNormalize) {
                                    return r
                                }
                                o.path = s.normalizePath(o.path);
                                return s.buildURLFromParts(o)
                            }
                            var u = s.parseURL(t);
                            if (!u) {
                                throw new Error('Error trying to parse base URL.')
                            }
                            if (!u.netLoc && u.path && u.path[0] !== '/') {
                                var l = n.exec(u.path);
                                u.netLoc = l[1];
                                u.path = l[2]
                            }
                            if (u.netLoc && !u.path) {
                                u.path = '/'
                            }
                            var c = {
                                scheme: u.scheme,
                                netLoc: o.netLoc,
                                path: null,
                                params: o.params,
                                query: o.query,
                                fragment: o.fragment
                            };
                            if (!o.netLoc) {
                                c.netLoc = u.netLoc;
                                if (o.path[0] !== '/') {
                                    if (!o.path) {
                                        c.path = u.path;
                                        if (!o.params) {
                                            c.params = u.params;
                                            if (!o.query) {
                                                c.query = u.query
                                            }
                                        }
                                    } else {
                                        var d = u.path;
                                        var f = d.substring(0, d.lastIndexOf('/') + 1) + o.path;
                                        c.path = s.normalizePath(f)
                                    }
                                }
                            }
                            if (c.path === null) {
                                c.path = i.alwaysNormalize ? s.normalizePath(o.path) : o.path
                            }
                            return s.buildURLFromParts(c)
                        },
                        parseURL: function e(t) {
                            var n = r.exec(t);
                            if (!n) {
                                return null
                            }
                            return {
                                scheme: n[1] || '',
                                netLoc: n[2] || '',
                                path: n[3] || '',
                                params: n[4] || '',
                                query: n[5] || '',
                                fragment: n[6] || ''
                            }
                        },
                        normalizePath: function e(t) {
                            t = t.split('').reverse().join('').replace(i, '');
                            while (t.length !== (t = t.replace(a, '')).length) {
                            }
                            return t.split('').reverse().join('')
                        },
                        buildURLFromParts: function e(t) {
                            return t.scheme + t.netLoc + t.path + t.params + t.query + t.fragment
                        }
                    };
                    e.exports = s
                })(er)
            });
            var nr = function e(t, r) {
                if (/^[a-z]+:/i.test(r)) {
                    return r
                }
                if (!/\/\//i.test(t)) {
                    t = rr.buildAbsoluteURL(f.location.href, t)
                }
                return rr.buildAbsoluteURL(t, r)
            };
            var ir = function e(t) {
                var r = t.baseUrl,
                    n = r === void 0 ? '' : r,
                    i = t.source,
                    a = i === void 0 ? '' : i,
                    s = t.range,
                    o = s === void 0 ? '' : s;
                var u = {
                    uri: a,
                    resolvedUri: nr(n || '', a)
                };
                if (o) {
                    var l = o.split('-');
                    var c = parseInt(l[0], 10);
                    var d = parseInt(l[1], 10);
                    u.byterange = {
                        length: d - c,
                        offset: c
                    }
                }
                return u
            };
            var ar = function e(t, r, n) {
                var i = t.NOW,
                    a = t.clientOffset,
                    s = t.availabilityStartTime,
                    o = t.timescale,
                    u = o === void 0 ? 1 : o,
                    l = t.start,
                    c = l === void 0 ? 0 : l,
                    d = t.minimumUpdatePeriod,
                    f = d === void 0 ? 0 : d;
                var h = (i + a) / 1000;
                var p = s + c;
                var v = h + f;
                var m = v - p;
                return Math.ceil((m * u - r) / n)
            };
            var sr = function e(t, r) {
                var n = t.type,
                    i = n === void 0 ? 'static' : n,
                    a = t.minimumUpdatePeriod,
                    s = a === void 0 ? 0 : a,
                    o = t.media,
                    u = o === void 0 ? '' : o,
                    l = t.sourceDuration,
                    c = t.timescale,
                    d = c === void 0 ? 1 : c,
                    f = t.startNumber,
                    h = f === void 0 ? 1 : f,
                    p = t.periodIndex;
                var v = [
                ];
                var m = - 1;
                for (var g = 0; g < r.length; g++) {
                    var y = r[g];
                    var _ = y.d;
                    var b = y.r || 0;
                    var T = y.t || 0;
                    if (m < 0) {
                        m = T
                    }
                    if (T && T > m) {
                        m = T
                    }
                    var A = void 0;
                    if (b < 0) {
                        var S = g + 1;
                        if (S === r.length) {
                            if (i === 'dynamic' && s > 0 && u.indexOf('$Number$') > 0) {
                                A = ar(t, m, _)
                            } else {
                                A = (l * d - m) / _
                            }
                        } else {
                            A = (r[S].t - m) / _
                        }
                    } else {
                        A = b + 1
                    }
                    var k = h + v.length + A;
                    var w = h + v.length;
                    while (w < k) {
                        v.push({
                            number: w,
                            duration: _ / d,
                            time: m,
                            timeline: p
                        });
                        m += _;
                        w++
                    }
                }
                return v
            };
            var or = {
                static: function e(t) {
                    var r = t.duration,
                        n = t.timescale,
                        i = n === void 0 ? 1 : n,
                        a = t.sourceDuration;
                    return {
                        start: 0,
                        end: Math.ceil(a / (r / i))
                    }
                },
                dynamic: function e(t) {
                    var r = t.NOW,
                        n = t.clientOffset,
                        i = t.availabilityStartTime,
                        a = t.timescale,
                        s = a === void 0 ? 1 : a,
                        o = t.duration,
                        u = t.start,
                        l = u === void 0 ? 0 : u,
                        c = t.minimumUpdatePeriod,
                        d = c === void 0 ? 0 : c,
                        f = t.timeShiftBufferDepth,
                        h = f === void 0 ? Infinity : f;
                    var p = (r + n) / 1000;
                    var v = i + l;
                    var m = p + d;
                    var g = m - v;
                    var y = Math.ceil(g * s / o);
                    var _ = Math.floor((p - v - h) * s / o);
                    var b = Math.floor((p - v) * s / o);
                    return {
                        start: Math.max(0, _),
                        end: Math.min(y, b)
                    }
                }
            };
            var ur = function e(t) {
                return function (e, r) {
                    var n = t.duration,
                        i = t.timescale,
                        a = i === void 0 ? 1 : i,
                        s = t.periodIndex,
                        o = t.startNumber,
                        u = o === void 0 ? 1 : o;
                    return {
                        number: u + e,
                        duration: n / a,
                        timeline: s,
                        time: r * n
                    }
                }
            };
            var lr = function e(t) {
                var r = t.type,
                    n = r === void 0 ? 'static' : r,
                    i = t.duration,
                    a = t.timescale,
                    s = a === void 0 ? 1 : a,
                    o = t.sourceDuration;
                var u = or[n](t),
                    l = u.start,
                    c = u.end;
                var d = Ht(l, c).map(ur(t));
                if (n === 'static') {
                    var f = d.length - 1;
                    d[f].duration = o - i / s * f
                }
                return d
            };
            var cr = /\$([A-z]*)(?:(%0)([0-9]+)d)?\$/g;
            var dr = function e(t) {
                return function (e, r, n, i) {
                    if (e === '$$') {
                        return '$'
                    }
                    if (typeof t[r] === 'undefined') {
                        return e
                    }
                    var a = '' + t[r];
                    if (r === 'RepresentationID') {
                        return a
                    }
                    if (!n) {
                        i = 1
                    } else {
                        i = parseInt(i, 10)
                    }
                    if (a.length >= i) {
                        return a
                    }
                    return '' + new Array(i - a.length + 1).join('0') + a
                }
            };
            var fr = function e(t, r) {
                return t.replace(cr, dr(r))
            };
            var hr = function e(t, r) {
                if (!t.duration && !r) {
                    return [{
                        number: t.startNumber || 1,
                        duration: t.sourceDuration,
                        time: 0,
                        timeline: t.periodIndex
                    }
                    ]
                }
                if (t.duration) {
                    return lr(t)
                }
                return sr(t, r)
            };
            var pr = function e(t, r) {
                var n = {
                    RepresentationID: t.id,
                    Bandwidth: t.bandwidth || 0
                };
                var i = t.initialization,
                    a = i === void 0 ? {
                        sourceURL: '',
                        range: ''
                    }
                        : i;
                var s = ir({
                    baseUrl: t.baseUrl,
                    source: fr(a.sourceURL, n),
                    range: a.range
                });
                var o = hr(t, r);
                return o.map(function (e) {
                    n.Number = e.number;
                    n.Time = e.time;
                    var r = fr(t.media || '', n);
                    return {
                        uri: r,
                        timeline: e.timeline,
                        duration: e.duration,
                        resolvedUri: nr(t.baseUrl || '', r),
                        map: s,
                        number: e.number
                    }
                })
            };
            var vr = {
                INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',
                DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',
                DASH_INVALID_XML: 'DASH_INVALID_XML',
                NO_BASE_URL: 'NO_BASE_URL',
                MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',
                SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',
                UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'
            };
            var mr = function e(t, r) {
                var n = t.baseUrl,
                    i = t.initialization,
                    a = i === void 0 ? {
                    }
                        : i;
                var s = ir({
                    baseUrl: n,
                    source: a.sourceURL,
                    range: a.range
                });
                var o = ir({
                    baseUrl: n,
                    source: r.media,
                    range: r.mediaRange
                });
                o.map = s;
                return o
            };
            var gr = function e(t, r) {
                var n = t.duration,
                    i = t.segmentUrls,
                    a = i === void 0 ? [
                    ] : i;
                if (!n && !r || n && r) {
                    throw new Error(vr.SEGMENT_TIME_UNSPECIFIED)
                }
                var s = a.map(function (e) {
                    return mr(t, e)
                });
                var o;
                if (n) {
                    o = lr(t)
                }
                if (r) {
                    o = sr(t, r)
                }
                var u = o.map(function (e, t) {
                    if (s[t]) {
                        var r = s[t];
                        r.timeline = e.timeline;
                        r.duration = e.duration;
                        r.number = e.number;
                        return r
                    }
                }).filter(function (e) {
                    return e
                });
                return u
            };
            var yr = function e(t) {
                var r = t.baseUrl,
                    n = t.initialization,
                    i = n === void 0 ? {
                    }
                        : n,
                    a = t.sourceDuration,
                    s = t.timescale,
                    o = s === void 0 ? 1 : s,
                    u = t.indexRange,
                    l = u === void 0 ? '' : u,
                    c = t.duration;
                if (!r) {
                    throw new Error(vr.NO_BASE_URL)
                }
                var d = ir({
                    baseUrl: r,
                    source: i.sourceURL,
                    range: i.range
                });
                var f = ir({
                    baseUrl: r,
                    source: r,
                    range: l
                });
                f.map = d;
                if (c) {
                    var h = lr(t);
                    if (h.length) {
                        f.duration = h[0].duration;
                        f.timeline = h[0].timeline
                    }
                } else if (a) {
                    f.duration = a / o;
                    f.timeline = 0
                }
                f.number = 0;
                return [f]
            };
            var _r = function e(t) {
                var r = t.attributes,
                    n = t.segmentInfo;
                var i;
                var a;
                if (n.template) {
                    a = pr;
                    i = Ft(r, n.template)
                } else if (n.base) {
                    a = yr;
                    i = Ft(r, n.base)
                } else if (n.list) {
                    a = gr;
                    i = Ft(r, n.list)
                }
                if (!a) {
                    return {
                        attributes: r
                    }
                }
                var s = a(i, n.timeline);
                if (i.duration) {
                    var o = i,
                        u = o.duration,
                        l = o.timescale,
                        c = l === void 0 ? 1 : l;
                    i.duration = u / c
                } else if (s.length) {
                    i.duration = s.reduce(function (e, t) {
                        return Math.max(e, Math.ceil(t.duration))
                    }, 0)
                } else {
                    i.duration = 0
                }
                return {
                    attributes: i,
                    segments: s
                }
            };
            var br = function e(t) {
                return t.map(_r)
            };
            var Tr = function e(t, r) {
                return Gt(t.childNodes).filter(function (e) {
                    var t = e.tagName;
                    return t === r
                })
            };
            var Ar = function e(t) {
                return t.textContent.trim()
            };
            var Sr = function e(t) {
                var r = 365 * 24 * 60 * 60;
                var n = 30 * 24 * 60 * 60;
                var i = 24 * 60 * 60;
                var a = 60 * 60;
                var s = 60;
                var o = /P(?:(\d*)Y)?(?:(\d*)M)?(?:(\d*)D)?(?:T(?:(\d*)H)?(?:(\d*)M)?(?:([\d.]*)S)?)?/;
                var u = o.exec(t);
                if (!u) {
                    return 0
                }
                var l = u.slice(1),
                    c = l[0],
                    d = l[1],
                    f = l[2],
                    h = l[3],
                    p = l[4],
                    v = l[5];
                return parseFloat(c || 0) * r + parseFloat(d || 0) * n + parseFloat(f || 0) * i + parseFloat(h || 0) * a + parseFloat(p || 0) * s + parseFloat(v || 0)
            };
            var kr = function e(t) {
                var r = /^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/;
                if (r.test(t)) {
                    t += 'Z'
                }
                return Date.parse(t)
            };
            var wr = {
                mediaPresentationDuration: function e(t) {
                    return Sr(t)
                },
                availabilityStartTime: function e(t) {
                    return kr(t) / 1000
                },
                minimumUpdatePeriod: function e(t) {
                    return Sr(t)
                },
                timeShiftBufferDepth: function e(t) {
                    return Sr(t)
                },
                start: function e(t) {
                    return Sr(t)
                },
                width: function e(t) {
                    return parseInt(t, 10)
                },
                height: function e(t) {
                    return parseInt(t, 10)
                },
                bandwidth: function e(t) {
                    return parseInt(t, 10)
                },
                startNumber: function e(t) {
                    return parseInt(t, 10)
                },
                timescale: function e(t) {
                    return parseInt(t, 10)
                },
                duration: function e(t) {
                    var r = parseInt(t, 10);
                    if (isNaN(r)) {
                        return Sr(t)
                    }
                    return r
                },
                d: function e(t) {
                    return parseInt(t, 10)
                },
                t: function e(t) {
                    return parseInt(t, 10)
                },
                r: function e(t) {
                    return parseInt(t, 10)
                },
                DEFAULT: function e(t) {
                    return t
                }
            };
            var Cr = function e(t) {
                if (!(t && t.attributes)) {
                    return {
                    }
                }
                return Gt(t.attributes).reduce(function (e, t) {
                    var r = wr[t.name] || wr.DEFAULT;
                    e[t.name] = r(t.value);
                    return e
                }, {
                })
            };
            function Er(e) {
                var t = f.atob(e);
                var r = new Uint8Array(t.length);
                for (var n = 0; n < t.length; n++) {
                    r[n] = t.charCodeAt(n)
                }
                return r
            }
            var Ir = {
                'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',
                'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',
                'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',
                'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'
            };
            var Pr = function e(t, r) {
                if (!r.length) {
                    return t
                }
                return zt(t.map(function (e) {
                    return r.map(function (t) {
                        return nr(e, Ar(t))
                    })
                }))
            };
            var Or = function e(t) {
                var r = Tr(t, 'SegmentTemplate')[0];
                var n = Tr(t, 'SegmentList')[0];
                var i = n && Tr(n, 'SegmentURL').map(function (e) {
                    return Ft({
                        tag: 'SegmentURL'
                    }, Cr(e))
                });
                var a = Tr(t, 'SegmentBase')[0];
                var s = n || r;
                var o = s && Tr(s, 'SegmentTimeline')[0];
                var u = n || a || r;
                var l = u && Tr(u, 'Initialization')[0];
                var c = r && Cr(r);
                if (c && l) {
                    c.initialization = l && Cr(l)
                } else if (c && c.initialization) {
                    c.initialization = {
                        sourceURL: c.initialization
                    }
                }
                var d = {
                    template: c,
                    timeline: o && Tr(o, 'S').map(function (e) {
                        return Cr(e)
                    }),
                    list: n && Ft(Cr(n), {
                        segmentUrls: i,
                        initialization: Cr(l)
                    }),
                    base: a && Ft(Cr(a), {
                        initialization: Cr(l)
                    })
                };
                Object.keys(d).forEach(function (e) {
                    if (!d[e]) {
                        delete d[e]
                    }
                });
                return d
            };
            var xr = function e(t, r, n) {
                return function (e) {
                    var i = Tr(e, 'BaseURL');
                    var a = Pr(r, i);
                    var s = Ft(t, Cr(e));
                    var o = Or(e);
                    return a.map(function (e) {
                        return {
                            segmentInfo: Ft(n, o),
                            attributes: Ft(s, {
                                baseUrl: e
                            })
                        }
                    })
                }
            };
            var Lr = function e(t) {
                return t.reduce(function (e, t) {
                    var r = Cr(t);
                    var n = Ir[r.schemeIdUri];
                    if (n) {
                        e[n] = {
                            attributes: r
                        };
                        var i = Tr(t, 'cenc:pssh')[0];
                        if (i) {
                            var a = Ar(i);
                            var s = a && Er(a);
                            e[n].pssh = s
                        }
                    }
                    return e
                }, {
                })
            };
            var Dr = function e(t, r, n) {
                return function (e) {
                    var i = Cr(e);
                    var a = Pr(r, Tr(e, 'BaseURL'));
                    var s = Tr(e, 'Role')[0];
                    var o = {
                        role: Cr(s)
                    };
                    var u = Ft(t, i, o);
                    var l = Lr(Tr(e, 'ContentProtection'));
                    if (Object.keys(l).length) {
                        u = Ft(u, {
                            contentProtection: l
                        })
                    }
                    var c = Or(e);
                    var d = Tr(e, 'Representation');
                    var f = Ft(n, c);
                    return zt(d.map(xr(u, a, f)))
                }
            };
            var Rr = function e(t, r) {
                return function (e, n) {
                    var i = Pr(r, Tr(e, 'BaseURL'));
                    var a = Cr(e);
                    var s = parseInt(a.id, 10);
                    var o = f.isNaN(s) ? n : s;
                    var u = Ft(t, {
                        periodIndex: o
                    });
                    var l = Tr(e, 'AdaptationSet');
                    var c = Or(e);
                    return zt(l.map(Dr(u, i, c)))
                }
            };
            var Mr = function e(t, r) {
                if (r === void 0) {
                    r = {
                    }
                }
                var n = r,
                    i = n.manifestUri,
                    a = i === void 0 ? '' : i,
                    s = n.NOW,
                    o = s === void 0 ? Date.now() : s,
                    u = n.clientOffset,
                    l = u === void 0 ? 0 : u;
                var c = Tr(t, 'Period');
                if (!c.length) {
                    throw new Error(vr.INVALID_NUMBER_OF_PERIOD)
                }
                var d = Cr(t);
                var f = Pr([a], Tr(t, 'BaseURL'));
                d.sourceDuration = d.mediaPresentationDuration || 0;
                d.NOW = o;
                d.clientOffset = l;
                return zt(c.map(Rr(d, f)))
            };
            var jr = function e(t) {
                if (t === '') {
                    throw new Error(vr.DASH_EMPTY_MANIFEST)
                }
                var r = new f.DOMParser;
                var n = r.parseFromString(t, 'application/xml');
                var i = n && n.documentElement.tagName === 'MPD' ? n.documentElement : null;
                if (!i || i && i.getElementsByTagName('parsererror').length > 0) {
                    throw new Error(vr.DASH_INVALID_XML)
                }
                return i
            };
            var Ur = function e(t) {
                var r = Tr(t, 'UTCTiming')[0];
                if (!r) {
                    return null
                }
                var n = Cr(r);
                switch (n.schemeIdUri) {
                    case 'urn:mpeg:dash:utc:http-head:2014':
                    case 'urn:mpeg:dash:utc:http-head:2012':
                        n.method = 'HEAD';
                        break;
                    case 'urn:mpeg:dash:utc:http-xsdate:2014':
                    case 'urn:mpeg:dash:utc:http-iso:2014':
                    case 'urn:mpeg:dash:utc:http-xsdate:2012':
                    case 'urn:mpeg:dash:utc:http-iso:2012':
                        n.method = 'GET';
                        break;
                    case 'urn:mpeg:dash:utc:direct:2014':
                    case 'urn:mpeg:dash:utc:direct:2012':
                        n.method = 'DIRECT';
                        n.value = Date.parse(n.value);
                        break;
                    case 'urn:mpeg:dash:utc:http-ntp:2014':
                    case 'urn:mpeg:dash:utc:ntp:2014':
                    case 'urn:mpeg:dash:utc:sntp:2014':
                    default:
                        throw new Error(vr.UNSUPPORTED_UTC_TIMING_SCHEME)
                }
                return n
            };
            var Nr = function e(t, r) {
                return Zt(br(Mr(jr(t), r)))
            };
            var Br = function e(t) {
                return Ur(jr(t))
            };
            var qr = t.EventTarget,
                Fr = t.mergeOptions;
            var Vr = function e(t, r) {
                var n = Fr(t, {
                    duration: r.duration,
                    minimumUpdatePeriod: r.minimumUpdatePeriod
                });
                for (var i = 0; i < r.playlists.length; i++) {
                    var a = M(n, r.playlists[i]);
                    if (a) {
                        n = a
                    }
                }
                L(r, function (e, t, r, i) {
                    if (e.playlists && e.playlists.length) {
                        var a = e.playlists[0].uri;
                        var s = M(n, e.playlists[0]);
                        if (s) {
                            n = s;
                            n.mediaGroups[t][r][i].playlists[0] = n.playlists[a]
                        }
                    }
                });
                return n
            };
            var Hr = function (e) {
                C(t, e);
                function t(e, r, n, i) {
                    S(this, t);
                    var a = E(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                    a.hls_ = r;
                    a.withCredentials = n;
                    if (!e) {
                        throw new Error('A non-empty playlist URL or playlist is required')
                    }
                    a.on('minimumUpdatePeriod', function () {
                        a.refreshXml_()
                    });
                    a.on('mediaupdatetimeout', function () {
                        a.refreshMedia_()
                    });
                    if (typeof e === 'string') {
                        a.srcUrl = e;
                        a.state = 'HAVE_NOTHING';
                        return E(a)
                    }
                    a.masterPlaylistLoader_ = i;
                    a.state = 'HAVE_METADATA';
                    a.started = true;
                    a.media(e);
                    f.setTimeout(function () {
                        a.trigger('loadedmetadata')
                    }, 0);
                    return a
                }
                k(t, [
                    {
                        key: 'dispose',
                        value: function e() {
                            this.stopRequest();
                            f.clearTimeout(this.mediaUpdateTimeout)
                        }
                    },
                    {
                        key: 'stopRequest',
                        value: function e() {
                            if (this.request) {
                                var t = this.request;
                                this.request = null;
                                t.onreadystatechange = null;
                                t.abort()
                            }
                        }
                    },
                    {
                        key: 'media',
                        value: function e(t) {
                            if (!t) {
                                return this.media_
                            }
                            if (this.state === 'HAVE_NOTHING') {
                                throw new Error('Cannot switch media playlist from ' + this.state)
                            }
                            var r = this.state;
                            if (typeof t === 'string') {
                                if (!this.master.playlists[t]) {
                                    throw new Error('Unknown playlist URI: ' + t)
                                }
                                t = this.master.playlists[t]
                            }
                            var n = !this.media_ || t.uri !== this.media_.uri;
                            this.state = 'HAVE_METADATA';
                            if (!n) {
                                return
                            }
                            if (this.media_) {
                                this.trigger('mediachanging')
                            }
                            this.media_ = t;
                            this.refreshMedia_();
                            if (r !== 'HAVE_MASTER') {
                                this.trigger('mediachange')
                            }
                        }
                    },
                    {
                        key: 'pause',
                        value: function e() {
                            this.stopRequest();
                            f.clearTimeout(this.mediaUpdateTimeout);
                            if (this.state === 'HAVE_NOTHING') {
                                this.started = false
                            }
                        }
                    },
                    {
                        key: 'load',
                        value: function e(t) {
                            var r = this;
                            f.clearTimeout(this.mediaUpdateTimeout);
                            var n = this.media();
                            if (t) {
                                var i = n ? n.targetDuration / 2 * 1000 : 5 * 1000;
                                this.mediaUpdateTimeout = f.setTimeout(function () {
                                    return r.load()
                                }, i);
                                return
                            }
                            if (!this.started) {
                                this.start();
                                return
                            }
                            this.trigger('loadedplaylist')
                        }
                    },
                    {
                        key: 'parseMasterXml',
                        value: function e() {
                            var t = Nr(this.masterXml_, {
                                manifestUri: this.srcUrl,
                                clientOffset: this.clientOffset_
                            });
                            t.uri = this.srcUrl;
                            for (var r = 0; r < t.playlists.length; r++) {
                                var n = 'placeholder-uri-' + r;
                                t.playlists[r].uri = n;
                                t.playlists[n] = t.playlists[r]
                            }
                            L(t, function (e, r, n, i) {
                                if (e.playlists && e.playlists.length) {
                                    var a = 'placeholder-uri-' + r + '-' + n + '-' + i;
                                    e.playlists[0].uri = a;
                                    t.playlists[a] = e.playlists[0]
                                }
                            });
                            j(t);
                            U(t);
                            return t
                        }
                    },
                    {
                        key: 'start',
                        value: function e() {
                            var t = this;
                            this.started = true;
                            this.request = this.hls_.xhr({
                                uri: this.srcUrl,
                                withCredentials: this.withCredentials
                            }, function (e, r) {
                                if (!t.request) {
                                    return
                                }
                                t.request = null;
                                if (e) {
                                    t.error = {
                                        status: r.status,
                                        message: 'DASH playlist request error at URL: ' + t.srcUrl,
                                        responseText: r.responseText,
                                        code: 2
                                    };
                                    if (t.state === 'HAVE_NOTHING') {
                                        t.started = false
                                    }
                                    return t.trigger('error')
                                }
                                t.masterXml_ = r.responseText;
                                if (r.responseHeaders && r.responseHeaders.date) {
                                    t.masterLoaded_ = Date.parse(r.responseHeaders.date)
                                } else {
                                    t.masterLoaded_ = Date.now()
                                }
                                t.syncClientServerClock_(t.onClientServerClockSync_.bind(t))
                            })
                        }
                    },
                    {
                        key: 'syncClientServerClock_',
                        value: function e(t) {
                            var r = this;
                            var n = Br(this.masterXml_);
                            if (n === null) {
                                this.clientOffset_ = this.masterLoaded_ - Date.now();
                                return t()
                            }
                            if (n.method === 'DIRECT') {
                                this.clientOffset_ = n.value - Date.now();
                                return t()
                            }
                            this.request = this.hls_.xhr({
                                uri: h(this.srcUrl, n.value),
                                method: n.method,
                                withCredentials: this.withCredentials
                            }, function (e, i) {
                                if (!r.request) {
                                    return
                                }
                                if (e) {
                                    r.clientOffset_ = r.masterLoaded_ - Date.now();
                                    return t()
                                }
                                var a = void 0;
                                if (n.method === 'HEAD') {
                                    if (!i.responseHeaders || !i.responseHeaders.date) {
                                        a = r.masterLoaded_
                                    } else {
                                        a = Date.parse(i.responseHeaders.date)
                                    }
                                } else {
                                    a = Date.parse(i.responseText)
                                }
                                r.clientOffset_ = a - Date.now();
                                t()
                            })
                        }
                    },
                    {
                        key: 'onClientServerClockSync_',
                        value: function e() {
                            var t = this;
                            this.master = this.parseMasterXml();
                            this.state = 'HAVE_MASTER';
                            this.trigger('loadedplaylist');
                            if (!this.media_) {
                                this.media(this.master.playlists[0])
                            }
                            f.setTimeout(function () {
                                t.trigger('loadedmetadata')
                            }, 0);
                            if (this.master.minimumUpdatePeriod) {
                                f.setTimeout(function () {
                                    t.trigger('minimumUpdatePeriod')
                                }, this.master.minimumUpdatePeriod)
                            }
                        }
                    },
                    {
                        key: 'refreshXml_',
                        value: function e() {
                            var t = this;
                            this.request = this.hls_.xhr({
                                uri: this.srcUrl,
                                withCredentials: this.withCredentials
                            }, function (e, r) {
                                if (!t.request) {
                                    return
                                }
                                t.request = null;
                                if (e) {
                                    t.error = {
                                        status: r.status,
                                        message: 'DASH playlist request error at URL: ' + t.srcUrl,
                                        responseText: r.responseText,
                                        code: 2
                                    };
                                    if (t.state === 'HAVE_NOTHING') {
                                        t.started = false
                                    }
                                    return t.trigger('error')
                                }
                                t.masterXml_ = r.responseText;
                                var n = t.parseMasterXml();
                                t.master = Vr(t.master, n);
                                f.setTimeout(function () {
                                    t.trigger('minimumUpdatePeriod')
                                }, t.master.minimumUpdatePeriod)
                            })
                        }
                    },
                    {
                        key: 'refreshMedia_',
                        value: function e() {
                            var t = this;
                            var r = void 0;
                            var n = void 0;
                            if (this.masterPlaylistLoader_) {
                                r = this.masterPlaylistLoader_.master;
                                n = this.masterPlaylistLoader_.parseMasterXml()
                            } else {
                                r = this.master;
                                n = this.parseMasterXml()
                            }
                            var i = Vr(r, n);
                            if (i) {
                                if (this.masterPlaylistLoader_) {
                                    this.masterPlaylistLoader_.master = i
                                } else {
                                    this.master = i
                                }
                                this.media_ = i.playlists[this.media_.uri]
                            } else {
                                this.trigger('playlistunchanged')
                            }
                            if (!this.media().endList) {
                                this.mediaUpdateTimeout = f.setTimeout(function () {
                                    t.trigger('mediaupdatetimeout')
                                }, N(this.media(), !!i))
                            }
                            this.trigger('loadedplaylist')
                        }
                    }
                ]);
                return t
            }(qr);
            var zr = function e(r) {
                if (t.log.debug) {
                    return t.log.debug.bind(t, 'VHS:', r + ' >')
                }
                return function () {
                }
            };
            function Gr() {
            }
            var Wr = function () {
                function e(t, r, n, i) {
                    S(this, e);
                    this.callbacks_ = [
                    ];
                    this.pendingCallback_ = null;
                    this.timestampOffset_ = 0;
                    this.mediaSource = t;
                    this.processedAppend_ = false;
                    this.type_ = n;
                    this.mimeType_ = r;
                    this.logger_ = zr('SourceUpdater[' + n + '][' + r + ']');
                    if (t.readyState === 'closed') {
                        t.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, r, i))
                    } else {
                        this.createSourceBuffer_(r, i)
                    }
                }
                k(e, [
                    {
                        key: 'createSourceBuffer_',
                        value: function e(t, r) {
                            var n = this;
                            this.sourceBuffer_ = this.mediaSource.addSourceBuffer(t);
                            this.logger_('created SourceBuffer');
                            if (r) {
                                r.trigger('sourcebufferadded');
                                if (this.mediaSource.sourceBuffers.length < 2) {
                                    r.on('sourcebufferadded', function () {
                                        n.start_()
                                    });
                                    return
                                }
                            }
                            this.start_()
                        }
                    },
                    {
                        key: 'start_',
                        value: function e() {
                            var t = this;
                            this.started_ = true;
                            this.onUpdateendCallback_ = function () {
                                var e = t.pendingCallback_;
                                t.pendingCallback_ = null;
                                t.logger_('buffered [' + Xe(t.buffered()) + ']');
                                if (e) {
                                    e()
                                }
                                t.runCallback_()
                            };
                            this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);
                            this.runCallback_()
                        }
                    },
                    {
                        key: 'abort',
                        value: function e(t) {
                            var r = this;
                            if (this.processedAppend_) {
                                this.queueCallback_(function () {
                                    r.sourceBuffer_.abort()
                                }, t)
                            }
                        }
                    },
                    {
                        key: 'appendBuffer',
                        value: function e(t, r) {
                            var n = this;
                            this.processedAppend_ = true;
                            this.queueCallback_(function () {
                                n.sourceBuffer_.appendBuffer(t)
                            }, r)
                        }
                    },
                    {
                        key: 'buffered',
                        value: function e() {
                            if (!this.sourceBuffer_) {
                                return t.createTimeRanges()
                            }
                            return this.sourceBuffer_.buffered
                        }
                    },
                    {
                        key: 'remove',
                        value: function e(t, r) {
                            var n = this;
                            var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Gr;
                            if (this.processedAppend_) {
                                this.queueCallback_(function () {
                                    n.logger_('remove [' + t + ' => ' + r + ']');
                                    n.sourceBuffer_.remove(t, r)
                                }, i)
                            }
                        }
                    },
                    {
                        key: 'updating',
                        value: function e() {
                            return !this.sourceBuffer_ || this.sourceBuffer_.updating || this.pendingCallback_
                        }
                    },
                    {
                        key: 'timestampOffset',
                        value: function e(t) {
                            var r = this;
                            if (typeof t !== 'undefined') {
                                this.queueCallback_(function () {
                                    r.sourceBuffer_.timestampOffset = t
                                });
                                this.timestampOffset_ = t
                            }
                            return this.timestampOffset_
                        }
                    },
                    {
                        key: 'queueCallback_',
                        value: function e(t, r) {
                            this.callbacks_.push([t.bind(this),
                                r]);
                            this.runCallback_()
                        }
                    },
                    {
                        key: 'runCallback_',
                        value: function e() {
                            var t = void 0;
                            if (!this.updating() && this.callbacks_.length && this.started_) {
                                t = this.callbacks_.shift();
                                this.pendingCallback_ = t[1];
                                t[0]()
                            }
                        }
                    },
                    {
                        key: 'dispose',
                        value: function e() {
                            this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);
                            if (this.sourceBuffer_ && this.mediaSource.readyState === 'open') {
                                this.sourceBuffer_.abort()
                            }
                        }
                    }
                ]);
                return e
            }();
            var Yr = {
                GOAL_BUFFER_LENGTH: 30,
                MAX_GOAL_BUFFER_LENGTH: 60,
                GOAL_BUFFER_LENGTH_RATE: 1,
                INITIAL_BANDWIDTH: 4194304,
                BANDWIDTH_VARIANCE: 1.2,
                BUFFER_LOW_WATER_LINE: 0,
                MAX_BUFFER_LOW_WATER_LINE: 30,
                BUFFER_LOW_WATER_LINE_RATE: 1
            };
            var $r = function e(t) {
                return t >>> 0
            };
            var Xr = {
                toUnsigned: $r
            };
            var Kr = Xr.toUnsigned;
            var Qr,
                Jr,
                Zr,
                en,
                tn;
            Qr = function e(t, r) {
                var n = [
                ],
                    i,
                    a,
                    s,
                    o,
                    u;
                if (!r.length) {
                    return null
                }
                for (i = 0; i < t.byteLength;) {
                    a = Kr(t[i] << 24 | t[i + 1] << 16 | t[i + 2] << 8 | t[i + 3]);
                    s = Jr(t.subarray(i + 4, i + 8));
                    o = a > 1 ? i + a : t.byteLength;
                    if (s === r[0]) {
                        if (r.length === 1) {
                            n.push(t.subarray(i + 8, o))
                        } else {
                            u = Qr(t.subarray(i + 8, o), r.slice(1));
                            if (u.length) {
                                n = n.concat(u)
                            }
                        }
                    }
                    i = o
                }
                return n
            };
            Jr = function e(t) {
                var r = '';
                r += String.fromCharCode(t[0]);
                r += String.fromCharCode(t[1]);
                r += String.fromCharCode(t[2]);
                r += String.fromCharCode(t[3]);
                return r
            };
            Zr = function e(t) {
                var r = {
                },
                    n = Qr(t, [
                        'moov',
                        'trak'
                    ]);
                return n.reduce(function (e, t) {
                    var r,
                        n,
                        i,
                        a,
                        s;
                    r = Qr(t, [
                        'tkhd'
                    ])[0];
                    if (!r) {
                        return null
                    }
                    n = r[0];
                    i = n === 0 ? 12 : 20;
                    a = Kr(r[i] << 24 | r[i + 1] << 16 | r[i + 2] << 8 | r[i + 3]);
                    s = Qr(t, [
                        'mdia',
                        'mdhd'
                    ])[0];
                    if (!s) {
                        return null
                    }
                    n = s[0];
                    i = n === 0 ? 12 : 20;
                    e[a] = Kr(s[i] << 24 | s[i + 1] << 16 | s[i + 2] << 8 | s[i + 3]);
                    return e
                }, r)
            };
            en = function e(t, r) {
                var n,
                    i,
                    a;
                n = Qr(r, [
                    'moof',
                    'traf'
                ]);
                i = [
                ].concat.apply([], n.map(function (e) {
                    return Qr(e, [
                        'tfhd'
                    ]).map(function (r) {
                        var n,
                            i,
                            a;
                        n = Kr(r[4] << 24 | r[5] << 16 | r[6] << 8 | r[7]);
                        i = t[n] || 90000;
                        a = Qr(e, [
                            'tfdt'
                        ]).map(function (e) {
                            var t,
                                r;
                            t = e[0];
                            r = Kr(e[4] << 24 | e[5] << 16 | e[6] << 8 | e[7]);
                            if (t === 1) {
                                r *= Math.pow(2, 32);
                                r += Kr(e[8] << 24 | e[9] << 16 | e[10] << 8 | e[11])
                            }
                            return r
                        })[0];
                        a = a || Infinity;
                        return a / i
                    })
                }));
                a = Math.min.apply(null, i);
                return isFinite(a) ? a : 0
            };
            tn = function e(t) {
                var r = Qr(t, [
                    'moov',
                    'trak'
                ]);
                var n = [
                ];
                r.forEach(function (e) {
                    var t = Qr(e, [
                        'mdia',
                        'hdlr'
                    ]);
                    var r = Qr(e, [
                        'tkhd'
                    ]);
                    t.forEach(function (e, t) {
                        var i = Jr(e.subarray(8, 12));
                        var a = r[t];
                        var s;
                        var o;
                        var u;
                        if (i === 'vide') {
                            s = new DataView(a.buffer, a.byteOffset, a.byteLength);
                            o = s.getUint8(0);
                            u = o === 0 ? s.getUint32(12) : s.getUint32(20);
                            n.push(u)
                        }
                    })
                });
                return n
            };
            var rn = {
                findBox: Qr,
                parseType: Jr,
                timescale: Zr,
                startTime: en,
                videoTrackIds: tn
            };
            var nn = {
                FAILURE: 2,
                TIMEOUT: - 101,
                ABORTED: - 102
            };
            var an = function e(t) {
                var r = void 0;
                var n = void 0;
                n = t.offset + t.length - 1;
                r = t.offset;
                return 'bytes=' + r + '-' + n
            };
            var sn = function e(t) {
                var r = {
                };
                if (t.byterange) {
                    r.Range = an(t.byterange)
                }
                return r
            };
            var on = function e(t) {
                t.forEach(function (e) {
                    e.abort()
                })
            };
            var un = function e(t) {
                return {
                    bandwidth: t.bandwidth,
                    bytesReceived: t.bytesReceived || 0,
                    roundTripTime: t.roundTripTime || 0
                }
            };
            var ln = function e(t) {
                var r = t.target;
                var n = Date.now() - r.requestTime;
                var i = {
                    bandwidth: Infinity,
                    bytesReceived: 0,
                    roundTripTime: n || 0
                };
                i.bytesReceived = t.loaded;
                i.bandwidth = Math.floor(i.bytesReceived / i.roundTripTime * 8 * 1000);
                return i
            };
            var cn = function e(t, r) {
                if (r.timedout) {
                    return {
                        status: r.status,
                        message: 'HLS request timed-out at URL: ' + r.uri,
                        code: nn.TIMEOUT,
                        xhr: r
                    }
                }
                if (r.aborted) {
                    return {
                        status: r.status,
                        message: 'HLS request aborted at URL: ' + r.uri,
                        code: nn.ABORTED,
                        xhr: r
                    }
                }
                if (t) {
                    return {
                        status: r.status,
                        message: 'HLS request errored at URL: ' + r.uri,
                        code: nn.FAILURE,
                        xhr: r
                    }
                }
                return null
            };
            var dn = function e(t, r) {
                return function (e, n) {
                    var i = n.response;
                    var a = cn(e, n);
                    if (a) {
                        return r(a, t)
                    }
                    if (i.byteLength !== 16) {
                        return r({
                            status: n.status,
                            message: 'Invalid HLS key at URL: ' + n.uri,
                            code: nn.FAILURE,
                            xhr: n
                        }, t)
                    }
                    var s = new DataView(i);
                    t.key.bytes = new Uint32Array([s.getUint32(0),
                    s.getUint32(4),
                    s.getUint32(8),
                    s.getUint32(12)]);
                    return r(null, t)
                }
            };
            var fn = function e(t, r, n) {
                return function (e, i) {
                    var a = i.response;
                    var s = cn(e, i);
                    if (s) {
                        return n(s, t)
                    }
                    if (a.byteLength === 0) {
                        return n({
                            status: i.status,
                            message: 'Empty HLS segment content at URL: ' + i.uri,
                            code: nn.FAILURE,
                            xhr: i
                        }, t)
                    }
                    t.map.bytes = new Uint8Array(i.response);
                    if (!r.isInitialized()) {
                        r.init()
                    }
                    t.map.timescales = rn.timescale(t.map.bytes);
                    t.map.videoTrackIds = rn.videoTrackIds(t.map.bytes);
                    return n(null, t)
                }
            };
            var hn = function e(t, r, n) {
                return function (e, i) {
                    var a = i.response;
                    var s = cn(e, i);
                    var o = void 0;
                    if (s) {
                        return n(s, t)
                    }
                    if (a.byteLength === 0) {
                        return n({
                            status: i.status,
                            message: 'Empty HLS segment content at URL: ' + i.uri,
                            code: nn.FAILURE,
                            xhr: i
                        }, t)
                    }
                    t.stats = un(i);
                    if (t.key) {
                        t.encryptedBytes = new Uint8Array(i.response)
                    } else {
                        t.bytes = new Uint8Array(i.response)
                    }
                    if (t.map && t.map.bytes) {
                        if (!r.isInitialized()) {
                            r.init()
                        }
                        o = r.parse(t.bytes, t.map.videoTrackIds, t.map.timescales);
                        if (o && o.captions) {
                            t.captionStreams = o.captionStreams;
                            t.fmp4Captions = o.captions
                        }
                    }
                    return n(null, t)
                }
            };
            var pn = function e(t, r, n) {
                var i = function e(i) {
                    if (i.data.source === r.requestId) {
                        t.removeEventListener('message', e);
                        var a = i.data.decrypted;
                        r.bytes = new Uint8Array(a.bytes, a.byteOffset, a.byteLength);
                        return n(null, r)
                    }
                };
                t.addEventListener('message', i);
                t.postMessage(Pe({
                    source: r.requestId,
                    encrypted: r.encryptedBytes,
                    key: r.key.bytes,
                    iv: r.key.iv
                }), [
                    r.encryptedBytes.buffer,
                    r.key.bytes.buffer
                ])
            };
            var vn = function e(t, r, n) {
                var i = 0;
                var a = false;
                return function (e, s) {
                    if (a) {
                        return
                    }
                    if (e) {
                        a = true;
                        on(t);
                        return n(e, s)
                    }
                    i += 1;
                    if (i === t.length) {
                        s.endOfAllRequests = Date.now();
                        if (s.encryptedBytes) {
                            return pn(r, s, n)
                        }
                        return n(null, s)
                    }
                }
            };
            var mn = function e(r, n) {
                return function (e) {
                    r.stats = t.mergeOptions(r.stats, ln(e));
                    if (!r.stats.firstBytesReceivedAt && r.stats.bytesReceived) {
                        r.stats.firstBytesReceivedAt = Date.now()
                    }
                    return n(e, r)
                }
            };
            var gn = function e(r, n, i, a, s, o, u) {
                var l = [
                ];
                var c = vn(l, i, u);
                if (s.key) {
                    var d = t.mergeOptions(n, {
                        uri: s.key.resolvedUri,
                        responseType: 'arraybuffer'
                    });
                    var f = dn(s, c);
                    var h = r(d, f);
                    l.push(h)
                }
                if (s.map && !s.map.bytes) {
                    var p = t.mergeOptions(n, {
                        uri: s.map.resolvedUri,
                        responseType: 'arraybuffer',
                        headers: sn(s.map)
                    });
                    var v = fn(s, a, c);
                    var m = r(p, v);
                    l.push(m)
                }
                var g = t.mergeOptions(n, {
                    uri: s.resolvedUri,
                    responseType: 'arraybuffer',
                    headers: sn(s)
                });
                var y = hn(s, a, c);
                var _ = r(g, y);
                _.addEventListener('progress', mn(s, o));
                l.push(_);
                return function () {
                    return on(l)
                }
            };
            var yn = function e(t, r) {
                var n = void 0;
                if (!t) {
                    return ''
                }
                n = f.getComputedStyle(t);
                if (!n) {
                    return ''
                }
                return n[r]
            };
            var _n = function e(t, r) {
                var n = t.slice();
                t.sort(function (e, t) {
                    var i = r(e, t);
                    if (i === 0) {
                        return n.indexOf(e) - n.indexOf(t)
                    }
                    return i
                })
            };
            var bn = function e(t, r) {
                var n = void 0;
                var i = void 0;
                if (t.attributes.BANDWIDTH) {
                    n = t.attributes.BANDWIDTH
                }
                n = n || f.Number.MAX_VALUE;
                if (r.attributes.BANDWIDTH) {
                    i = r.attributes.BANDWIDTH
                }
                i = i || f.Number.MAX_VALUE;
                return n - i
            };
            var Tn = function e(t, r) {
                var n = void 0;
                var i = void 0;
                if (t.attributes.RESOLUTION && t.attributes.RESOLUTION.width) {
                    n = t.attributes.RESOLUTION.width
                }
                n = n || f.Number.MAX_VALUE;
                if (r.attributes.RESOLUTION && r.attributes.RESOLUTION.width) {
                    i = r.attributes.RESOLUTION.width
                }
                i = i || f.Number.MAX_VALUE;
                if (n === i && t.attributes.BANDWIDTH && r.attributes.BANDWIDTH) {
                    return t.attributes.BANDWIDTH - r.attributes.BANDWIDTH
                }
                return n - i
            };
            var An = function e(t, r, n, i, a) {
                var s = t.playlists.map(function (e) {
                    var t = void 0;
                    var r = void 0;
                    var n = void 0;
                    t = e.attributes.RESOLUTION && e.attributes.RESOLUTION.width;
                    r = e.attributes.RESOLUTION && e.attributes.RESOLUTION.height;
                    n = e.attributes.BANDWIDTH;
                    n = n || f.Number.MAX_VALUE;
                    return {
                        bandwidth: n,
                        width: t,
                        height: r,
                        playlist: e
                    }
                });
                _n(s, function (e, t) {
                    return e.bandwidth - t.bandwidth
                });
                s = s.filter(function (e) {
                    return !le.isIncompatible(e.playlist)
                });
                var o = s.filter(function (e) {
                    return le.isEnabled(e.playlist)
                });
                if (!o.length) {
                    o = s.filter(function (e) {
                        return !le.isDisabled(e.playlist)
                    })
                }
                var u = o.filter(function (e) {
                    return e.bandwidth * Yr.BANDWIDTH_VARIANCE < r
                });
                var l = u[u.length - 1];
                var c = u.filter(function (e) {
                    return e.bandwidth === l.bandwidth
                })[0];
                if (a === false) {
                    var d = c || o[0] || s[0];
                    return d ? d.playlist : null
                }
                var h = u.filter(function (e) {
                    return e.width && e.height
                });
                _n(h, function (e, t) {
                    return e.width - t.width
                });
                var p = h.filter(function (e) {
                    return e.width === n && e.height === i
                });
                l = p[p.length - 1];
                var v = p.filter(function (e) {
                    return e.bandwidth === l.bandwidth
                })[0];
                var m = void 0;
                var g = void 0;
                var y = void 0;
                if (!v) {
                    m = h.filter(function (e) {
                        return e.width > n || e.height > i
                    });
                    g = m.filter(function (e) {
                        return e.width === m[0].width && e.height === m[0].height
                    });
                    l = g[g.length - 1];
                    y = g.filter(function (e) {
                        return e.bandwidth === l.bandwidth
                    })[0]
                }
                var _ = y || v || c || o[0] || s[0];
                return _ ? _.playlist : null
            };
            var Sn = function e() {
                return An(this.playlists.master, this.systemBandwidth, parseInt(yn(this.tech_.el(), 'width'), 10), parseInt(yn(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions)
            };
            var kn = function e(t) {
                var r = t.master,
                    n = t.currentTime,
                    i = t.bandwidth,
                    a = t.duration,
                    s = t.segmentDuration,
                    o = t.timeUntilRebuffer,
                    u = t.currentTimeline,
                    l = t.syncController;
                var c = r.playlists.filter(function (e) {
                    return !le.isIncompatible(e)
                });
                var d = c.filter(le.isEnabled);
                if (!d.length) {
                    d = c.filter(function (e) {
                        return !le.isDisabled(e)
                    })
                }
                var f = d.filter(le.hasAttribute.bind(null, 'BANDWIDTH'));
                var h = f.map(function (e) {
                    var t = l.getSyncPoint(e, a, u, n);
                    var r = t ? 1 : 2;
                    var c = le.estimateSegmentRequestTime(s, i, e);
                    var d = c * r - o;
                    return {
                        playlist: e,
                        rebufferingImpact: d
                    }
                });
                var p = h.filter(function (e) {
                    return e.rebufferingImpact <= 0
                });
                _n(p, function (e, t) {
                    return bn(t.playlist, e.playlist)
                });
                if (p.length) {
                    return p[0]
                }
                _n(h, function (e, t) {
                    return e.rebufferingImpact - t.rebufferingImpact
                });
                return h[0] || null
            };
            var wn = function e() {
                var t = this.playlists.master.playlists.filter(le.isEnabled);
                _n(t, function (e, t) {
                    return bn(e, t)
                });
                var r = t.filter(function (e) {
                    return yt(e.attributes.CODECS).videoCodec
                });
                return r[0] || null
            };
            var Cn = function e(t, r, n) {
                for (var i in n) {
                    if (!t[i]) {
                        r.trigger({
                            type: 'usage',
                            name: 'hls-608'
                        });
                        var a = r.textTracks().getTrackById(i);
                        if (a) {
                            t[i] = a
                        } else {
                            t[i] = r.addRemoteTextTrack({
                                kind: 'captions',
                                id: i,
                                label: i
                            }, false).track
                        }
                    }
                }
            };
            var En = function e(t) {
                var r = t.inbandTextTracks,
                    n = t.captionArray,
                    i = t.timestampOffset;
                if (!n) {
                    return
                }
                var a = window.WebKitDataCue || window.VTTCue;
                n.forEach(function (e) {
                    var t = e.stream;
                    var n = e.startTime;
                    var s = e.endTime;
                    if (!r[t]) {
                        return
                    }
                    n += i;
                    s += i;
                    r[t].addCue(new a(n, s, e.text))
                })
            };
            var In = Math.pow(2, 32) - 1;
            var Pn,
                On,
                xn,
                Ln,
                Dn,
                Rn,
                Mn,
                jn,
                Un,
                Nn,
                Bn,
                qn,
                Fn,
                Vn,
                Hn,
                zn,
                Gn,
                Wn,
                Yn,
                $n,
                Xn,
                Kn,
                Qn,
                Jn,
                Zn,
                ei,
                ti,
                ri,
                ni,
                ii,
                ai,
                si,
                oi,
                ui,
                li,
                ci;
            (function () {
                var e;
                Qn = {
                    avc1: [
                    ],
                    avcC: [
                    ],
                    btrt: [
                    ],
                    dinf: [
                    ],
                    dref: [
                    ],
                    esds: [
                    ],
                    ftyp: [
                    ],
                    hdlr: [
                    ],
                    mdat: [
                    ],
                    mdhd: [
                    ],
                    mdia: [
                    ],
                    mfhd: [
                    ],
                    minf: [
                    ],
                    moof: [
                    ],
                    moov: [
                    ],
                    mp4a: [
                    ],
                    mvex: [
                    ],
                    mvhd: [
                    ],
                    sdtp: [
                    ],
                    smhd: [
                    ],
                    stbl: [
                    ],
                    stco: [
                    ],
                    stsc: [
                    ],
                    stsd: [
                    ],
                    stsz: [
                    ],
                    stts: [
                    ],
                    styp: [
                    ],
                    tfdt: [
                    ],
                    tfhd: [
                    ],
                    traf: [
                    ],
                    trak: [
                    ],
                    trun: [
                    ],
                    trex: [
                    ],
                    tkhd: [
                    ],
                    vmhd: [
                    ]
                };
                if (typeof Uint8Array === 'undefined') {
                    return
                }
                for (e in Qn) {
                    if (Qn.hasOwnProperty(e)) {
                        Qn[e] = [
                            e.charCodeAt(0),
                            e.charCodeAt(1),
                            e.charCodeAt(2),
                            e.charCodeAt(3)
                        ]
                    }
                }
                Jn = new Uint8Array(['i'.charCodeAt(0),
                's'.charCodeAt(0),
                'o'.charCodeAt(0),
                'm'.charCodeAt(0)]);
                ei = new Uint8Array(['a'.charCodeAt(0),
                'v'.charCodeAt(0),
                'c'.charCodeAt(0),
                '1'.charCodeAt(0)]);
                Zn = new Uint8Array([0,
                    0,
                    0,
                    1]);
                ti = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    118,
                    105,
                    100,
                    101,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    86,
                    105,
                    100,
                    101,
                    111,
                    72,
                    97,
                    110,
                    100,
                    108,
                    101,
                    114,
                    0]);
                ri = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    115,
                    111,
                    117,
                    110,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    83,
                    111,
                    117,
                    110,
                    100,
                    72,
                    97,
                    110,
                    100,
                    108,
                    101,
                    114,
                    0]);
                ni = {
                    video: ti,
                    audio: ri
                };
                si = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    12,
                    117,
                    114,
                    108,
                    32,
                    0,
                    0,
                    0,
                    1]);
                ai = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0]);
                oi = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0]);
                ui = oi;
                li = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0]);
                ci = oi;
                ii = new Uint8Array([0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0])
            })();
            Pn = function e(t) {
                var r = [
                ],
                    n = 0,
                    i,
                    a,
                    s;
                for (i = 1; i < arguments.length; i++) {
                    r.push(arguments[i])
                }
                i = r.length;
                while (i--) {
                    n += r[i].byteLength
                }
                a = new Uint8Array(n + 8);
                s = new DataView(a.buffer, a.byteOffset, a.byteLength);
                s.setUint32(0, a.byteLength);
                a.set(t, 4);
                for (i = 0, n = 8; i < r.length; i++) {
                    a.set(r[i], n);
                    n += r[i].byteLength
                }
                return a
            };
            On = function e() {
                return Pn(Qn.dinf, Pn(Qn.dref, si))
            };
            xn = function e(t) {
                return Pn(Qn.esds, new Uint8Array([0,
                    0,
                    0,
                    0,
                    3,
                    25,
                    0,
                    0,
                    0,
                    4,
                    17,
                    64,
                    21,
                    0,
                    6,
                    0,
                    0,
                    0,
                    218,
                    192,
                    0,
                    0,
                    218,
                    192,
                    5,
                    2,
                    t.audioobjecttype << 3 | t.samplingfrequencyindex >>> 1,
                    t.samplingfrequencyindex << 7 | t.channelcount << 3,
                    6,
                    1,
                    2]))
            };
            Ln = function e() {
                return Pn(Qn.ftyp, Jn, Zn, Jn, ei)
            };
            zn = function e(t) {
                return Pn(Qn.hdlr, ni[t])
            };
            Dn = function e(t) {
                return Pn(Qn.mdat, t)
            };
            Hn = function e(t) {
                var r = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    2,
                    0,
                    0,
                    0,
                    3,
                    0,
                    1,
                    95,
                    144,
                    t.duration >>> 24 & 255,
                    t.duration >>> 16 & 255,
                    t.duration >>> 8 & 255,
                    t.duration & 255,
                    85,
                    196,
                    0,
                    0]);
                if (t.samplerate) {
                    r[12] = t.samplerate >>> 24 & 255;
                    r[13] = t.samplerate >>> 16 & 255;
                    r[14] = t.samplerate >>> 8 & 255;
                    r[15] = t.samplerate & 255
                }
                return Pn(Qn.mdhd, r)
            };
            Vn = function e(t) {
                return Pn(Qn.mdia, Hn(t), zn(t.type), Mn(t))
            };
            Rn = function e(t) {
                return Pn(Qn.mfhd, new Uint8Array([0,
                    0,
                    0,
                    0,
                    (t & 4278190080) >> 24,
                    (t & 16711680) >> 16,
                    (t & 65280) >> 8,
                    t & 255]))
            };
            Mn = function e(t) {
                return Pn(Qn.minf, t.type === 'video' ? Pn(Qn.vmhd, ii) : Pn(Qn.smhd, ai), On(), Wn(t))
            };
            jn = function e(t, r) {
                var n = [
                ],
                    i = r.length;
                while (i--) {
                    n[i] = $n(r[i])
                }
                return Pn.apply(null, [
                    Qn.moof,
                    Rn(t)
                ].concat(n))
            };
            Un = function e(t) {
                var r = t.length,
                    n = [
                    ];
                while (r--) {
                    n[r] = qn(t[r])
                }
                return Pn.apply(null, [
                    Qn.moov,
                    Bn(4294967295)
                ].concat(n).concat(Nn(t)))
            };
            Nn = function e(t) {
                var r = t.length,
                    n = [
                    ];
                while (r--) {
                    n[r] = Xn(t[r])
                }
                return Pn.apply(null, [
                    Qn.mvex
                ].concat(n))
            };
            Bn = function e(t) {
                var r = new Uint8Array([0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    2,
                    0,
                    1,
                    95,
                    144,
                    (t & 4278190080) >> 24,
                    (t & 16711680) >> 16,
                    (t & 65280) >> 8,
                    t & 255,
                    0,
                    1,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    64,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    255,
                    255,
                    255,
                    255]);
                return Pn(Qn.mvhd, r)
            };
            Gn = function e(t) {
                var r = t.samples || [
                ],
                    n = new Uint8Array(4 + r.length),
                    i,
                    a;
                for (a = 0; a < r.length; a++) {
                    i = r[a].flags;
                    n[a + 4] = i.dependsOn << 4 | i.isDependedOn << 2 | i.hasRedundancy
                }
                return Pn(Qn.sdtp, n)
            };
            Wn = function e(t) {
                return Pn(Qn.stbl, Yn(t), Pn(Qn.stts, ci), Pn(Qn.stsc, ui), Pn(Qn.stsz, li), Pn(Qn.stco, oi))
            };
            (function () {
                var e,
                    t;
                Yn = function r(n) {
                    return Pn(Qn.stsd, new Uint8Array([0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1]), n.type === 'video' ? e(n) : t(n))
                };
                e = function e(t) {
                    var r = t.sps || [
                    ],
                        n = t.pps || [
                        ],
                        i = [
                        ],
                        a = [
                        ],
                        s;
                    for (s = 0; s < r.length; s++) {
                        i.push((r[s].byteLength & 65280) >>> 8);
                        i.push(r[s].byteLength & 255);
                        i = i.concat(Array.prototype.slice.call(r[s]))
                    }
                    for (s = 0; s < n.length; s++) {
                        a.push((n[s].byteLength & 65280) >>> 8);
                        a.push(n[s].byteLength & 255);
                        a = a.concat(Array.prototype.slice.call(n[s]))
                    }
                    return Pn(Qn.avc1, new Uint8Array([0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        (t.width & 65280) >> 8,
                        t.width & 255,
                        (t.height & 65280) >> 8,
                        t.height & 255,
                        0,
                        72,
                        0,
                        0,
                        0,
                        72,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        19,
                        118,
                        105,
                        100,
                        101,
                        111,
                        106,
                        115,
                        45,
                        99,
                        111,
                        110,
                        116,
                        114,
                        105,
                        98,
                        45,
                        104,
                        108,
                        115,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        24,
                        17,
                        17]), Pn(Qn.avcC, new Uint8Array([1,
                            t.profileIdc,
                            t.profileCompatibility,
                            t.levelIdc,
                            255].concat([r.length]).concat(i).concat([n.length]).concat(a))), Pn(Qn.btrt, new Uint8Array([0,
                                28,
                                156,
                                128,
                                0,
                                45,
                                198,
                                192,
                                0,
                                45,
                                198,
                                192])))
                };
                t = function e(t) {
                    return Pn(Qn.mp4a, new Uint8Array([0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        1,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        0,
                        (t.channelcount & 65280) >> 8,
                        t.channelcount & 255,
                        (t.samplesize & 65280) >> 8,
                        t.samplesize & 255,
                        0,
                        0,
                        0,
                        0,
                        (t.samplerate & 65280) >> 8,
                        t.samplerate & 255,
                        0,
                        0]), xn(t))
                }
            })();
            Fn = function e(t) {
                var r = new Uint8Array([0,
                    0,
                    0,
                    7,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    (t.id & 4278190080) >> 24,
                    (t.id & 16711680) >> 16,
                    (t.id & 65280) >> 8,
                    t.id & 255,
                    0,
                    0,
                    0,
                    0,
                    (t.duration & 4278190080) >> 24,
                    (t.duration & 16711680) >> 16,
                    (t.duration & 65280) >> 8,
                    t.duration & 255,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    64,
                    0,
                    0,
                    0,
                    (t.width & 65280) >> 8,
                    t.width & 255,
                    0,
                    0,
                    (t.height & 65280) >> 8,
                    t.height & 255,
                    0,
                    0]);
                return Pn(Qn.tkhd, r)
            };
            $n = function e(t) {
                var r,
                    n,
                    i,
                    a,
                    s,
                    o,
                    u;
                r = Pn(Qn.tfhd, new Uint8Array([0,
                    0,
                    0,
                    58,
                    (t.id & 4278190080) >> 24,
                    (t.id & 16711680) >> 16,
                    (t.id & 65280) >> 8,
                    t.id & 255,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0]));
                o = Math.floor(t.baseMediaDecodeTime / (In + 1));
                u = Math.floor(t.baseMediaDecodeTime % (In + 1));
                n = Pn(Qn.tfdt, new Uint8Array([1,
                    0,
                    0,
                    0,
                    o >>> 24 & 255,
                    o >>> 16 & 255,
                    o >>> 8 & 255,
                    o & 255,
                    u >>> 24 & 255,
                    u >>> 16 & 255,
                    u >>> 8 & 255,
                    u & 255]));
                s = 32 + 20 + 8 + 16 + 8 + 8;
                if (t.type === 'audio') {
                    i = Kn(t, s);
                    return Pn(Qn.traf, r, n, i)
                }
                a = Gn(t);
                i = Kn(t, a.length + s);
                return Pn(Qn.traf, r, n, i, a)
            };
            qn = function e(t) {
                t.duration = t.duration || 4294967295;
                return Pn(Qn.trak, Fn(t), Vn(t))
            };
            Xn = function e(t) {
                var r = new Uint8Array([0,
                    0,
                    0,
                    0,
                    (t.id & 4278190080) >> 24,
                    (t.id & 16711680) >> 16,
                    (t.id & 65280) >> 8,
                    t.id & 255,
                    0,
                    0,
                    0,
                    1,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    0,
                    1,
                    0,
                    1]);
                if (t.type !== 'video') {
                    r[r.length - 1] = 0
                }
                return Pn(Qn.trex, r)
            };
            (function () {
                var e,
                    t,
                    r;
                r = function e(t, r) {
                    var n = 0,
                        i = 0,
                        a = 0,
                        s = 0;
                    if (t.length) {
                        if (t[0].duration !== undefined) {
                            n = 1
                        }
                        if (t[0].size !== undefined) {
                            i = 2
                        }
                        if (t[0].flags !== undefined) {
                            a = 4
                        }
                        if (t[0].compositionTimeOffset !== undefined) {
                            s = 8
                        }
                    }
                    return [0,
                        0,
                        n | i | a | s,
                        1,
                        (t.length & 4278190080) >>> 24,
                        (t.length & 16711680) >>> 16,
                        (t.length & 65280) >>> 8,
                        t.length & 255,
                        (r & 4278190080) >>> 24,
                        (r & 16711680) >>> 16,
                        (r & 65280) >>> 8,
                        r & 255]
                };
                t = function e(t, n) {
                    var i,
                        a,
                        s,
                        o;
                    a = t.samples || [
                    ];
                    n += 8 + 12 + 16 * a.length;
                    i = r(a, n);
                    for (o = 0; o < a.length; o++) {
                        s = a[o];
                        i = i.concat([(s.duration & 4278190080) >>> 24,
                        (s.duration & 16711680) >>> 16,
                        (s.duration & 65280) >>> 8,
                        s.duration & 255,
                        (s.size & 4278190080) >>> 24,
                        (s.size & 16711680) >>> 16,
                        (s.size & 65280) >>> 8,
                        s.size & 255,
                        s.flags.isLeading << 2 | s.flags.dependsOn,
                        s.flags.isDependedOn << 6 | s.flags.hasRedundancy << 4 | s.flags.paddingValue << 1 | s.flags.isNonSyncSample,
                        s.flags.degradationPriority & 240 << 8,
                        s.flags.degradationPriority & 15,
                        (s.compositionTimeOffset & 4278190080) >>> 24,
                        (s.compositionTimeOffset & 16711680) >>> 16,
                        (s.compositionTimeOffset & 65280) >>> 8,
                        s.compositionTimeOffset & 255])
                    }
                    return Pn(Qn.trun, new Uint8Array(i))
                };
                e = function e(t, n) {
                    var i,
                        a,
                        s,
                        o;
                    a = t.samples || [
                    ];
                    n += 8 + 12 + 8 * a.length;
                    i = r(a, n);
                    for (o = 0; o < a.length; o++) {
                        s = a[o];
                        i = i.concat([(s.duration & 4278190080) >>> 24,
                        (s.duration & 16711680) >>> 16,
                        (s.duration & 65280) >>> 8,
                        s.duration & 255,
                        (s.size & 4278190080) >>> 24,
                        (s.size & 16711680) >>> 16,
                        (s.size & 65280) >>> 8,
                        s.size & 255])
                    }
                    return Pn(Qn.trun, new Uint8Array(i))
                };
                Kn = function r(n, i) {
                    if (n.type === 'audio') {
                        return e(n, i)
                    }
                    return t(n, i)
                }
            })();
            var di = {
                ftyp: Ln,
                mdat: Dn,
                moof: jn,
                moov: Un,
                initSegment: function e(t) {
                    var r = Ln(),
                        n = Un(t),
                        i;
                    i = new Uint8Array(r.byteLength + n.byteLength);
                    i.set(r);
                    i.set(n, r.byteLength);
                    return i
                }
            };
            var fi = function e() {
                this.init = function () {
                    var e = {
                    };
                    this.on = function (t, r) {
                        if (!e[t]) {
                            e[t] = [
                            ]
                        }
                        e[t] = e[t].concat(r)
                    };
                    this.off = function (t, r) {
                        var n;
                        if (!e[t]) {
                            return false
                        }
                        n = e[t].indexOf(r);
                        e[t] = e[t].slice();
                        e[t].splice(n, 1);
                        return n > - 1
                    };
                    this.trigger = function (t) {
                        var r,
                            n,
                            i,
                            a;
                        r = e[t];
                        if (!r) {
                            return
                        }
                        if (arguments.length === 2) {
                            i = r.length;
                            for (n = 0; n < i; ++n) {
                                r[n].call(this, arguments[1])
                            }
                        } else {
                            a = [
                            ];
                            n = arguments.length;
                            for (n = 1; n < arguments.length; ++n) {
                                a.push(arguments[n])
                            }
                            i = r.length;
                            for (n = 0; n < i; ++n) {
                                r[n].apply(this, a)
                            }
                        }
                    };
                    this.dispose = function () {
                        e = {
                        }
                    }
                }
            };
            fi.prototype.pipe = function (e) {
                this.on('data', function (t) {
                    e.push(t)
                });
                this.on('done', function (t) {
                    e.flush(t)
                });
                return e
            };
            fi.prototype.push = function (e) {
                this.trigger('data', e)
            };
            fi.prototype.flush = function (e) {
                this.trigger('done', e)
            };
            var hi = fi;
            var pi = function e(t) {
                var r,
                    n,
                    i = [
                    ],
                    a = [
                    ];
                i.byteLength = 0;
                for (r = 0; r < t.length; r++) {
                    n = t[r];
                    if (n.nalUnitType === 'access_unit_delimiter_rbsp') {
                        if (i.length) {
                            i.duration = n.dts - i.dts;
                            a.push(i)
                        }
                        i = [
                            n
                        ];
                        i.byteLength = n.data.byteLength;
                        i.pts = n.pts;
                        i.dts = n.dts
                    } else {
                        if (n.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {
                            i.keyFrame = true
                        }
                        i.duration = n.dts - i.dts;
                        i.byteLength += n.data.byteLength;
                        i.push(n)
                    }
                }
                if (a.length && (!i.duration || i.duration <= 0)) {
                    i.duration = a[a.length - 1].duration
                }
                a.push(i);
                return a
            };
            var vi = function e(t) {
                var r,
                    n,
                    i = [
                    ],
                    a = [
                    ];
                i.byteLength = 0;
                i.nalCount = 0;
                i.duration = 0;
                i.pts = t[0].pts;
                i.dts = t[0].dts;
                a.byteLength = 0;
                a.nalCount = 0;
                a.duration = 0;
                a.pts = t[0].pts;
                a.dts = t[0].dts;
                for (r = 0; r < t.length; r++) {
                    n = t[r];
                    if (n.keyFrame) {
                        if (i.length) {
                            a.push(i);
                            a.byteLength += i.byteLength;
                            a.nalCount += i.nalCount;
                            a.duration += i.duration
                        }
                        i = [
                            n
                        ];
                        i.nalCount = n.length;
                        i.byteLength = n.byteLength;
                        i.pts = n.pts;
                        i.dts = n.dts;
                        i.duration = n.duration
                    } else {
                        i.duration += n.duration;
                        i.nalCount += n.length;
                        i.byteLength += n.byteLength;
                        i.push(n)
                    }
                }
                if (a.length && i.duration <= 0) {
                    i.duration = a[a.length - 1].duration
                }
                a.byteLength += i.byteLength;
                a.nalCount += i.nalCount;
                a.duration += i.duration;
                a.push(i);
                return a
            };
            var mi = function e(t) {
                var r;
                if (!t[0][0].keyFrame && t.length > 1) {
                    r = t.shift();
                    t.byteLength -= r.byteLength;
                    t.nalCount -= r.nalCount;
                    t[0][0].dts = r.dts;
                    t[0][0].pts = r.pts;
                    t[0][0].duration += r.duration
                }
                return t
            };
            var gi = function e() {
                return {
                    size: 0,
                    flags: {
                        isLeading: 0,
                        dependsOn: 1,
                        isDependedOn: 0,
                        hasRedundancy: 0,
                        degradationPriority: 0,
                        isNonSyncSample: 1
                    }
                }
            };
            var yi = function e(t, r) {
                var n = gi();
                n.dataOffset = r;
                n.compositionTimeOffset = t.pts - t.dts;
                n.duration = t.duration;
                n.size = 4 * t.length;
                n.size += t.byteLength;
                if (t.keyFrame) {
                    n.flags.dependsOn = 2;
                    n.flags.isNonSyncSample = 0
                }
                return n
            };
            var _i = function e(t, r) {
                var n,
                    i,
                    a,
                    s,
                    o,
                    u = r || 0,
                    l = [
                    ];
                for (n = 0; n < t.length; n++) {
                    s = t[n];
                    for (i = 0; i < s.length; i++) {
                        o = s[i];
                        a = yi(o, u);
                        u += a.size;
                        l.push(a)
                    }
                }
                return l
            };
            var bi = function e(t) {
                var r,
                    n,
                    i,
                    a,
                    s,
                    o,
                    u = 0,
                    l = t.byteLength,
                    c = t.nalCount,
                    d = l + 4 * c,
                    f = new Uint8Array(d),
                    h = new DataView(f.buffer);
                for (r = 0; r < t.length; r++) {
                    a = t[r];
                    for (n = 0; n < a.length; n++) {
                        s = a[n];
                        for (i = 0; i < s.length; i++) {
                            o = s[i];
                            h.setUint32(u, o.data.byteLength);
                            u += 4;
                            f.set(o.data, u);
                            u += o.data.byteLength
                        }
                    }
                }
                return f
            };
            var Ti = {
                groupNalsIntoFrames: pi,
                groupFramesIntoGops: vi,
                extendFirstKeyFrame: mi,
                generateSampleTable: _i,
                concatenateNalData: bi
            };
            var Ai = [
                33,
                16,
                5,
                32,
                164,
                27
            ];
            var Si = [
                33,
                65,
                108,
                84,
                1,
                2,
                4,
                8,
                168,
                2,
                4,
                8,
                17,
                191,
                252
            ];
            var ki = function e(t) {
                var r = [
                ];
                while (t--) {
                    r.push(0)
                }
                return r
            };
            var wi = function e(t) {
                return Object.keys(t).reduce(function (e, r) {
                    e[r] = new Uint8Array(t[r].reduce(function (e, t) {
                        return e.concat(t)
                    }, [
                    ]));
                    return e
                }, {
                })
            };
            var Ci = {
                96000: [
                    Ai,
                    [
                        227,
                        64
                    ],
                    ki(154),
                    [
                        56
                    ]
                ],
                88200: [
                    Ai,
                    [
                        231
                    ],
                    ki(170),
                    [
                        56
                    ]
                ],
                64000: [
                    Ai,
                    [
                        248,
                        192
                    ],
                    ki(240),
                    [
                        56
                    ]
                ],
                48000: [
                    Ai,
                    [
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        148,
                        128
                    ],
                    ki(54),
                    [
                        112
                    ]
                ],
                44100: [
                    Ai,
                    [
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        163,
                        128
                    ],
                    ki(84),
                    [
                        112
                    ]
                ],
                32000: [
                    Ai,
                    [
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        234
                    ],
                    ki(226),
                    [
                        112
                    ]
                ],
                24000: [
                    Ai,
                    [
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        255,
                        128
                    ],
                    ki(268),
                    [
                        111,
                        112
                    ],
                    ki(126),
                    [
                        224
                    ]
                ],
                16000: [
                    Ai,
                    [
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        255,
                        128
                    ],
                    ki(268),
                    [
                        111,
                        255
                    ],
                    ki(269),
                    [
                        223,
                        108
                    ],
                    ki(195),
                    [
                        1,
                        192
                    ]
                ],
                12000: [
                    Si,
                    ki(268),
                    [
                        3,
                        127,
                        248
                    ],
                    ki(268),
                    [
                        6,
                        255,
                        240
                    ],
                    ki(268),
                    [
                        13,
                        255,
                        224
                    ],
                    ki(268),
                    [
                        27,
                        253,
                        128
                    ],
                    ki(259),
                    [
                        56
                    ]
                ],
                11025: [
                    Si,
                    ki(268),
                    [
                        3,
                        127,
                        248
                    ],
                    ki(268),
                    [
                        6,
                        255,
                        240
                    ],
                    ki(268),
                    [
                        13,
                        255,
                        224
                    ],
                    ki(268),
                    [
                        27,
                        255,
                        192
                    ],
                    ki(268),
                    [
                        55,
                        175,
                        128
                    ],
                    ki(108),
                    [
                        112
                    ]
                ],
                8000: [
                    Si,
                    ki(268),
                    [
                        3,
                        121,
                        16
                    ],
                    ki(47),
                    [
                        7
                    ]
                ]
            };
            var Ei = wi(Ci);
            var Ii = 90000,
                Pi,
                Oi,
                xi,
                Li,
                Di,
                Ri;
            Pi = function e(t) {
                return t * Ii
            };
            Oi = function e(t, r) {
                return t * r
            };
            xi = function e(t) {
                return t / Ii
            };
            Li = function e(t, r) {
                return t / r
            };
            Di = function e(t, r) {
                return Pi(Li(t, r))
            };
            Ri = function e(t, r) {
                return Oi(xi(t), r)
            };
            var Mi = {
                secondsToVideoTs: Pi,
                secondsToAudioTs: Oi,
                videoTsToSeconds: xi,
                audioTsToSeconds: Li,
                audioTsToVideoTs: Di,
                videoTsToAudioTs: Ri
            };
            var ji = 90000;
            var Ui = function e(t) {
                var r,
                    n,
                    i = 0;
                for (r = 0; r < t.length; r++) {
                    n = t[r];
                    i += n.data.byteLength
                }
                return i
            };
            var Ni = function e(t, r, n, i) {
                var a,
                    s = 0,
                    o = 0,
                    u = 0,
                    l = 0,
                    c,
                    d;
                if (!r.length) {
                    return
                }
                a = Mi.audioTsToVideoTs(t.baseMediaDecodeTime, t.samplerate);
                s = Math.ceil(ji / (t.samplerate / 1024));
                if (n && i) {
                    o = a - Math.max(n, i);
                    u = Math.floor(o / s);
                    l = u * s
                }
                if (u < 1 || l > ji / 2) {
                    return
                }
                c = Ei[t.samplerate];
                if (!c) {
                    c = r[0].data
                }
                for (d = 0; d < u; d++) {
                    r.splice(d, 0, {
                        data: c
                    })
                }
                t.baseMediaDecodeTime -= Math.floor(Mi.videoTsToAudioTs(l, t.samplerate))
            };
            var Bi = function e(t, r, n) {
                if (r.minSegmentDts >= n) {
                    return t
                }
                r.minSegmentDts = Infinity;
                return t.filter(function (e) {
                    if (e.dts >= n) {
                        r.minSegmentDts = Math.min(r.minSegmentDts, e.dts);
                        r.minSegmentPts = r.minSegmentDts;
                        return true
                    }
                    return false
                })
            };
            var qi = function e(t) {
                var r,
                    n,
                    i = [
                    ];
                for (r = 0; r < t.length; r++) {
                    n = t[r];
                    i.push({
                        size: n.data.byteLength,
                        duration: 1024
                    })
                }
                return i
            };
            var Fi = function e(t) {
                var r,
                    n,
                    i = 0,
                    a = new Uint8Array(Ui(t));
                for (r = 0; r < t.length; r++) {
                    n = t[r];
                    a.set(n.data, i);
                    i += n.data.byteLength
                }
                return a
            };
            var Vi = {
                prefixWithSilence: Ni,
                trimAdtsFramesByEarliestDts: Bi,
                generateSampleTable: qi,
                concatenateFrameData: Fi
            };
            var Hi = 90000;
            var zi = function e(t, r) {
                if (typeof r.pts === 'number') {
                    if (t.timelineStartInfo.pts === undefined) {
                        t.timelineStartInfo.pts = r.pts
                    }
                    if (t.minSegmentPts === undefined) {
                        t.minSegmentPts = r.pts
                    } else {
                        t.minSegmentPts = Math.min(t.minSegmentPts, r.pts)
                    }
                    if (t.maxSegmentPts === undefined) {
                        t.maxSegmentPts = r.pts
                    } else {
                        t.maxSegmentPts = Math.max(t.maxSegmentPts, r.pts)
                    }
                }
                if (typeof r.dts === 'number') {
                    if (t.timelineStartInfo.dts === undefined) {
                        t.timelineStartInfo.dts = r.dts
                    }
                    if (t.minSegmentDts === undefined) {
                        t.minSegmentDts = r.dts
                    } else {
                        t.minSegmentDts = Math.min(t.minSegmentDts, r.dts)
                    }
                    if (t.maxSegmentDts === undefined) {
                        t.maxSegmentDts = r.dts
                    } else {
                        t.maxSegmentDts = Math.max(t.maxSegmentDts, r.dts)
                    }
                }
            };
            var Gi = function e(t) {
                delete t.minSegmentDts;
                delete t.maxSegmentDts;
                delete t.minSegmentPts;
                delete t.maxSegmentPts
            };
            var Wi = function e(t, r) {
                var n,
                    i,
                    a = t.minSegmentDts;
                if (!r) {
                    a -= t.timelineStartInfo.dts
                }
                n = t.timelineStartInfo.baseMediaDecodeTime;
                n += a;
                n = Math.max(0, n);
                if (t.type === 'audio') {
                    i = t.samplerate / Hi;
                    n *= i;
                    n = Math.floor(n)
                }
                return n
            };
            var Yi = {
                clearDtsInfo: Gi,
                calculateTrackBaseMediaDecodeTime: Wi,
                collectDtsInfo: zi
            };
            var $i = 4,
                Xi = 128;
            var Ki = function e(t) {
                var r = 0,
                    n = {
                        payloadType: - 1,
                        payloadSize: 0
                    },
                    i = 0,
                    a = 0;
                while (r < t.byteLength) {
                    if (t[r] === Xi) {
                        break
                    }
                    while (t[r] === 255) {
                        i += 255;
                        r++
                    }
                    i += t[r++];
                    while (t[r] === 255) {
                        a += 255;
                        r++
                    }
                    a += t[r++];
                    if (!n.payload && i === $i) {
                        n.payloadType = i;
                        n.payloadSize = a;
                        n.payload = t.subarray(r, r + a);
                        break
                    }
                    r += a;
                    i = 0;
                    a = 0
                }
                return n
            };
            var Qi = function e(t) {
                if (t.payload[0] !== 181) {
                    return null
                }
                if ((t.payload[1] << 8 | t.payload[2]) !== 49) {
                    return null
                }
                if (String.fromCharCode(t.payload[3], t.payload[4], t.payload[5], t.payload[6]) !== 'GA94') {
                    return null
                }
                if (t.payload[7] !== 3) {
                    return null
                }
                return t.payload.subarray(8, t.payload.length - 1)
            };
            var Ji = function e(t, r) {
                var n = [
                ],
                    i,
                    a,
                    s,
                    o;
                if (!(r[0] & 64)) {
                    return n
                }
                a = r[0] & 31;
                for (i = 0; i < a; i++) {
                    s = i * 3;
                    o = {
                        type: r[s + 2] & 3,
                        pts: t
                    };
                    if (r[s + 2] & 4) {
                        o.ccData = r[s + 3] << 8 | r[s + 4];
                        n.push(o)
                    }
                }
                return n
            };
            var Zi = function e(t) {
                var r = t.byteLength,
                    n = [
                    ],
                    i = 1,
                    a,
                    s;
                while (i < r - 2) {
                    if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                        n.push(i + 2);
                        i += 2
                    } else {
                        i++
                    }
                }
                if (n.length === 0) {
                    return t
                }
                a = r - n.length;
                s = new Uint8Array(a);
                var o = 0;
                for (i = 0; i < a; o++, i++) {
                    if (o === n[0]) {
                        o++;
                        n.shift()
                    }
                    s[i] = t[o]
                }
                return s
            };
            var ea = {
                parseSei: Ki,
                parseUserData: Qi,
                parseCaptionPackets: Ji,
                discardEmulationPreventionBytes: Zi,
                USER_DATA_REGISTERED_ITU_T_T35: $i
            };
            var ta = function e() {
                e.prototype.init.call(this);
                this.captionPackets_ = [
                ];
                this.ccStreams_ = [
                    new oa(0, 0),
                    new oa(0, 1),
                    new oa(1, 0),
                    new oa(1, 1)
                ];
                this.reset();
                this.ccStreams_.forEach(function (e) {
                    e.on('data', this.trigger.bind(this, 'data'));
                    e.on('done', this.trigger.bind(this, 'done'))
                }, this)
            };
            ta.prototype = new hi;
            ta.prototype.push = function (e) {
                var t,
                    r,
                    n;
                if (e.nalUnitType !== 'sei_rbsp') {
                    return
                }
                t = ea.parseSei(e.escapedRBSP);
                if (t.payloadType !== ea.USER_DATA_REGISTERED_ITU_T_T35) {
                    return
                }
                r = ea.parseUserData(t);
                if (!r) {
                    return
                }
                if (e.dts < this.latestDts_) {
                    this.ignoreNextEqualDts_ = true;
                    return
                } else if (e.dts === this.latestDts_ && this.ignoreNextEqualDts_) {
                    this.numSameDts_--;
                    if (!this.numSameDts_) {
                        this.ignoreNextEqualDts_ = false
                    }
                    return
                }
                n = ea.parseCaptionPackets(e.pts, r);
                this.captionPackets_ = this.captionPackets_.concat(n);
                if (this.latestDts_ !== e.dts) {
                    this.numSameDts_ = 0
                }
                this.numSameDts_++;
                this.latestDts_ = e.dts
            };
            ta.prototype.flush = function () {
                if (!this.captionPackets_.length) {
                    this.ccStreams_.forEach(function (e) {
                        e.flush()
                    }, this);
                    return
                }
                this.captionPackets_.forEach(function (e, t) {
                    e.presortIndex = t
                });
                this.captionPackets_.sort(function (e, t) {
                    if (e.pts === t.pts) {
                        return e.presortIndex - t.presortIndex
                    }
                    return e.pts - t.pts
                });
                this.captionPackets_.forEach(function (e) {
                    if (e.type < 2) {
                        this.dispatchCea608Packet(e)
                    }
                }, this);
                this.captionPackets_.length = 0;
                this.ccStreams_.forEach(function (e) {
                    e.flush()
                }, this);
                return
            };
            ta.prototype.reset = function () {
                this.latestDts_ = null;
                this.ignoreNextEqualDts_ = false;
                this.numSameDts_ = 0;
                this.activeCea608Channel_ = [
                    null,
                    null
                ];
                this.ccStreams_.forEach(function (e) {
                    e.reset()
                })
            };
            ta.prototype.dispatchCea608Packet = function (e) {
                if (this.setsChannel1Active(e)) {
                    this.activeCea608Channel_[e.type] = 0
                } else if (this.setsChannel2Active(e)) {
                    this.activeCea608Channel_[e.type] = 1
                }
                if (this.activeCea608Channel_[e.type] === null) {
                    return
                }
                this.ccStreams_[(e.type << 1) + this.activeCea608Channel_[e.type]].push(e)
            };
            ta.prototype.setsChannel1Active = function (e) {
                return (e.ccData & 30720) === 4096
            };
            ta.prototype.setsChannel2Active = function (e) {
                return (e.ccData & 30720) === 6144
            };
            var ra = {
                42: 225,
                92: 233,
                94: 237,
                95: 243,
                96: 250,
                123: 231,
                124: 247,
                125: 209,
                126: 241,
                127: 9608,
                304: 174,
                305: 176,
                306: 189,
                307: 191,
                308: 8482,
                309: 162,
                310: 163,
                311: 9834,
                312: 224,
                313: 160,
                314: 232,
                315: 226,
                316: 234,
                317: 238,
                318: 244,
                319: 251,
                544: 193,
                545: 201,
                546: 211,
                547: 218,
                548: 220,
                549: 252,
                550: 8216,
                551: 161,
                552: 42,
                553: 39,
                554: 8212,
                555: 169,
                556: 8480,
                557: 8226,
                558: 8220,
                559: 8221,
                560: 192,
                561: 194,
                562: 199,
                563: 200,
                564: 202,
                565: 203,
                566: 235,
                567: 206,
                568: 207,
                569: 239,
                570: 212,
                571: 217,
                572: 249,
                573: 219,
                574: 171,
                575: 187,
                800: 195,
                801: 227,
                802: 205,
                803: 204,
                804: 236,
                805: 210,
                806: 242,
                807: 213,
                808: 245,
                809: 123,
                810: 125,
                811: 92,
                812: 94,
                813: 95,
                814: 124,
                815: 126,
                816: 196,
                817: 228,
                818: 214,
                819: 246,
                820: 223,
                821: 165,
                822: 164,
                823: 9474,
                824: 197,
                825: 229,
                826: 216,
                827: 248,
                828: 9484,
                829: 9488,
                830: 9492,
                831: 9496
            };
            var na = function e(t) {
                if (t === null) {
                    return ''
                }
                t = ra[t] || t;
                return String.fromCharCode(t)
            };
            var ia = 14;
            var aa = [
                4352,
                4384,
                4608,
                4640,
                5376,
                5408,
                5632,
                5664,
                5888,
                5920,
                4096,
                4864,
                4896,
                5120,
                5152
            ];
            var sa = function e() {
                var t = [
                ],
                    r = ia + 1;
                while (r--) {
                    t.push('')
                }
                return t
            };
            var oa = function e(t, r) {
                e.prototype.init.call(this);
                this.field_ = t || 0;
                this.dataChannel_ = r || 0;
                this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);
                this.setConstants();
                this.reset();
                this.push = function (e) {
                    var t,
                        r,
                        n,
                        i,
                        a;
                    t = e.ccData & 32639;
                    if (t === this.lastControlCode_) {
                        this.lastControlCode_ = null;
                        return
                    }
                    if ((t & 61440) === 4096) {
                        this.lastControlCode_ = t
                    } else if (t !== this.PADDING_) {
                        this.lastControlCode_ = null
                    }
                    n = t >>> 8;
                    i = t & 255;
                    if (t === this.PADDING_) {
                        return
                    } else if (t === this.RESUME_CAPTION_LOADING_) {
                        this.mode_ = 'popOn'
                    } else if (t === this.END_OF_CAPTION_) {
                        this.mode_ = 'popOn';
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        r = this.displayed_;
                        this.displayed_ = this.nonDisplayed_;
                        this.nonDisplayed_ = r;
                        this.startPts_ = e.pts
                    } else if (t === this.ROLL_UP_2_ROWS_) {
                        this.rollUpRows_ = 2;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_3_ROWS_) {
                        this.rollUpRows_ = 3;
                        this.setRollUp(e.pts)
                    } else if (t === this.ROLL_UP_4_ROWS_) {
                        this.rollUpRows_ = 4;
                        this.setRollUp(e.pts)
                    } else if (t === this.CARRIAGE_RETURN_) {
                        this.clearFormatting(e.pts);
                        this.flushDisplayed(e.pts);
                        this.shiftRowsUp_();
                        this.startPts_ = e.pts
                    } else if (t === this.BACKSPACE_) {
                        if (this.mode_ === 'popOn') {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                        }
                    } else if (t === this.ERASE_DISPLAYED_MEMORY_) {
                        this.flushDisplayed(e.pts);
                        this.displayed_ = sa()
                    } else if (t === this.ERASE_NON_DISPLAYED_MEMORY_) {
                        this.nonDisplayed_ = sa()
                    } else if (t === this.RESUME_DIRECT_CAPTIONING_) {
                        if (this.mode_ !== 'paintOn') {
                            this.flushDisplayed(e.pts);
                            this.displayed_ = sa()
                        }
                        this.mode_ = 'paintOn';
                        this.startPts_ = e.pts
                    } else if (this.isSpecialCharacter(n, i)) {
                        n = (n & 3) << 8;
                        a = na(n | i);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isExtCharacter(n, i)) {
                        if (this.mode_ === 'popOn') {
                            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, - 1)
                        } else {
                            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, - 1)
                        }
                        n = (n & 3) << 8;
                        a = na(n | i);
                        this[this.mode_](e.pts, a);
                        this.column_++
                    } else if (this.isMidRowCode(n, i)) {
                        this.clearFormatting(e.pts);
                        this[this.mode_](e.pts, ' ');
                        this.column_++;
                        if ((i & 14) === 14) {
                            this.addFormatting(e.pts, [
                                'i'
                            ])
                        }
                        if ((i & 1) === 1) {
                            this.addFormatting(e.pts, [
                                'u'
                            ])
                        }
                    } else if (this.isOffsetControlCode(n, i)) {
                        this.column_ += i & 3
                    } else if (this.isPAC(n, i)) {
                        var s = aa.indexOf(t & 7968);
                        if (this.mode_ === 'rollUp') {
                            if (s - this.rollUpRows_ + 1 < 0) {
                                s = this.rollUpRows_ - 1
                            }
                            this.setRollUp(e.pts, s)
                        }
                        if (s !== this.row_) {
                            this.clearFormatting(e.pts);
                            this.row_ = s
                        }
                        if (i & 1 && this.formatting_.indexOf('u') === - 1) {
                            this.addFormatting(e.pts, [
                                'u'
                            ])
                        }
                        if ((t & 16) === 16) {
                            this.column_ = ((t & 14) >> 1) * 4
                        }
                        if (this.isColorPAC(i)) {
                            if ((i & 14) === 14) {
                                this.addFormatting(e.pts, [
                                    'i'
                                ])
                            }
                        }
                    } else if (this.isNormalChar(n)) {
                        if (i === 0) {
                            i = null
                        }
                        a = na(n);
                        a += na(i);
                        this[this.mode_](e.pts, a);
                        this.column_ += a.length
                    }
                }
            };
            oa.prototype = new hi;
            oa.prototype.flushDisplayed = function (e) {
                var t = this.displayed_.map(function (e) {
                    try {
                        return e.trim()
                    } catch (e) {
                        console.error('Skipping malformed caption.');
                        return ''
                    }
                }).join('\n').replace(/^\n+|\n+$/g, '');
                if (t.length) {
                    this.trigger('data', {
                        startPts: this.startPts_,
                        endPts: e,
                        text: t,
                        stream: this.name_
                    })
                }
            };
            oa.prototype.reset = function () {
                this.mode_ = 'popOn';
                this.topRow_ = 0;
                this.startPts_ = 0;
                this.displayed_ = sa();
                this.nonDisplayed_ = sa();
                this.lastControlCode_ = null;
                this.column_ = 0;
                this.row_ = ia;
                this.rollUpRows_ = 2;
                this.formatting_ = [
                ]
            };
            oa.prototype.setConstants = function () {
                if (this.dataChannel_ === 0) {
                    this.BASE_ = 16;
                    this.EXT_ = 17;
                    this.CONTROL_ = (20 | this.field_) << 8;
                    this.OFFSET_ = 23
                } else if (this.dataChannel_ === 1) {
                    this.BASE_ = 24;
                    this.EXT_ = 25;
                    this.CONTROL_ = (28 | this.field_) << 8;
                    this.OFFSET_ = 31
                }
                this.PADDING_ = 0;
                this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 32;
                this.END_OF_CAPTION_ = this.CONTROL_ | 47;
                this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 37;
                this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 38;
                this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 39;
                this.CARRIAGE_RETURN_ = this.CONTROL_ | 45;
                this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 41;
                this.BACKSPACE_ = this.CONTROL_ | 33;
                this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 44;
                this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 46
            };
            oa.prototype.isSpecialCharacter = function (e, t) {
                return e === this.EXT_ && t >= 48 && t <= 63
            };
            oa.prototype.isExtCharacter = function (e, t) {
                return (e === this.EXT_ + 1 || e === this.EXT_ + 2) && t >= 32 && t <= 63
            };
            oa.prototype.isMidRowCode = function (e, t) {
                return e === this.EXT_ && t >= 32 && t <= 47
            };
            oa.prototype.isOffsetControlCode = function (e, t) {
                return e === this.OFFSET_ && t >= 33 && t <= 35
            };
            oa.prototype.isPAC = function (e, t) {
                return e >= this.BASE_ && e < this.BASE_ + 8 && t >= 64 && t <= 127
            };
            oa.prototype.isColorPAC = function (e) {
                return e >= 64 && e <= 79 || e >= 96 && e <= 127
            };
            oa.prototype.isNormalChar = function (e) {
                return e >= 32 && e <= 127
            };
            oa.prototype.setRollUp = function (e, t) {
                if (this.mode_ !== 'rollUp') {
                    this.row_ = ia;
                    this.mode_ = 'rollUp';
                    this.flushDisplayed(e);
                    this.nonDisplayed_ = sa();
                    this.displayed_ = sa()
                }
                if (t !== undefined && t !== this.row_) {
                    for (var r = 0; r < this.rollUpRows_; r++) {
                        this.displayed_[t - r] = this.displayed_[this.row_ - r];
                        this.displayed_[this.row_ - r] = ''
                    }
                }
                if (t === undefined) {
                    t = this.row_
                }
                this.topRow_ = t - this.rollUpRows_ + 1
            };
            oa.prototype.addFormatting = function (e, t) {
                this.formatting_ = this.formatting_.concat(t);
                var r = t.reduce(function (e, t) {
                    return e + '<' + t + '>'
                }, '');
                this[this.mode_](e, r)
            };
            oa.prototype.clearFormatting = function (e) {
                if (!this.formatting_.length) {
                    return
                }
                var t = this.formatting_.reverse().reduce(function (e, t) {
                    return e + '</' + t + '>'
                }, '');
                this.formatting_ = [
                ];
                this[this.mode_](e, t)
            };
            oa.prototype.popOn = function (e, t) {
                var r = this.nonDisplayed_[this.row_];
                r += t;
                this.nonDisplayed_[this.row_] = r
            };
            oa.prototype.rollUp = function (e, t) {
                var r = this.displayed_[this.row_];
                r += t;
                this.displayed_[this.row_] = r
            };
            oa.prototype.shiftRowsUp_ = function () {
                var e;
                for (e = 0; e < this.topRow_; e++) {
                    this.displayed_[e] = ''
                }
                for (e = this.row_ + 1; e < ia + 1; e++) {
                    this.displayed_[e] = ''
                }
                for (e = this.topRow_; e < this.row_; e++) {
                    this.displayed_[e] = this.displayed_[e + 1]
                }
                this.displayed_[this.row_] = ''
            };
            oa.prototype.paintOn = function (e, t) {
                var r = this.displayed_[this.row_];
                r += t;
                this.displayed_[this.row_] = r
            };
            var ua = {
                CaptionStream: ta,
                Cea608Stream: oa
            };
            var la = {
                H264_STREAM_TYPE: 27,
                ADTS_STREAM_TYPE: 15,
                METADATA_STREAM_TYPE: 21
            };
            var ca = 8589934592;
            var da = 4294967296;
            var fa = function e(t, r) {
                var n = 1;
                if (t > r) {
                    n = - 1
                }
                while (Math.abs(r - t) > da) {
                    t += n * ca
                }
                return t
            };
            var ha = function e(t) {
                var r,
                    n;
                e.prototype.init.call(this);
                this.type_ = t;
                this.push = function (e) {
                    if (e.type !== this.type_) {
                        return
                    }
                    if (n === undefined) {
                        n = e.dts
                    }
                    e.dts = fa(e.dts, n);
                    e.pts = fa(e.pts, n);
                    r = e.dts;
                    this.trigger('data', e)
                };
                this.flush = function () {
                    n = r;
                    this.trigger('done')
                };
                this.discontinuity = function () {
                    n = void 0;
                    r = void 0
                }
            };
            ha.prototype = new hi;
            var pa = {
                TimestampRolloverStream: ha,
                handleRollover: fa
            };
            var va = function e(t, r, n) {
                var i,
                    a = '';
                for (i = r; i < n; i++) {
                    a += '%' + ('00' + t[i].toString(16)).slice(- 2)
                }
                return a
            },
                ma = function e(t, r, n) {
                    return decodeURIComponent(va(t, r, n))
                },
                ga = function e(t, r, n) {
                    return unescape(va(t, r, n))
                },
                ya = function e(t) {
                    return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
                },
                _a = {
                    TXXX: function e(t) {
                        var r;
                        if (t.data[0] !== 3) {
                            return
                        }
                        for (r = 1; r < t.data.length; r++) {
                            if (t.data[r] === 0) {
                                t.description = ma(t.data, 1, r);
                                t.value = ma(t.data, r + 1, t.data.length).replace(/\0*$/, '');
                                break
                            }
                        }
                        t.data = t.value
                    },
                    WXXX: function e(t) {
                        var r;
                        if (t.data[0] !== 3) {
                            return
                        }
                        for (r = 1; r < t.data.length; r++) {
                            if (t.data[r] === 0) {
                                t.description = ma(t.data, 1, r);
                                t.url = ma(t.data, r + 1, t.data.length);
                                break
                            }
                        }
                    },
                    PRIV: function e(t) {
                        var r;
                        for (r = 0; r < t.data.length; r++) {
                            if (t.data[r] === 0) {
                                t.owner = ga(t.data, 0, r);
                                break
                            }
                        }
                        t.privateData = t.data.subarray(r + 1);
                        t.data = t.privateData
                    }
                },
                ba;
            ba = function e(t) {
                var r = {
                    debug: !!(t && t.debug),
                    descriptor: t && t.descriptor
                },
                    n = 0,
                    i = [
                    ],
                    a = 0,
                    s;
                ba.prototype.init.call(this);
                this.dispatchType = la.METADATA_STREAM_TYPE.toString(16);
                if (r.descriptor) {
                    for (s = 0; s < r.descriptor.length; s++) {
                        this.dispatchType += ('00' + r.descriptor[s].toString(16)).slice(- 2)
                    }
                }
                this.push = function (e) {
                    var t,
                        s,
                        o,
                        u,
                        l,
                        c;
                    if (e.type !== 'timed-metadata') {
                        return
                    }
                    if (e.dataAlignmentIndicator) {
                        a = 0;
                        i.length = 0
                    }
                    if (i.length === 0 && (e.data.length < 10 || e.data[0] !== 'I'.charCodeAt(0) || e.data[1] !== 'D'.charCodeAt(0) || e.data[2] !== '3'.charCodeAt(0))) {
                        if (r.debug) {
                            console.log('Skipping unrecognized metadata packet')
                        }
                        return
                    }
                    i.push(e);
                    a += e.data.byteLength;
                    if (i.length === 1) {
                        n = ya(e.data.subarray(6, 10));
                        n += 10
                    }
                    if (a < n) {
                        return
                    }
                    t = {
                        data: new Uint8Array(n),
                        frames: [
                        ],
                        pts: i[0].pts,
                        dts: i[0].dts
                    };
                    for (l = 0; l < n;) {
                        t.data.set(i[0].data.subarray(0, n - l), l);
                        l += i[0].data.byteLength;
                        a -= i[0].data.byteLength;
                        i.shift()
                    }
                    s = 10;
                    if (t.data[5] & 64) {
                        s += 4;
                        s += ya(t.data.subarray(10, 14));
                        n -= ya(t.data.subarray(16, 20))
                    }
                    do {
                        o = ya(t.data.subarray(s + 4, s + 8));
                        if (o < 1) {
                            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.')
                        }
                        c = String.fromCharCode(t.data[s], t.data[s + 1], t.data[s + 2], t.data[s + 3]);
                        u = {
                            id: c,
                            data: t.data.subarray(s + 10, s + o + 10)
                        };
                        u.key = u.id;
                        if (_a[u.id]) {
                            _a[u.id](u);
                            if (u.owner === 'com.apple.streaming.transportStreamTimestamp') {
                                var d = u.data,
                                    f = (d[3] & 1) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;
                                f *= 4;
                                f += d[7] & 3;
                                u.timeStamp = f;
                                if (t.pts === undefined && t.dts === undefined) {
                                    t.pts = u.timeStamp;
                                    t.dts = u.timeStamp
                                }
                                this.trigger('timestamp', u)
                            }
                        }
                        t.frames.push(u);
                        s += 10;
                        s += o
                    } while (s < n);
                    this.trigger('data', t)
                }
            };
            ba.prototype = new hi;
            var Ta = ba;
            var Aa = pa.TimestampRolloverStream;
            var Sa,
                ka,
                wa;
            var Ca = 188,
                Ea = 71;
            Sa = function e() {
                var t = new Uint8Array(Ca),
                    r = 0;
                Sa.prototype.init.call(this);
                this.push = function (e) {
                    var n = 0,
                        i = Ca,
                        a;
                    if (r) {
                        a = new Uint8Array(e.byteLength + r);
                        a.set(t.subarray(0, r));
                        a.set(e, r);
                        r = 0
                    } else {
                        a = e
                    }
                    while (i < a.byteLength) {
                        if (a[n] === Ea && a[i] === Ea) {
                            this.trigger('data', a.subarray(n, i));
                            n += Ca;
                            i += Ca;
                            continue
                        }
                        n++;
                        i++
                    }
                    if (n < a.byteLength) {
                        t.set(a.subarray(n), 0);
                        r = a.byteLength - n
                    }
                };
                this.flush = function () {
                    if (r === Ca && t[0] === Ea) {
                        this.trigger('data', t);
                        r = 0
                    }
                    this.trigger('done')
                }
            };
            Sa.prototype = new hi;
            ka = function e() {
                var t,
                    r,
                    n,
                    i;
                ka.prototype.init.call(this);
                i = this;
                this.packetsWaitingForPmt = [
                ];
                this.programMapTable = undefined;
                t = function e(t, i) {
                    var a = 0;
                    if (i.payloadUnitStartIndicator) {
                        a += t[a] + 1
                    }
                    if (i.type === 'pat') {
                        r(t.subarray(a), i)
                    } else {
                        n(t.subarray(a), i)
                    }
                };
                r = function e(t, r) {
                    r.section_number = t[7];
                    r.last_section_number = t[8];
                    i.pmtPid = (t[10] & 31) << 8 | t[11];
                    r.pmtPid = i.pmtPid
                };
                n = function e(t, r) {
                    var n,
                        a,
                        s,
                        o;
                    if (!(t[5] & 1)) {
                        return
                    }
                    i.programMapTable = {
                        video: null,
                        audio: null,
                        'timed-metadata': {
                        }
                    };
                    n = (t[1] & 15) << 8 | t[2];
                    a = 3 + n - 4;
                    s = (t[10] & 15) << 8 | t[11];
                    o = 12 + s;
                    while (o < a) {
                        var u = t[o];
                        var l = (t[o + 1] & 31) << 8 | t[o + 2];
                        if (u === la.H264_STREAM_TYPE && i.programMapTable.video === null) {
                            i.programMapTable.video = l
                        } else if (u === la.ADTS_STREAM_TYPE && i.programMapTable.audio === null) {
                            i.programMapTable.audio = l
                        } else if (u === la.METADATA_STREAM_TYPE) {
                            i.programMapTable['timed-metadata'][l] = u
                        }
                        o += ((t[o + 3] & 15) << 8 | t[o + 4]) + 5
                    }
                    r.programMapTable = i.programMapTable
                };
                this.push = function (e) {
                    var r = {
                    },
                        n = 4;
                    r.payloadUnitStartIndicator = !!(e[1] & 64);
                    r.pid = e[1] & 31;
                    r.pid <<= 8;
                    r.pid |= e[2];
                    if ((e[3] & 48) >>> 4 > 1) {
                        n += e[n] + 1
                    }
                    if (r.pid === 0) {
                        r.type = 'pat';
                        t(e.subarray(n), r);
                        this.trigger('data', r)
                    } else if (r.pid === this.pmtPid) {
                        r.type = 'pmt';
                        t(e.subarray(n), r);
                        this.trigger('data', r);
                        while (this.packetsWaitingForPmt.length) {
                            this.processPes_.apply(this, this.packetsWaitingForPmt.shift())
                        }
                    } else if (this.programMapTable === undefined) {
                        this.packetsWaitingForPmt.push([e,
                            n,
                            r])
                    } else {
                        this.processPes_(e, n, r)
                    }
                };
                this.processPes_ = function (e, t, r) {
                    if (r.pid === this.programMapTable.video) {
                        r.streamType = la.H264_STREAM_TYPE
                    } else if (r.pid === this.programMapTable.audio) {
                        r.streamType = la.ADTS_STREAM_TYPE
                    } else {
                        r.streamType = this.programMapTable['timed-metadata'][r.pid]
                    }
                    r.type = 'pes';
                    r.data = e.subarray(t);
                    this.trigger('data', r)
                }
            };
            ka.prototype = new hi;
            ka.STREAM_TYPES = {
                h264: 27,
                adts: 15
            };
            wa = function e() {
                var t = this,
                    r = {
                        data: [
                        ],
                        size: 0
                    },
                    n = {
                        data: [
                        ],
                        size: 0
                    },
                    i = {
                        data: [
                        ],
                        size: 0
                    },
                    a = function e(t, r) {
                        var n;
                        r.packetLength = 6 + (t[4] << 8 | t[5]);
                        r.dataAlignmentIndicator = (t[6] & 4) !== 0;
                        n = t[7];
                        if (n & 192) {
                            r.pts = (t[9] & 14) << 27 | (t[10] & 255) << 20 | (t[11] & 254) << 12 | (t[12] & 255) << 5 | (t[13] & 254) >>> 3;
                            r.pts *= 4;
                            r.pts += (t[13] & 6) >>> 1;
                            r.dts = r.pts;
                            if (n & 64) {
                                r.dts = (t[14] & 14) << 27 | (t[15] & 255) << 20 | (t[16] & 254) << 12 | (t[17] & 255) << 5 | (t[18] & 254) >>> 3;
                                r.dts *= 4;
                                r.dts += (t[18] & 6) >>> 1
                            }
                        }
                        r.data = t.subarray(9 + t[8])
                    },
                    s = function e(r, n, i) {
                        var s = new Uint8Array(r.size),
                            o = {
                                type: n
                            },
                            u = 0,
                            l = 0,
                            c = false,
                            d;
                        if (!r.data.length || r.size < 9) {
                            return
                        }
                        o.trackId = r.data[0].pid;
                        for (u = 0; u < r.data.length; u++) {
                            d = r.data[u];
                            s.set(d.data, l);
                            l += d.data.byteLength
                        }
                        a(s, o);
                        c = n === 'video' || o.packetLength <= r.size;
                        if (i || c) {
                            r.size = 0;
                            r.data.length = 0
                        }
                        if (c) {
                            t.trigger('data', o)
                        }
                    };
                wa.prototype.init.call(this);
                this.push = function (e) {
                    ({
                        pat: function e() {
                        },
                        pes: function t() {
                            var a,
                                o;
                            switch (e.streamType) {
                                case la.H264_STREAM_TYPE:
                                case la.H264_STREAM_TYPE:
                                    a = r;
                                    o = 'video';
                                    break;
                                case la.ADTS_STREAM_TYPE:
                                    a = n;
                                    o = 'audio';
                                    break;
                                case la.METADATA_STREAM_TYPE:
                                    a = i;
                                    o = 'timed-metadata';
                                    break;
                                default:
                                    return
                            }
                            if (e.payloadUnitStartIndicator) {
                                s(a, o, true)
                            }
                            a.data.push(e);
                            a.size += e.data.byteLength
                        },
                        pmt: function r() {
                            var n = {
                                type: 'metadata',
                                tracks: [
                                ]
                            },
                                i = e.programMapTable;
                            if (i.video !== null) {
                                n.tracks.push({
                                    timelineStartInfo: {
                                        baseMediaDecodeTime: 0
                                    },
                                    id: + i.video,
                                    codec: 'avc',
                                    type: 'video'
                                })
                            }
                            if (i.audio !== null) {
                                n.tracks.push({
                                    timelineStartInfo: {
                                        baseMediaDecodeTime: 0
                                    },
                                    id: + i.audio,
                                    codec: 'adts',
                                    type: 'audio'
                                })
                            }
                            t.trigger('data', n)
                        }
                    })[e.type]()
                };
                this.flush = function () {
                    s(r, 'video');
                    s(n, 'audio');
                    s(i, 'timed-metadata');
                    this.trigger('done')
                }
            };
            wa.prototype = new hi;
            var Ia = {
                PAT_PID: 0,
                MP2T_PACKET_LENGTH: Ca,
                TransportPacketStream: Sa,
                TransportParseStream: ka,
                ElementaryStream: wa,
                TimestampRolloverStream: Aa,
                CaptionStream: ua.CaptionStream,
                Cea608Stream: ua.Cea608Stream,
                MetadataStream: Ta
            };
            for (var Pa in la) {
                if (la.hasOwnProperty(Pa)) {
                    Ia[Pa] = la[Pa]
                }
            }
            var Oa = Ia;
            var xa;
            var La = [
                96000,
                88200,
                64000,
                48000,
                44100,
                32000,
                24000,
                22050,
                16000,
                12000,
                11025,
                8000,
                7350
            ];
            xa = function e() {
                var t;
                xa.prototype.init.call(this);
                this.push = function (e) {
                    var r = 0,
                        n = 0,
                        i,
                        a,
                        s,
                        o,
                        u,
                        l;
                    if (e.type !== 'audio') {
                        return
                    }
                    if (t) {
                        o = t;
                        t = new Uint8Array(o.byteLength + e.data.byteLength);
                        t.set(o);
                        t.set(e.data, o.byteLength)
                    } else {
                        t = e.data
                    }
                    while (r + 5 < t.length) {
                        if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
                            r++;
                            continue
                        }
                        a = (~t[r + 1] & 1) * 2;
                        i = (t[r + 3] & 3) << 11 | t[r + 4] << 3 | (t[r + 5] & 224) >> 5;
                        u = ((t[r + 6] & 3) + 1) * 1024;
                        l = u * 90000 / La[(t[r + 2] & 60) >>> 2];
                        s = r + i;
                        if (t.byteLength < s) {
                            return
                        }
                        this.trigger('data', {
                            pts: e.pts + n * l,
                            dts: e.dts + n * l,
                            sampleCount: u,
                            audioobjecttype: (t[r + 2] >>> 6 & 3) + 1,
                            channelcount: (t[r + 2] & 1) << 2 | (t[r + 3] & 192) >>> 6,
                            samplerate: La[(t[r + 2] & 60) >>> 2],
                            samplingfrequencyindex: (t[r + 2] & 60) >>> 2,
                            samplesize: 16,
                            data: t.subarray(r + 7 + a, s)
                        });
                        if (t.byteLength === s) {
                            t = undefined;
                            return
                        }
                        n++;
                        t = t.subarray(s)
                    }
                };
                this.flush = function () {
                    this.trigger('done')
                }
            };
            xa.prototype = new hi;
            var Da = xa;
            var Ra;
            Ra = function e(t) {
                var r = t.byteLength,
                    n = 0,
                    i = 0;
                this.length = function () {
                    return 8 * r
                };
                this.bitsAvailable = function () {
                    return 8 * r + i
                };
                this.loadWord = function () {
                    var e = t.byteLength - r,
                        a = new Uint8Array(4),
                        s = Math.min(4, r);
                    if (s === 0) {
                        throw new Error('no bytes available')
                    }
                    a.set(t.subarray(e, e + s));
                    n = new DataView(a.buffer).getUint32(0);
                    i = s * 8;
                    r -= s
                };
                this.skipBits = function (e) {
                    var t;
                    if (i > e) {
                        n <<= e;
                        i -= e
                    } else {
                        e -= i;
                        t = Math.floor(e / 8);
                        e -= t * 8;
                        r -= t;
                        this.loadWord();
                        n <<= e;
                        i -= e
                    }
                };
                this.readBits = function (e) {
                    var t = Math.min(i, e),
                        a = n >>> 32 - t;
                    i -= t;
                    if (i > 0) {
                        n <<= t
                    } else if (r > 0) {
                        this.loadWord()
                    }
                    t = e - t;
                    if (t > 0) {
                        return a << t | this.readBits(t)
                    }
                    return a
                };
                this.skipLeadingZeros = function () {
                    var e;
                    for (e = 0; e < i; ++e) {
                        if ((n & 2147483648 >>> e) !== 0) {
                            n <<= e;
                            i -= e;
                            return e
                        }
                    }
                    this.loadWord();
                    return e + this.skipLeadingZeros()
                };
                this.skipUnsignedExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                };
                this.skipExpGolomb = function () {
                    this.skipBits(1 + this.skipLeadingZeros())
                };
                this.readUnsignedExpGolomb = function () {
                    var e = this.skipLeadingZeros();
                    return this.readBits(e + 1) - 1
                };
                this.readExpGolomb = function () {
                    var e = this.readUnsignedExpGolomb();
                    if (1 & e) {
                        return 1 + e >>> 1
                    }
                    return - 1 * (e >>> 1)
                };
                this.readBoolean = function () {
                    return this.readBits(1) === 1
                };
                this.readUnsignedByte = function () {
                    return this.readBits(8)
                };
                this.loadWord()
            };
            var Ma = Ra;
            var ja,
                Ua;
            var Na;
            Ua = function e() {
                var t = 0,
                    r,
                    n;
                Ua.prototype.init.call(this);
                this.push = function (e) {
                    var i;
                    if (!n) {
                        n = e.data
                    } else {
                        i = new Uint8Array(n.byteLength + e.data.byteLength);
                        i.set(n);
                        i.set(e.data, n.byteLength);
                        n = i
                    }
                    for (; t < n.byteLength - 3; t++) {
                        if (n[t + 2] === 1) {
                            r = t + 5;
                            break
                        }
                    }
                    while (r < n.byteLength) {
                        switch (n[r]) {
                            case 0:
                                if (n[r - 1] !== 0) {
                                    r += 2;
                                    break
                                } else if (n[r - 2] !== 0) {
                                    r++;
                                    break
                                }
                                if (t + 3 !== r - 2) {
                                    this.trigger('data', n.subarray(t + 3, r - 2))
                                }
                                do {
                                    r++
                                } while (n[r] !== 1 && r < n.length);
                                t = r - 2;
                                r += 3;
                                break;
                            case 1:
                                if (n[r - 1] !== 0 || n[r - 2] !== 0) {
                                    r += 3;
                                    break
                                }
                                this.trigger('data', n.subarray(t + 3, r - 2));
                                t = r - 2;
                                r += 3;
                                break;
                            default:
                                r += 3;
                                break
                        }
                    }
                    n = n.subarray(t);
                    r -= t;
                    t = 0
                };
                this.flush = function () {
                    if (n && n.byteLength > 3) {
                        this.trigger('data', n.subarray(t + 3))
                    }
                    n = null;
                    t = 0;
                    this.trigger('done')
                }
            };
            Ua.prototype = new hi;
            Na = {
                100: true,
                110: true,
                122: true,
                244: true,
                44: true,
                83: true,
                86: true,
                118: true,
                128: true,
                138: true,
                139: true,
                134: true
            };
            ja = function e() {
                var t = new Ua,
                    r,
                    n,
                    i,
                    a,
                    s,
                    o,
                    u;
                ja.prototype.init.call(this);
                r = this;
                this.push = function (e) {
                    if (e.type !== 'video') {
                        return
                    }
                    n = e.trackId;
                    i = e.pts;
                    a = e.dts;
                    t.push(e)
                };
                t.on('data', function (e) {
                    var t = {
                        trackId: n,
                        pts: i,
                        dts: a,
                        data: e
                    };
                    switch (e[0] & 31) {
                        case 5:
                            t.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';
                            break;
                        case 6:
                            t.nalUnitType = 'sei_rbsp';
                            t.escapedRBSP = s(e.subarray(1));
                            break;
                        case 7:
                            t.nalUnitType = 'seq_parameter_set_rbsp';
                            t.escapedRBSP = s(e.subarray(1));
                            t.config = o(t.escapedRBSP);
                            break;
                        case 8:
                            t.nalUnitType = 'pic_parameter_set_rbsp';
                            break;
                        case 9:
                            t.nalUnitType = 'access_unit_delimiter_rbsp';
                            break;
                        default:
                            break
                    }
                    r.trigger('data', t)
                }); t.on('done', function () {
                    r.trigger('done')
                }); this.flush = function () {
                    t.flush()
                }; u = function e(t, r) {
                    var n = 8,
                        i = 8,
                        a,
                        s;
                    for (a = 0; a < t; a++) {
                        if (i !== 0) {
                            s = r.readExpGolomb();
                            i = (n + s + 256) % 256
                        }
                        n = i === 0 ? n : i
                    }
                }; s = function e(t) {
                    var r = t.byteLength,
                        n = [
                        ],
                        i = 1,
                        a,
                        s;
                    while (i < r - 2) {
                        if (t[i] === 0 && t[i + 1] === 0 && t[i + 2] === 3) {
                            n.push(i + 2);
                            i += 2
                        } else {
                            i++
                        }
                    }
                    if (n.length === 0) {
                        return t
                    }
                    a = r - n.length;
                    s = new Uint8Array(a);
                    var o = 0;
                    for (i = 0; i < a; o++, i++) {
                        if (o === n[0]) {
                            o++;
                            n.shift()
                        }
                        s[i] = t[o]
                    }
                    return s
                }; o = function e(t) {
                    var r = 0,
                        n = 0,
                        i = 0,
                        a = 0,
                        s = 1,
                        o,
                        l,
                        c,
                        d,
                        f,
                        h,
                        p,
                        v,
                        m,
                        g,
                        y,
                        _,
                        b,
                        T;
                    o = new Ma(t);
                    l = o.readUnsignedByte();
                    d = o.readUnsignedByte();
                    c = o.readUnsignedByte();
                    o.skipUnsignedExpGolomb();
                    if (Na[l]) {
                        f = o.readUnsignedExpGolomb();
                        if (f === 3) {
                            o.skipBits(1)
                        }
                        o.skipUnsignedExpGolomb();
                        o.skipUnsignedExpGolomb();
                        o.skipBits(1);
                        if (o.readBoolean()) {
                            y = f !== 3 ? 8 : 12;
                            for (T = 0; T < y; T++) {
                                if (o.readBoolean()) {
                                    if (T < 6) {
                                        u(16, o)
                                    } else {
                                        u(64, o)
                                    }
                                }
                            }
                        }
                    }
                    o.skipUnsignedExpGolomb();
                    h = o.readUnsignedExpGolomb();
                    if (h === 0) {
                        o.readUnsignedExpGolomb()
                    } else if (h === 1) {
                        o.skipBits(1);
                        o.skipExpGolomb();
                        o.skipExpGolomb();
                        p = o.readUnsignedExpGolomb();
                        for (T = 0; T < p; T++) {
                            o.skipExpGolomb()
                        }
                    }
                    o.skipUnsignedExpGolomb();
                    o.skipBits(1);
                    v = o.readUnsignedExpGolomb();
                    m = o.readUnsignedExpGolomb();
                    g = o.readBits(1);
                    if (g === 0) {
                        o.skipBits(1)
                    }
                    o.skipBits(1);
                    if (o.readBoolean()) {
                        r = o.readUnsignedExpGolomb();
                        n = o.readUnsignedExpGolomb();
                        i = o.readUnsignedExpGolomb();
                        a = o.readUnsignedExpGolomb()
                    }
                    if (o.readBoolean()) {
                        if (o.readBoolean()) {
                            b = o.readUnsignedByte();
                            switch (b) {
                                case 1:
                                    _ = [
                                        1,
                                        1
                                    ];
                                    break;
                                case 2:
                                    _ = [
                                        12,
                                        11
                                    ];
                                    break;
                                case 3:
                                    _ = [
                                        10,
                                        11
                                    ];
                                    break;
                                case 4:
                                    _ = [
                                        16,
                                        11
                                    ];
                                    break;
                                case 5:
                                    _ = [
                                        40,
                                        33
                                    ];
                                    break;
                                case 6:
                                    _ = [
                                        24,
                                        11
                                    ];
                                    break;
                                case 7:
                                    _ = [
                                        20,
                                        11
                                    ];
                                    break;
                                case 8:
                                    _ = [
                                        32,
                                        11
                                    ];
                                    break;
                                case 9:
                                    _ = [
                                        80,
                                        33
                                    ];
                                    break;
                                case 10:
                                    _ = [
                                        18,
                                        11
                                    ];
                                    break;
                                case 11:
                                    _ = [
                                        15,
                                        11
                                    ];
                                    break;
                                case 12:
                                    _ = [
                                        64,
                                        33
                                    ];
                                    break;
                                case 13:
                                    _ = [
                                        160,
                                        99
                                    ];
                                    break;
                                case 14:
                                    _ = [
                                        4,
                                        3
                                    ];
                                    break;
                                case 15:
                                    _ = [
                                        3,
                                        2
                                    ];
                                    break;
                                case 16:
                                    _ = [
                                        2,
                                        1
                                    ];
                                    break;
                                case 255:
                                    {
                                        _ = [
                                            o.readUnsignedByte() << 8 | o.readUnsignedByte(),
                                            o.readUnsignedByte() << 8 | o.readUnsignedByte()
                                        ];
                                        break
                                    }
                            }
                            if (_) {
                                s = _[0] / _[1]
                            }
                        }
                    }
                    return {
                        profileIdc: l,
                        levelIdc: c,
                        profileCompatibility: d,
                        width: Math.ceil(((v + 1) * 16 - r * 2 - n * 2) * s),
                        height: (2 - g) * (m + 1) * 16 - i * 2 - a * 2
                    }
                }
            }; ja.prototype = new hi; var Ba = {
                H264Stream: ja,
                NalByteStream: Ua
            }; var qa = [
                96000,
                88200,
                64000,
                48000,
                44100,
                32000,
                24000,
                22050,
                16000,
                12000,
                11025,
                8000,
                7350
            ]; var Fa = function e(t) {
                if (t[0] === 'I'.charCodeAt(0) && t[1] === 'D'.charCodeAt(0) && t[2] === '3'.charCodeAt(0)) {
                    return true
                }
                return false
            }; var Va = function e(t) {
                return t[0] << 21 | t[1] << 14 | t[2] << 7 | t[3]
            }; var Ha = function e(t, r, n) {
                var i,
                    a = '';
                for (i = r; i < n; i++) {
                    a += '%' + ('00' + t[i].toString(16)).slice(- 2)
                }
                return a
            }; var za = function e(t, r, n) {
                return unescape(Ha(t, r, n))
            }; var Ga = function e(t, r) {
                var n = t[r + 6] << 21 | t[r + 7] << 14 | t[r + 8] << 7 | t[r + 9],
                    i = t[r + 5],
                    a = (i & 16) >> 4;
                if (a) {
                    return n + 20
                }
                return n + 10
            }; var Wa = function e(t, r) {
                var n = (t[r + 5] & 224) >> 5,
                    i = t[r + 4] << 3,
                    a = t[r + 3] & 3 << 11;
                return a | i | n
            }; var Ya = function e(t, r) {
                if (t[r] === 'I'.charCodeAt(0) && t[r + 1] === 'D'.charCodeAt(0) && t[r + 2] === '3'.charCodeAt(0)) {
                    return 'timed-metadata'
                } else if (t[r] & 255 === 255 && (t[r + 1] & 240) === 240) {
                    return 'audio'
                }
                return null
            }; var $a = function e(t) {
                var r = 0;
                while (r + 5 < t.length) {
                    if (t[r] !== 255 || (t[r + 1] & 246) !== 240) {
                        r++;
                        continue
                    }
                    return qa[(t[r + 2] & 60) >>> 2]
                }
                return null
            }; var Xa = function e(t) {
                var r,
                    n,
                    i,
                    a;
                r = 10;
                if (t[5] & 64) {
                    r += 4;
                    r += Va(t.subarray(10, 14))
                }
                do {
                    n = Va(t.subarray(r + 4, r + 8));
                    if (n < 1) {
                        return null
                    }
                    a = String.fromCharCode(t[r], t[r + 1], t[r + 2], t[r + 3]);
                    if (a === 'PRIV') {
                        i = t.subarray(r + 10, r + n + 10);
                        for (var s = 0; s < i.byteLength; s++) {
                            if (i[s] === 0) {
                                var o = za(i, 0, s);
                                if (o === 'com.apple.streaming.transportStreamTimestamp') {
                                    var u = i.subarray(s + 1);
                                    var l = (u[3] & 1) << 30 | u[4] << 22 | u[5] << 14 | u[6] << 6 | u[7] >>> 2;
                                    l *= 4;
                                    l += u[7] & 3;
                                    return l
                                }
                                break
                            }
                        }
                    }
                    r += 10;
                    r += n
                } while (r < t.byteLength);
                return null
            }; var Ka = {
                isLikelyAacData: Fa,
                parseId3TagSize: Ga,
                parseAdtsSize: Wa,
                parseType: Ya,
                parseSampleRate: $a,
                parseAacTimestamp: Xa
            }; var Qa; Qa = function e() {
                var t = new Uint8Array,
                    r = 0;
                Qa.prototype.init.call(this);
                this.setTimestamp = function (e) {
                    r = e
                };
                this.push = function (e) {
                    var n = 0,
                        i = 0,
                        a,
                        s,
                        o,
                        u;
                    if (t.length) {
                        u = t.length;
                        t = new Uint8Array(e.byteLength + u);
                        t.set(t.subarray(0, u));
                        t.set(e, u)
                    } else {
                        t = e
                    }
                    while (t.length - i >= 3) {
                        if (t[i] === 'I'.charCodeAt(0) && t[i + 1] === 'D'.charCodeAt(0) && t[i + 2] === '3'.charCodeAt(0)) {
                            if (t.length - i < 10) {
                                break
                            }
                            n = Ka.parseId3TagSize(t, i);
                            if (i + n > t.length) {
                                break
                            }
                            s = {
                                type: 'timed-metadata',
                                data: t.subarray(i, i + n)
                            };
                            this.trigger('data', s);
                            i += n;
                            continue
                        } else if ((t[i] & 255) === 255 && (t[i + 1] & 240) === 240) {
                            if (t.length - i < 7) {
                                break
                            }
                            n = Ka.parseAdtsSize(t, i);
                            if (i + n > t.length) {
                                break
                            }
                            o = {
                                type: 'audio',
                                data: t.subarray(i, i + n),
                                pts: r,
                                dts: r
                            };
                            this.trigger('data', o);
                            i += n;
                            continue
                        }
                        i++
                    }
                    a = t.length - i;
                    if (a > 0) {
                        t = t.subarray(i)
                    } else {
                        t = new Uint8Array
                    }
                }
            }; Qa.prototype = new hi; var Ja = Qa; var Za = Ba.H264Stream; var es = Ka.isLikelyAacData; var ts = [
                'audioobjecttype',
                'channelcount',
                'samplerate',
                'samplingfrequencyindex',
                'samplesize'
            ]; var rs = [
                'width',
                'height',
                'profileIdc',
                'levelIdc',
                'profileCompatibility'
            ]; var ns, is, as, ss; var os = function e(t, r) {
                var n;
                if (t.length !== r.length) {
                    return false
                }
                for (n = 0; n < t.length; n++) {
                    if (t[n] !== r[n]) {
                        return false
                    }
                }
                return true
            }; is = function e(t, r) {
                var n = [
                ],
                    i = 0,
                    a = 0,
                    s = 0,
                    o = Infinity;
                r = r || {
                };
                is.prototype.init.call(this);
                this.push = function (e) {
                    Yi.collectDtsInfo(t, e);
                    if (t) {
                        ts.forEach(function (r) {
                            t[r] = e[r]
                        })
                    }
                    n.push(e)
                };
                this.setEarliestDts = function (e) {
                    a = e - t.timelineStartInfo.baseMediaDecodeTime
                };
                this.setVideoBaseMediaDecodeTime = function (e) {
                    o = e
                };
                this.setAudioAppendStart = function (e) {
                    s = e
                };
                this.flush = function () {
                    var e,
                        u,
                        l,
                        c;
                    if (n.length === 0) {
                        this.trigger('done', 'AudioSegmentStream');
                        return
                    }
                    e = Vi.trimAdtsFramesByEarliestDts(n, t, a);
                    t.baseMediaDecodeTime = Yi.calculateTrackBaseMediaDecodeTime(t, r.keepOriginalTimestamps);
                    Vi.prefixWithSilence(t, e, s, o);
                    t.samples = Vi.generateSampleTable(e);
                    l = di.mdat(Vi.concatenateFrameData(e));
                    n = [
                    ];
                    u = di.moof(i, [
                        t
                    ]);
                    c = new Uint8Array(u.byteLength + l.byteLength);
                    i++;
                    c.set(u);
                    c.set(l, u.byteLength);
                    Yi.clearDtsInfo(t);
                    this.trigger('data', {
                        track: t,
                        boxes: c
                    });
                    this.trigger('done', 'AudioSegmentStream')
                }
            }; is.prototype = new hi; ns = function e(t, r) {
                var n = 0,
                    i = [
                    ],
                    a = [
                    ],
                    s,
                    o;
                r = r || {
                };
                ns.prototype.init.call(this);
                delete t.minPTS;
                this.gopCache_ = [
                ];
                this.push = function (e) {
                    Yi.collectDtsInfo(t, e);
                    if (e.nalUnitType === 'seq_parameter_set_rbsp' && !s) {
                        s = e.config;
                        t.sps = [
                            e.data
                        ];
                        rs.forEach(function (e) {
                            t[e] = s[e]
                        }, this)
                    }
                    if (e.nalUnitType === 'pic_parameter_set_rbsp' && !o) {
                        o = e.data;
                        t.pps = [
                            e.data
                        ]
                    }
                    i.push(e)
                };
                this.flush = function () {
                    var e,
                        s,
                        o,
                        u,
                        l,
                        c;
                    while (i.length) {
                        if (i[0].nalUnitType === 'access_unit_delimiter_rbsp') {
                            break
                        }
                        i.shift()
                    }
                    if (i.length === 0) {
                        this.resetStream_();
                        this.trigger('done', 'VideoSegmentStream');
                        return
                    }
                    e = Ti.groupNalsIntoFrames(i);
                    o = Ti.groupFramesIntoGops(e);
                    if (!o[0][0].keyFrame) {
                        s = this.getGopForFusion_(i[0], t);
                        if (s) {
                            o.unshift(s);
                            o.byteLength += s.byteLength;
                            o.nalCount += s.nalCount;
                            o.pts = s.pts;
                            o.dts = s.dts;
                            o.duration += s.duration
                        } else {
                            o = Ti.extendFirstKeyFrame(o)
                        }
                    }
                    if (a.length) {
                        var d;
                        if (r.alignGopsAtEnd) {
                            d = this.alignGopsAtEnd_(o)
                        } else {
                            d = this.alignGopsAtStart_(o)
                        }
                        if (!d) {
                            this.gopCache_.unshift({
                                gop: o.pop(),
                                pps: t.pps,
                                sps: t.sps
                            });
                            this.gopCache_.length = Math.min(6, this.gopCache_.length);
                            i = [
                            ];
                            this.resetStream_();
                            this.trigger('done', 'VideoSegmentStream');
                            return
                        }
                        Yi.clearDtsInfo(t);
                        o = d
                    }
                    Yi.collectDtsInfo(t, o);
                    t.samples = Ti.generateSampleTable(o);
                    l = di.mdat(Ti.concatenateNalData(o));
                    t.baseMediaDecodeTime = Yi.calculateTrackBaseMediaDecodeTime(t, r.keepOriginalTimestamps);
                    this.trigger('processedGopsInfo', o.map(function (e) {
                        return {
                            pts: e.pts,
                            dts: e.dts,
                            byteLength: e.byteLength
                        }
                    }));
                    this.gopCache_.unshift({
                        gop: o.pop(),
                        pps: t.pps,
                        sps: t.sps
                    });
                    this.gopCache_.length = Math.min(6, this.gopCache_.length);
                    i = [
                    ];
                    this.trigger('baseMediaDecodeTime', t.baseMediaDecodeTime);
                    this.trigger('timelineStartInfo', t.timelineStartInfo);
                    u = di.moof(n, [
                        t
                    ]);
                    c = new Uint8Array(u.byteLength + l.byteLength);
                    n++;
                    c.set(u);
                    c.set(l, u.byteLength);
                    this.trigger('data', {
                        track: t,
                        boxes: c
                    });
                    this.resetStream_();
                    this.trigger('done', 'VideoSegmentStream')
                };
                this.resetStream_ = function () {
                    Yi.clearDtsInfo(t);
                    s = undefined;
                    o = undefined
                };
                this.getGopForFusion_ = function (e) {
                    var r = 45000,
                        n = 10000,
                        i = Infinity,
                        a,
                        s,
                        o,
                        u,
                        l;
                    for (l = 0; l < this.gopCache_.length; l++) {
                        u = this.gopCache_[l];
                        o = u.gop;
                        if (!(t.pps && os(t.pps[0], u.pps[0])) || !(t.sps && os(t.sps[0], u.sps[0]))) {
                            continue
                        }
                        if (o.dts < t.timelineStartInfo.dts) {
                            continue
                        }
                        a = e.dts - o.dts - o.duration;
                        if (a >= - n && a <= r) {
                            if (!s || i > a) {
                                s = u;
                                i = a
                            }
                        }
                    }
                    if (s) {
                        return s.gop
                    }
                    return null
                };
                this.alignGopsAtStart_ = function (e) {
                    var t,
                        r,
                        n,
                        i,
                        s,
                        o,
                        u,
                        l;
                    s = e.byteLength;
                    o = e.nalCount;
                    u = e.duration;
                    t = r = 0;
                    while (t < a.length && r < e.length) {
                        n = a[t];
                        i = e[r];
                        if (n.pts === i.pts) {
                            break
                        }
                        if (i.pts > n.pts) {
                            t++;
                            continue
                        }
                        r++;
                        s -= i.byteLength;
                        o -= i.nalCount;
                        u -= i.duration
                    }
                    if (r === 0) {
                        return e
                    }
                    if (r === e.length) {
                        return null
                    }
                    l = e.slice(r);
                    l.byteLength = s;
                    l.duration = u;
                    l.nalCount = o;
                    l.pts = l[0].pts;
                    l.dts = l[0].dts;
                    return l
                };
                this.alignGopsAtEnd_ = function (e) {
                    var t,
                        r,
                        n,
                        i,
                        s,
                        o;
                    t = a.length - 1;
                    r = e.length - 1;
                    s = null;
                    o = false;
                    while (t >= 0 && r >= 0) {
                        n = a[t];
                        i = e[r];
                        if (n.pts === i.pts) {
                            o = true;
                            break
                        }
                        if (n.pts > i.pts) {
                            t--;
                            continue
                        }
                        if (t === a.length - 1) {
                            s = r
                        }
                        r--
                    }
                    if (!o && s === null) {
                        return null
                    }
                    var u;
                    if (o) {
                        u = r
                    } else {
                        u = s
                    }
                    if (u === 0) {
                        return e
                    }
                    var l = e.slice(u);
                    var c = l.reduce(function (e, t) {
                        e.byteLength += t.byteLength;
                        e.duration += t.duration;
                        e.nalCount += t.nalCount;
                        return e
                    }, {
                        byteLength: 0,
                        duration: 0,
                        nalCount: 0
                    });
                    l.byteLength = c.byteLength;
                    l.duration = c.duration;
                    l.nalCount = c.nalCount;
                    l.pts = l[0].pts;
                    l.dts = l[0].dts;
                    return l
                };
                this.alignGopsWith = function (e) {
                    a = e
                }
            }; ns.prototype = new hi; ss = function e(t, r) {
                this.numberOfTracks = 0;
                this.metadataStream = r;
                t = t || {
                };
                if (typeof t.remux !== 'undefined') {
                    this.remuxTracks = !!t.remux
                } else {
                    this.remuxTracks = true
                }
                if (typeof t.keepOriginalTimestamps === 'boolean') {
                    this.keepOriginalTimestamps = t.keepOriginalTimestamps
                }
                this.pendingTracks = [
                ];
                this.videoTrack = null;
                this.pendingBoxes = [
                ];
                this.pendingCaptions = [
                ];
                this.pendingMetadata = [
                ];
                this.pendingBytes = 0;
                this.emittedTracks = 0;
                ss.prototype.init.call(this);
                this.push = function (e) {
                    if (e.text) {
                        return this.pendingCaptions.push(e)
                    }
                    if (e.frames) {
                        return this.pendingMetadata.push(e)
                    }
                    this.pendingTracks.push(e.track);
                    this.pendingBoxes.push(e.boxes);
                    this.pendingBytes += e.boxes.byteLength;
                    if (e.track.type === 'video') {
                        this.videoTrack = e.track
                    }
                    if (e.track.type === 'audio') {
                        this.audioTrack = e.track
                    }
                }
            }; ss.prototype = new hi; ss.prototype.flush = function (e) {
                var t = 0,
                    r = {
                        captions: [
                        ],
                        captionStreams: {
                        },
                        metadata: [
                        ],
                        info: {
                        }
                    },
                    n,
                    i,
                    a,
                    s = 0,
                    o;
                if (this.pendingTracks.length < this.numberOfTracks) {
                    if (e !== 'VideoSegmentStream' && e !== 'AudioSegmentStream') {
                        return
                    } else if (this.remuxTracks) {
                        return
                    } else if (this.pendingTracks.length === 0) {
                        this.emittedTracks++;
                        if (this.emittedTracks >= this.numberOfTracks) {
                            this.trigger('done');
                            this.emittedTracks = 0
                        }
                        return
                    }
                }
                if (this.videoTrack) {
                    s = this.videoTrack.timelineStartInfo.pts;
                    rs.forEach(function (e) {
                        r.info[e] = this.videoTrack[e]
                    }, this)
                } else if (this.audioTrack) {
                    s = this.audioTrack.timelineStartInfo.pts;
                    ts.forEach(function (e) {
                        r.info[e] = this.audioTrack[e]
                    }, this)
                }
                if (this.pendingTracks.length === 1) {
                    r.type = this.pendingTracks[0].type
                } else {
                    r.type = 'combined'
                }
                this.emittedTracks += this.pendingTracks.length;
                a = di.initSegment(this.pendingTracks);
                r.initSegment = new Uint8Array(a.byteLength);
                r.initSegment.set(a);
                r.data = new Uint8Array(this.pendingBytes);
                for (o = 0; o < this.pendingBoxes.length; o++) {
                    r.data.set(this.pendingBoxes[o], t);
                    t += this.pendingBoxes[o].byteLength
                }
                for (o = 0; o < this.pendingCaptions.length; o++) {
                    n = this.pendingCaptions[o];
                    n.startTime = n.startPts;
                    if (!this.keepOriginalTimestamps) {
                        n.startTime -= s
                    }
                    n.startTime /= 90000;
                    n.endTime = n.endPts;
                    if (!this.keepOriginalTimestamps) {
                        n.endTime -= s
                    }
                    n.endTime /= 90000;
                    r.captionStreams[n.stream] = true;
                    r.captions.push(n)
                }
                for (o = 0; o < this.pendingMetadata.length; o++) {
                    i = this.pendingMetadata[o];
                    i.cueTime = i.pts;
                    if (!this.keepOriginalTimestamps) {
                        i.cueTime -= s
                    }
                    i.cueTime /= 90000;
                    r.metadata.push(i)
                }
                r.metadata.dispatchType = this.metadataStream.dispatchType;
                this.pendingTracks.length = 0;
                this.videoTrack = null;
                this.pendingBoxes.length = 0;
                this.pendingCaptions.length = 0;
                this.pendingBytes = 0;
                this.pendingMetadata.length = 0;
                this.trigger('data', r);
                if (this.emittedTracks >= this.numberOfTracks) {
                    this.trigger('done');
                    this.emittedTracks = 0
                }
            }; as = function e(t) {
                var r = this,
                    n = true,
                    i,
                    a;
                as.prototype.init.call(this);
                t = t || {
                };
                this.baseMediaDecodeTime = t.baseMediaDecodeTime || 0;
                this.transmuxPipeline_ = {
                };
                this.setupAacPipeline = function () {
                    var e = {
                    };
                    this.transmuxPipeline_ = e;
                    e.type = 'aac';
                    e.metadataStream = new Oa.MetadataStream;
                    e.aacStream = new Ja;
                    e.audioTimestampRolloverStream = new Oa.TimestampRolloverStream('audio');
                    e.timedMetadataTimestampRolloverStream = new Oa.TimestampRolloverStream('timed-metadata');
                    e.adtsStream = new Da;
                    e.coalesceStream = new ss(t, e.metadataStream);
                    e.headOfPipeline = e.aacStream;
                    e.aacStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                    e.aacStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                    e.metadataStream.on('timestamp', function (t) {
                        e.aacStream.setTimestamp(t.timeStamp)
                    });
                    e.aacStream.on('data', function (n) {
                        if (n.type === 'timed-metadata' && !e.audioSegmentStream) {
                            a = a || {
                                timelineStartInfo: {
                                    baseMediaDecodeTime: r.baseMediaDecodeTime
                                },
                                codec: 'adts',
                                type: 'audio'
                            };
                            e.coalesceStream.numberOfTracks++;
                            e.audioSegmentStream = new is(a, t);
                            e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                        }
                    });
                    e.coalesceStream.on('data', this.trigger.bind(this, 'data'));
                    e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                };
                this.setupTsPipeline = function () {
                    var e = {
                    };
                    this.transmuxPipeline_ = e;
                    e.type = 'ts';
                    e.metadataStream = new Oa.MetadataStream;
                    e.packetStream = new Oa.TransportPacketStream;
                    e.parseStream = new Oa.TransportParseStream;
                    e.elementaryStream = new Oa.ElementaryStream;
                    e.videoTimestampRolloverStream = new Oa.TimestampRolloverStream('video');
                    e.audioTimestampRolloverStream = new Oa.TimestampRolloverStream('audio');
                    e.timedMetadataTimestampRolloverStream = new Oa.TimestampRolloverStream('timed-metadata');
                    e.adtsStream = new Da;
                    e.h264Stream = new Za;
                    e.captionStream = new Oa.CaptionStream;
                    e.coalesceStream = new ss(t, e.metadataStream);
                    e.headOfPipeline = e.packetStream;
                    e.packetStream.pipe(e.parseStream).pipe(e.elementaryStream);
                    e.elementaryStream.pipe(e.videoTimestampRolloverStream).pipe(e.h264Stream);
                    e.elementaryStream.pipe(e.audioTimestampRolloverStream).pipe(e.adtsStream);
                    e.elementaryStream.pipe(e.timedMetadataTimestampRolloverStream).pipe(e.metadataStream).pipe(e.coalesceStream);
                    e.h264Stream.pipe(e.captionStream).pipe(e.coalesceStream);
                    e.elementaryStream.on('data', function (n) {
                        var s;
                        if (n.type === 'metadata') {
                            s = n.tracks.length;
                            while (s--) {
                                if (!i && n.tracks[s].type === 'video') {
                                    i = n.tracks[s];
                                    i.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                                } else if (!a && n.tracks[s].type === 'audio') {
                                    a = n.tracks[s];
                                    a.timelineStartInfo.baseMediaDecodeTime = r.baseMediaDecodeTime
                                }
                            }
                            if (i && !e.videoSegmentStream) {
                                e.coalesceStream.numberOfTracks++;
                                e.videoSegmentStream = new ns(i, t);
                                e.videoSegmentStream.on('timelineStartInfo', function (t) {
                                    if (a) {
                                        a.timelineStartInfo = t;
                                        e.audioSegmentStream.setEarliestDts(t.dts)
                                    }
                                });
                                e.videoSegmentStream.on('processedGopsInfo', r.trigger.bind(r, 'gopInfo'));
                                e.videoSegmentStream.on('baseMediaDecodeTime', function (t) {
                                    if (a) {
                                        e.audioSegmentStream.setVideoBaseMediaDecodeTime(t)
                                    }
                                });
                                e.h264Stream.pipe(e.videoSegmentStream).pipe(e.coalesceStream)
                            }
                            if (a && !e.audioSegmentStream) {
                                e.coalesceStream.numberOfTracks++;
                                e.audioSegmentStream = new is(a, t);
                                e.adtsStream.pipe(e.audioSegmentStream).pipe(e.coalesceStream)
                            }
                        }
                    });
                    e.coalesceStream.on('data', this.trigger.bind(this, 'data'));
                    e.coalesceStream.on('done', this.trigger.bind(this, 'done'))
                };
                this.setBaseMediaDecodeTime = function (e) {
                    var r = this.transmuxPipeline_;
                    if (!t.keepOriginalTimestamps) {
                        this.baseMediaDecodeTime = e
                    }
                    if (a) {
                        a.timelineStartInfo.dts = undefined;
                        a.timelineStartInfo.pts = undefined;
                        Yi.clearDtsInfo(a);
                        if (!t.keepOriginalTimestamps) {
                            a.timelineStartInfo.baseMediaDecodeTime = e
                        }
                        if (r.audioTimestampRolloverStream) {
                            r.audioTimestampRolloverStream.discontinuity()
                        }
                    }
                    if (i) {
                        if (r.videoSegmentStream) {
                            r.videoSegmentStream.gopCache_ = [
                            ];
                            r.videoTimestampRolloverStream.discontinuity()
                        }
                        i.timelineStartInfo.dts = undefined;
                        i.timelineStartInfo.pts = undefined;
                        Yi.clearDtsInfo(i);
                        r.captionStream.reset();
                        if (!t.keepOriginalTimestamps) {
                            i.timelineStartInfo.baseMediaDecodeTime = e
                        }
                    }
                    if (r.timedMetadataTimestampRolloverStream) {
                        r.timedMetadataTimestampRolloverStream.discontinuity()
                    }
                };
                this.setAudioAppendStart = function (e) {
                    if (a) {
                        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(e)
                    }
                };
                this.alignGopsWith = function (e) {
                    if (i && this.transmuxPipeline_.videoSegmentStream) {
                        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(e)
                    }
                };
                this.push = function (e) {
                    if (n) {
                        var t = es(e);
                        if (t && this.transmuxPipeline_.type !== 'aac') {
                            this.setupAacPipeline()
                        } else if (!t && this.transmuxPipeline_.type !== 'ts') {
                            this.setupTsPipeline()
                        }
                        n = false
                    }
                    this.transmuxPipeline_.headOfPipeline.push(e)
                };
                this.flush = function () {
                    n = true;
                    this.transmuxPipeline_.headOfPipeline.flush()
                };
                this.resetCaptions = function () {
                    if (this.transmuxPipeline_.captionStream) {
                        this.transmuxPipeline_.captionStream.reset()
                    }
                }
            }; as.prototype = new hi; var us = {
                Transmuxer: as,
                VideoSegmentStream: ns,
                AudioSegmentStream: is,
                AUDIO_PROPERTIES: ts,
                VIDEO_PROPERTIES: rs
            }; var ls, cs, ds = rn.parseType, fs = function e(t) {
                return new Date(t * 1000 - 2082844800000)
            }, hs = function e(t) {
                return {
                    isLeading: (t[0] & 12) >>> 2,
                    dependsOn: t[0] & 3,
                    isDependedOn: (t[1] & 192) >>> 6,
                    hasRedundancy: (t[1] & 48) >>> 4,
                    paddingValue: (t[1] & 14) >>> 1,
                    isNonSyncSample: t[1] & 1,
                    degradationPriority: t[2] << 8 | t[3]
                }
            }, ps = function e(t) {
                var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                    n = [
                    ],
                    i,
                    a;
                for (i = 0; i + 4 < t.length; i += a) {
                    a = r.getUint32(i);
                    i += 4;
                    if (a <= 0) {
                        n.push('<span style=\'color:red;\'>MALFORMED DATA</span>');
                        continue
                    }
                    switch (t[i] & 31) {
                        case 1:
                            n.push('slice_layer_without_partitioning_rbsp');
                            break;
                        case 5:
                            n.push('slice_layer_without_partitioning_rbsp_idr');
                            break;
                        case 6:
                            n.push('sei_rbsp');
                            break;
                        case 7:
                            n.push('seq_parameter_set_rbsp');
                            break;
                        case 8:
                            n.push('pic_parameter_set_rbsp');
                            break;
                        case 9:
                            n.push('access_unit_delimiter_rbsp');
                            break;
                        default:
                            n.push('UNKNOWN NAL - ' + t[i] & 31);
                            break
                    }
                }
                return n
            },
                vs = {
                    avc1: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        return {
                            dataReferenceIndex: r.getUint16(6),
                            width: r.getUint16(24),
                            height: r.getUint16(26),
                            horizresolution: r.getUint16(28) + r.getUint16(30) / 16,
                            vertresolution: r.getUint16(32) + r.getUint16(34) / 16,
                            frameCount: r.getUint16(40),
                            depth: r.getUint16(74),
                            config: ls(t.subarray(78, t.byteLength))
                        }
                    },
                    avcC: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                configurationVersion: t[0],
                                avcProfileIndication: t[1],
                                profileCompatibility: t[2],
                                avcLevelIndication: t[3],
                                lengthSizeMinusOne: t[4] & 3,
                                sps: [
                                ],
                                pps: [
                                ]
                            },
                            i = t[5] & 31,
                            a,
                            s,
                            o,
                            u;
                        o = 6;
                        for (u = 0; u < i; u++) {
                            s = r.getUint16(o);
                            o += 2;
                            n.sps.push(new Uint8Array(t.subarray(o, o + s)));
                            o += s
                        }
                        a = t[o];
                        o++;
                        for (u = 0; u < a; u++) {
                            s = r.getUint16(o);
                            o += 2;
                            n.pps.push(new Uint8Array(t.subarray(o, o + s)));
                            o += s
                        }
                        return n
                    },
                    btrt: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        return {
                            bufferSizeDB: r.getUint32(0),
                            maxBitrate: r.getUint32(4),
                            avgBitrate: r.getUint32(8)
                        }
                    },
                    esds: function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            esId: t[6] << 8 | t[7],
                            streamPriority: t[8] & 31,
                            decoderConfig: {
                                objectProfileIndication: t[11],
                                streamType: t[12] >>> 2 & 63,
                                bufferSize: t[13] << 16 | t[14] << 8 | t[15],
                                maxBitrate: t[16] << 24 | t[17] << 16 | t[18] << 8 | t[19],
                                avgBitrate: t[20] << 24 | t[21] << 16 | t[22] << 8 | t[23],
                                decoderConfigDescriptor: {
                                    tag: t[24],
                                    length: t[25],
                                    audioObjectType: t[26] >>> 3 & 31,
                                    samplingFrequencyIndex: (t[26] & 7) << 1 | t[27] >>> 7 & 1,
                                    channelConfiguration: t[27] >>> 3 & 15
                                }
                            }
                        }
                    },
                    ftyp: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                majorBrand: ds(t.subarray(0, 4)),
                                minorVersion: r.getUint32(4),
                                compatibleBrands: [
                                ]
                            },
                            i = 8;
                        while (i < t.byteLength) {
                            n.compatibleBrands.push(ds(t.subarray(i, i + 4)));
                            i += 4
                        }
                        return n
                    },
                    dinf: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    dref: function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            dataReferences: ls(t.subarray(8))
                        }
                    },
                    hdlr: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: r.getUint8(0),
                                flags: new Uint8Array(t.subarray(1, 4)),
                                handlerType: ds(t.subarray(8, 12)),
                                name: ''
                            },
                            i = 8;
                        for (i = 24; i < t.byteLength; i++) {
                            if (t[i] === 0) {
                                i++;
                                break
                            }
                            n.name += String.fromCharCode(t[i])
                        }
                        n.name = decodeURIComponent(escape(n.name));
                        return n
                    },
                    mdat: function e(t) {
                        return {
                            byteLength: t.byteLength,
                            nals: ps(t)
                        }
                    },
                    mdhd: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = 4,
                            i,
                            a = {
                                version: r.getUint8(0),
                                flags: new Uint8Array(t.subarray(1, 4)),
                                language: ''
                            };
                        if (a.version === 1) {
                            n += 4;
                            a.creationTime = fs(r.getUint32(n));
                            n += 8;
                            a.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            a.timescale = r.getUint32(n);
                            n += 8;
                            a.duration = r.getUint32(n)
                        } else {
                            a.creationTime = fs(r.getUint32(n));
                            n += 4;
                            a.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            a.timescale = r.getUint32(n);
                            n += 4;
                            a.duration = r.getUint32(n)
                        }
                        n += 4;
                        i = r.getUint16(n);
                        a.language += String.fromCharCode((i >> 10) + 96);
                        a.language += String.fromCharCode(((i & 992) >> 5) + 96);
                        a.language += String.fromCharCode((i & 31) + 96);
                        return a
                    },
                    mdia: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    mfhd: function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            sequenceNumber: t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7]
                        }
                    },
                    minf: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    mp4a: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                dataReferenceIndex: r.getUint16(6),
                                channelcount: r.getUint16(16),
                                samplesize: r.getUint16(18),
                                samplerate: r.getUint16(24) + r.getUint16(26) / 65536
                            };
                        if (t.byteLength > 28) {
                            n.streamDescriptor = ls(t.subarray(28))[0]
                        }
                        return n
                    },
                    moof: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    moov: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    mvex: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    mvhd: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = 4,
                            i = {
                                version: r.getUint8(0),
                                flags: new Uint8Array(t.subarray(1, 4))
                            };
                        if (i.version === 1) {
                            n += 4;
                            i.creationTime = fs(r.getUint32(n));
                            n += 8;
                            i.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            i.timescale = r.getUint32(n);
                            n += 8;
                            i.duration = r.getUint32(n)
                        } else {
                            i.creationTime = fs(r.getUint32(n));
                            n += 4;
                            i.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            i.timescale = r.getUint32(n);
                            n += 4;
                            i.duration = r.getUint32(n)
                        }
                        n += 4;
                        i.rate = r.getUint16(n) + r.getUint16(n + 2) / 16;
                        n += 4;
                        i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8;
                        n += 2;
                        n += 2;
                        n += 2 * 4;
                        i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4));
                        n += 9 * 4;
                        n += 6 * 4;
                        i.nextTrackId = r.getUint32(n);
                        return i
                    },
                    pdin: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        return {
                            version: r.getUint8(0),
                            flags: new Uint8Array(t.subarray(1, 4)),
                            rate: r.getUint32(4),
                            initialDelay: r.getUint32(8)
                        }
                    },
                    sdtp: function e(t) {
                        var r = {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            samples: [
                            ]
                        },
                            n;
                        for (n = 4; n < t.byteLength; n++) {
                            r.samples.push({
                                dependsOn: (t[n] & 48) >> 4,
                                isDependedOn: (t[n] & 12) >> 2,
                                hasRedundancy: t[n] & 3
                            })
                        }
                        return r
                    },
                    sidx: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                references: [
                                ],
                                referenceId: r.getUint32(4),
                                timescale: r.getUint32(8),
                                earliestPresentationTime: r.getUint32(12),
                                firstOffset: r.getUint32(16)
                            },
                            i = r.getUint16(22),
                            a;
                        for (a = 24; i; a += 12, i--) {
                            n.references.push({
                                referenceType: (t[a] & 128) >>> 7,
                                referencedSize: r.getUint32(a) & 2147483647,
                                subsegmentDuration: r.getUint32(a + 4),
                                startsWithSap: !!(t[a + 8] & 128),
                                sapType: (t[a + 8] & 112) >>> 4,
                                sapDeltaTime: r.getUint32(a + 8) & 268435455
                            })
                        }
                        return n
                    },
                    smhd: function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            balance: t[4] + t[5] / 256
                        }
                    },
                    stbl: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    stco: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                chunkOffsets: [
                                ]
                            },
                            i = r.getUint32(4),
                            a;
                        for (a = 8; i; a += 4, i--) {
                            n.chunkOffsets.push(r.getUint32(a))
                        }
                        return n
                    },
                    stsc: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = r.getUint32(4),
                            i = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                sampleToChunks: [
                                ]
                            },
                            a;
                        for (a = 8; n; a += 12, n--) {
                            i.sampleToChunks.push({
                                firstChunk: r.getUint32(a),
                                samplesPerChunk: r.getUint32(a + 4),
                                sampleDescriptionIndex: r.getUint32(a + 8)
                            })
                        }
                        return i
                    },
                    stsd: function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            sampleDescriptions: ls(t.subarray(8))
                        }
                    },
                    stsz: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                sampleSize: r.getUint32(4),
                                entries: [
                                ]
                            },
                            i;
                        for (i = 12; i < t.byteLength; i += 4) {
                            n.entries.push(r.getUint32(i))
                        }
                        return n
                    },
                    stts: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                timeToSamples: [
                                ]
                            },
                            i = r.getUint32(4),
                            a;
                        for (a = 8; i; a += 8, i--) {
                            n.timeToSamples.push({
                                sampleCount: r.getUint32(a),
                                sampleDelta: r.getUint32(a + 4)
                            })
                        }
                        return n
                    },
                    styp: function e(t) {
                        return vs.ftyp(t)
                    },
                    tfdt: function e(t) {
                        var r = {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            baseMediaDecodeTime: t[4] << 24 | t[5] << 16 | t[6] << 8 | t[7]
                        };
                        if (r.version === 1) {
                            r.baseMediaDecodeTime *= Math.pow(2, 32);
                            r.baseMediaDecodeTime += t[8] << 24 | t[9] << 16 | t[10] << 8 | t[11]
                        }
                        return r
                    },
                    tfhd: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = {
                                version: t[0],
                                flags: new Uint8Array(t.subarray(1, 4)),
                                trackId: r.getUint32(4)
                            },
                            i = n.flags[2] & 1,
                            a = n.flags[2] & 2,
                            s = n.flags[2] & 8,
                            o = n.flags[2] & 16,
                            u = n.flags[2] & 32,
                            l = n.flags[0] & 65536,
                            c = n.flags[0] & 131072,
                            d;
                        d = 8;
                        if (i) {
                            d += 4;
                            n.baseDataOffset = r.getUint32(12);
                            d += 4
                        }
                        if (a) {
                            n.sampleDescriptionIndex = r.getUint32(d);
                            d += 4
                        }
                        if (s) {
                            n.defaultSampleDuration = r.getUint32(d);
                            d += 4
                        }
                        if (o) {
                            n.defaultSampleSize = r.getUint32(d);
                            d += 4
                        }
                        if (u) {
                            n.defaultSampleFlags = r.getUint32(d)
                        }
                        if (l) {
                            n.durationIsEmpty = true
                        }
                        if (!i && c) {
                            n.baseDataOffsetIsMoof = true
                        }
                        return n
                    },
                    tkhd: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            n = 4,
                            i = {
                                version: r.getUint8(0),
                                flags: new Uint8Array(t.subarray(1, 4))
                            };
                        if (i.version === 1) {
                            n += 4;
                            i.creationTime = fs(r.getUint32(n));
                            n += 8;
                            i.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            i.trackId = r.getUint32(n);
                            n += 4;
                            n += 8;
                            i.duration = r.getUint32(n)
                        } else {
                            i.creationTime = fs(r.getUint32(n));
                            n += 4;
                            i.modificationTime = fs(r.getUint32(n));
                            n += 4;
                            i.trackId = r.getUint32(n);
                            n += 4;
                            n += 4;
                            i.duration = r.getUint32(n)
                        }
                        n += 4;
                        n += 2 * 4;
                        i.layer = r.getUint16(n);
                        n += 2;
                        i.alternateGroup = r.getUint16(n);
                        n += 2;
                        i.volume = r.getUint8(n) + r.getUint8(n + 1) / 8;
                        n += 2;
                        n += 2;
                        i.matrix = new Uint32Array(t.subarray(n, n + 9 * 4));
                        n += 9 * 4;
                        i.width = r.getUint16(n) + r.getUint16(n + 2) / 16;
                        n += 4;
                        i.height = r.getUint16(n) + r.getUint16(n + 2) / 16;
                        return i
                    },
                    traf: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    trak: function e(t) {
                        return {
                            boxes: ls(t)
                        }
                    },
                    trex: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            trackId: r.getUint32(4),
                            defaultSampleDescriptionIndex: r.getUint32(8),
                            defaultSampleDuration: r.getUint32(12),
                            defaultSampleSize: r.getUint32(16),
                            sampleDependsOn: t[20] & 3,
                            sampleIsDependedOn: (t[21] & 192) >> 6,
                            sampleHasRedundancy: (t[21] & 48) >> 4,
                            samplePaddingValue: (t[21] & 14) >> 1,
                            sampleIsDifferenceSample: !!(t[21] & 1),
                            sampleDegradationPriority: r.getUint16(22)
                        }
                    },
                    trun: function e(t) {
                        var r = {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            samples: [
                            ]
                        },
                            n = new DataView(t.buffer, t.byteOffset, t.byteLength),
                            i = r.flags[2] & 1,
                            a = r.flags[2] & 4,
                            s = r.flags[1] & 1,
                            o = r.flags[1] & 2,
                            u = r.flags[1] & 4,
                            l = r.flags[1] & 8,
                            c = n.getUint32(4),
                            d = 8,
                            f;
                        if (i) {
                            r.dataOffset = n.getInt32(d);
                            d += 4
                        }
                        if (a && c) {
                            f = {
                                flags: hs(t.subarray(d, d + 4))
                            };
                            d += 4;
                            if (s) {
                                f.duration = n.getUint32(d);
                                d += 4
                            }
                            if (o) {
                                f.size = n.getUint32(d);
                                d += 4
                            }
                            if (l) {
                                f.compositionTimeOffset = n.getUint32(d);
                                d += 4
                            }
                            r.samples.push(f);
                            c--
                        }
                        while (c--) {
                            f = {
                            };
                            if (s) {
                                f.duration = n.getUint32(d);
                                d += 4
                            }
                            if (o) {
                                f.size = n.getUint32(d);
                                d += 4
                            }
                            if (u) {
                                f.flags = hs(t.subarray(d, d + 4));
                                d += 4
                            }
                            if (l) {
                                f.compositionTimeOffset = n.getUint32(d);
                                d += 4
                            }
                            r.samples.push(f)
                        }
                        return r
                    },
                    'url ': function e(t) {
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4))
                        }
                    },
                    vmhd: function e(t) {
                        var r = new DataView(t.buffer, t.byteOffset, t.byteLength);
                        return {
                            version: t[0],
                            flags: new Uint8Array(t.subarray(1, 4)),
                            graphicsmode: r.getUint16(4),
                            opcolor: new Uint16Array([r.getUint16(6),
                            r.getUint16(8),
                            r.getUint16(10)])
                        }
                    }
                };
            ls = function e(t) {
                var r = 0,
                    n = [
                    ],
                    i,
                    a,
                    s,
                    o,
                    u;
                var l = new ArrayBuffer(t.length);
                var c = new Uint8Array(l);
                for (var d = 0; d < t.length; ++d) {
                    c[d] = t[d]
                }
                i = new DataView(l);
                while (r < t.byteLength) {
                    a = i.getUint32(r);
                    s = ds(t.subarray(r + 4, r + 8));
                    o = a > 1 ? r + a : t.byteLength;
                    u = (vs[s] || function (e) {
                        return {
                            data: e
                        }
                    })(t.subarray(r + 8, o));
                    u.size = a;
                    u.type = s;
                    n.push(u);
                    r = o
                }
                return n
            };
            cs = function e(t, r) {
                var n;
                r = r || 0;
                n = new Array(r * 2 + 1).join(' ');
                return t.map(function (e, t) {
                    return n + e.type + '\n' + Object.keys(e).filter(function (e) {
                        return e !== 'type' && e !== 'boxes'
                    }).map(function (t) {
                        var r = n + '  ' + t + ': ',
                            i = e[t];
                        if (i instanceof Uint8Array || i instanceof Uint32Array) {
                            var a = Array.prototype.slice.call(new Uint8Array(i.buffer, i.byteOffset, i.byteLength)).map(function (e) {
                                return ' ' + ('00' + e.toString(16)).slice(- 2)
                            }).join('').match(/.{1,24}/g);
                            if (!a) {
                                return r + '<>'
                            }
                            if (a.length === 1) {
                                return r + '<' + a.join('').slice(1) + '>'
                            }
                            return r + '<\n' + a.map(function (e) {
                                return n + '  ' + e
                            }).join('\n') + '\n' + n + '  >'
                        }
                        return r + JSON.stringify(i, null, 2).split('\n').map(function (e, t) {
                            if (t === 0) {
                                return e
                            }
                            return n + '  ' + e
                        }).join('\n')
                    }).join('\n') + (e.boxes ? '\n' + cs(e.boxes, r + 1) : '')
                }).join('\n')
            };
            var ms = {
                inspect: ls,
                textify: cs,
                parseTfdt: vs.tfdt,
                parseHdlr: vs.hdlr,
                parseTfhd: vs.tfhd,
                parseTrun: vs.trun
            };
            var gs = ea.discardEmulationPreventionBytes;
            var ys = ua.CaptionStream;
            var _s = function e(t, r) {
                var n = t;
                for (var i = 0; i < r.length; i++) {
                    var a = r[i];
                    if (n < a.size) {
                        return a
                    }
                    n -= a.size
                }
                return null
            };
            var bs = function e(t, r, n) {
                var i = new DataView(t.buffer, t.byteOffset, t.byteLength),
                    a = [
                    ],
                    s,
                    o,
                    u,
                    l;
                for (o = 0; o + 4 < t.length; o += u) {
                    u = i.getUint32(o);
                    o += 4;
                    if (u <= 0) {
                        continue
                    }
                    switch (t[o] & 31) {
                        case 6:
                            var c = t.subarray(o + 1, o + 1 + u);
                            var d = _s(o, r);
                            s = {
                                nalUnitType: 'sei_rbsp',
                                size: u,
                                data: c,
                                escapedRBSP: gs(c),
                                trackId: n
                            };
                            if (d) {
                                s.pts = d.pts;
                                s.dts = d.dts;
                                l = d
                            } else {
                                s.pts = l.pts;
                                s.dts = l.dts
                            }
                            a.push(s);
                            break;
                        default:
                            break
                    }
                }
                return a
            };
            var Ts = function e(t, r, n) {
                var i = r;
                var a = n.defaultSampleDuration || 0;
                var s = n.defaultSampleSize || 0;
                var o = n.trackId;
                var u = [
                ];
                t.forEach(function (e) {
                    var t = ms.parseTrun(e);
                    var r = t.samples;
                    r.forEach(function (e) {
                        if (e.duration === undefined) {
                            e.duration = a
                        }
                        if (e.size === undefined) {
                            e.size = s
                        }
                        e.trackId = o;
                        e.dts = i;
                        if (e.compositionTimeOffset === undefined) {
                            e.compositionTimeOffset = 0
                        }
                        e.pts = i + e.compositionTimeOffset;
                        i += e.duration
                    });
                    u = u.concat(r)
                });
                return u
            };
            var As = function e(t, r) {
                var n = rn.findBox(t, [
                    'moof',
                    'traf'
                ]);
                var i = rn.findBox(t, [
                    'mdat'
                ]);
                var a = {
                };
                var s = [
                ];
                i.forEach(function (e, t) {
                    var r = n[t];
                    s.push({
                        mdat: e,
                        traf: r
                    })
                });
                s.forEach(function (e) {
                    var t = e.mdat;
                    var n = e.traf;
                    var i = rn.findBox(n, [
                        'tfhd'
                    ]);
                    var s = ms.parseTfhd(i[0]);
                    var o = s.trackId;
                    var u = rn.findBox(n, [
                        'tfdt'
                    ]);
                    var l = u.length > 0 ? ms.parseTfdt(u[0]).baseMediaDecodeTime : 0;
                    var c = rn.findBox(n, [
                        'trun'
                    ]);
                    var d;
                    var f;
                    if (r === o && c.length > 0) {
                        d = Ts(c, l, s);
                        f = bs(t, d, o);
                        if (!a[o]) {
                            a[o] = [
                            ]
                        }
                        a[o] = a[o].concat(f)
                    }
                });
                return a
            };
            var Ss = function e(t, r, n) {
                var i;
                if (!r) {
                    return null
                }
                i = As(t, r);
                return {
                    seiNals: i[r],
                    timescale: n
                }
            };
            var ks = function e() {
                var t = false;
                var r;
                var n;
                var i;
                var a;
                var s;
                this.isInitialized = function () {
                    return t
                };
                this.init = function () {
                    r = new ys;
                    t = true;
                    r.on('data', function (e) {
                        e.startTime = e.startPts / a;
                        e.endTime = e.endPts / a;
                        s.captions.push(e);
                        s.captionStreams[e.stream] = true
                    })
                };
                this.isNewInit = function (e, t) {
                    if (e && e.length === 0 || t && typeof t === 'object' && Object.keys(t).length === 0) {
                        return false
                    }
                    return i !== e[0] || a !== t[i]
                };
                this.parse = function (e, t, r) {
                    var o;
                    if (!this.isInitialized()) {
                        return null
                    } else if (!t || !r) {
                        return null
                    } else if (this.isNewInit(t, r)) {
                        i = t[0];
                        a = r[i]
                    } else if (!i || !a) {
                        n.push(e);
                        return null
                    }
                    while (n.length > 0) {
                        var u = n.shift();
                        this.parse(u, t, r)
                    }
                    o = Ss(e, i, a);
                    if (o === null || !o.seiNals) {
                        return null
                    }
                    this.pushNals(o.seiNals);
                    this.flushStream();
                    return s
                };
                this.pushNals = function (e) {
                    if (!this.isInitialized() || !e || e.length === 0) {
                        return null
                    }
                    e.forEach(function (e) {
                        r.push(e)
                    })
                };
                this.flushStream = function () {
                    if (!this.isInitialized()) {
                        return null
                    }
                    r.flush()
                };
                this.clearParsedCaptions = function () {
                    s.captions = [
                    ];
                    s.captionStreams = {
                    }
                };
                this.resetCaptionStream = function () {
                    if (!this.isInitialized()) {
                        return null
                    }
                    r.reset()
                };
                this.clearAllCaptions = function () {
                    this.clearParsedCaptions();
                    this.resetCaptionStream()
                };
                this.reset = function () {
                    n = [
                    ];
                    i = null;
                    a = null;
                    if (!s) {
                        s = {
                            captions: [
                            ],
                            captionStreams: {
                            }
                        }
                    } else {
                        this.clearParsedCaptions()
                    }
                    this.resetCaptionStream()
                };
                this.reset()
            };
            var ws = ks;
            var Cs = {
                generator: di,
                probe: rn,
                Transmuxer: us.Transmuxer,
                AudioSegmentStream: us.AudioSegmentStream,
                VideoSegmentStream: us.VideoSegmentStream,
                CaptionParser: ws
            };
            var Es = Cs.CaptionParser;
            var Is = 500;
            var Ps = function e(t, r, n) {
                if (!t || !r) {
                    return false
                }
                var i = t.segments;
                var a = n === i.length;
                return t.endList && r.readyState === 'open' && a
            };
            var Os = function e(t) {
                return typeof t === 'number' && isFinite(t)
            };
            var xs = function e(t, r, n) {
                if (t !== 'main' || !r || !n) {
                    return null
                }
                if (!n.containsAudio && !n.containsVideo) {
                    return 'Neither audio nor video found in segment.'
                }
                if (r.containsVideo && !n.containsVideo) {
                    return 'Only audio found in segment when we expected video.' + ' We can\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.'
                }
                if (!r.containsVideo && n.containsVideo) {
                    return 'Video found in segment when we expected only audio.' + ' We can\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.'
                }
                return null
            };
            var Ls = function e(t, r, n) {
                var i = void 0;
                if (t.length && t.start(0) > 0 && t.start(0) < r) {
                    i = t.start(0)
                } else {
                    i = r - 30
                }
                return Math.min(i, r - n)
            };
            var Ds = function e(t) {
                var r = t.segment,
                    n = r.start,
                    i = r.end,
                    a = t.playlist,
                    s = a.mediaSequence,
                    o = a.id,
                    u = a.segments,
                    l = u === undefined ? [
                    ] : u,
                    c = t.mediaIndex,
                    d = t.timeline;
                return ['appending [' + c + '] of [' + s + ', ' + (s + l.length) + '] from playlist [' + o + ']',
                '[' + n + ' => ' + i + '] in timeline [' + d + ']'].join(' ')
            };
            var Rs = function (e) {
                C(r, e);
                function r(e) {
                    S(this, r);
                    var t = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
                    if (!e) {
                        throw new TypeError('Initialization settings are required')
                    }
                    if (typeof e.currentTime !== 'function') {
                        throw new TypeError('No currentTime getter specified')
                    }
                    if (!e.mediaSource) {
                        throw new TypeError('No MediaSource specified')
                    }
                    t.bandwidth = e.bandwidth;
                    t.throughput = {
                        rate: 0,
                        count: 0
                    };
                    t.roundTrip = NaN;
                    t.resetStats_();
                    t.mediaIndex = null;
                    t.hasPlayed_ = e.hasPlayed;
                    t.currentTime_ = e.currentTime;
                    t.seekable_ = e.seekable;
                    t.seeking_ = e.seeking;
                    t.duration_ = e.duration;
                    t.mediaSource_ = e.mediaSource;
                    t.hls_ = e.hls;
                    t.loaderType_ = e.loaderType;
                    t.startingMedia_ = void 0;
                    t.segmentMetadataTrack_ = e.segmentMetadataTrack;
                    t.goalBufferLength_ = e.goalBufferLength;
                    t.sourceType_ = e.sourceType;
                    t.inbandTextTracks_ = e.inbandTextTracks;
                    t.state_ = 'INIT';
                    t.checkBufferTimeout_ = null;
                    t.error_ = void 0;
                    t.currentTimeline_ = - 1;
                    t.pendingSegment_ = null;
                    t.mimeType_ = null;
                    t.sourceUpdater_ = null;
                    t.xhrOptions_ = null;
                    t.activeInitSegmentId_ = null;
                    t.initSegments_ = {
                    };
                    t.captionParser_ = new Es;
                    t.decrypter_ = e.decrypter;
                    t.syncController_ = e.syncController;
                    t.syncPoint_ = {
                        segmentIndex: 0,
                        time: 0
                    };
                    t.syncController_.on('syncinfoupdate', function () {
                        return t.trigger('syncinfoupdate')
                    });
                    t.mediaSource_.addEventListener('sourceopen', function () {
                        return t.ended_ = false
                    });
                    t.fetchAtBuffer_ = false;
                    t.logger_ = zr('SegmentLoader[' + t.loaderType_ + ']');
                    Object.defineProperty(t, 'state', {
                        get: function e() {
                            return this.state_
                        },
                        set: function e(t) {
                            if (t !== this.state_) {
                                this.logger_(this.state_ + ' -> ' + t);
                                this.state_ = t
                            }
                        }
                    });
                    return t
                }
                k(r, [
                    {
                        key: 'resetStats_',
                        value: function e() {
                            this.mediaBytesTransferred = 0;
                            this.mediaRequests = 0;
                            this.mediaRequestsAborted = 0;
                            this.mediaRequestsTimedout = 0;
                            this.mediaRequestsErrored = 0;
                            this.mediaTransferDuration = 0;
                            this.mediaSecondsLoaded = 0
                        }
                    },
                    {
                        key: 'dispose',
                        value: function e() {
                            this.state = 'DISPOSED';
                            this.pause();
                            this.abort_();
                            if (this.sourceUpdater_) {
                                this.sourceUpdater_.dispose()
                            }
                            this.resetStats_();
                            this.captionParser_.reset()
                        }
                    },
                    {
                        key: 'abort',
                        value: function e() {
                            if (this.state !== 'WAITING') {
                                if (this.pendingSegment_) {
                                    this.pendingSegment_ = null
                                }
                                return
                            }
                            this.abort_();
                            this.state = 'READY';
                            if (!this.paused()) {
                                this.monitorBuffer_()
                            }
                        }
                    },
                    {
                        key: 'abort_',
                        value: function e() {
                            if (this.pendingSegment_) {
                                this.pendingSegment_.abortRequests()
                            }
                            this.pendingSegment_ = null
                        }
                    },
                    {
                        key: 'error',
                        value: function e(t) {
                            if (typeof t !== 'undefined') {
                                this.error_ = t
                            }
                            this.pendingSegment_ = null;
                            return this.error_
                        }
                    },
                    {
                        key: 'endOfStream',
                        value: function e() {
                            this.ended_ = true;
                            this.pause();
                            this.trigger('ended')
                        }
                    },
                    {
                        key: 'buffered_',
                        value: function e() {
                            if (!this.sourceUpdater_) {
                                return t.createTimeRanges()
                            }
                            return this.sourceUpdater_.buffered()
                        }
                    },
                    {
                        key: 'initSegment',
                        value: function e(t) {
                            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                            if (!t) {
                                return null
                            }
                            var n = Oe(t);
                            var i = this.initSegments_[n];
                            if (r && !i && t.bytes) {
                                this.initSegments_[n] = i = {
                                    resolvedUri: t.resolvedUri,
                                    byterange: t.byterange,
                                    bytes: t.bytes,
                                    timescales: t.timescales,
                                    videoTrackIds: t.videoTrackIds
                                }
                            }
                            return i || t
                        }
                    },
                    {
                        key: 'couldBeginLoading_',
                        value: function e() {
                            return this.playlist_ && (this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused()
                        }
                    },
                    {
                        key: 'load',
                        value: function e() {
                            this.monitorBuffer_();
                            if (!this.playlist_) {
                                return
                            }
                            this.syncController_.setDateTimeMapping(this.playlist_);
                            if (this.state === 'INIT' && this.couldBeginLoading_()) {
                                return this.init_()
                            }
                            if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {
                                return
                            }
                            this.state = 'READY'
                        }
                    },
                    {
                        key: 'init_',
                        value: function e() {
                            this.state = 'READY';
                            this.sourceUpdater_ = new Wr(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);
                            this.resetEverything();
                            return this.monitorBuffer_()
                        }
                    },
                    {
                        key: 'playlist',
                        value: function e(t) {
                            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                            };
                            if (!t) {
                                return
                            }
                            var n = this.playlist_;
                            var i = this.pendingSegment_;
                            this.playlist_ = t;
                            this.xhrOptions_ = r;
                            if (!this.hasPlayed_()) {
                                t.syncInfo = {
                                    mediaSequence: t.mediaSequence,
                                    time: 0
                                }
                            }
                            var a = n ? n.id : null;
                            this.logger_('playlist update [' + a + ' => ' + t.id + ']');
                            this.trigger('syncinfoupdate');
                            if (this.state === 'INIT' && this.couldBeginLoading_()) {
                                return this.init_()
                            }
                            if (!n || n.uri !== t.uri) {
                                if (this.mediaIndex !== null) {
                                    this.resyncLoader()
                                }
                                return
                            }
                            var s = t.mediaSequence - n.mediaSequence;
                            this.logger_('live window shift [' + s + ']');
                            if (this.mediaIndex !== null) {
                                this.mediaIndex -= s
                            }
                            if (i) {
                                i.mediaIndex -= s;
                                if (i.mediaIndex >= 0) {
                                    i.segment = t.segments[i.mediaIndex]
                                }
                            }
                            this.syncController_.saveExpiredSegmentInfo(n, t)
                        }
                    },
                    {
                        key: 'pause',
                        value: function e() {
                            if (this.checkBufferTimeout_) {
                                f.clearTimeout(this.checkBufferTimeout_);
                                this.checkBufferTimeout_ = null
                            }
                        }
                    },
                    {
                        key: 'paused',
                        value: function e() {
                            return this.checkBufferTimeout_ === null
                        }
                    },
                    {
                        key: 'mimeType',
                        value: function e(t, r) {
                            if (this.mimeType_) {
                                return
                            }
                            this.mimeType_ = t;
                            this.sourceBufferEmitter_ = r;
                            if (this.state === 'INIT' && this.couldBeginLoading_()) {
                                this.init_()
                            }
                        }
                    },
                    {
                        key: 'resetEverything',
                        value: function e(t) {
                            this.ended_ = false;
                            this.resetLoader();
                            this.remove(0, this.duration_(), t);
                            this.captionParser_.clearAllCaptions();
                            this.trigger('reseteverything')
                        }
                    },
                    {
                        key: 'resetLoader',
                        value: function e() {
                            this.fetchAtBuffer_ = false;
                            this.resyncLoader()
                        }
                    },
                    {
                        key: 'resyncLoader',
                        value: function e() {
                            this.mediaIndex = null;
                            this.syncPoint_ = null;
                            this.abort()
                        }
                    },
                    {
                        key: 'remove',
                        value: function e(t, r, n) {
                            if (this.sourceUpdater_) {
                                this.sourceUpdater_.remove(t, r, n)
                            }
                            Ze(t, r, this.segmentMetadataTrack_);
                            if (this.inbandTextTracks_) {
                                for (var i in this.inbandTextTracks_) {
                                    Ze(t, r, this.inbandTextTracks_[i])
                                }
                            }
                        }
                    },
                    {
                        key: 'monitorBuffer_',
                        value: function e() {
                            if (this.checkBufferTimeout_) {
                                f.clearTimeout(this.checkBufferTimeout_)
                            }
                            this.checkBufferTimeout_ = f.setTimeout(this.monitorBufferTick_.bind(this), 1)
                        }
                    },
                    {
                        key: 'monitorBufferTick_',
                        value: function e() {
                            if (this.state === 'READY') {
                                this.fillBuffer_()
                            }
                            if (this.checkBufferTimeout_) {
                                f.clearTimeout(this.checkBufferTimeout_)
                            }
                            this.checkBufferTimeout_ = f.setTimeout(this.monitorBufferTick_.bind(this), Is)
                        }
                    },
                    {
                        key: 'fillBuffer_',
                        value: function e() {
                            if (this.sourceUpdater_.updating()) {
                                return
                            }
                            if (!this.syncPoint_) {
                                this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                            }
                            var t = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                            if (!t) {
                                return
                            }
                            var r = Ps(this.playlist_, this.mediaSource_, t.mediaIndex);
                            if (r) {
                                this.endOfStream();
                                return
                            }
                            if (t.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {
                                return
                            }
                            if (t.timeline !== this.currentTimeline_ || t.startOfSegment !== null && t.startOfSegment < this.sourceUpdater_.timestampOffset()) {
                                this.syncController_.reset();
                                t.timestampOffset = t.startOfSegment;
                                this.captionParser_.clearAllCaptions()
                            }
                            this.loadSegment_(t)
                        }
                    },
                    {
                        key: 'checkBuffer_',
                        value: function e(t, r, n, i, a, s) {
                            var o = 0;
                            var u = void 0;
                            if (t.length) {
                                o = t.end(t.length - 1)
                            }
                            var l = Math.max(0, o - a);
                            if (!r.segments.length) {
                                return null
                            }
                            if (l >= this.goalBufferLength_()) {
                                return null
                            }
                            if (!i && l >= 1) {
                                return null
                            }
                            if (s === null) {
                                n = this.getSyncSegmentCandidate_(r);
                                return this.generateSegmentInfo_(r, n, null, true)
                            }
                            if (n !== null) {
                                var c = r.segments[n];
                                if (c && c.end) {
                                    u = c.end
                                } else {
                                    u = o
                                }
                                return this.generateSegmentInfo_(r, n + 1, u, false)
                            }
                            if (this.fetchAtBuffer_) {
                                var d = le.getMediaInfoForTime(r, o, s.segmentIndex, s.time);
                                n = d.mediaIndex;
                                u = d.startTime
                            } else {
                                var f = le.getMediaInfoForTime(r, a, s.segmentIndex, s.time);
                                n = f.mediaIndex;
                                u = f.startTime
                            }
                            return this.generateSegmentInfo_(r, n, u, false)
                        }
                    },
                    {
                        key: 'getSyncSegmentCandidate_',
                        value: function e(t) {
                            var r = this;
                            if (this.currentTimeline_ === - 1) {
                                return 0
                            }
                            var n = t.segments.map(function (e, t) {
                                return {
                                    timeline: e.timeline,
                                    segmentIndex: t
                                }
                            }).filter(function (e) {
                                return e.timeline === r.currentTimeline_
                            });
                            if (n.length) {
                                return n[Math.min(n.length - 1, 1)].segmentIndex
                            }
                            return Math.max(t.segments.length - 1, 0)
                        }
                    },
                    {
                        key: 'generateSegmentInfo_',
                        value: function e(t, r, n, i) {
                            if (r < 0 || r >= t.segments.length) {
                                return null
                            }
                            var a = t.segments[r];
                            return {
                                requestId: 'segment-loader-' + Math.random(),
                                uri: a.resolvedUri,
                                mediaIndex: r,
                                isSyncRequest: i,
                                startOfSegment: n,
                                playlist: t,
                                bytes: null,
                                encryptedBytes: null,
                                timestampOffset: null,
                                timeline: a.timeline,
                                duration: a.duration,
                                segment: a
                            }
                        }
                    },
                    {
                        key: 'abortRequestEarly_',
                        value: function e(t) {
                            if (this.hls_.tech_.paused() || !this.xhrOptions_.timeout || !this.playlist_.attributes.BANDWIDTH) {
                                return false
                            }
                            if (Date.now() - (t.firstBytesReceivedAt || Date.now()) < 1000) {
                                return false
                            }
                            var r = this.currentTime_();
                            var n = t.bandwidth;
                            var i = this.pendingSegment_.duration;
                            var a = le.estimateSegmentRequestTime(i, n, this.playlist_, t.bytesReceived);
                            var s = Ke(this.buffered_(), r, this.hls_.tech_.playbackRate()) - 1;
                            if (a <= s) {
                                return false
                            }
                            var o = kn({
                                master: this.hls_.playlists.master,
                                currentTime: r,
                                bandwidth: n,
                                duration: this.duration_(),
                                segmentDuration: i,
                                timeUntilRebuffer: s,
                                currentTimeline: this.currentTimeline_,
                                syncController: this.syncController_
                            });
                            if (!o) {
                                return
                            }
                            var u = a - s;
                            var l = u - o.rebufferingImpact;
                            var c = 0.5;
                            if (s <= He) {
                                c = 1
                            }
                            if (!o.playlist || o.playlist.uri === this.playlist_.uri || l < c) {
                                return false
                            }
                            this.bandwidth = o.playlist.attributes.BANDWIDTH * Yr.BANDWIDTH_VARIANCE + 1;
                            this.abort();
                            this.trigger('earlyabort');
                            return true
                        }
                    },
                    {
                        key: 'handleProgress_',
                        value: function e(t, r) {
                            if (!this.pendingSegment_ || r.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(r.stats)) {
                                return
                            }
                            this.trigger('progress')
                        }
                    },
                    {
                        key: 'loadSegment_',
                        value: function e(t) {
                            this.state = 'WAITING';
                            this.pendingSegment_ = t;
                            this.trimBackBuffer_(t);
                            t.abortRequests = gn(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(t), this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this))
                        }
                    },
                    {
                        key: 'trimBackBuffer_',
                        value: function e(t) {
                            var r = Ls(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10);
                            if (r > 0) {
                                this.remove(0, r)
                            }
                        }
                    },
                    {
                        key: 'createSimplifiedSegmentObj_',
                        value: function e(t) {
                            var r = t.segment;
                            var n = {
                                resolvedUri: r.resolvedUri,
                                byterange: r.byterange,
                                requestId: t.requestId
                            };
                            if (r.key) {
                                var i = r.key.iv || new Uint32Array([0,
                                    0,
                                    0,
                                    t.mediaIndex + t.playlist.mediaSequence]);
                                n.key = {
                                    resolvedUri: r.key.resolvedUri,
                                    iv: i
                                }
                            }
                            if (r.map) {
                                n.map = this.initSegment(r.map)
                            }
                            return n
                        }
                    },
                    {
                        key: 'segmentRequestFinished_',
                        value: function e(t, r) {
                            this.mediaRequests += 1;
                            if (r.stats) {
                                this.mediaBytesTransferred += r.stats.bytesReceived;
                                this.mediaTransferDuration += r.stats.roundTripTime
                            }
                            if (!this.pendingSegment_) {
                                this.mediaRequestsAborted += 1;
                                return
                            }
                            if (r.requestId !== this.pendingSegment_.requestId) {
                                return
                            }
                            if (t) {
                                this.pendingSegment_ = null;
                                this.state = 'READY';
                                if (t.code === nn.ABORTED) {
                                    this.mediaRequestsAborted += 1;
                                    return
                                }
                                this.pause();
                                if (t.code === nn.TIMEOUT) {
                                    this.mediaRequestsTimedout += 1;
                                    this.bandwidth = 1;
                                    this.roundTrip = NaN;
                                    this.trigger('bandwidthupdate');
                                    return
                                }
                                this.mediaRequestsErrored += 1;
                                this.error(t);
                                this.trigger('error');
                                return
                            }
                            this.bandwidth = r.stats.bandwidth;
                            this.roundTrip = r.stats.roundTripTime;
                            if (r.map) {
                                r.map = this.initSegment(r.map, true)
                            }
                            this.processSegmentResponse_(r)
                        }
                    },
                    {
                        key: 'processSegmentResponse_',
                        value: function e(t) {
                            var r = this.pendingSegment_;
                            r.bytes = t.bytes;
                            if (t.map) {
                                r.segment.map.bytes = t.map.bytes
                            }
                            r.endOfAllRequests = t.endOfAllRequests;
                            if (t.fmp4Captions) {
                                Cn(this.inbandTextTracks_, this.hls_.tech_, t.captionStreams);
                                En({
                                    inbandTextTracks: this.inbandTextTracks_,
                                    captionArray: t.fmp4Captions,
                                    timestampOffset: 0
                                });
                                this.captionParser_.clearParsedCaptions()
                            }
                            this.handleSegment_()
                        }
                    },
                    {
                        key: 'handleSegment_',
                        value: function e() {
                            var t = this;
                            if (!this.pendingSegment_) {
                                this.state = 'READY';
                                return
                            }
                            var r = this.pendingSegment_;
                            var n = r.segment;
                            var i = this.syncController_.probeSegmentInfo(r);
                            if (typeof this.startingMedia_ === 'undefined' && i && (i.containsAudio || i.containsVideo)) {
                                this.startingMedia_ = {
                                    containsAudio: i.containsAudio,
                                    containsVideo: i.containsVideo
                                }
                            }
                            var a = xs(this.loaderType_, this.startingMedia_, i);
                            if (a) {
                                this.error({
                                    message: a,
                                    blacklistDuration: Infinity
                                });
                                this.trigger('error');
                                return
                            }
                            if (r.isSyncRequest) {
                                this.trigger('syncinfoupdate');
                                this.pendingSegment_ = null;
                                this.state = 'READY';
                                return
                            }
                            if (r.timestampOffset !== null && r.timestampOffset !== this.sourceUpdater_.timestampOffset()) {
                                this.sourceUpdater_.timestampOffset(r.timestampOffset);
                                this.trigger('timestampoffset')
                            }
                            var s = this.syncController_.mappingForTimeline(r.timeline);
                            if (s !== null) {
                                this.trigger({
                                    type: 'segmenttimemapping',
                                    mapping: s
                                })
                            }
                            this.state = 'APPENDING';
                            if (n.map) {
                                var o = Oe(n.map);
                                if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== o) {
                                    var u = this.initSegment(n.map);
                                    this.sourceUpdater_.appendBuffer(u.bytes, function () {
                                        t.activeInitSegmentId_ = o
                                    })
                                }
                            }
                            r.byteLength = r.bytes.byteLength;
                            if (typeof n.start === 'number' && typeof n.end === 'number') {
                                this.mediaSecondsLoaded += n.end - n.start
                            } else {
                                this.mediaSecondsLoaded += n.duration
                            }
                            this.logger_(Ds(r));
                            this.sourceUpdater_.appendBuffer(r.bytes, this.handleUpdateEnd_.bind(this))
                        }
                    },
                    {
                        key: 'handleUpdateEnd_',
                        value: function e() {
                            if (!this.pendingSegment_) {
                                this.state = 'READY';
                                if (!this.paused()) {
                                    this.monitorBuffer_()
                                }
                                return
                            }
                            var t = this.pendingSegment_;
                            var r = t.segment;
                            var n = this.mediaIndex !== null;
                            this.pendingSegment_ = null;
                            this.recordThroughput_(t);
                            this.addSegmentMetadataCue_(t);
                            this.state = 'READY';
                            this.mediaIndex = t.mediaIndex;
                            this.fetchAtBuffer_ = true;
                            this.currentTimeline_ = t.timeline;
                            this.trigger('syncinfoupdate');
                            if (r.end && this.currentTime_() - r.end > t.playlist.targetDuration * 3) {
                                this.resetEverything();
                                return
                            }
                            if (n) {
                                this.trigger('bandwidthupdate')
                            }
                            this.trigger('progress');
                            var i = Ps(t.playlist, this.mediaSource_, t.mediaIndex + 1);
                            if (i) {
                                this.endOfStream()
                            }
                            if (!this.paused()) {
                                this.monitorBuffer_()
                            }
                        }
                    },
                    {
                        key: 'recordThroughput_',
                        value: function e(t) {
                            var r = this.throughput.rate;
                            var n = Date.now() - t.endOfAllRequests + 1;
                            var i = Math.floor(t.byteLength / n * 8 * 1000);
                            this.throughput.rate += (i - r) / ++this.throughput.count
                        }
                    },
                    {
                        key: 'addSegmentMetadataCue_',
                        value: function e(t) {
                            if (!this.segmentMetadataTrack_) {
                                return
                            }
                            var r = t.segment;
                            var n = r.start;
                            var i = r.end;
                            if (!Os(n) || !Os(i)) {
                                return
                            }
                            Ze(n, i, this.segmentMetadataTrack_);
                            var a = f.WebKitDataCue || f.VTTCue;
                            var s = {
                                dateTimeObject: r.dateTimeObject,
                                dateTimeString: r.dateTimeString,
                                bandwidth: t.playlist.attributes.BANDWIDTH,
                                resolution: t.playlist.attributes.RESOLUTION,
                                codecs: t.playlist.attributes.CODECS,
                                byteLength: t.byteLength,
                                uri: t.uri,
                                timeline: t.timeline,
                                playlist: t.playlist.uri,
                                start: n,
                                end: i
                            };
                            var o = JSON.stringify(s);
                            var u = new a(n, i, o);
                            u.value = s;
                            this.segmentMetadataTrack_.addCue(u)
                        }
                    }
                ]);
                return r
            }(t.EventTarget);
            var Ms = function e(t) {
                return decodeURIComponent(escape(String.fromCharCode.apply(null, t)))
            };
            var js = new Uint8Array('\n\n'.split('').map(function (e) {
                return e.charCodeAt(0)
            }));
            var Us = function (e) {
                C(r, e);
                function r(e) {
                    var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                    };
                    S(this, r);
                    var n = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, e, t));
                    n.mediaSource_ = null;
                    n.subtitlesTrack_ = null;
                    return n
                }
                k(r, [
                    {
                        key: 'buffered_',
                        value: function e() {
                            if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {
                                return t.createTimeRanges()
                            }
                            var r = this.subtitlesTrack_.cues;
                            var n = r[0].startTime;
                            var i = r[r.length - 1].startTime;
                            return t.createTimeRanges([[n,
                                i]])
                        }
                    },
                    {
                        key: 'initSegment',
                        value: function e(t) {
                            var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
                            if (!t) {
                                return null
                            }
                            var n = Oe(t);
                            var i = this.initSegments_[n];
                            if (r && !i && t.bytes) {
                                var a = js.byteLength + t.bytes.byteLength;
                                var s = new Uint8Array(a);
                                s.set(t.bytes);
                                s.set(js, t.bytes.byteLength);
                                this.initSegments_[n] = i = {
                                    resolvedUri: t.resolvedUri,
                                    byterange: t.byterange,
                                    bytes: s
                                }
                            }
                            return i || t
                        }
                    },
                    {
                        key: 'couldBeginLoading_',
                        value: function e() {
                            return this.playlist_ && this.subtitlesTrack_ && !this.paused()
                        }
                    },
                    {
                        key: 'init_',
                        value: function e() {
                            this.state = 'READY';
                            this.resetEverything();
                            return this.monitorBuffer_()
                        }
                    },
                    {
                        key: 'track',
                        value: function e(t) {
                            if (typeof t === 'undefined') {
                                return this.subtitlesTrack_
                            }
                            this.subtitlesTrack_ = t;
                            if (this.state === 'INIT' && this.couldBeginLoading_()) {
                                this.init_()
                            }
                            return this.subtitlesTrack_
                        }
                    },
                    {
                        key: 'remove',
                        value: function e(t, r) {
                            Ze(t, r, this.subtitlesTrack_)
                        }
                    },
                    {
                        key: 'fillBuffer_',
                        value: function e() {
                            var t = this;
                            if (!this.syncPoint_) {
                                this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_())
                            }
                            var r = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);
                            r = this.skipEmptySegments_(r);
                            if (!r) {
                                return
                            }
                            if (this.syncController_.timestampOffsetForTimeline(r.timeline) === null) {
                                var n = function e() {
                                    t.state = 'READY';
                                    if (!t.paused()) {
                                        t.monitorBuffer_()
                                    }
                                };
                                this.syncController_.one('timestampoffset', n);
                                this.state = 'WAITING_ON_TIMELINE';
                                return
                            }
                            this.loadSegment_(r)
                        }
                    },
                    {
                        key: 'skipEmptySegments_',
                        value: function e(t) {
                            while (t && t.segment.empty) {
                                t = this.generateSegmentInfo_(t.playlist, t.mediaIndex + 1, t.startOfSegment + t.duration, t.isSyncRequest)
                            }
                            return t
                        }
                    },
                    {
                        key: 'handleSegment_',
                        value: function e() {
                            var t = this;
                            if (!this.pendingSegment_ || !this.subtitlesTrack_) {
                                this.state = 'READY';
                                return
                            }
                            this.state = 'APPENDING';
                            var r = this.pendingSegment_;
                            var n = r.segment;
                            if (typeof f.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {
                                var i = function e() {
                                    t.handleSegment_()
                                };
                                this.state = 'WAITING_ON_VTTJS';
                                this.subtitlesTrack_.tech_.one('vttjsloaded', i);
                                this.subtitlesTrack_.tech_.one('vttjserror', function () {
                                    t.subtitlesTrack_.tech_.off('vttjsloaded', i);
                                    t.error({
                                        message: 'Error loading vtt.js'
                                    });
                                    t.state = 'READY';
                                    t.pause();
                                    t.trigger('error')
                                });
                                return
                            }
                            n.requested = true;
                            try {
                                this.parseVTTCues_(r)
                            } catch (e) {
                                this.error({
                                    message: e.message
                                });
                                this.state = 'READY';
                                this.pause();
                                return this.trigger('error')
                            }
                            this.updateTimeMapping_(r, this.syncController_.timelines[r.timeline], this.playlist_);
                            if (r.isSyncRequest) {
                                this.trigger('syncinfoupdate');
                                this.pendingSegment_ = null;
                                this.state = 'READY';
                                return
                            }
                            r.byteLength = r.bytes.byteLength;
                            this.mediaSecondsLoaded += n.duration;
                            if (r.cues.length) {
                                this.remove(r.cues[0].endTime, r.cues[r.cues.length - 1].endTime)
                            }
                            r.cues.forEach(function (e) {
                                t.subtitlesTrack_.addCue(e)
                            });
                            this.handleUpdateEnd_()
                        }
                    },
                    {
                        key: 'parseVTTCues_',
                        value: function e(r) {
                            var n = void 0;
                            var i = false;
                            if (typeof f.TextDecoder === 'function') {
                                n = new f.TextDecoder('utf8')
                            } else {
                                n = f.WebVTT.StringDecoder();
                                i = true
                            }
                            var a = new f.WebVTT.Parser(f, f.vttjs, n);
                            r.cues = [
                            ];
                            r.timestampmap = {
                                MPEGTS: 0,
                                LOCAL: 0
                            };
                            a.oncue = r.cues.push.bind(r.cues);
                            a.ontimestampmap = function (e) {
                                return r.timestampmap = e
                            };
                            a.onparsingerror = function (e) {
                                t.log.warn('Error encountered when parsing cues: ' + e.message)
                            };
                            if (r.segment.map) {
                                var s = r.segment.map.bytes;
                                if (i) {
                                    s = Ms(s)
                                }
                                a.parse(s)
                            }
                            var o = r.bytes;
                            if (i) {
                                o = Ms(o)
                            }
                            a.parse(o);
                            a.flush()
                        }
                    },
                    {
                        key: 'updateTimeMapping_',
                        value: function e(t, r, n) {
                            var i = t.segment;
                            if (!r) {
                                return
                            }
                            if (!t.cues.length) {
                                i.empty = true;
                                return
                            }
                            var a = t.timestampmap;
                            var s = a.MPEGTS / 90000 - a.LOCAL + r.mapping;
                            t.cues.forEach(function (e) {
                                e.startTime += s;
                                e.endTime += s
                            });
                            if (!n.syncInfo) {
                                var o = t.cues[0].startTime;
                                var u = t.cues[t.cues.length - 1].startTime;
                                n.syncInfo = {
                                    mediaSequence: n.mediaSequence + t.mediaIndex,
                                    time: Math.min(o, u - i.duration)
                                }
                            }
                        }
                    }
                ]);
                return r
            }(Rs);
            var Ns = function e(t, r) {
                var n = t.cues;
                for (var i = 0; i < n.length; i++) {
                    var a = n[i];
                    if (r >= a.adStartTime && r <= a.adEndTime) {
                        return a
                    }
                }
                return null
            };
            var Bs = function e(t, r) {
                var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
                if (!t.segments) {
                    return
                }
                var i = n;
                var a = void 0;
                for (var s = 0; s < t.segments.length; s++) {
                    var o = t.segments[s];
                    if (!a) {
                        a = Ns(r, i + o.duration / 2)
                    }
                    if (a) {
                        if ('cueIn' in o) {
                            a.endTime = i;
                            a.adEndTime = i;
                            i += o.duration;
                            a = null;
                            continue
                        }
                        if (i < a.endTime) {
                            i += o.duration;
                            continue
                        }
                        a.endTime += o.duration
                    } else {
                        if ('cueOut' in o) {
                            a = new f.VTTCue(i, i + o.duration, o.cueOut);
                            a.adStartTime = i;
                            a.adEndTime = i + parseFloat(o.cueOut);
                            r.addCue(a)
                        }
                        if ('cueOutCont' in o) {
                            var u = void 0;
                            var l = void 0;
                            var c = o.cueOutCont.split('/').map(parseFloat);
                            var d = I(c, 2);
                            u = d[0];
                            l = d[1];
                            a = new f.VTTCue(i, i + o.duration, '');
                            a.adStartTime = i - u;
                            a.adEndTime = a.adStartTime + l;
                            r.addCue(a)
                        }
                    }
                    i += o.duration
                }
            };
            var qs = function e(t) {
                var r = t[1] & 31;
                r <<= 8;
                r |= t[2];
                return r
            };
            var Fs = function e(t) {
                return !!(t[1] & 64)
            };
            var Vs = function e(t) {
                var r = 0;
                if ((t[3] & 48) >>> 4 > 1) {
                    r += t[4] + 1
                }
                return r
            };
            var Hs = function e(t, r) {
                var n = qs(t);
                if (n === 0) {
                    return 'pat'
                } else if (n === r) {
                    return 'pmt'
                } else if (r) {
                    return 'pes'
                }
                return null
            };
            var zs = function e(t) {
                var r = Fs(t);
                var n = 4 + Vs(t);
                if (r) {
                    n += t[n] + 1
                }
                return (t[n + 10] & 31) << 8 | t[n + 11]
            };
            var Gs = function e(t) {
                var r = {
                };
                var n = Fs(t);
                var i = 4 + Vs(t);
                if (n) {
                    i += t[i] + 1
                }
                if (!(t[i + 5] & 1)) {
                    return
                }
                var a,
                    s,
                    o;
                a = (t[i + 1] & 15) << 8 | t[i + 2];
                s = 3 + a - 4;
                o = (t[i + 10] & 15) << 8 | t[i + 11];
                var u = 12 + o;
                while (u < s) {
                    var l = i + u;
                    r[(t[l + 1] & 31) << 8 | t[l + 2]] = t[l];
                    u += ((t[l + 3] & 15) << 8 | t[l + 4]) + 5
                }
                return r
            };
            var Ws = function e(t, r) {
                var n = qs(t);
                var i = r[n];
                switch (i) {
                    case la.H264_STREAM_TYPE:
                        return 'video';
                    case la.ADTS_STREAM_TYPE:
                        return 'audio';
                    case la.METADATA_STREAM_TYPE:
                        return 'timed-metadata';
                    default:
                        return null
                }
            };
            var Ys = function e(t) {
                var r = Fs(t);
                if (!r) {
                    return null
                }
                var n = 4 + Vs(t);
                if (n >= t.byteLength) {
                    return null
                }
                var i = null;
                var a;
                a = t[n + 7];
                if (a & 192) {
                    i = {
                    };
                    i.pts = (t[n + 9] & 14) << 27 | (t[n + 10] & 255) << 20 | (t[n + 11] & 254) << 12 | (t[n + 12] & 255) << 5 | (t[n + 13] & 254) >>> 3;
                    i.pts *= 4;
                    i.pts += (t[n + 13] & 6) >>> 1;
                    i.dts = i.pts;
                    if (a & 64) {
                        i.dts = (t[n + 14] & 14) << 27 | (t[n + 15] & 255) << 20 | (t[n + 16] & 254) << 12 | (t[n + 17] & 255) << 5 | (t[n + 18] & 254) >>> 3;
                        i.dts *= 4;
                        i.dts += (t[n + 18] & 6) >>> 1
                    }
                }
                return i
            };
            var $s = function e(t) {
                switch (t) {
                    case 5:
                        return 'slice_layer_without_partitioning_rbsp_idr';
                    case 6:
                        return 'sei_rbsp';
                    case 7:
                        return 'seq_parameter_set_rbsp';
                    case 8:
                        return 'pic_parameter_set_rbsp';
                    case 9:
                        return 'access_unit_delimiter_rbsp';
                    default:
                        return null
                }
            };
            var Xs = function e(t) {
                var r = 4 + Vs(t);
                var n = t.subarray(r);
                var i = 0;
                var a = 0;
                var s = false;
                var o;
                for (; a < n.byteLength - 3; a++) {
                    if (n[a + 2] === 1) {
                        i = a + 5;
                        break
                    }
                }
                while (i < n.byteLength) {
                    switch (n[i]) {
                        case 0:
                            if (n[i - 1] !== 0) {
                                i += 2;
                                break
                            } else if (n[i - 2] !== 0) {
                                i++;
                                break
                            }
                            if (a + 3 !== i - 2) {
                                o = $s(n[a + 3] & 31);
                                if (o === 'slice_layer_without_partitioning_rbsp_idr') {
                                    s = true
                                }
                            }
                            do {
                                i++
                            } while (n[i] !== 1 && i < n.length);
                            a = i - 2;
                            i += 3;
                            break;
                        case 1:
                            if (n[i - 1] !== 0 || n[i - 2] !== 0) {
                                i += 3;
                                break
                            }
                            o = $s(n[a + 3] & 31);
                            if (o === 'slice_layer_without_partitioning_rbsp_idr') {
                                s = true
                            }
                            a = i - 2;
                            i += 3;
                            break;
                        default:
                            i += 3;
                            break
                    }
                }
                n = n.subarray(a);
                i -= a;
                a = 0;
                if (n && n.byteLength > 3) {
                    o = $s(n[a + 3] & 31);
                    if (o === 'slice_layer_without_partitioning_rbsp_idr') {
                        s = true
                    }
                }
                return s
            };
            var Ks = {
                parseType: Hs,
                parsePat: zs,
                parsePmt: Gs,
                parsePayloadUnitStartIndicator: Fs,
                parsePesType: Ws,
                parsePesTime: Ys,
                videoPacketContainsKeyFrame: Xs
            };
            var Qs = pa.handleRollover;
            var Js = {
            };
            Js.ts = Ks;
            Js.aac = Ka;
            var Zs = 90000,
                eo = 188,
                to = 71;
            var ro = function e(t, r) {
                var n = 0,
                    i = eo,
                    a,
                    s;
                while (i < t.byteLength) {
                    if (t[n] === to && t[i] === to) {
                        a = t.subarray(n, i);
                        s = Js.ts.parseType(a, r.pid);
                        switch (s) {
                            case 'pat':
                                if (!r.pid) {
                                    r.pid = Js.ts.parsePat(a)
                                }
                                break;
                            case 'pmt':
                                if (!r.table) {
                                    r.table = Js.ts.parsePmt(a)
                                }
                                break;
                            default:
                                break
                        }
                        if (r.pid && r.table) {
                            return
                        }
                        n += eo;
                        i += eo;
                        continue
                    }
                    n++;
                    i++
                }
            };
            var no = function e(t, r, n) {
                var i = 0,
                    a = eo,
                    s,
                    o,
                    u,
                    l,
                    c;
                var d = false;
                while (a <= t.byteLength) {
                    if (t[i] === to && (t[a] === to || a === t.byteLength)) {
                        s = t.subarray(i, a);
                        o = Js.ts.parseType(s, r.pid);
                        switch (o) {
                            case 'pes':
                                u = Js.ts.parsePesType(s, r.table);
                                l = Js.ts.parsePayloadUnitStartIndicator(s);
                                if (u === 'audio' && l) {
                                    c = Js.ts.parsePesTime(s);
                                    if (c) {
                                        c.type = 'audio';
                                        n.audio.push(c);
                                        d = true
                                    }
                                }
                                break;
                            default:
                                break
                        }
                        if (d) {
                            break
                        }
                        i += eo;
                        a += eo;
                        continue
                    }
                    i++;
                    a++
                }
                a = t.byteLength;
                i = a - eo;
                d = false;
                while (i >= 0) {
                    if (t[i] === to && (t[a] === to || a === t.byteLength)) {
                        s = t.subarray(i, a);
                        o = Js.ts.parseType(s, r.pid);
                        switch (o) {
                            case 'pes':
                                u = Js.ts.parsePesType(s, r.table);
                                l = Js.ts.parsePayloadUnitStartIndicator(s);
                                if (u === 'audio' && l) {
                                    c = Js.ts.parsePesTime(s);
                                    if (c) {
                                        c.type = 'audio';
                                        n.audio.push(c);
                                        d = true
                                    }
                                }
                                break;
                            default:
                                break
                        }
                        if (d) {
                            break
                        }
                        i -= eo;
                        a -= eo;
                        continue
                    }
                    i--;
                    a--
                }
            };
            var io = function e(t, r, n) {
                var i = 0,
                    a = eo,
                    s,
                    o,
                    u,
                    l,
                    c,
                    d,
                    f,
                    h;
                var p = false;
                var v = {
                    data: [
                    ],
                    size: 0
                };
                while (a < t.byteLength) {
                    if (t[i] === to && t[a] === to) {
                        s = t.subarray(i, a);
                        o = Js.ts.parseType(s, r.pid);
                        switch (o) {
                            case 'pes':
                                u = Js.ts.parsePesType(s, r.table);
                                l = Js.ts.parsePayloadUnitStartIndicator(s);
                                if (u === 'video') {
                                    if (l && !p) {
                                        c = Js.ts.parsePesTime(s);
                                        if (c) {
                                            c.type = 'video';
                                            n.video.push(c);
                                            p = true
                                        }
                                    }
                                    if (!n.firstKeyFrame) {
                                        if (l) {
                                            if (v.size !== 0) {
                                                d = new Uint8Array(v.size);
                                                f = 0;
                                                while (v.data.length) {
                                                    h = v.data.shift();
                                                    d.set(h, f);
                                                    f += h.byteLength
                                                }
                                                if (Js.ts.videoPacketContainsKeyFrame(d)) {
                                                    n.firstKeyFrame = Js.ts.parsePesTime(d);
                                                    n.firstKeyFrame.type = 'video'
                                                }
                                                v.size = 0
                                            }
                                        }
                                        v.data.push(s);
                                        v.size += s.byteLength
                                    }
                                }
                                break;
                            default:
                                break
                        }
                        if (p && n.firstKeyFrame) {
                            break
                        }
                        i += eo;
                        a += eo;
                        continue
                    }
                    i++;
                    a++
                }
                a = t.byteLength;
                i = a - eo;
                p = false;
                while (i >= 0) {
                    if (t[i] === to && t[a] === to) {
                        s = t.subarray(i, a);
                        o = Js.ts.parseType(s, r.pid);
                        switch (o) {
                            case 'pes':
                                u = Js.ts.parsePesType(s, r.table);
                                l = Js.ts.parsePayloadUnitStartIndicator(s);
                                if (u === 'video' && l) {
                                    c = Js.ts.parsePesTime(s);
                                    if (c) {
                                        c.type = 'video';
                                        n.video.push(c);
                                        p = true
                                    }
                                }
                                break;
                            default:
                                break
                        }
                        if (p) {
                            break
                        }
                        i -= eo;
                        a -= eo;
                        continue
                    }
                    i--;
                    a--
                }
            };
            var ao = function e(t, r) {
                if (t.audio && t.audio.length) {
                    var n = r;
                    if (typeof n === 'undefined') {
                        n = t.audio[0].dts
                    }
                    t.audio.forEach(function (e) {
                        e.dts = Qs(e.dts, n);
                        e.pts = Qs(e.pts, n);
                        e.dtsTime = e.dts / Zs;
                        e.ptsTime = e.pts / Zs
                    })
                }
                if (t.video && t.video.length) {
                    var i = r;
                    if (typeof i === 'undefined') {
                        i = t.video[0].dts
                    }
                    t.video.forEach(function (e) {
                        e.dts = Qs(e.dts, i);
                        e.pts = Qs(e.pts, i);
                        e.dtsTime = e.dts / Zs;
                        e.ptsTime = e.pts / Zs
                    });
                    if (t.firstKeyFrame) {
                        var a = t.firstKeyFrame;
                        a.dts = Qs(a.dts, i);
                        a.pts = Qs(a.pts, i);
                        a.dtsTime = a.dts / Zs;
                        a.ptsTime = a.dts / Zs
                    }
                }
            };
            var so = function e(t) {
                var r = false,
                    n = 0,
                    i = null,
                    a = null,
                    s = 0,
                    o = 0,
                    u;
                while (t.length - o >= 3) {
                    var l = Js.aac.parseType(t, o);
                    switch (l) {
                        case 'timed-metadata':
                            if (t.length - o < 10) {
                                r = true;
                                break
                            }
                            s = Js.aac.parseId3TagSize(t, o);
                            if (s > t.length) {
                                r = true;
                                break
                            }
                            if (a === null) {
                                u = t.subarray(o, o + s);
                                a = Js.aac.parseAacTimestamp(u)
                            }
                            o += s;
                            break;
                        case 'audio':
                            if (t.length - o < 7) {
                                r = true;
                                break
                            }
                            s = Js.aac.parseAdtsSize(t, o);
                            if (s > t.length) {
                                r = true;
                                break
                            }
                            if (i === null) {
                                u = t.subarray(o, o + s);
                                i = Js.aac.parseSampleRate(u)
                            }
                            n++;
                            o += s;
                            break;
                        default:
                            o++;
                            break
                    }
                    if (r) {
                        return null
                    }
                }
                if (i === null || a === null) {
                    return null
                }
                var c = Zs / i;
                var d = {
                    audio: [
                        {
                            type: 'audio',
                            dts: a,
                            pts: a
                        },
                        {
                            type: 'audio',
                            dts: a + n * 1024 * c,
                            pts: a + n * 1024 * c
                        }
                    ]
                };
                return d
            };
            var oo = function e(t) {
                var r = {
                    pid: null,
                    table: null
                };
                var n = {
                };
                ro(t, r);
                for (var i in r.table) {
                    if (r.table.hasOwnProperty(i)) {
                        var a = r.table[i];
                        switch (a) {
                            case la.H264_STREAM_TYPE:
                                n.video = [
                                ];
                                io(t, r, n);
                                if (n.video.length === 0) {
                                    delete n.video
                                }
                                break;
                            case la.ADTS_STREAM_TYPE:
                                n.audio = [
                                ];
                                no(t, r, n);
                                if (n.audio.length === 0) {
                                    delete n.audio
                                }
                                break;
                            default:
                                break
                        }
                    }
                }
                return n
            };
            var uo = function e(t, r) {
                var n = Js.aac.isLikelyAacData(t);
                var i;
                if (n) {
                    i = so(t)
                } else {
                    i = oo(t)
                }
                if (!i || !i.audio && !i.video) {
                    return null
                }
                ao(i, r);
                return i
            };
            var lo = {
                inspect: uo,
                parseAudioPes_: no
            };
            var co = lo.inspect;
            var fo = [
                {
                    name: 'VOD',
                    run: function e(t, r, n, i, a) {
                        if (n !== Infinity) {
                            var s = {
                                time: 0,
                                segmentIndex: 0
                            };
                            return s
                        }
                        return null
                    }
                },
                {
                    name: 'ProgramDateTime',
                    run: function e(t, r, n, i, a) {
                        if (!t.datetimeToDisplayTime) {
                            return null
                        }
                        var s = r.segments || [
                        ];
                        var o = null;
                        var u = null;
                        a = a || 0;
                        for (var l = 0; l < s.length; l++) {
                            var c = s[l];
                            if (c.dateTimeObject) {
                                var d = c.dateTimeObject.getTime() / 1000;
                                var f = d + t.datetimeToDisplayTime;
                                var h = Math.abs(a - f);
                                if (u !== null && u < h) {
                                    break
                                }
                                u = h;
                                o = {
                                    time: f,
                                    segmentIndex: l
                                }
                            }
                        }
                        return o
                    }
                },
                {
                    name: 'Segment',
                    run: function e(t, r, n, i, a) {
                        var s = r.segments || [
                        ];
                        var o = null;
                        var u = null;
                        a = a || 0;
                        for (var l = 0; l < s.length; l++) {
                            var c = s[l];
                            if (c.timeline === i && typeof c.start !== 'undefined') {
                                var d = Math.abs(a - c.start);
                                if (u !== null && u < d) {
                                    break
                                }
                                if (!o || u === null || u >= d) {
                                    u = d;
                                    o = {
                                        time: c.start,
                                        segmentIndex: l
                                    }
                                }
                            }
                        }
                        return o
                    }
                },
                {
                    name: 'Discontinuity',
                    run: function e(t, r, n, i, a) {
                        var s = null;
                        a = a || 0;
                        if (r.discontinuityStarts && r.discontinuityStarts.length) {
                            var o = null;
                            for (var u = 0; u < r.discontinuityStarts.length; u++) {
                                var l = r.discontinuityStarts[u];
                                var c = r.discontinuitySequence + u + 1;
                                var d = t.discontinuities[c];
                                if (d) {
                                    var f = Math.abs(a - d.time);
                                    if (o !== null && o < f) {
                                        break
                                    }
                                    if (!s || o === null || o >= f) {
                                        o = f;
                                        s = {
                                            time: d.time,
                                            segmentIndex: l
                                        }
                                    }
                                }
                            }
                        }
                        return s
                    }
                },
                {
                    name: 'Playlist',
                    run: function e(t, r, n, i, a) {
                        if (r.syncInfo) {
                            var s = {
                                time: r.syncInfo.time,
                                segmentIndex: r.syncInfo.mediaSequence - r.mediaSequence
                            };
                            return s
                        }
                        return null
                    }
                }
            ];
            var ho = function (e) {
                C(t, e);
                function t() {
                    S(this, t);
                    var e = E(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this));
                    e.inspectCache_ = undefined;
                    e.timelines = [
                    ];
                    e.discontinuities = [
                    ];
                    e.datetimeToDisplayTime = null;
                    e.logger_ = zr('SyncController');
                    return e
                }
                k(t, [
                    {
                        key: 'getSyncPoint',
                        value: function e(t, r, n, i) {
                            var a = this.runStrategies_(t, r, n, i);
                            if (!a.length) {
                                return null
                            }
                            return this.selectSyncPoint_(a, {
                                key: 'time',
                                value: i
                            })
                        }
                    },
                    {
                        key: 'getExpiredTime',
                        value: function e(t, r) {
                            if (!t || !t.segments) {
                                return null
                            }
                            var n = this.runStrategies_(t, r, t.discontinuitySequence, 0);
                            if (!n.length) {
                                return null
                            }
                            var i = this.selectSyncPoint_(n, {
                                key: 'segmentIndex',
                                value: 0
                            });
                            if (i.segmentIndex > 0) {
                                i.time *= - 1
                            }
                            return Math.abs(i.time + G(t, i.segmentIndex, 0))
                        }
                    },
                    {
                        key: 'runStrategies_',
                        value: function e(t, r, n, i) {
                            var a = [
                            ];
                            for (var s = 0; s < fo.length; s++) {
                                var o = fo[s];
                                var u = o.run(this, t, r, n, i);
                                if (u) {
                                    u.strategy = o.name;
                                    a.push({
                                        strategy: o.name,
                                        syncPoint: u
                                    })
                                }
                            }
                            return a
                        }
                    },
                    {
                        key: 'selectSyncPoint_',
                        value: function e(t, r) {
                            var n = t[0].syncPoint;
                            var i = Math.abs(t[0].syncPoint[r.key] - r.value);
                            var a = t[0].strategy;
                            for (var s = 1; s < t.length; s++) {
                                var o = Math.abs(t[s].syncPoint[r.key] - r.value);
                                if (o < i) {
                                    i = o;
                                    n = t[s].syncPoint;
                                    a = t[s].strategy
                                }
                            }
                            this.logger_('syncPoint for [' + r.key + ': ' + r.value + '] chosen with strategy' + (' [' + a + ']: [time:' + n.time + ',') + (' segmentIndex:' + n.segmentIndex + ']'));
                            return n
                        }
                    },
                    {
                        key: 'saveExpiredSegmentInfo',
                        value: function e(t, r) {
                            var n = r.mediaSequence - t.mediaSequence;
                            for (var i = n - 1; i >= 0; i--) {
                                var a = t.segments[i];
                                if (a && typeof a.start !== 'undefined') {
                                    r.syncInfo = {
                                        mediaSequence: t.mediaSequence + i,
                                        time: a.start
                                    };
                                    this.logger_('playlist refresh sync: [time:' + r.syncInfo.time + ',' + (' mediaSequence: ' + r.syncInfo.mediaSequence + ']'));
                                    this.trigger('syncinfoupdate');
                                    break
                                }
                            }
                        }
                    },
                    {
                        key: 'setDateTimeMapping',
                        value: function e(t) {
                            if (!this.datetimeToDisplayTime && t.segments && t.segments.length && t.segments[0].dateTimeObject) {
                                var r = t.segments[0].dateTimeObject.getTime() / 1000;
                                this.datetimeToDisplayTime = - r
                            }
                        }
                    },
                    {
                        key: 'reset',
                        value: function e() {
                            this.inspectCache_ = undefined
                        }
                    },
                    {
                        key: 'probeSegmentInfo',
                        value: function e(t) {
                            var r = t.segment;
                            var n = t.playlist;
                            var i = void 0;
                            if (r.map) {
                                i = this.probeMp4Segment_(t)
                            } else {
                                i = this.probeTsSegment_(t)
                            }
                            if (i) {
                                if (this.calculateSegmentTimeMapping_(t, i)) {
                                    this.saveDiscontinuitySyncInfo_(t);
                                    if (!n.syncInfo) {
                                        n.syncInfo = {
                                            mediaSequence: n.mediaSequence + t.mediaIndex,
                                            time: r.start
                                        }
                                    }
                                }
                            }
                            return i
                        }
                    },
                    {
                        key: 'probeMp4Segment_',
                        value: function e(t) {
                            var r = t.segment;
                            var n = rn.timescale(r.map.bytes);
                            var i = rn.startTime(n, t.bytes);
                            if (t.timestampOffset !== null) {
                                t.timestampOffset -= i
                            }
                            return {
                                start: i,
                                end: i + r.duration
                            }
                        }
                    },
                    {
                        key: 'probeTsSegment_',
                        value: function e(t) {
                            var r = co(t.bytes, this.inspectCache_);
                            var n = void 0;
                            var i = void 0;
                            if (!r) {
                                return null
                            }
                            if (r.video && r.video.length === 2) {
                                this.inspectCache_ = r.video[1].dts;
                                n = r.video[0].dtsTime;
                                i = r.video[1].dtsTime
                            } else if (r.audio && r.audio.length === 2) {
                                this.inspectCache_ = r.audio[1].dts;
                                n = r.audio[0].dtsTime;
                                i = r.audio[1].dtsTime
                            }
                            return {
                                start: n,
                                end: i,
                                containsVideo: r.video && r.video.length === 2,
                                containsAudio: r.audio && r.audio.length === 2
                            }
                        }
                    },
                    {
                        key: 'timestampOffsetForTimeline',
                        value: function e(t) {
                            if (typeof this.timelines[t] === 'undefined') {
                                return null
                            }
                            return this.timelines[t].time
                        }
                    },
                    {
                        key: 'mappingForTimeline',
                        value: function e(t) {
                            if (typeof this.timelines[t] === 'undefined') {
                                return null
                            }
                            return this.timelines[t].mapping
                        }
                    },
                    {
                        key: 'calculateSegmentTimeMapping_',
                        value: function e(t, r) {
                            var n = t.segment;
                            var i = this.timelines[t.timeline];
                            if (t.timestampOffset !== null) {
                                i = {
                                    time: t.startOfSegment,
                                    mapping: t.startOfSegment - r.start
                                };
                                this.timelines[t.timeline] = i;
                                this.trigger('timestampoffset');
                                this.logger_('time mapping for timeline ' + t.timeline + ': ' + ('[time: ' + i.time + '] [mapping: ' + i.mapping + ']'));
                                n.start = t.startOfSegment;
                                n.end = r.end + i.mapping
                            } else if (i) {
                                n.start = r.start + i.mapping;
                                n.end = r.end + i.mapping
                            } else {
                                return false
                            }
                            return true
                        }
                    },
                    {
                        key: 'saveDiscontinuitySyncInfo_',
                        value: function e(t) {
                            var r = t.playlist;
                            var n = t.segment;
                            if (n.discontinuity) {
                                this.discontinuities[n.timeline] = {
                                    time: n.start,
                                    accuracy: 0
                                }
                            } else if (r.discontinuityStarts && r.discontinuityStarts.length) {
                                for (var i = 0; i < r.discontinuityStarts.length; i++) {
                                    var a = r.discontinuityStarts[i];
                                    var s = r.discontinuitySequence + i + 1;
                                    var o = a - t.mediaIndex;
                                    var u = Math.abs(o);
                                    if (!this.discontinuities[s] || this.discontinuities[s].accuracy > u) {
                                        var l = void 0;
                                        if (o < 0) {
                                            l = n.start - G(r, t.mediaIndex, a)
                                        } else {
                                            l = n.end + G(r, t.mediaIndex + 1, a)
                                        }
                                        this.discontinuities[s] = {
                                            time: l,
                                            accuracy: u
                                        }
                                    }
                                }
                            }
                        }
                    }
                ]);
                return t
            }(t.EventTarget);
            var po = new lt('./decrypter-worker.worker.js', function (e, t) {
                var r = this;
                var n = function () {
                    function e(e) {
                        return e.subarray(0, e.byteLength - e[e.byteLength - 1])
                    }
                    var t = function e(t, r) {
                        if (!(t instanceof r)) {
                            throw new TypeError('Cannot call a class as a function')
                        }
                    };
                    var n = function () {
                        function e(e, t) {
                            for (var r = 0; r < t.length; r++) {
                                var n = t[r];
                                n.enumerable = n.enumerable || false;
                                n.configurable = true;
                                if ('value' in n) n.writable = true;
                                Object.defineProperty(e, n.key, n)
                            }
                        }
                        return function (t, r, n) {
                            if (r) e(t.prototype, r);
                            if (n) e(t, n);
                            return t
                        }
                    }();
                    var i = function e(t, r) {
                        if (typeof r !== 'function' && r !== null) {
                            throw new TypeError('Super expression must either be null or a function, not ' + typeof r)
                        }
                        t.prototype = Object.create(r && r.prototype, {
                            constructor: {
                                value: t,
                                enumerable: false,
                                writable: true,
                                configurable: true
                            }
                        });
                        if (r) Object.setPrototypeOf ? Object.setPrototypeOf(t, r) : t.__proto__ = r
                    };
                    var a = function e(t, r) {
                        if (!t) {
                            throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                        }
                        return r && (typeof r === 'object' || typeof r === 'function') ? r : t
                    };
                    var s = function e() {
                        var t = [
                            [[],
                            [
                            ],
                            [
                            ],
                            [
                            ],
                            [
                            ]],
                            [
                                [],
                                [
                                ],
                                [
                                ],
                                [
                                ],
                                [
                                ]
                            ]
                        ];
                        var r = t[0];
                        var n = t[1];
                        var i = r[4];
                        var a = n[4];
                        var s = void 0;
                        var o = void 0;
                        var u = void 0;
                        var l = [
                        ];
                        var c = [
                        ];
                        var d = void 0;
                        var f = void 0;
                        var h = void 0;
                        var p = void 0;
                        var v = void 0;
                        var m = void 0;
                        for (s = 0; s < 256; s++) {
                            c[(l[s] = s << 1 ^ (s >> 7) * 283) ^ s] = s
                        }
                        for (o = u = 0; !i[o]; o ^= d || 1, u = c[u] || 1) {
                            p = u ^ u << 1 ^ u << 2 ^ u << 3 ^ u << 4;
                            p = p >> 8 ^ p & 255 ^ 99;
                            i[o] = p;
                            a[p] = o;
                            h = l[f = l[d = l[o]]];
                            m = h * 16843009 ^ f * 65537 ^ d * 257 ^ o * 16843008;
                            v = l[p] * 257 ^ p * 16843008;
                            for (s = 0; s < 4; s++) {
                                r[s][o] = v = v << 24 ^ v >>> 8;
                                n[s][p] = m = m << 24 ^ m >>> 8
                            }
                        }
                        for (s = 0; s < 5; s++) {
                            r[s] = r[s].slice(0);
                            n[s] = n[s].slice(0)
                        }
                        return t
                    };
                    var o = null;
                    var u = function () {
                        function e(r) {
                            t(this, e);
                            if (!o) {
                                o = s()
                            }
                            this._tables = [
                                [o[0][0].slice(),
                                o[0][1].slice(),
                                o[0][2].slice(),
                                o[0][3].slice(),
                                o[0][4].slice()],
                                [
                                    o[1][0].slice(),
                                    o[1][1].slice(),
                                    o[1][2].slice(),
                                    o[1][3].slice(),
                                    o[1][4].slice()
                                ]
                            ];
                            var n = void 0;
                            var i = void 0;
                            var a = void 0;
                            var u = void 0;
                            var l = void 0;
                            var c = this._tables[0][4];
                            var d = this._tables[1];
                            var f = r.length;
                            var h = 1;
                            if (f !== 4 && f !== 6 && f !== 8) {
                                throw new Error('Invalid aes key size')
                            }
                            u = r.slice(0);
                            l = [
                            ];
                            this._key = [
                                u,
                                l
                            ];
                            for (n = f; n < 4 * f + 28; n++) {
                                a = u[n - 1];
                                if (n % f === 0 || f === 8 && n % f === 4) {
                                    a = c[a >>> 24] << 24 ^ c[a >> 16 & 255] << 16 ^ c[a >> 8 & 255] << 8 ^ c[a & 255];
                                    if (n % f === 0) {
                                        a = a << 8 ^ a >>> 24 ^ h << 24;
                                        h = h << 1 ^ (h >> 7) * 283
                                    }
                                }
                                u[n] = u[n - f] ^ a
                            }
                            for (i = 0; n; i++, n--) {
                                a = u[i & 3 ? n : n - 4];
                                if (n <= 4 || i < 4) {
                                    l[i] = a
                                } else {
                                    l[i] = d[0][c[a >>> 24]] ^ d[1][c[a >> 16 & 255]] ^ d[2][c[a >> 8 & 255]] ^ d[3][c[a & 255]]
                                }
                            }
                        }
                        e.prototype.decrypt = function e(t, r, n, i, a, s) {
                            var o = this._key[1];
                            var u = t ^ o[0];
                            var l = i ^ o[1];
                            var c = n ^ o[2];
                            var d = r ^ o[3];
                            var f = void 0;
                            var h = void 0;
                            var p = void 0;
                            var v = o.length / 4 - 2;
                            var m = void 0;
                            var g = 4;
                            var y = this._tables[1];
                            var _ = y[0];
                            var b = y[1];
                            var T = y[2];
                            var A = y[3];
                            var S = y[4];
                            for (m = 0; m < v; m++) {
                                f = _[u >>> 24] ^ b[l >> 16 & 255] ^ T[c >> 8 & 255] ^ A[d & 255] ^ o[g];
                                h = _[l >>> 24] ^ b[c >> 16 & 255] ^ T[d >> 8 & 255] ^ A[u & 255] ^ o[g + 1];
                                p = _[c >>> 24] ^ b[d >> 16 & 255] ^ T[u >> 8 & 255] ^ A[l & 255] ^ o[g + 2];
                                d = _[d >>> 24] ^ b[u >> 16 & 255] ^ T[l >> 8 & 255] ^ A[c & 255] ^ o[g + 3];
                                g += 4;
                                u = f;
                                l = h;
                                c = p
                            }
                            for (m = 0; m < 4; m++) {
                                a[(3 & - m) + s] = S[u >>> 24] << 24 ^ S[l >> 16 & 255] << 16 ^ S[c >> 8 & 255] << 8 ^ S[d & 255] ^ o[g++];
                                f = u;
                                u = l;
                                l = c;
                                c = d;
                                d = f
                            }
                        };
                        return e
                    }();
                    var l = function () {
                        function e() {
                            t(this, e);
                            this.listeners = {
                            }
                        }
                        e.prototype.on = function e(t, r) {
                            if (!this.listeners[t]) {
                                this.listeners[t] = [
                                ]
                            }
                            this.listeners[t].push(r)
                        };
                        e.prototype.off = function e(t, r) {
                            if (!this.listeners[t]) {
                                return false
                            }
                            var n = this.listeners[t].indexOf(r);
                            this.listeners[t].splice(n, 1);
                            return n > - 1
                        };
                        e.prototype.trigger = function e(t) {
                            var r = this.listeners[t];
                            if (!r) {
                                return
                            }
                            if (arguments.length === 2) {
                                var n = r.length;
                                for (var i = 0; i < n; ++i) {
                                    r[i].call(this, arguments[1])
                                }
                            } else {
                                var a = Array.prototype.slice.call(arguments, 1);
                                var s = r.length;
                                for (var o = 0; o < s; ++o) {
                                    r[o].apply(this, a)
                                }
                            }
                        };
                        e.prototype.dispose = function e() {
                            this.listeners = {
                            }
                        };
                        e.prototype.pipe = function e(t) {
                            this.on('data', function (e) {
                                t.push(e)
                            })
                        };
                        return e
                    }();
                    var c = function (e) {
                        i(r, e);
                        function r() {
                            t(this, r);
                            var n = a(this, e.call(this, l));
                            n.jobs = [
                            ];
                            n.delay = 1;
                            n.timeout_ = null;
                            return n
                        }
                        r.prototype.processJob_ = function e() {
                            this.jobs.shift()();
                            if (this.jobs.length) {
                                this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                            } else {
                                this.timeout_ = null
                            }
                        };
                        r.prototype.push = function e(t) {
                            this.jobs.push(t);
                            if (!this.timeout_) {
                                this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay)
                            }
                        };
                        return r
                    }(l);
                    var d = function e(t) {
                        return t << 24 | (t & 65280) << 8 | (t & 16711680) >> 8 | t >>> 24
                    };
                    var f = function e(t, r, n) {
                        var i = new Int32Array(t.buffer, t.byteOffset, t.byteLength >> 2);
                        var a = new u(Array.prototype.slice.call(r));
                        var s = new Uint8Array(t.byteLength);
                        var o = new Int32Array(s.buffer);
                        var l = void 0;
                        var c = void 0;
                        var f = void 0;
                        var h = void 0;
                        var p = void 0;
                        var v = void 0;
                        var m = void 0;
                        var g = void 0;
                        var y = void 0;
                        l = n[0];
                        c = n[1];
                        f = n[2];
                        h = n[3];
                        for (y = 0; y < i.length; y += 4) {
                            p = d(i[y]);
                            v = d(i[y + 1]);
                            m = d(i[y + 2]);
                            g = d(i[y + 3]);
                            a.decrypt(p, v, m, g, o, y);
                            o[y] = d(o[y] ^ l);
                            o[y + 1] = d(o[y + 1] ^ c);
                            o[y + 2] = d(o[y + 2] ^ f);
                            o[y + 3] = d(o[y + 3] ^ h);
                            l = p;
                            c = v;
                            f = m;
                            h = g
                        }
                        return s
                    };
                    var h = function () {
                        function r(n, i, a, s) {
                            t(this, r);
                            var o = r.STEP;
                            var u = new Int32Array(n.buffer);
                            var l = new Uint8Array(n.byteLength);
                            var f = 0;
                            this.asyncStream_ = new c;
                            this.asyncStream_.push(this.decryptChunk_(u.subarray(f, f + o), i, a, l));
                            for (f = o; f < u.length; f += o) {
                                a = new Uint32Array([d(u[f - 4]),
                                d(u[f - 3]),
                                d(u[f - 2]),
                                d(u[f - 1])]);
                                this.asyncStream_.push(this.decryptChunk_(u.subarray(f, f + o), i, a, l))
                            }
                            this.asyncStream_.push(function () {
                                s(null, e(l))
                            })
                        }
                        r.prototype.decryptChunk_ = function e(t, r, n, i) {
                            return function () {
                                var e = f(t, r, n);
                                i.set(e, t.byteOffset)
                            }
                        };
                        n(r, null, [
                            {
                                key: 'STEP',
                                get: function e() {
                                    return 32000
                                }
                            }
                        ]);
                        return r
                    }();
                    var p = function e(t) {
                        var r = {
                        };
                        Object.keys(t).forEach(function (e) {
                            var n = t[e];
                            if (ArrayBuffer.isView(n)) {
                                r[e] = {
                                    bytes: n.buffer,
                                    byteOffset: n.byteOffset,
                                    byteLength: n.byteLength
                                }
                            } else {
                                r[e] = n
                            }
                        });
                        return r
                    };
                    var v = function e(t) {
                        t.onmessage = function (e) {
                            var r = e.data;
                            var n = new Uint8Array(r.encrypted.bytes, r.encrypted.byteOffset, r.encrypted.byteLength);
                            var i = new Uint32Array(r.key.bytes, r.key.byteOffset, r.key.byteLength / 4);
                            var a = new Uint32Array(r.iv.bytes, r.iv.byteOffset, r.iv.byteLength / 4);
                            new h(n, i, a, function (e, n) {
                                t.postMessage(p({
                                    source: r.source,
                                    decrypted: n
                                }), [
                                    n.buffer
                                ])
                            })
                        }
                    };
                    var m = new v(r);
                    return m
                }()
            });
            var vo = function e(t) {
                var r = t.default ? 'main' : 'alternative';
                if (t.characteristics && t.characteristics.indexOf('public.accessibility.describes-video') >= 0) {
                    r = 'main-desc'
                }
                return r
            };
            var mo = function e(t, r) {
                t.abort();
                t.pause();
                if (r && r.activePlaylistLoader) {
                    r.activePlaylistLoader.pause();
                    r.activePlaylistLoader = null
                }
            };
            var go = function e(t, r) {
                r.activePlaylistLoader = t;
                t.load()
            };
            var yo = function e(t, r) {
                return function () {
                    var e = r.segmentLoaders,
                        n = e[t],
                        i = e.main,
                        a = r.mediaTypes[t];
                    var s = a.activeTrack();
                    var o = a.activeGroup(s);
                    var u = a.activePlaylistLoader;
                    mo(n, a);
                    if (!o) {
                        return
                    }
                    if (!o.playlistLoader) {
                        if (u) {
                            i.resetEverything()
                        }
                        return
                    }
                    n.resyncLoader();
                    go(o.playlistLoader, a)
                }
            };
            var _o = function e(t, r) {
                return function () {
                    var e = r.segmentLoaders,
                        n = e[t],
                        i = e.main,
                        a = r.mediaTypes[t];
                    var s = a.activeTrack();
                    var o = a.activeGroup(s);
                    var u = a.activePlaylistLoader;
                    mo(n, a);
                    if (!o) {
                        return
                    }
                    if (!o.playlistLoader) {
                        i.resetEverything();
                        return
                    }
                    if (u === o.playlistLoader) {
                        go(o.playlistLoader, a);
                        return
                    }
                    if (n.track) {
                        n.track(s)
                    }
                    n.resetEverything();
                    go(o.playlistLoader, a)
                }
            };
            var bo = {
                AUDIO: function e(r, n) {
                    return function () {
                        var e = n.segmentLoaders[r],
                            i = n.mediaTypes[r],
                            a = n.blacklistCurrentPlaylist;
                        mo(e, i);
                        var s = i.activeTrack();
                        var o = i.activeGroup();
                        var u = (o.filter(function (e) {
                            return e.default
                        })[0] || o[0]).id; var l = i.tracks[u]; if (s === l) {
                            a({
                                message: 'Problem encountered loading the default audio track.'
                            });
                            return
                        }
                        t.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.'); for (var c in i.tracks) {
                            i.tracks[c].enabled = i.tracks[c] === l
                        }
                        i.onTrackChanged()
                    }
                },
                SUBTITLES: function e(r, n) {
                    return function () {
                        var e = n.segmentLoaders[r],
                            i = n.mediaTypes[r];
                        t.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');
                        mo(e, i);
                        var a = i.activeTrack();
                        if (a) {
                            a.mode = 'disabled'
                        }
                        i.onTrackChanged()
                    }
                }
            };
            var To = {
                AUDIO: function e(t, r, n) {
                    if (!r) {
                        return
                    }
                    var i = n.tech,
                        a = n.requestOptions,
                        s = n.segmentLoaders[t];
                    r.on('loadedmetadata', function () {
                        var e = r.media();
                        s.playlist(e, a);
                        if (!i.paused() || e.endList && i.preload() !== 'none') {
                            s.load()
                        }
                    });
                    r.on('loadedplaylist', function () {
                        s.playlist(r.media(), a);
                        if (!i.paused()) {
                            s.load()
                        }
                    });
                    r.on('error', bo[t](t, n))
                },
                SUBTITLES: function e(t, r, n) {
                    var i = n.tech,
                        a = n.requestOptions,
                        s = n.segmentLoaders[t],
                        o = n.mediaTypes[t];
                    r.on('loadedmetadata', function () {
                        var e = r.media();
                        s.playlist(e, a);
                        s.track(o.activeTrack());
                        if (!i.paused() || e.endList && i.preload() !== 'none') {
                            s.load()
                        }
                    });
                    r.on('loadedplaylist', function () {
                        s.playlist(r.media(), a);
                        if (!i.paused()) {
                            s.load()
                        }
                    });
                    r.on('error', bo[t](t, n))
                }
            };
            var Ao = function e(t, r) {
                return function (e) {
                    return e.attributes[t] === r
                }
            };
            var So = function e(t) {
                return function (e) {
                    return e.resolvedUri === t
                }
            };
            var ko = {
                AUDIO: function e(r, n) {
                    var i = n.hls,
                        a = n.sourceType,
                        s = n.segmentLoaders[r],
                        o = n.requestOptions.withCredentials,
                        u = n.master,
                        l = u.mediaGroups,
                        c = u.playlists,
                        d = n.mediaTypes[r],
                        f = d.groups,
                        h = d.tracks,
                        p = n.masterPlaylistLoader;
                    if (!l[r] || Object.keys(l[r]).length === 0) {
                        l[r] = {
                            main: {
                                default:
                                {
                                    default:
                                        true
                                }
                            }
                        }
                    }
                    for (var v in l[r]) {
                        if (!f[v]) {
                            f[v] = [
                            ]
                        }
                        var m = c.filter(Ao(r, v));
                        for (var g in l[r][v]) {
                            var y = l[r][v][g];
                            var _ = m.filter(So(y.resolvedUri));
                            if (_.length) {
                                delete y.resolvedUri
                            }
                            var b = void 0;
                            if (y.resolvedUri) {
                                b = new B(y.resolvedUri, i, o)
                            } else if (y.playlists && a === 'dash') {
                                b = new Hr(y.playlists[0], i, o, p)
                            } else {
                                b = null
                            }
                            y = t.mergeOptions({
                                id: g,
                                playlistLoader: b
                            }, y);
                            To[r](r, y.playlistLoader, n);
                            f[v].push(y);
                            if (typeof h[g] === 'undefined') {
                                var T = new t.AudioTrack({
                                    id: g,
                                    kind: vo(y),
                                    enabled: false,
                                    language: y.language,
                                    default:
                                        y.default,
                                    label:
                                        g
                                });
                                h[g] = T
                            }
                        }
                    }
                    s.on('error', bo[r](r, n))
                },
                SUBTITLES: function e(r, n) {
                    var i = n.tech,
                        a = n.hls,
                        s = n.sourceType,
                        o = n.segmentLoaders[r],
                        u = n.requestOptions.withCredentials,
                        l = n.master.mediaGroups,
                        c = n.mediaTypes[r],
                        d = c.groups,
                        f = c.tracks,
                        h = n.masterPlaylistLoader;
                    for (var p in l[r]) {
                        if (!d[p]) {
                            d[p] = [
                            ]
                        }
                        for (var v in l[r][p]) {
                            if (l[r][p][v].forced) {
                                continue
                            }
                            var m = l[r][p][v];
                            var g = void 0;
                            if (s === 'hls') {
                                g = new B(m.resolvedUri, a, u)
                            } else if (s === 'dash') {
                                g = new Hr(m.playlists[0], a, u, h)
                            }
                            m = t.mergeOptions({
                                id: v,
                                playlistLoader: g
                            }, m);
                            To[r](r, m.playlistLoader, n);
                            d[p].push(m);
                            if (typeof f[v] === 'undefined') {
                                var y = i.addRemoteTextTrack({
                                    id: v,
                                    kind: 'subtitles',
                                    default:
                                        m.default && m.autoselect,
                                    language:
                                        m.language,
                                    label: v
                                }, false).track;
                                f[v] = y
                            }
                        }
                    }
                    o.on('error', bo[r](r, n))
                },
                'CLOSED-CAPTIONS': function e(r, n) {
                    var i = n.tech,
                        a = n.master.mediaGroups,
                        s = n.mediaTypes[r],
                        o = s.groups,
                        u = s.tracks;
                    for (var l in a[r]) {
                        if (!o[l]) {
                            o[l] = [
                            ]
                        }
                        for (var c in a[r][l]) {
                            var d = a[r][l][c];
                            if (!d.instreamId.match(/CC\d/)) {
                                continue
                            }
                            o[l].push(t.mergeOptions({
                                id: c
                            }, d));
                            if (typeof u[c] === 'undefined') {
                                var f = i.addRemoteTextTrack({
                                    id: d.instreamId,
                                    kind: 'captions',
                                    default:
                                        d.default && d.autoselect,
                                    language:
                                        d.language,
                                    label: c
                                }, false).track;
                                u[c] = f
                            }
                        }
                    }
                }
            };
            var wo = function e(t, r) {
                return function (e) {
                    var n = r.masterPlaylistLoader,
                        i = r.mediaTypes[t].groups;
                    var a = n.media();
                    if (!a) {
                        return null
                    }
                    var s = null;
                    if (a.attributes[t]) {
                        s = i[a.attributes[t]]
                    }
                    s = s || i.main;
                    if (typeof e === 'undefined') {
                        return s
                    }
                    if (e === null) {
                        return null
                    }
                    return s.filter(function (t) {
                        return t.id === e.id
                    })[0] || null
                }
            };
            var Co = {
                AUDIO: function e(t, r) {
                    return function () {
                        var e = r.mediaTypes[t].tracks;
                        for (var n in e) {
                            if (e[n].enabled) {
                                return e[n]
                            }
                        }
                        return null
                    }
                },
                SUBTITLES: function e(t, r) {
                    return function () {
                        var e = r.mediaTypes[t].tracks;
                        for (var n in e) {
                            if (e[n].mode === 'showing') {
                                return e[n]
                            }
                        }
                        return null
                    }
                }
            };
            var Eo = function e(t) {
                [
                    'AUDIO',
                    'SUBTITLES',
                    'CLOSED-CAPTIONS'
                ].forEach(function (e) {
                    ko[e](e, t)
                });
                var r = t.mediaTypes,
                    n = t.masterPlaylistLoader,
                    i = t.tech,
                    a = t.hls;
                [
                    'AUDIO',
                    'SUBTITLES'
                ].forEach(function (e) {
                    r[e].activeGroup = wo(e, t);
                    r[e].activeTrack = Co[e](e, t);
                    r[e].onGroupChanged = yo(e, t);
                    r[e].onTrackChanged = _o(e, t)
                });
                var s = r.AUDIO.activeGroup();
                var o = (s.filter(function (e) {
                    return e.default
                })[0] || s[0]).id; r.AUDIO.tracks[o].enabled = true; r.AUDIO.onTrackChanged(); n.on('mediachange', function () {
                    [
                        'AUDIO',
                        'SUBTITLES'
                    ].forEach(function (e) {
                        return r[e].onGroupChanged()
                    })
                }); var u = function e() {
                    r.AUDIO.onTrackChanged();
                    i.trigger({
                        type: 'usage',
                        name: 'hls-audio-change'
                    })
                }; i.audioTracks().addEventListener('change', u); i.remoteTextTracks().addEventListener('change', r.SUBTITLES.onTrackChanged); a.on('dispose', function () {
                    i.audioTracks().removeEventListener('change', u);
                    i.remoteTextTracks().removeEventListener('change', r.SUBTITLES.onTrackChanged)
                }); i.clearTracks('audio'); for (var l in r.AUDIO.tracks) {
                    i.audioTracks().addTrack(r.AUDIO.tracks[l])
                }
            };
            var Io = function e() {
                var t = {
                };
                [
                    'AUDIO',
                    'SUBTITLES',
                    'CLOSED-CAPTIONS'
                ].forEach(function (e) {
                    t[e] = {
                        groups: {
                        },
                        tracks: {
                        },
                        activePlaylistLoader: null,
                        activeGroup: Gr,
                        activeTrack: Gr,
                        onGroupChanged: Gr,
                        onTrackChanged: Gr
                    }
                });
                return t
            };
            var Po = 60 * 2;
            var Oo = void 0;
            var xo = [
                'mediaRequests',
                'mediaRequestsAborted',
                'mediaRequestsTimedout',
                'mediaRequestsErrored',
                'mediaTransferDuration',
                'mediaBytesTransferred'
            ];
            var Lo = function e(t) {
                return this.audioSegmentLoader_[t] + this.mainSegmentLoader_[t]
            };
            var Do = function (e) {
                C(r, e);
                function r(e) {
                    S(this, r);
                    var n = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this));
                    var i = e.url,
                        a = e.withCredentials,
                        s = e.tech,
                        o = e.bandwidth,
                        u = e.externHls,
                        l = e.useCueTags,
                        c = e.blacklistDuration,
                        d = e.enableLowInitialPlaylist,
                        f = e.sourceType,
                        h = e.seekTo;
                    if (!i) {
                        throw new Error('A non-empty playlist URL is required')
                    }
                    Oo = u;
                    n.withCredentials = a;
                    n.tech_ = s;
                    n.hls_ = s.hls;
                    n.seekTo_ = h;
                    n.sourceType_ = f;
                    n.useCueTags_ = l;
                    n.blacklistDuration = c;
                    n.enableLowInitialPlaylist = d;
                    if (n.useCueTags_) {
                        n.cueTagsTrack_ = n.tech_.addTextTrack('metadata', 'ad-cues');
                        n.cueTagsTrack_.inBandMetadataTrackDispatchType = ''
                    }
                    n.requestOptions_ = {
                        withCredentials: n.withCredentials,
                        timeout: null
                    };
                    n.mediaTypes_ = Io();
                    n.mediaSource = new t.MediaSource;
                    n.mediaSource.addEventListener('sourceopen', n.handleSourceOpen_.bind(n));
                    n.seekable_ = t.createTimeRanges();
                    n.hasPlayed_ = function () {
                        return false
                    };
                    n.syncController_ = new ho(e);
                    n.segmentMetadataTrack_ = s.addRemoteTextTrack({
                        kind: 'metadata',
                        label: 'segment-metadata'
                    }, false).track;
                    n.decrypter_ = new po;
                    n.inbandTextTracks_ = {
                    };
                    var p = {
                        hls: n.hls_,
                        mediaSource: n.mediaSource,
                        currentTime: n.tech_.currentTime.bind(n.tech_),
                        seekable: function e() {
                            return n.seekable()
                        },
                        seeking: function e() {
                            return n.tech_.seeking()
                        },
                        duration: function e() {
                            return n.mediaSource.duration
                        },
                        hasPlayed: function e() {
                            return n.hasPlayed_()
                        },
                        goalBufferLength: function e() {
                            return n.goalBufferLength()
                        },
                        bandwidth: o,
                        syncController: n.syncController_,
                        decrypter: n.decrypter_,
                        sourceType: n.sourceType_,
                        inbandTextTracks: n.inbandTextTracks_
                    };
                    n.masterPlaylistLoader_ = n.sourceType_ === 'dash' ? new Hr(i, n.hls_, n.withCredentials) : new B(i, n.hls_, n.withCredentials);
                    n.setupMasterPlaylistLoaderListeners_();
                    n.mainSegmentLoader_ = new Rs(t.mergeOptions(p, {
                        segmentMetadataTrack: n.segmentMetadataTrack_,
                        loaderType: 'main'
                    }), e);
                    n.audioSegmentLoader_ = new Rs(t.mergeOptions(p, {
                        loaderType: 'audio'
                    }), e);
                    n.subtitleSegmentLoader_ = new Us(t.mergeOptions(p, {
                        loaderType: 'vtt'
                    }), e);
                    n.setupSegmentLoaderListeners_();
                    xo.forEach(function (e) {
                        n[e + '_'] = Lo.bind(n, e)
                    });
                    n.logger_ = zr('MPC');
                    n.masterPlaylistLoader_.load();
                    return n
                }
                k(r, [
                    {
                        key: 'setupMasterPlaylistLoaderListeners_',
                        value: function e() {
                            var r = this;
                            this.masterPlaylistLoader_.on('loadedmetadata', function () {
                                var e = r.masterPlaylistLoader_.media();
                                var n = r.masterPlaylistLoader_.targetDuration * 1.5 * 1000;
                                if (ue(r.masterPlaylistLoader_.master, r.masterPlaylistLoader_.media())) {
                                    r.requestOptions_.timeout = 0
                                } else {
                                    r.requestOptions_.timeout = n
                                }
                                if (e.endList && r.tech_.preload() !== 'none') {
                                    r.mainSegmentLoader_.playlist(e, r.requestOptions_);
                                    r.mainSegmentLoader_.load()
                                }
                                Eo({
                                    sourceType: r.sourceType_,
                                    segmentLoaders: {
                                        AUDIO: r.audioSegmentLoader_,
                                        SUBTITLES: r.subtitleSegmentLoader_,
                                        main: r.mainSegmentLoader_
                                    },
                                    tech: r.tech_,
                                    requestOptions: r.requestOptions_,
                                    masterPlaylistLoader: r.masterPlaylistLoader_,
                                    hls: r.hls_,
                                    master: r.master(),
                                    mediaTypes: r.mediaTypes_,
                                    blacklistCurrentPlaylist: r.blacklistCurrentPlaylist.bind(r)
                                });
                                r.triggerPresenceUsage_(r.master(), e);
                                try {
                                    r.setupSourceBuffers_()
                                } catch (e) {
                                    t.log.warn('Failed to create SourceBuffers', e);
                                    return r.mediaSource.endOfStream('decode')
                                }
                                r.setupFirstPlay();
                                r.trigger('selectedinitialmedia')
                            });
                            this.masterPlaylistLoader_.on('loadedplaylist', function () {
                                var e = r.masterPlaylistLoader_.media();
                                if (!e) {
                                    r.excludeUnsupportedVariants_();
                                    var t = void 0;
                                    if (r.enableLowInitialPlaylist) {
                                        t = r.selectInitialPlaylist()
                                    }
                                    if (!t) {
                                        t = r.selectPlaylist()
                                    }
                                    r.initialMedia_ = t;
                                    r.masterPlaylistLoader_.media(r.initialMedia_);
                                    return
                                }
                                if (r.useCueTags_) {
                                    r.updateAdCues_(e)
                                }
                                r.mainSegmentLoader_.playlist(e, r.requestOptions_);
                                r.updateDuration();
                                if (!r.tech_.paused()) {
                                    r.mainSegmentLoader_.load();
                                    if (r.audioSegmentLoader_) {
                                        r.audioSegmentLoader_.load()
                                    }
                                }
                                if (!e.endList) {
                                    var n = function e() {
                                        var t = r.seekable();
                                        if (t.length !== 0) {
                                            r.mediaSource.addSeekableRange_(t.start(0), t.end(0))
                                        }
                                    };
                                    if (r.duration() !== Infinity) {
                                        var i = function e() {
                                            if (r.duration() === Infinity) {
                                                n()
                                            } else {
                                                r.tech_.one('durationchange', e)
                                            }
                                        };
                                        r.tech_.one('durationchange', i)
                                    } else {
                                        n()
                                    }
                                }
                            });
                            this.masterPlaylistLoader_.on('error', function () {
                                r.blacklistCurrentPlaylist(r.masterPlaylistLoader_.error)
                            });
                            this.masterPlaylistLoader_.on('mediachanging', function () {
                                r.mainSegmentLoader_.abort();
                                r.mainSegmentLoader_.pause()
                            });
                            this.masterPlaylistLoader_.on('mediachange', function () {
                                var e = r.masterPlaylistLoader_.media();
                                var t = r.masterPlaylistLoader_.targetDuration * 1.5 * 1000;
                                if (ue(r.masterPlaylistLoader_.master, r.masterPlaylistLoader_.media())) {
                                    r.requestOptions_.timeout = 0
                                } else {
                                    r.requestOptions_.timeout = t
                                }
                                r.mainSegmentLoader_.playlist(e, r.requestOptions_);
                                r.mainSegmentLoader_.load();
                                r.tech_.trigger({
                                    type: 'mediachange',
                                    bubbles: true
                                })
                            });
                            this.masterPlaylistLoader_.on('playlistunchanged', function () {
                                var e = r.masterPlaylistLoader_.media();
                                var t = r.stuckAtPlaylistEnd_(e);
                                if (t) {
                                    r.blacklistCurrentPlaylist({
                                        message: 'Playlist no longer updating.'
                                    });
                                    r.tech_.trigger('playliststuck')
                                }
                            });
                            this.masterPlaylistLoader_.on('renditiondisabled', function () {
                                r.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-rendition-disabled'
                                })
                            });
                            this.masterPlaylistLoader_.on('renditionenabled', function () {
                                r.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-rendition-enabled'
                                })
                            })
                        }
                    },
                    {
                        key: 'triggerPresenceUsage_',
                        value: function e(t, r) {
                            var n = t.mediaGroups || {
                            };
                            var i = true;
                            var a = Object.keys(n.AUDIO);
                            for (var s in n.AUDIO) {
                                for (var o in n.AUDIO[s]) {
                                    var u = n.AUDIO[s][o];
                                    if (!u.uri) {
                                        i = false
                                    }
                                }
                            }
                            if (i) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-demuxed'
                                })
                            }
                            if (Object.keys(n.SUBTITLES).length) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-webvtt'
                                })
                            }
                            if (Oo.Playlist.isAes(r)) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-aes'
                                })
                            }
                            if (Oo.Playlist.isFmp4(r)) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-fmp4'
                                })
                            }
                            if (a.length && Object.keys(n.AUDIO[a[0]]).length > 1) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-alternate-audio'
                                })
                            }
                            if (this.useCueTags_) {
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-playlist-cue-tags'
                                })
                            }
                        }
                    },
                    {
                        key: 'setupSegmentLoaderListeners_',
                        value: function e() {
                            var t = this;
                            this.mainSegmentLoader_.on('bandwidthupdate', function () {
                                var e = t.selectPlaylist();
                                var r = t.masterPlaylistLoader_.media();
                                var n = t.tech_.buffered();
                                var i = n.length ? n.end(n.length - 1) - t.tech_.currentTime() : 0;
                                var a = t.bufferLowWaterLine();
                                if (!r.endList || t.duration() < Yr.MAX_BUFFER_LOW_WATER_LINE || e.attributes.BANDWIDTH < r.attributes.BANDWIDTH || i >= a) {
                                    t.masterPlaylistLoader_.media(e)
                                }
                                t.tech_.trigger('bandwidthupdate')
                            });
                            this.mainSegmentLoader_.on('progress', function () {
                                t.trigger('progress')
                            });
                            this.mainSegmentLoader_.on('error', function () {
                                t.blacklistCurrentPlaylist(t.mainSegmentLoader_.error())
                            });
                            this.mainSegmentLoader_.on('syncinfoupdate', function () {
                                t.onSyncInfoUpdate_()
                            });
                            this.mainSegmentLoader_.on('timestampoffset', function () {
                                t.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-timestamp-offset'
                                })
                            });
                            this.audioSegmentLoader_.on('syncinfoupdate', function () {
                                t.onSyncInfoUpdate_()
                            });
                            this.mainSegmentLoader_.on('ended', function () {
                                t.onEndOfStream()
                            });
                            this.mainSegmentLoader_.on('earlyabort', function () {
                                t.blacklistCurrentPlaylist({
                                    message: 'Aborted early because there isn\'t enough bandwidth to complete the ' + 'request without rebuffering.'
                                }, Po)
                            });
                            this.mainSegmentLoader_.on('reseteverything', function () {
                                t.tech_.trigger('hls-reset')
                            });
                            this.mainSegmentLoader_.on('segmenttimemapping', function (e) {
                                t.tech_.trigger({
                                    type: 'hls-segment-time-mapping',
                                    mapping: e.mapping
                                })
                            });
                            this.audioSegmentLoader_.on('ended', function () {
                                t.onEndOfStream()
                            })
                        }
                    },
                    {
                        key: 'mediaSecondsLoaded_',
                        value: function e() {
                            return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded)
                        }
                    },
                    {
                        key: 'load',
                        value: function e() {
                            this.mainSegmentLoader_.load();
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                this.audioSegmentLoader_.load()
                            }
                            if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                this.subtitleSegmentLoader_.load()
                            }
                        }
                    },
                    {
                        key: 'smoothQualityChange_',
                        value: function e() {
                            var t = this.selectPlaylist();
                            if (t !== this.masterPlaylistLoader_.media()) {
                                this.masterPlaylistLoader_.media(t);
                                this.mainSegmentLoader_.resetLoader()
                            }
                        }
                    },
                    {
                        key: 'fastQualityChange_',
                        value: function e() {
                            var r = this;
                            var n = this.selectPlaylist();
                            if (n === this.masterPlaylistLoader_.media()) {
                                return
                            }
                            this.masterPlaylistLoader_.media(n);
                            this.mainSegmentLoader_.resetEverything(function () {
                                if (t.browser.IE_VERSION || t.browser.IS_EDGE) {
                                    r.tech_.setCurrentTime(r.tech_.currentTime() + 0.04)
                                } else {
                                    r.tech_.setCurrentTime(r.tech_.currentTime())
                                }
                            })
                        }
                    },
                    {
                        key: 'play',
                        value: function e() {
                            if (this.setupFirstPlay()) {
                                return
                            }
                            if (this.tech_.ended()) {
                                this.seekTo_(0)
                            }
                            if (this.hasPlayed_()) {
                                this.load()
                            }
                            var t = this.tech_.seekable();
                            if (this.tech_.duration() === Infinity) {
                                if (this.tech_.currentTime() < t.start(0)) {
                                    return this.seekTo_(t.end(t.length - 1))
                                }
                            }
                        }
                    },
                    {
                        key: 'setupFirstPlay',
                        value: function e() {
                            var r = this;
                            var n = this.masterPlaylistLoader_.media();
                            if (!n || this.tech_.paused() || this.hasPlayed_()) {
                                return false
                            }
                            if (!n.endList) {
                                var i = this.seekable();
                                if (!i.length) {
                                    return false
                                }
                                if (t.browser.IE_VERSION && this.tech_.readyState() === 0) {
                                    this.tech_.one('loadedmetadata', function () {
                                        r.trigger('firstplay');
                                        r.seekTo_(i.end(0));
                                        r.hasPlayed_ = function () {
                                            return true
                                        }
                                    });
                                    return false
                                }
                                this.trigger('firstplay');
                                this.seekTo_(i.end(0))
                            }
                            this.hasPlayed_ = function () {
                                return true
                            };
                            this.load();
                            return true
                        }
                    },
                    {
                        key: 'handleSourceOpen_',
                        value: function e() {
                            try {
                                this.setupSourceBuffers_()
                            } catch (e) {
                                t.log.warn('Failed to create Source Buffers', e);
                                return this.mediaSource.endOfStream('decode')
                            }
                            if (this.tech_.autoplay()) {
                                var r = this.tech_.play();
                                if (typeof r !== 'undefined' && typeof r.then === 'function') {
                                    r.then(null, function (e) {
                                    })
                                }
                            }
                            this.trigger('sourceopen')
                        }
                    },
                    {
                        key: 'onEndOfStream',
                        value: function e() {
                            var t = this.mainSegmentLoader_.ended_;
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {
                                    t = t && this.audioSegmentLoader_.ended_
                                } else {
                                    t = this.audioSegmentLoader_.ended_
                                }
                            }
                            if (t) {
                                this.mediaSource.endOfStream()
                            }
                        }
                    },
                    {
                        key: 'stuckAtPlaylistEnd_',
                        value: function e(t) {
                            var r = this.seekable();
                            if (!r.length) {
                                return false
                            }
                            var n = this.syncController_.getExpiredTime(t, this.mediaSource.duration);
                            if (n === null) {
                                return false
                            }
                            var i = Oo.Playlist.playlistEnd(t, n);
                            var a = this.tech_.currentTime();
                            var s = this.tech_.buffered();
                            if (!s.length) {
                                return i - a <= ze
                            }
                            var o = s.end(s.length - 1);
                            return o - a <= ze && i - o <= ze
                        }
                    },
                    {
                        key: 'blacklistCurrentPlaylist',
                        value: function e() {
                            var r = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
                            };
                            var n = arguments[1];
                            var i = void 0;
                            var a = void 0;
                            i = r.playlist || this.masterPlaylistLoader_.media();
                            n = n || r.blacklistDuration || this.blacklistDuration;
                            if (!i) {
                                this.error = r;
                                try {
                                    return this.mediaSource.endOfStream('network')
                                } catch (e) {
                                    return this.trigger('error')
                                }
                            }
                            var s = this.masterPlaylistLoader_.master.playlists.filter(re).length === 1;
                            if (s) {
                                t.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the final playlist.');
                                this.tech_.trigger('retryplaylist');
                                return this.masterPlaylistLoader_.load(s)
                            }
                            i.excludeUntil = Date.now() + n * 1000;
                            this.tech_.trigger('blacklistplaylist');
                            this.tech_.trigger({
                                type: 'usage',
                                name: 'hls-rendition-blacklisted'
                            });
                            a = this.selectPlaylist();
                            t.log.warn('Problem encountered with the current HLS playlist.' + (r.message ? ' ' + r.message : '') + ' Switching to another playlist.');
                            return this.masterPlaylistLoader_.media(a)
                        }
                    },
                    {
                        key: 'pauseLoading',
                        value: function e() {
                            this.mainSegmentLoader_.pause();
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                this.audioSegmentLoader_.pause()
                            }
                            if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                this.subtitleSegmentLoader_.pause()
                            }
                        }
                    },
                    {
                        key: 'setCurrentTime',
                        value: function e(t) {
                            var r = We(this.tech_.buffered(), t);
                            if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {
                                return 0
                            }
                            if (!this.masterPlaylistLoader_.media().segments) {
                                return 0
                            }
                            if (r && r.length) {
                                return t
                            }
                            this.mainSegmentLoader_.resetEverything();
                            this.mainSegmentLoader_.abort();
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                this.audioSegmentLoader_.resetEverything();
                                this.audioSegmentLoader_.abort()
                            }
                            if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {
                                this.subtitleSegmentLoader_.resetEverything();
                                this.subtitleSegmentLoader_.abort()
                            }
                            this.load()
                        }
                    },
                    {
                        key: 'duration',
                        value: function e() {
                            if (!this.masterPlaylistLoader_) {
                                return 0
                            }
                            if (this.mediaSource) {
                                return this.mediaSource.duration
                            }
                            return Oo.Playlist.duration(this.masterPlaylistLoader_.media())
                        }
                    },
                    {
                        key: 'seekable',
                        value: function e() {
                            return this.seekable_
                        }
                    },
                    {
                        key: 'onSyncInfoUpdate_',
                        value: function e() {
                            var r = void 0;
                            var n = void 0;
                            if (!this.masterPlaylistLoader_) {
                                return
                            }
                            var i = this.masterPlaylistLoader_.media();
                            if (!i) {
                                return
                            }
                            var a = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
                            if (a === null) {
                                return
                            }
                            r = Oo.Playlist.seekable(i, a);
                            if (r.length === 0) {
                                return
                            }
                            if (this.mediaTypes_.AUDIO.activePlaylistLoader) {
                                i = this.mediaTypes_.AUDIO.activePlaylistLoader.media();
                                a = this.syncController_.getExpiredTime(i, this.mediaSource.duration);
                                if (a === null) {
                                    return
                                }
                                n = Oo.Playlist.seekable(i, a);
                                if (n.length === 0) {
                                    return
                                }
                            }
                            if (!n) {
                                this.seekable_ = r
                            } else if (n.start(0) > r.end(0) || r.start(0) > n.end(0)) {
                                this.seekable_ = r
                            } else {
                                this.seekable_ = t.createTimeRanges([[n.start(0) > r.start(0) ? n.start(0) : r.start(0),
                                n.end(0) < r.end(0) ? n.end(0) : r.end(0)]])
                            }
                            this.logger_('seekable updated [' + Xe(this.seekable_) + ']');
                            this.tech_.trigger('seekablechanged')
                        }
                    },
                    {
                        key: 'updateDuration',
                        value: function e() {
                            var t = this;
                            var r = this.mediaSource.duration;
                            var n = Oo.Playlist.duration(this.masterPlaylistLoader_.media());
                            var i = this.tech_.buffered();
                            var a = function e() {
                                t.mediaSource.duration = n;
                                t.tech_.trigger('durationchange');
                                t.mediaSource.removeEventListener('sourceopen', e)
                            };
                            if (i.length > 0) {
                                n = Math.max(n, i.end(i.length - 1))
                            }
                            if (r !== n) {
                                if (this.mediaSource.readyState !== 'open') {
                                    this.mediaSource.addEventListener('sourceopen', a)
                                } else {
                                    a()
                                }
                            }
                        }
                    },
                    {
                        key: 'dispose',
                        value: function e() {
                            var t = this;
                            this.decrypter_.terminate();
                            this.masterPlaylistLoader_.dispose();
                            this.mainSegmentLoader_.dispose();
                            [
                                'AUDIO',
                                'SUBTITLES'
                            ].forEach(function (e) {
                                var r = t.mediaTypes_[e].groups;
                                for (var n in r) {
                                    r[n].forEach(function (e) {
                                        if (e.playlistLoader) {
                                            e.playlistLoader.dispose()
                                        }
                                    })
                                }
                            });
                            this.audioSegmentLoader_.dispose();
                            this.subtitleSegmentLoader_.dispose()
                        }
                    },
                    {
                        key: 'master',
                        value: function e() {
                            return this.masterPlaylistLoader_.master
                        }
                    },
                    {
                        key: 'media',
                        value: function e() {
                            return this.masterPlaylistLoader_.media() || this.initialMedia_
                        }
                    },
                    {
                        key: 'setupSourceBuffers_',
                        value: function e() {
                            var t = this.masterPlaylistLoader_.media();
                            var r = void 0;
                            if (!t || this.mediaSource.readyState !== 'open') {
                                return
                            }
                            r = kt(this.masterPlaylistLoader_.master, t);
                            if (r.length < 1) {
                                this.error = 'No compatible SourceBuffer configuration for the variant stream:' + t.resolvedUri;
                                return this.mediaSource.endOfStream('decode')
                            }
                            this.configureLoaderMimeTypes_(r);
                            this.excludeIncompatibleVariants_(t)
                        }
                    },
                    {
                        key: 'configureLoaderMimeTypes_',
                        value: function e(r) {
                            var n = r.length > 1 && r[0].indexOf(',') === - 1 && r[0] !== r[1] ? new t.EventTarget : null;
                            this.mainSegmentLoader_.mimeType(r[0], n);
                            if (r[1]) {
                                this.audioSegmentLoader_.mimeType(r[1], n)
                            }
                        }
                    },
                    {
                        key: 'excludeUnsupportedVariants_',
                        value: function e() {
                            this.master().playlists.forEach(function (e) {
                                if (e.attributes.CODECS && f.MediaSource && f.MediaSource.isTypeSupported && !f.MediaSource.isTypeSupported('video/mp4; codecs="' + _t(e.attributes.CODECS) + '"')) {
                                    e.excludeUntil = Infinity
                                }
                            })
                        }
                    },
                    {
                        key: 'excludeIncompatibleVariants_',
                        value: function e(t) {
                            var r = 2;
                            var n = null;
                            var i = void 0;
                            if (t.attributes.CODECS) {
                                i = yt(t.attributes.CODECS);
                                n = i.videoCodec;
                                r = i.codecCount
                            }
                            this.master().playlists.forEach(function (e) {
                                var t = {
                                    codecCount: 2,
                                    videoCodec: null
                                };
                                if (e.attributes.CODECS) {
                                    t = yt(e.attributes.CODECS)
                                }
                                if (t.codecCount !== r) {
                                    e.excludeUntil = Infinity
                                }
                                if (t.videoCodec !== n) {
                                    e.excludeUntil = Infinity
                                }
                            })
                        }
                    },
                    {
                        key: 'updateAdCues_',
                        value: function e(t) {
                            var r = 0;
                            var n = this.seekable();
                            if (n.length) {
                                r = n.start(0)
                            }
                            Bs(t, this.cueTagsTrack_, r)
                        }
                    },
                    {
                        key: 'goalBufferLength',
                        value: function e() {
                            var t = this.tech_.currentTime();
                            var r = Yr.GOAL_BUFFER_LENGTH;
                            var n = Yr.GOAL_BUFFER_LENGTH_RATE;
                            var i = Math.max(r, Yr.MAX_GOAL_BUFFER_LENGTH);
                            return Math.min(r + t * n, i)
                        }
                    },
                    {
                        key: 'bufferLowWaterLine',
                        value: function e() {
                            var t = this.tech_.currentTime();
                            var r = Yr.BUFFER_LOW_WATER_LINE;
                            var n = Yr.BUFFER_LOW_WATER_LINE_RATE;
                            var i = Math.max(r, Yr.MAX_BUFFER_LOW_WATER_LINE);
                            return Math.min(r + t * n, i)
                        }
                    }
                ]);
                return r
            }(t.EventTarget);
            var Ro = function e(t, r, n) {
                return function (e) {
                    var i = t.master.playlists[r];
                    var a = te(i);
                    var s = re(i);
                    if (typeof e === 'undefined') {
                        return s
                    }
                    if (e) {
                        delete i.disabled
                    } else {
                        i.disabled = true
                    }
                    if (e !== s && !a) {
                        n();
                        if (e) {
                            t.trigger('renditionenabled')
                        } else {
                            t.trigger('renditiondisabled')
                        }
                    }
                    return e
                }
            };
            var Mo = function e(t, r, n) {
                S(this, e);
                var i = t.masterPlaylistController_,
                    a = t.options_.smoothQualityChange;
                var s = a ? 'smooth' : 'fast';
                var o = i[s + 'QualityChange_'].bind(i);
                if (r.attributes.RESOLUTION) {
                    var u = r.attributes.RESOLUTION;
                    this.width = u.width;
                    this.height = u.height
                }
                this.bandwidth = r.attributes.BANDWIDTH;
                this.id = n;
                this.enabled = Ro(t.playlists, r.uri, o)
            };
            var jo = function e(t) {
                var r = t.playlists;
                t.representations = function () {
                    return r.master.playlists.filter(function (e) {
                        return !te(e)
                    }).map(function (e, r) {
                        return new Mo(t, e, e.uri)
                    })
                }
            };
            var Uo = [
                'seeking',
                'seeked',
                'pause',
                'playing',
                'error'
            ];
            var No = function () {
                function e(t) {
                    var r = this;
                    S(this, e);
                    this.tech_ = t.tech;
                    this.seekable = t.seekable;
                    this.seekTo = t.seekTo;
                    this.allowSeeksWithinUnsafeLiveWindow = t.allowSeeksWithinUnsafeLiveWindow;
                    this.media = t.media;
                    this.consecutiveUpdates = 0;
                    this.lastRecordedTime = null;
                    this.timer_ = null;
                    this.checkCurrentTimeTimeout_ = null;
                    this.logger_ = zr('PlaybackWatcher');
                    this.logger_('initialize');
                    var n = function e() {
                        return r.monitorCurrentTime_()
                    };
                    var i = function e() {
                        return r.techWaiting_()
                    };
                    var a = function e() {
                        return r.cancelTimer_()
                    };
                    var s = function e() {
                        return r.fixesBadSeeks_()
                    };
                    this.tech_.on('seekablechanged', s);
                    this.tech_.on('waiting', i);
                    this.tech_.on(Uo, a);
                    this.tech_.on('canplay', n);
                    this.dispose = function () {
                        r.logger_('dispose');
                        r.tech_.off('seekablechanged', s);
                        r.tech_.off('waiting', i);
                        r.tech_.off(Uo, a);
                        r.tech_.off('canplay', n);
                        if (r.checkCurrentTimeTimeout_) {
                            f.clearTimeout(r.checkCurrentTimeTimeout_)
                        }
                        r.cancelTimer_()
                    }
                }
                k(e, [
                    {
                        key: 'monitorCurrentTime_',
                        value: function e() {
                            this.checkCurrentTime_();
                            if (this.checkCurrentTimeTimeout_) {
                                f.clearTimeout(this.checkCurrentTimeTimeout_)
                            }
                            this.checkCurrentTimeTimeout_ = f.setTimeout(this.monitorCurrentTime_.bind(this), 250)
                        }
                    },
                    {
                        key: 'checkCurrentTime_',
                        value: function e() {
                            if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                                this.consecutiveUpdates = 0;
                                this.lastRecordedTime = this.tech_.currentTime();
                                return
                            }
                            if (this.tech_.paused() || this.tech_.seeking()) {
                                return
                            }
                            var t = this.tech_.currentTime();
                            var r = this.tech_.buffered();
                            if (this.lastRecordedTime === t && (!r.length || t + ze >= r.end(r.length - 1))) {
                                return this.techWaiting_()
                            }
                            if (this.consecutiveUpdates >= 5 && t === this.lastRecordedTime) {
                                this.consecutiveUpdates++;
                                this.waiting_()
                            } else if (t === this.lastRecordedTime) {
                                this.consecutiveUpdates++
                            } else {
                                this.consecutiveUpdates = 0;
                                this.lastRecordedTime = t
                            }
                        }
                    },
                    {
                        key: 'cancelTimer_',
                        value: function e() {
                            this.consecutiveUpdates = 0;
                            if (this.timer_) {
                                this.logger_('cancelTimer_');
                                clearTimeout(this.timer_)
                            }
                            this.timer_ = null
                        }
                    },
                    {
                        key: 'fixesBadSeeks_',
                        value: function e() {
                            var t = this.tech_.seeking();
                            if (!t) {
                                return false
                            }
                            var r = this.seekable();
                            var n = this.tech_.currentTime();
                            var i = this.afterSeekableWindow_(r, n, this.media(), this.allowSeeksWithinUnsafeLiveWindow);
                            var a = void 0;
                            if (i) {
                                var s = r.end(r.length - 1);
                                a = s
                            }
                            if (this.beforeSeekableWindow_(r, n)) {
                                var o = r.start(0);
                                a = o + ze
                            }
                            if (typeof a !== 'undefined') {
                                this.logger_('Trying to seek outside of seekable at time ' + n + ' with ' + ('seekable range ' + Xe(r) + '. Seeking to ') + (a + '.'));
                                this.seekTo(a);
                                return true
                            }
                            return false
                        }
                    },
                    {
                        key: 'waiting_',
                        value: function e() {
                            if (this.techWaiting_()) {
                                return
                            }
                            var t = this.tech_.currentTime();
                            var r = this.tech_.buffered();
                            var n = We(r, t);
                            if (n.length && t + 3 <= n.end(0)) {
                                this.cancelTimer_();
                                this.seekTo(t);
                                this.logger_('Stopped at ' + t + ' while inside a buffered region ' + ('[' + n.start(0) + ' -> ' + n.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.');
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-unknown-waiting'
                                });
                                return
                            }
                        }
                    },
                    {
                        key: 'techWaiting_',
                        value: function e() {
                            var t = this.seekable();
                            var r = this.tech_.currentTime();
                            if (this.tech_.seeking() && this.fixesBadSeeks_()) {
                                return true
                            }
                            if (this.tech_.seeking() || this.timer_ !== null) {
                                return true
                            }
                            if (this.beforeSeekableWindow_(t, r)) {
                                var n = t.end(t.length - 1);
                                this.logger_('Fell out of live window at time ' + r + '. Seeking to ' + ('live point (seekable end) ' + n));
                                this.cancelTimer_();
                                this.seekTo(n);
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-live-resync'
                                });
                                return true
                            }
                            var i = this.tech_.buffered();
                            var a = Ye(i, r);
                            if (this.videoUnderflow_(a, i, r)) {
                                this.cancelTimer_();
                                this.seekTo(r);
                                this.tech_.trigger({
                                    type: 'usage',
                                    name: 'hls-video-underflow'
                                });
                                return true
                            }
                            if (a.length > 0) {
                                var s = a.start(0) - r;
                                this.logger_('Stopped at ' + r + ', setting timer for ' + s + ', seeking ' + ('to ' + a.start(0)));
                                this.timer_ = setTimeout(this.skipTheGap_.bind(this), s * 1000, r);
                                return true
                            }
                            return false
                        }
                    },
                    {
                        key: 'afterSeekableWindow_',
                        value: function e(t, r, n) {
                            var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
                            if (!t.length) {
                                return false
                            }
                            var a = t.end(t.length - 1) + ze;
                            var s = !n.endList;
                            if (s && i) {
                                a = t.end(t.length - 1) + n.targetDuration * 3
                            }
                            if (r > a) {
                                return true
                            }
                            return false
                        }
                    },
                    {
                        key: 'beforeSeekableWindow_',
                        value: function e(t, r) {
                            if (t.length && t.start(0) > 0 && r < t.start(0) - ze) {
                                return true
                            }
                            return false
                        }
                    },
                    {
                        key: 'videoUnderflow_',
                        value: function e(t, r, n) {
                            if (t.length === 0) {
                                var i = this.gapFromVideoUnderflow_(r, n);
                                if (i) {
                                    this.logger_('Encountered a gap in video from ' + i.start + ' to ' + i.end + '. ' + ('Seeking to current time ' + n));
                                    return true
                                }
                            }
                            return false
                        }
                    },
                    {
                        key: 'skipTheGap_',
                        value: function e(t) {
                            var r = this.tech_.buffered();
                            var n = this.tech_.currentTime();
                            var i = Ye(r, n);
                            this.cancelTimer_();
                            if (i.length === 0 || n !== t) {
                                return
                            }
                            this.logger_('skipTheGap_:', 'currentTime:', n, 'scheduled currentTime:', t, 'nextRange start:', i.start(0));
                            this.seekTo(i.start(0) + He);
                            this.tech_.trigger({
                                type: 'usage',
                                name: 'hls-gap-skip'
                            })
                        }
                    },
                    {
                        key: 'gapFromVideoUnderflow_',
                        value: function e(t, r) {
                            var n = $e(t);
                            for (var i = 0; i < n.length; i++) {
                                var a = n.start(i);
                                var s = n.end(i);
                                if (r - a < 4 && r - a > 2) {
                                    return {
                                        start: a,
                                        end: s
                                    }
                                }
                            }
                            return null
                        }
                    }
                ]);
                return e
            }();
            var Bo = {
                errorInterval: 30,
                getSource: function e(t) {
                    var r = this.tech({
                        IWillNotUseThisInPlugins: true
                    });
                    var n = r.currentSource_;
                    return t(n)
                }
            };
            var qo = function e(r, n) {
                var i = 0;
                var a = 0;
                var s = t.mergeOptions(Bo, n);
                r.ready(function () {
                    r.trigger({
                        type: 'usage',
                        name: 'hls-error-reload-initialized'
                    })
                });
                var o = function e() {
                    if (a) {
                        r.currentTime(a)
                    }
                };
                var u = function e(t) {
                    if (t === null || t === undefined) {
                        return
                    }
                    a = r.duration() !== Infinity && r.currentTime() || 0;
                    r.one('loadedmetadata', o);
                    r.src(t);
                    r.trigger({
                        type: 'usage',
                        name: 'hls-error-reload'
                    });
                    r.play()
                };
                var l = function e() {
                    if (Date.now() - i < s.errorInterval * 1000) {
                        r.trigger({
                            type: 'usage',
                            name: 'hls-error-reload-canceled'
                        });
                        return
                    }
                    if (!s.getSource || typeof s.getSource !== 'function') {
                        t.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');
                        return
                    }
                    i = Date.now();
                    return s.getSource.call(r, u)
                };
                var c = function e() {
                    r.off('loadedmetadata', o);
                    r.off('error', l);
                    r.off('dispose', e)
                };
                var d = function t(n) {
                    c();
                    e(r, n)
                };
                r.on('error', l);
                r.on('dispose', c);
                r.reloadSourceOnError = d
            };
            var Fo = function e(t) {
                qo(this, t)
            };
            var Vo = '1.8.0';
            t.use('*', function (e) {
                return {
                    setSource: function e(t, r) {
                        r(null, t)
                    },
                    setCurrentTime: function t(r) {
                        if (e.vhs && e.currentSource().src === e.vhs.source_.src) {
                            e.vhs.setCurrentTime(r)
                        }
                        return r
                    },
                    play: function t() {
                        if (e.vhs && e.currentSource().src === e.vhs.source_.src) {
                            e.vhs.setCurrentTime(e.currentTime())
                        }
                    }
                }
            });
            var Ho = {
                PlaylistLoader: B,
                Playlist: le,
                Decrypter: we,
                AsyncStream: Ae,
                decrypt: ke,
                utils: Re,
                STANDARD_PLAYLIST_SELECTOR: Sn,
                INITIAL_PLAYLIST_SELECTOR: wn,
                comparePlaylistBandwidth: bn,
                comparePlaylistResolution: Tn,
                xhr: fe()
            };
            [
                'GOAL_BUFFER_LENGTH',
                'MAX_GOAL_BUFFER_LENGTH',
                'GOAL_BUFFER_LENGTH_RATE',
                'BUFFER_LOW_WATER_LINE',
                'MAX_BUFFER_LOW_WATER_LINE',
                'BUFFER_LOW_WATER_LINE_RATE',
                'BANDWIDTH_VARIANCE'
            ].forEach(function (e) {
                Object.defineProperty(Ho, e, {
                    get: function r() {
                        t.log.warn('using Hls.' + e + ' is UNSAFE be sure you know what you are doing');
                        return Yr[e]
                    },
                    set: function r(n) {
                        t.log.warn('using Hls.' + e + ' is UNSAFE be sure you know what you are doing');
                        if (typeof n !== 'number' || n < 0) {
                            t.log.warn('value of Hls.' + e + ' must be greater than or equal to 0');
                            return
                        }
                        Yr[e] = n
                    }
                })
            });
            var zo = 'videojs-vhs';
            var Go = function e(t) {
                var r = /^(audio|video|application)\/(x-|vnd\.apple\.)?mpegurl/i;
                if (r.test(t)) {
                    return 'hls'
                }
                var n = /^application\/dash\+xml/i;
                if (n.test(t)) {
                    return 'dash'
                }
                return null
            };
            var Wo = function e(t, r) {
                var n = r.media();
                var i = - 1;
                for (var a = 0; a < t.length; a++) {
                    if (t[a].id === n.uri) {
                        i = a;
                        break
                    }
                }
                t.selectedIndex_ = i;
                t.trigger({
                    selectedIndex: i,
                    type: 'change'
                })
            };
            var Yo = function e(t, r) {
                r.representations().forEach(function (e) {
                    t.addQualityLevel(e)
                });
                Wo(t, r.playlists)
            };
            Ho.canPlaySource = function () {
                return t.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\'s techOrder.')
            };
            var $o = function e(r, n, i) {
                if (!r) {
                    return r
                }
                var a = {
                };
                for (var s in r) {
                    a[s] = {
                        audioContentType: 'audio/mp4; codecs="' + i.attributes.CODECS + '"',
                        videoContentType: 'video/mp4; codecs="' + n.attributes.CODECS + '"'
                    };
                    if (n.contentProtection && n.contentProtection[s] && n.contentProtection[s].pssh) {
                        a[s].pssh = n.contentProtection[s].pssh
                    }
                    if (typeof r[s] === 'string') {
                        a[s].url = r[s]
                    }
                }
                return t.mergeOptions(r, a)
            };
            var Xo = function e(r) {
                if (r.options_.sourceType !== 'dash') {
                    return
                }
                var n = t.players[r.tech_.options_.playerId];
                if (n.eme) {
                    var i = $o(r.source_.keySystems, r.playlists.media(), r.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());
                    if (i) {
                        n.currentSource().keySystems = i;
                        if (n.eme.initializeMediaKeys) {
                            n.eme.initializeMediaKeys()
                        }
                    }
                }
            };
            var Ko = function e() {
                if (!window.localStorage) {
                    return null
                }
                var t = window.localStorage.getItem(zo);
                if (!t) {
                    return null
                }
                try {
                    return JSON.parse(t)
                } catch (e) {
                    return null
                }
            };
            var Qo = function e(r) {
                if (!window.localStorage) {
                    return false
                }
                var n = Ko();
                n = n ? t.mergeOptions(n, r) : r;
                try {
                    window.localStorage.setItem(zo, JSON.stringify(n))
                } catch (e) {
                    return false
                }
                return n
            };
            Ho.supportsNativeHls = function () {
                var e = l.createElement('video');
                if (!t.getTech('Html5').isSupported()) {
                    return false
                }
                var r = [
                    'application/vnd.apple.mpegurl',
                    'audio/mpegurl',
                    'audio/x-mpegurl',
                    'application/x-mpegurl',
                    'video/x-mpegurl',
                    'video/mpegurl',
                    'application/mpegurl'
                ];
                return r.some(function (t) {
                    return /maybe|probably/i.test(e.canPlayType(t))
                })
            }();
            Ho.supportsNativeDash = function () {
                if (!t.getTech('Html5').isSupported()) {
                    return false
                }
                return /maybe|probably/i.test(l.createElement('video').canPlayType('application/dash+xml'))
            }();
            Ho.supportsTypeNatively = function (e) {
                if (e === 'hls') {
                    return Ho.supportsNativeHls
                }
                if (e === 'dash') {
                    return Ho.supportsNativeDash
                }
                return false
            };
            Ho.isSupported = function () {
                return t.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\'s techOrder.')
            };
            var Jo = t.getComponent('Component');
            var Zo = function (e) {
                C(r, e);
                function r(e, n, i) {
                    S(this, r);
                    var a = E(this, (r.__proto__ || Object.getPrototypeOf(r)).call(this, n, i.hls));
                    if (n.options_ && n.options_.playerId) {
                        var s = t(n.options_.playerId);
                        if (!s.hasOwnProperty('hls')) {
                            Object.defineProperty(s, 'hls', {
                                get: function e() {
                                    t.log.warn('player.hls is deprecated. Use player.tech().hls instead.');
                                    n.trigger({
                                        type: 'usage',
                                        name: 'hls-player-access'
                                    });
                                    return a
                                },
                                configurable: true
                            })
                        }
                        s.vhs = a;
                        s.dash = a;
                        a.player_ = s
                    }
                    a.tech_ = n;
                    a.source_ = e;
                    a.stats = {
                    };
                    a.setOptions_();
                    if (a.options_.overrideNative && n.overrideNativeAudioTracks && n.overrideNativeVideoTracks) {
                        n.overrideNativeAudioTracks(true);
                        n.overrideNativeVideoTracks(true)
                    } else if (a.options_.overrideNative && (n.featuresNativeVideoTracks || n.featuresNativeAudioTracks)) {
                        throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB')
                    }
                    a.on(l, [
                        'fullscreenchange',
                        'webkitfullscreenchange',
                        'mozfullscreenchange',
                        'MSFullscreenChange'
                    ], function (e) {
                        var t = l.fullscreenElement || l.webkitFullscreenElement || l.mozFullScreenElement || l.msFullscreenElement;
                        if (t && t.contains(a.tech_.el())) {
                            a.masterPlaylistController_.smoothQualityChange_()
                        }
                    });
                    a.on(a.tech_, 'seeking', function () {
                        if (this.tech_.seeking() && this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {
                            this.setCurrentTime(0)
                        }
                    });
                    a.on(a.tech_, 'error', function () {
                        if (this.masterPlaylistController_) {
                            this.masterPlaylistController_.pauseLoading()
                        }
                    });
                    a.on(a.tech_, 'play', a.play);
                    return a
                }
                k(r, [
                    {
                        key: 'setOptions_',
                        value: function e() {
                            var t = this;
                            this.options_.withCredentials = this.options_.withCredentials || false;
                            this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;
                            this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;
                            this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;
                            this.options_.customTagParsers = this.options_.customTagParsers || [
                            ];
                            this.options_.customTagMappers = this.options_.customTagMappers || [
                            ];
                            if (typeof this.options_.blacklistDuration !== 'number') {
                                this.options_.blacklistDuration = 5 * 60
                            }
                            if (typeof this.options_.bandwidth !== 'number') {
                                if (this.options_.useBandwidthFromLocalStorage) {
                                    var r = Ko();
                                    if (r && r.bandwidth) {
                                        this.options_.bandwidth = r.bandwidth;
                                        this.tech_.trigger({
                                            type: 'usage',
                                            name: 'hls-bandwidth-from-local-storage'
                                        })
                                    }
                                    if (r && r.throughput) {
                                        this.options_.throughput = r.throughput;
                                        this.tech_.trigger({
                                            type: 'usage',
                                            name: 'hls-throughput-from-local-storage'
                                        })
                                    }
                                }
                            }
                            if (typeof this.options_.bandwidth !== 'number') {
                                this.options_.bandwidth = Yr.INITIAL_BANDWIDTH
                            }
                            this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Yr.INITIAL_BANDWIDTH;
                            [
                                'withCredentials',
                                'limitRenditionByPlayerDimensions',
                                'bandwidth',
                                'smoothQualityChange',
                                'customTagParsers',
                                'customTagMappers'
                            ].forEach(function (e) {
                                if (typeof t.source_[e] !== 'undefined') {
                                    t.options_[e] = t.source_[e]
                                }
                            });
                            this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions
                        }
                    },
                    {
                        key: 'src',
                        value: function e(r, n) {
                            var i = this;
                            if (!r) {
                                return
                            }
                            this.setOptions_();
                            this.options_.url = this.source_.src;
                            this.options_.tech = this.tech_;
                            this.options_.externHls = Ho;
                            this.options_.sourceType = Go(n);
                            this.options_.seekTo = function (e) {
                                i.tech_.setCurrentTime(e);
                                i.setCurrentTime(e)
                            };
                            this.masterPlaylistController_ = new Do(this.options_);
                            this.playbackWatcher_ = new No(t.mergeOptions(this.options_, {
                                seekable: function e() {
                                    return i.seekable()
                                },
                                media: function e() {
                                    return i.masterPlaylistController_.media()
                                }
                            }));
                            this.masterPlaylistController_.on('error', function () {
                                var e = t.players[i.tech_.options_.playerId];
                                e.error(i.masterPlaylistController_.error)
                            });
                            this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Ho.STANDARD_PLAYLIST_SELECTOR.bind(this);
                            this.masterPlaylistController_.selectInitialPlaylist = Ho.INITIAL_PLAYLIST_SELECTOR.bind(this);
                            this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;
                            this.mediaSource = this.masterPlaylistController_.mediaSource;
                            Object.defineProperties(this, {
                                selectPlaylist: {
                                    get: function e() {
                                        return this.masterPlaylistController_.selectPlaylist
                                    },
                                    set: function e(t) {
                                        this.masterPlaylistController_.selectPlaylist = t.bind(this)
                                    }
                                },
                                throughput: {
                                    get: function e() {
                                        return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate
                                    },
                                    set: function e(t) {
                                        this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = t;
                                        this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1
                                    }
                                },
                                bandwidth: {
                                    get: function e() {
                                        return this.masterPlaylistController_.mainSegmentLoader_.bandwidth
                                    },
                                    set: function e(t) {
                                        this.masterPlaylistController_.mainSegmentLoader_.bandwidth = t;
                                        this.masterPlaylistController_.mainSegmentLoader_.throughput = {
                                            rate: 0,
                                            count: 0
                                        }
                                    }
                                },
                                systemBandwidth: {
                                    get: function e() {
                                        var t = 1 / (this.bandwidth || 1);
                                        var r = void 0;
                                        if (this.throughput > 0) {
                                            r = 1 / this.throughput
                                        } else {
                                            r = 0
                                        }
                                        var n = Math.floor(1 / (t + r));
                                        return n
                                    },
                                    set: function e() {
                                        t.log.error('The "systemBandwidth" property is read-only')
                                    }
                                }
                            });
                            if (this.options_.bandwidth) {
                                this.bandwidth = this.options_.bandwidth
                            }
                            if (this.options_.throughput) {
                                this.throughput = this.options_.throughput
                            }
                            Object.defineProperties(this.stats, {
                                bandwidth: {
                                    get: function e() {
                                        return i.bandwidth || 0
                                    },
                                    enumerable: true
                                },
                                mediaRequests: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaRequests_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaRequestsAborted: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaRequestsAborted_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaRequestsTimedout: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaRequestsTimedout_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaRequestsErrored: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaRequestsErrored_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaTransferDuration: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaTransferDuration_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaBytesTransferred: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaBytesTransferred_() || 0
                                    },
                                    enumerable: true
                                },
                                mediaSecondsLoaded: {
                                    get: function e() {
                                        return i.masterPlaylistController_.mediaSecondsLoaded_() || 0
                                    },
                                    enumerable: true
                                },
                                buffered: {
                                    get: function e() {
                                        return Qe(i.tech_.buffered())
                                    },
                                    enumerable: true
                                },
                                currentTime: {
                                    get: function e() {
                                        return i.tech_.currentTime()
                                    },
                                    enumerable: true
                                },
                                currentSource: {
                                    get: function e() {
                                        return i.tech_.currentSource_
                                    },
                                    enumerable: true
                                },
                                currentTech: {
                                    get: function e() {
                                        return i.tech_.name_
                                    },
                                    enumerable: true
                                },
                                duration: {
                                    get: function e() {
                                        return i.tech_.duration()
                                    },
                                    enumerable: true
                                },
                                master: {
                                    get: function e() {
                                        return i.playlists.master
                                    },
                                    enumerable: true
                                },
                                playerDimensions: {
                                    get: function e() {
                                        return i.tech_.currentDimensions()
                                    },
                                    enumerable: true
                                },
                                seekable: {
                                    get: function e() {
                                        return Qe(i.tech_.seekable())
                                    },
                                    enumerable: true
                                },
                                timestamp: {
                                    get: function e() {
                                        return Date.now()
                                    },
                                    enumerable: true
                                },
                                videoPlaybackQuality: {
                                    get: function e() {
                                        return i.tech_.getVideoPlaybackQuality()
                                    },
                                    enumerable: true
                                }
                            });
                            this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));
                            this.tech_.on('bandwidthupdate', function () {
                                if (i.options_.useBandwidthFromLocalStorage) {
                                    Qo({
                                        bandwidth: i.bandwidth,
                                        throughput: Math.round(i.throughput)
                                    })
                                }
                            });
                            this.masterPlaylistController_.on('selectedinitialmedia', function () {
                                jo(i);
                                Xo(i)
                            });
                            this.on(this.masterPlaylistController_, 'progress', function () {
                                this.tech_.trigger('progress')
                            });
                            this.tech_.ready(function () {
                                return i.setupQualityLevels_()
                            });
                            if (!this.tech_.el()) {
                                return
                            }
                            this.tech_.src(t.URL.createObjectURL(this.masterPlaylistController_.mediaSource))
                        }
                    },
                    {
                        key: 'setupQualityLevels_',
                        value: function e() {
                            var r = this;
                            var n = t.players[this.tech_.options_.playerId];
                            if (n && n.qualityLevels) {
                                this.qualityLevels_ = n.qualityLevels();
                                this.masterPlaylistController_.on('selectedinitialmedia', function () {
                                    Yo(r.qualityLevels_, r)
                                });
                                this.playlists.on('mediachange', function () {
                                    Wo(r.qualityLevels_, r.playlists)
                                })
                            }
                        }
                    },
                    {
                        key: 'play',
                        value: function e() {
                            this.masterPlaylistController_.play()
                        }
                    },
                    {
                        key: 'setCurrentTime',
                        value: function e(t) {
                            this.masterPlaylistController_.setCurrentTime(t)
                        }
                    },
                    {
                        key: 'duration',
                        value: function e() {
                            return this.masterPlaylistController_.duration()
                        }
                    },
                    {
                        key: 'seekable',
                        value: function e() {
                            return this.masterPlaylistController_.seekable()
                        }
                    },
                    {
                        key: 'dispose',
                        value: function e() {
                            if (this.playbackWatcher_) {
                                this.playbackWatcher_.dispose()
                            }
                            if (this.masterPlaylistController_) {
                                this.masterPlaylistController_.dispose()
                            }
                            if (this.qualityLevels_) {
                                this.qualityLevels_.dispose()
                            }
                            if (this.player_) {
                                delete this.player_.vhs;
                                delete this.player_.dash;
                                delete this.player_.hls
                            }
                            if (this.tech_ && this.tech_.hls) {
                                delete this.tech_.hls
                            }
                            w(r.prototype.__proto__ || Object.getPrototypeOf(r.prototype), 'dispose', this).call(this)
                        }
                    },
                    {
                        key: 'convertToStreamTime',
                        value: function e(t, r) {
                            return Fe({
                                playlist: this.masterPlaylistController_.media(),
                                time: t,
                                callback: r
                            })
                        }
                    },
                    {
                        key: 'seekToStreamTime',
                        value: function e(t, r) {
                            var n = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
                            var i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;
                            return Ve({
                                streamTime: t,
                                playlist: this.masterPlaylistController_.media(),
                                retryCount: i,
                                pauseAfterSeek: n,
                                seekTo: this.options_.seekTo,
                                tech: this.options_.tech,
                                callback: r
                            })
                        }
                    }
                ]);
                return r
            }(Jo);
            var eu = {
                name: 'videojs-http-streaming',
                VERSION: Vo,
                canHandleSource: function e(r) {
                    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                    };
                    var i = t.mergeOptions(t.options, n);
                    return eu.canPlayType(r.type, i)
                },
                handleSource: function e(r, n) {
                    var i = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
                    };
                    var a = t.mergeOptions(t.options, i);
                    n.hls = new Zo(r, n, a);
                    n.hls.xhr = fe();
                    n.hls.src(r.src, r.type);
                    return n.hls
                },
                canPlayType: function e(r) {
                    var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
                    };
                    var i = t.mergeOptions(t.options, n),
                        a = i.hls.overrideNative;
                    var s = Go(r);
                    var o = s && (!Ho.supportsTypeNatively(s) || a);
                    return o ? 'maybe' : ''
                }
            };
            if (typeof t.MediaSource === 'undefined' || typeof t.URL === 'undefined') {
                t.MediaSource = Nt;
                t.URL = Bt
            }
            if (Nt.supportsNativeMediaSources()) {
                t.getTech('Html5').registerSourceHandler(eu, 0)
            }
            t.HlsHandler = Zo;
            t.HlsSourceHandler = eu;
            t.Hls = Ho;
            if (!t.use) {
                t.registerComponent('Hls', Ho)
            }
            t.options.hls = t.options.hls || {
            };
            if (t.registerPlugin) {
                t.registerPlugin('reloadSourceOnError', Fo)
            } else {
                t.plugin('reloadSourceOnError', Fo)
            }
            e.LOCAL_STORAGE_KEY = zo;
            e.Hls = Ho;
            e.HlsHandler = Zo;
            e.HlsSourceHandler = eu;
            e.emeKeySystems = $o;
            e.simpleTypeFromSourceType = Go;
            Object.defineProperty(e, '__esModule', {
                value: true
            })
        });
        (function () {
            if (videojs.getPlugin('contextmenu')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsContextmenu = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                var t = '2.0.2';
                var r = e.registerPlugin || e.plugin;
                var n = {
                    cancel: true,
                    sensitivity: 10,
                    wait: 500,
                    disabled: false
                };
                var i = 'vjs-contextmenu';
                function a(e, t) {
                    if (e.contextmenu.options.disabled) {
                        return e
                    }
                    var r = {
                        target: e,
                        type: i
                    };
                    [
                        'clientX',
                        'clientY',
                        'pageX',
                        'pageY',
                        'screenX',
                        'screenY'
                    ].forEach(function (e) {
                        r[e] = t[e]
                    });
                    return e.trigger(r)
                }
                function s(e) {
                    var t = this.contextmenu.current;
                    if (!t) {
                        return
                    }
                    var r = this.contextmenu.options.wait;
                    if (e.type === 'touchend' && Number(new Date) - t.time >= r) {
                        a(this, e)
                    }
                    this.contextmenu.current = null
                }
                function o(e) {
                    var t = this.contextmenu.current;
                    if (!t) {
                        return
                    }
                    var r = e.touches[0];
                    var n = this.contextmenu.options.sensitivity;
                    if (r.screenX - t.screenX > n || r.screenY - t.screenY > n) {
                        this.contextmenu.current = null
                    }
                }
                function u(e) {
                    if (this.contextmenu.current) {
                        return
                    }
                    var t = e.touches[0];
                    this.contextmenu.current = {
                        screenX: t.screenX,
                        screenY: t.screenY,
                        time: Number(new Date)
                    }
                }
                function l(e) {
                    if (this.contextmenu.options.cancel && !this.contextmenu.options.disabled) {
                        e.preventDefault()
                    }
                    a(this, e);
                    this.off(['touchcancel',
                        'touchend'], s);
                    this.off('touchmove', o);
                    this.off('touchstart', u)
                }
                function c(t) {
                    var r = this;
                    this.contextmenu.options = e.mergeOptions(n, t);
                    this.contextmenu.VERSION = '__VERSION__';
                    this.on('contextmenu', l);
                    this.on(['touchcancel',
                        'touchend'], s);
                    this.on('touchmove', o);
                    this.on('touchstart', u);
                    this.ready(function () {
                        return r.addClass(i)
                    })
                }
                r('contextmenu', c);
                c.VERSION = t;
                return c
            })
        })();
        (function () {
            if (videojs.getPlugin('proxyTracks')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsProxyTracks = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = 'default' in e ? e['default'] : e;
                var t = function (e, t) {
                    if (!(e instanceof t)) {
                        throw new TypeError('Cannot call a class as a function')
                    }
                };
                var r = function (e, t) {
                    if (typeof t !== 'function' && t !== null) {
                        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
                    }
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                };
                var n = function (e, t) {
                    if (!e) {
                        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                    }
                    return t && (typeof t === 'object' || typeof t === 'function') ? t : e
                };
                var i = {
                    activeCues: null,
                    cues: null,
                    id: '',
                    inBandMetadataTrackDispatchType: undefined,
                    kind: 'metadata',
                    label: '',
                    language: '',
                    mode: '',
                    oncuechange: undefined
                };
                var a = [
                    'activeCues',
                    'cues',
                    'id',
                    'inBandMetadataTrackDispatchType',
                    'kind',
                    'label',
                    'language'
                ];
                var s = [
                    'mode'
                ];
                var o = function e(t, r) {
                    if (t === 'media' && r.kind === 'metadata' && r.label === 'media-cues') {
                        return true
                    }
                    if (t === 'id3' && r.inBandMetadataTrackDispatchType && r.inBandMetadataTrackDispatchType.length > 0) {
                        return true
                    }
                    return false
                };
                var u = function (u) {
                    r(l, u);
                    function l(r, o) {
                        var c;
                        t(this, l);
                        var d = n(this, u.call(this));
                        var f = d;
                        f.player_ = r;
                        f.reTriggerEvent_ = e.bind(f, f.reTriggerEvent_);
                        f.update_ = e.bind(f, f.update_);
                        f.type_ = o;
                        a.concat(s).forEach(function (e) {
                            var t = {
                                get: function t() {
                                    return f.track_ && f.track_[e] || i[e]
                                },
                                enumerable: true
                            };
                            if (s.indexOf(e) !== - 1) {
                                t.set = function (t) {
                                    if (!f.track_) {
                                        return
                                    }
                                    f.track_[e] = t
                                }
                            }
                            Object.defineProperty(f, e, t)
                        });
                        f.update_();
                        var h = r.textTracks();
                        var p = function e(t) {
                            if (!f.track_) {
                                f.update_(t)
                            }
                        };
                        [
                            'addtrack',
                            'removetrack'
                        ].forEach(function (e) {
                            return h.addEventListener(e, f.update_)
                        });
                        f.player_.on('timeupdate', p);
                        return c = f,
                            n(d, c)
                    }
                    l.prototype.addCue = function e() {
                        var t = this;
                        var r = arguments;
                        if (!this.track_) {
                            this.one('trackexists', function () {
                                return t.addCue.apply(t, r)
                            });
                            return
                        }
                        return this.track_.addCue.apply(this.track_, r)
                    };
                    l.prototype.removeCue = function e() {
                        var t = this;
                        var r = arguments;
                        if (!this.track_) {
                            return this.one('trackexists', function () {
                                return t.removeCue.apply(t, r)
                            })
                        }
                        return this.track_.removeCue.apply(this.track_, r)
                    };
                    l.prototype.reTriggerEvent_ = function e(t) {
                        this.trigger(t)
                    };
                    l.prototype.update_ = function e() {
                        var t = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
                        };
                        var r = void 0;
                        if (t.type === 'removetrack' && t.track && t.track === this.track_) {
                            r = null
                        } else if (t.type === 'addtrack' && t.track && !this.track_ && o(this.type_, t.track)) {
                            r = t.track
                        } else {
                            var n = this.player_.textTracks();
                            var i = n.length;
                            while (i--) {
                                if (o(this.type_, n[i])) {
                                    r = n[i];
                                    break
                                }
                            }
                        }
                        if (this.track_ === r) {
                            return
                        }
                        if (this.track_) {
                            this.track_.removeEventListener('cuechange', this.reTriggerEvent_)
                        }
                        this.track_ = r;
                        if (!this.track_) {
                            return
                        }
                        if (this.track_.mode !== 'hidden') {
                            this.track_.mode = 'hidden'
                        }
                        this.track_.addEventListener('cuechange', this.reTriggerEvent_);
                        this.trigger('trackexists')
                    };
                    return l
                }(e.EventTarget);
                u.prototype.allowedEvents_ = {
                    cuechange: 'cuechange'
                };
                var l = e.registerPlugin || e.plugin;
                var c = {
                    id3CuePointsTrack: function e() {
                        var t = this.proxyTracks_.id3;
                        if (!t) {
                            t = this.proxyTracks_.id3 = new u(this, 'id3')
                        }
                        return t
                    },
                    mediaCuePointsTrack: function e() {
                        var t = this.proxyTracks_.media;
                        if (t) {
                            return t
                        }
                        t = this.proxyTracks_.media = new u(this, 'media');
                        if (t.track_) {
                            return t
                        }
                        this.addTextTrack('metadata', 'media-cues');
                        t.update_();
                        return t
                    }
                };
                function d() {
                    var t = this;
                    this.proxyTracks_ = {
                    };
                    Object.keys(c).forEach(function (r) {
                        if (e.browser.IS_IE8 || !Object.defineProperty) {
                            t[r] = function () {
                                e.log('This API method - player.' + r + '() - is not supported in this browser.')
                            }
                        } else {
                            t[r] = function () {
                                return c[r].call(t)
                            }
                        }
                    })
                }
                l('proxyTracks', d);
                d.VERSION = '__VERSION__';
                return d
            })
        })();
        (function () {
            if (videojs.getPlugin('perSourceBehaviors')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsPerSourceBehaviors = t(e.videojs)
            })(typeof self !== 'undefined' ? self : this, function (e) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                var t = '2.1.0';
                var r = e.getTech('Html5');
                var n = e.registerPlugin || e.plugin;
                var i = [
                    'abort',
                    'emptied',
                    'loadstart',
                    'play'
                ];
                var a = [
                    'abort',
                    'emptied'
                ];
                var s = [
                    'ad-playback',
                    'ads-ready?',
                    'postroll?',
                    'preroll?'
                ];
                var o = function e(t) {
                    return s.indexOf(t) > - 1
                };
                var u = function e(t) {
                    return t.usingPlugin('ads') && typeof t.ads.inAdBreak === 'function'
                };
                var l = function e(t, r) {
                    if (!t.usingPlugin('ads')) {
                        return false
                    }
                    if (u(t)) {
                        return t.ads.isInAdMode() && r.type !== 'loadstart'
                    }
                    return o(t.ads.state)
                };
                var c = function n() {
                    var s = this;
                    var o = [
                    ];
                    var u;
                    var c = false;
                    var d;
                    var f = true;
                    var h = function t(r) {
                        return function (t, n) {
                            var i = this;
                            if (this.perSourceBehaviors.disabled()) {
                                return
                            }
                            var a = arguments.length === 2;
                            var s = this.currentSrc();
                            var u = [
                                t
                            ];
                            var l = e.bind(a ? this : t, arguments[arguments.length - 1]);
                            var c = function e() {
                                var t = i.currentSrc() !== s;
                                if (i.perSourceBehaviors.disabled()) {
                                    return
                                }
                                if (t || r) {
                                    i.off.apply(i, u)
                                }
                                if (!t) {
                                    l.apply(void 0, arguments)
                                }
                            };
                            c.guid = l.guid;
                            if (!a) {
                                u.push(n)
                            }
                            u.push(c);
                            o.push(u);
                            return this.on.apply(this, u)
                        }
                    };
                    this.perSourceBehaviors = {
                        disable: e.bind(this, function e() {
                            this.clearTimeout(d);
                            d = null;
                            c = true;
                            return c
                        }),
                        disabled: function e() {
                            return c
                        },
                        enable: function e() {
                            c = false;
                            return c
                        },
                        enabled: function e() {
                            return !c
                        },
                        isSrcStable: function e() {
                            return f
                        },
                        VERSION: t
                    };
                    this.onPerSrc = h();
                    this.onePerSrc = h(true);
                    this.on('dispose', function () {
                        o.length = 0
                    });
                    this.on(i, function (e) {
                        if (s.perSourceBehaviors.disabled() || d || l(s, e)) {
                            return
                        }
                        if (f && a.indexOf(e.type) > - 1) {
                            f = false;
                            s.trigger('sourceunstable')
                        }
                        var t = [
                        ];
                        var n = function e(r) {
                            return t.push({
                                time: Date.now(),
                                event: r
                            })
                        };
                        n(e);
                        s.on(r.Events, n);
                        d = s.setTimeout(function () {
                            var e = s.currentSrc();
                            f = true;
                            d = null;
                            s.off(r.Events, n);
                            if (e && e !== u) {
                                o.forEach(function (e) {
                                    return s.off.apply(s, e)
                                });
                                o.length = 0;
                                s.trigger('sourcechanged', {
                                    interimEvents: t,
                                    from: u,
                                    to: e
                                });
                                u = e
                            }
                        }, 1)
                    })
                };
                c.VERSION = t;
                n('perSourceBehaviors', c);
                return c
            })
        })();
        (function () {
            if (videojs.getPlugin('seekEvents')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsSeekEvents = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = 'default' in e ? e['default'] : e;
                var t = {
                    verbose: false,
                    maxSavedSeekEvents: 10,
                    debounceTimeout: 1000,
                    playbackRateTolerance: 1.5,
                    stableTimeUpdateCount: 3,
                    minInterval: 1
                };
                var r = function e(t, r) {
                    var n = void 0;
                    return function () {
                        var e = this;
                        for (var i = arguments.length, a = Array(i), s = 0; s < i; s++) {
                            a[s] = arguments[s]
                        }
                        var o = function r() {
                            n = null;
                            o = null;
                            t.apply(e, a)
                        };
                        clearTimeout(n);
                        n = setTimeout(o, r)
                    }
                };
                var n = function e(t) {
                    t.trigger('seek')
                };
                var i = function i(a) {
                    var s = e.mergeOptions(t, a);
                    var o = void 0;
                    var u = false;
                    var l = void 0;
                    var c = void 0;
                    var d = void 0;
                    var f = void 0;
                    var h = 0;
                    var p = [
                    ];
                    var v = 0;
                    var m = {
                    };
                    var g = {
                    };
                    var y = s.verbose ? function () {
                        var t;
                        for (var r = arguments.length, n = Array(r), i = 0; i < r; i++) {
                            n[i] = arguments[i]
                        }
                        return (t = e.log).call.apply(t, [
                            e,
                            'seek-events:'
                        ].concat(n))
                    }
                        : function () {
                        };
                    var _ = function e() {
                        m.seek = this.seekEvents.last().seekEnd;
                        u = false;
                        y('event seekStart: ', this.seekEvents.last().seekStart);
                        y('event seekEnd: ', this.seekEvents.last().seekEnd)
                    };
                    var b = function e() {
                        y('stable');
                        this.seekEvents.stable = true
                    };
                    var T = function e() {
                        y('unstable');
                        this.seekEvents.stable = false
                    };
                    var A = function e(t) {
                        m.seek = this.currentTime();
                        m.clock = t.timeStamp || Date.now();
                        g.seek = m.seek;
                        g.clock = m.clock
                    };
                    var S = r(n, s.debounceTimeout);
                    var k = function e(t) {
                        l = this.currentTime();
                        c = t.timeStamp || + new Date;
                        d = l - g.seek;
                        if (c === g.clock || l === m.seek) {
                            return
                        }
                        f = Math.abs(d) / (Math.abs(c - g.clock) * 0.001);
                        if (f > this.seekEvents.playbackRateTolerance) {
                            if (Math.abs(l - m.seek) >= this.seekEvents.minInterval) {
                                this.trigger('unstable');
                                h = 0;
                                if (!u) {
                                    v = Number(m.seek)
                                }
                                p.push({
                                    timeStamp: c,
                                    seekStart: v,
                                    seekEnd: l,
                                    seekInterval: l - v
                                });
                                if (p.length > s.maxSavedSeekEvents) {
                                    p.shift()
                                }
                                u = true;
                                S(this)
                            }
                        } else {
                            h++;
                            y(l + ': ' + h);
                            if (h >= this.seekEvents.stableTimeUpdateCount && !this.seekEvents.stable && !u) {
                                this.trigger('stable')
                            }
                            m.seek = l
                        }
                        g.seek = l;
                        g.clock = c
                    };
                    this.seekEvents = {
                        stableTimeUpdateCount: s.stableTimeUpdateCount,
                        playbackRateTolerance: s.playbackRateTolerance,
                        debounceTimeout: s.debounceTimeout,
                        minInterval: s.minInterval,
                        stable: false,
                        enabled: function e() {
                            return o
                        },
                        enable: e.bind(this, function () {
                            if (o) {
                                return
                            }
                            o = true;
                            m.seek = 0;
                            m.clock = Date.now();
                            g.seek = 0;
                            g.clock = m.clock;
                            this.on('seek', _);
                            this.on('stable', b);
                            this.on('unstable', T);
                            this.on(['loadstart',
                                'playing',
                                'adplaying'], A);
                            this.on(['timeupdate',
                                'adtimeupdate'], k)
                        }),
                        disable: e.bind(this, function () {
                            if (!o) {
                                return
                            }
                            o = false;
                            this.off('seek', _);
                            this.off('stable', b);
                            this.off('unstable', T);
                            this.off(['loadstart',
                                'playing',
                                'adplaying'], A);
                            this.off(['timeupdate',
                                'adtimeupdate'], k)
                        }),
                        last: function e() {
                            return p[p.length - 1]
                        },
                        all: function e() {
                            return p
                        }
                    };
                    this.seekEvents.enable()
                };
                var a = e.registerPlugin || e.plugin;
                a('seekEvents', i);
                return i
            })
        })();
        (function () {
            if (videojs.getPlugin('contextmenuUI')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('global/window'), require('video.js'), require('global/document')) : typeof define === 'function' && define.amd ? define(['global/window',
                    'video.js',
                    'global/document'], t) : e.videojsContextmenuUi = t(e.window, e.videojs, e.document)
            })(this, function (e, t, r) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                t = t && t.hasOwnProperty('default') ? t['default'] : t;
                r = r && r.hasOwnProperty('default') ? r['default'] : r;
                function n(e, t) {
                    e.prototype = Object.create(t.prototype);
                    e.prototype.constructor = e;
                    e.__proto__ = t
                }
                function i(e) {
                    if (e === void 0) {
                        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                    }
                    return e
                }
                var a = t.getComponent('MenuItem');
                var s = function (t) {
                    n(r, t);
                    function r() {
                        return t.apply(this, arguments) || this
                    }
                    var i = r.prototype;
                    i.handleClick = function r(n) {
                        var i = this;
                        t.prototype.handleClick.call(this);
                        this.options_.listener();
                        e.setTimeout(function () {
                            i.player().contextmenuUI.menu.dispose()
                        }, 1)
                    };
                    return r
                }(a);
                var o = t.getComponent('Menu');
                var u = t.dom || t;
                var l = function (r) {
                    n(a, r);
                    function a(n, a) {
                        var o;
                        o = r.call(this, n, a) || this;
                        o.dispose = t.bind(i(i(o)), o.dispose);
                        a.content.forEach(function (r) {
                            var i = function e() {
                            };
                            if (typeof r.listener === 'function') {
                                i = r.listener
                            } else if (typeof r.href === 'string') {
                                i = function t() {
                                    return e.open(r.href)
                                }
                            }
                            o.addItem(new s(n, {
                                label: r.label,
                                listener: t.bind(n, i)
                            }))
                        });
                        return o
                    }
                    var o = a.prototype;
                    o.createEl = function e() {
                        var t = r.prototype.createEl.call(this);
                        u.addClass(t, 'vjs-contextmenu-ui-menu');
                        t.style.left = this.options_.position.left + 'px';
                        t.style.top = this.options_.position.top + 'px';
                        return t
                    };
                    return a
                }(o);
                function c(t) {
                    var n;
                    if (t.getBoundingClientRect && t.parentNode) {
                        n = t.getBoundingClientRect()
                    }
                    if (!n) {
                        return {
                            left: 0,
                            top: 0
                        }
                    }
                    var i = r.documentElement;
                    var a = r.body;
                    var s = i.clientLeft || a.clientLeft || 0;
                    var o = e.pageXOffset || a.scrollLeft;
                    var u = n.left + o - s;
                    var l = i.clientTop || a.clientTop || 0;
                    var c = e.pageYOffset || a.scrollTop;
                    var d = n.top + c - l;
                    return {
                        left: Math.round(u),
                        top: Math.round(d)
                    }
                }
                function d(e, t) {
                    var r = {
                    };
                    var n = c(e);
                    var i = e.offsetWidth;
                    var a = e.offsetHeight;
                    var s = n.top;
                    var o = n.left;
                    var u = t.pageY;
                    var l = t.pageX;
                    if (t.changedTouches) {
                        l = t.changedTouches[0].pageX;
                        u = t.changedTouches[0].pageY
                    }
                    r.y = Math.max(0, Math.min(1, (s - u + a) / a));
                    r.x = Math.max(0, Math.min(1, (l - o) / i));
                    return r
                }
                var f = '5.1.0';
                function h(e) {
                    return e.hasOwnProperty('contextmenuUI') && e.contextmenuUI.hasOwnProperty('menu') && e.contextmenuUI.menu.el()
                }
                function p(e, t) {
                    return {
                        left: Math.round(t.width * e.x),
                        top: Math.round(t.height - t.height * e.y)
                    }
                }
                function v(e) {
                    var n = this;
                    if (h(this)) {
                        this.contextmenuUI.menu.dispose();
                        return
                    }
                    var i = d(this.el(), e);
                    var a = this.el().getBoundingClientRect();
                    var s = p(i, a);
                    e.preventDefault();
                    var o = this.contextmenuUI.menu = new l(this, {
                        content: this.contextmenuUI.content,
                        position: s
                    });
                    this.contextmenuUI.closeMenu = function () {
                        t.log.warn('player.contextmenuUI.closeMenu() is deprecated, please use player.contextmenuUI.menu.dispose() instead!');
                        o.dispose()
                    };
                    o.on('dispose', function () {
                        t.off(r, [
                            'click',
                            'tap'
                        ], o.dispose);
                        n.removeChild(o);
                        delete n.contextmenuUI.menu
                    });
                    this.addChild(o);
                    var u = o.el_.getBoundingClientRect();
                    var c = r.body.getBoundingClientRect();
                    if (this.contextmenuUI.keepInside || u.right > c.width || u.bottom > c.height) {
                        o.el_.style.left = Math.floor(Math.min(s.left, this.player_.currentWidth() - o.currentWidth())) + 'px';
                        o.el_.style.top = Math.floor(Math.min(s.top, this.player_.currentHeight() - o.currentHeight())) + 'px'
                    }
                    t.on(r, [
                        'click',
                        'tap'
                    ], o.dispose)
                }
                function m(e) {
                    var r = this;
                    var n = {
                        keepInside: true
                    };
                    e = t.mergeOptions(n, e);
                    if (!Array.isArray(e.content)) {
                        throw new Error('"content" required')
                    }
                    if (h(this)) {
                        this.contextmenuUI.menu.dispose();
                        this.off('contextmenu', this.contextmenuUI.onContextMenu);
                        delete this.contextmenuUI
                    }
                    var i = this.contextmenuUI = function () {
                        m.apply(this, arguments)
                    };
                    i.onContextMenu = t.bind(this, v);
                    i.content = e.content;
                    i.keepInside = e.keepInside;
                    i.VERSION = f;
                    this.on('contextmenu', i.onContextMenu);
                    this.ready(function () {
                        return r.addClass('vjs-contextmenu-ui')
                    })
                }
                t.registerPlugin('contextmenuUI', m);
                m.VERSION = f;
                return m
            })
        })();
        (function () {
            if (videojs.getPlugin('playerInfo')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsPlayerInfo = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                var t = '1.3.0';
                var r = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {
                };
                var n;
                if (typeof window !== 'undefined') {
                    n = window
                } else if (typeof r !== 'undefined') {
                    n = r
                } else if (typeof self !== 'undefined') {
                    n = self
                } else {
                    n = {
                    }
                }
                var i = n;
                var a = function () {
                    function e(e) {
                        this.value = e
                    }
                    function t(t) {
                        var r,
                            n;
                        function i(e, t) {
                            return new Promise(function (i, s) {
                                var o = {
                                    key: e,
                                    arg: t,
                                    resolve: i,
                                    reject: s,
                                    next: null
                                };
                                if (n) {
                                    n = n.next = o
                                } else {
                                    r = n = o;
                                    a(e, t)
                                }
                            })
                        }
                        function a(r, n) {
                            try {
                                var i = t[r](n);
                                var o = i.value;
                                if (o instanceof e) {
                                    Promise.resolve(o.value).then(function (e) {
                                        a('next', e)
                                    }, function (e) {
                                        a('throw', e)
                                    })
                                } else {
                                    s(i.done ? 'return' : 'normal', i.value)
                                }
                            } catch (e) {
                                s('throw', e)
                            }
                        }
                        function s(e, t) {
                            switch (e) {
                                case 'return':
                                    r.resolve({
                                        value: t,
                                        done: true
                                    });
                                    break;
                                case 'throw':
                                    r.reject(t);
                                    break;
                                default:
                                    r.resolve({
                                        value: t,
                                        done: false
                                    });
                                    break
                            }
                            r = r.next;
                            if (r) {
                                a(r.key, r.arg)
                            } else {
                                n = null
                            }
                        }
                        this._invoke = i;
                        if (typeof t.return !== 'function') {
                            this.return = undefined
                        }
                    }
                    if (typeof Symbol === 'function' && Symbol.asyncIterator) {
                        t.prototype[Symbol.asyncIterator] = function () {
                            return this
                        }
                    }
                    t.prototype.next = function (e) {
                        return this._invoke('next', e)
                    };
                    t.prototype.throw = function (e) {
                        return this._invoke('throw', e)
                    };
                    t.prototype.return = function (e) {
                        return this._invoke('return', e)
                    };
                    return {
                        wrap: function (e) {
                            return function () {
                                return new t(e.apply(this, arguments))
                            }
                        },
                        await: function (t) {
                            return new e(t)
                        }
                    }
                }();
                var s = function (e, t) {
                    if (!(e instanceof t)) {
                        throw new TypeError('Cannot call a class as a function')
                    }
                };
                var o = function (e, t) {
                    if (typeof t !== 'function' && t !== null) {
                        throw new TypeError('Super expression must either be null or a function, not ' + typeof t)
                    }
                    e.prototype = Object.create(t && t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: false,
                            writable: true,
                            configurable: true
                        }
                    });
                    if (t) Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t
                };
                var u = function (e, t) {
                    if (!e) {
                        throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')
                    }
                    return t && (typeof t === 'object' || typeof t === 'function') ? t : e
                };
                var l = 'unknown';
                var c = e.getComponent('ModalDialog');
                var d = e.getComponent('Player');
                var f = e.dom || e;
                function h(e, t, r) {
                    var n = e;
                    var i = t.split('.');
                    if (!n) {
                        return r
                    }
                    for (var a = 0; a < i.length; a++) {
                        var s = i[a];
                        if (n[s] === undefined) {
                            return r
                        }
                        if (a + 1 < i.length) {
                            n = n[s]
                        } else {
                            return n[s]
                        }
                    }
                }
                var p = {
                    adonly: 'Ad-Only',
                    bcPlaylistUi: 'Brightcove Playlist UI',
                    chromecastReceiver: 'Chromecast Receiver',
                    customEndscreen: 'Custom Endscreen',
                    dash: 'DASH',
                    eme: 'DRM',
                    dvrux: 'Live DVRUX',
                    FreeWheelPlugin: 'FreeWheel',
                    ima3: 'IMA3',
                    onceux: 'OnceUX',
                    pip: 'Picture-in-Picture',
                    qualityMenu: 'Quality Menu',
                    social: 'Social',
                    ssai: 'SSAI',
                    vr: 'VR'
                };
                var v = function e() {
                    for (var t = arguments.length, r = Array(t), n = 0; n < t; n++) {
                        r[n] = arguments[n]
                    }
                    return '<tr>' + r.map(function (e) {
                        return '<td>' + e + '</td>'
                    }).join('') + '</tr>'
                };
                var m = function (t) {
                    o(r, t);
                    function r() {
                        s(this, r);
                        return u(this, t.apply(this, arguments))
                    }
                    r.prototype.buildCSSClass = function e() {
                        return 'vjs-player-info-modal ' + t.prototype.buildCSSClass.call(this)
                    };
                    r.prototype.dataForPlugins_ = function t() {
                        var r = this;
                        return Object.keys(p).filter(function (t) {
                            return e.getPlugin ? e.getPlugin(t) : typeof d.prototype[t] === 'function'
                        }).map(function (t) {
                            var n = r.player();
                            return {
                                active: n.usingPlugin ? n.usingPlugin(t) : l,
                                displayName: p[t] || t,
                                version: e.getPluginVersion ? e.getPluginVersion(t) : h(n, t + '.VERSION', l)
                            }
                        })
                    };
                    r.prototype.dataForSource_ = function e() {
                        var t = this.player();
                        var r = t.tech_.hls,
                            n = t.mediainfo;
                        var i = h(r, 'playlists', {
                            media: function e() {
                            }
                        });
                        var a = i.media();
                        return {
                            mediainfo: n,
                            hls: {
                                bandwidth: h(r, 'stats.bandwidth', l),
                                mediaBytesTransferred: h(r, 'stats.mediaBytesTransferred', l),
                                mediaTransferDuration: h(r, 'stats.mediaTransferDuration', l),
                                mediaRequests: h(r, 'stats.mediaRequests', l),
                                rendition: a && {
                                    height: h(a, 'attributes.RESOLUTION.height', l),
                                    width: h(a, 'attributes.RESOLUTION.width', l)
                                }
                            },
                            tech: t.techName_,
                            type: t.currentType()
                        }
                    };
                    r.prototype.data = function e() {
                        var t = this.player();
                        var r = f.getAttributes(t.el());
                        var n = h(t, 'bcinfo.accountId', h(r, 'data-account', l));
                        var a = h(t, 'bcinfo.playerId', h(r, 'data-player', l));
                        var s = h(t, 'bcinfo.embedId', h(r, 'data-embed', l));
                        var o = h(t, 'bcinfo.applicationId', h(r, 'data-application-id', ''));
                        var u = h(i, 'bc.' + a + '_' + s + '.VERSION', h(i, 'bc.VERSION', l));
                        var c = h(i, 'bc.' + a + '_' + s + '.videojs.VERSION', h(i, 'videojs.VERSION', l));
                        return {
                            player: {
                                accountId: n,
                                playerId: a,
                                embedId: s,
                                applicationId: o,
                                playerVersion: u,
                                videojsVersion: c
                            },
                            plugins: this.dataForPlugins_(),
                            source: this.dataForSource_()
                        }
                    };
                    r.prototype.contentForPlugins_ = function e(t) {
                        var r = this;
                        var n = ('\n      <tr>\n        <td colspan="3">' + this.localize('No plugins available.') + '</td>\n      </tr>\n    ').trim();
                        if (t.plugins.length) {
                            n = t.plugins.map(function (e) {
                                return v(e.displayName, e.version, e.active ? r.localize('yes') : r.localize('no'))
                            }).join('')
                        }
                        return ('\n      <table>\n        <thead>\n          <tr>\n            <th>' + this.localize('Name') + '</th>\n            <th>' + this.localize('Version') + '</th>\n            <th>' + this.localize('Active') + '</th>\n          </tr>\n        </thead>\n        <tbody>' + n + '</tbody>\n      </table>\n    ').trim()
                    };
                    r.prototype.contentForSource_ = function e(t) {
                        var r = [
                            '<table><tbody>',
                            v(this.localize('Current Playback Tech'), t.source.tech),
                            v(this.localize('Current Media Type'), t.source.type)
                        ];
                        if (t.source.mediainfo) {
                            r.push(v(this.localize('Video Name'), t.source.mediainfo.name), v(this.localize('Video ID'), t.source.mediainfo.id))
                        }
                        if (t.source.hls) {
                            r.push(v(this.localize('Current Bandwidth'), t.source.hls.bandwidth), v(this.localize('Media Bytes Transferred'), t.source.hls.mediaBytesTransferred), v(this.localize('Media Requests'), t.source.hls.mediaRequests), v(this.localize('Media Transfer Duration'), t.source.hls.mediaTransferDuration));
                            if (t.source.hls.rendition) {
                                r.push(v(this.localize('Rendition Width'), t.source.hls.rendition.width), v(this.localize('Rendition Height'), t.source.hls.rendition.height))
                            }
                        }
                        return r.concat('</tbody></table>').join('')
                    };
                    r.prototype.content = function e() {
                        var t = this.data();
                        return [f.createEl('h1', {
                            innerHTML: this.localize('Player Information')
                        }),
                        f.createEl('div', {
                            className: 'vjs-pi-section vjs-pi-section--player',
                            innerHTML: [
                                '<h2>' + this.localize('General') + '</h2>',
                                '<table><tbody>',
                                v(this.localize('Brightcove Player Version'), t.player.playerVersion),
                                v(this.localize('Video.js Version'), t.player.videojsVersion),
                                v(this.localize('Account ID'), t.player.accountId),
                                v(this.localize('Player ID'), t.player.playerId),
                                v(this.localize('Embed ID'), t.player.embedId),
                                v(this.localize('Application ID'), t.player.applicationId),
                                '</tbody></table>'
                            ].join('')
                        }),
                        f.createEl('div', {
                            className: 'vjs-pi-section vjs-pi-section--plugins',
                            innerHTML: [
                                '<h2>' + this.localize('Plugins') + '</h2>',
                                this.contentForPlugins_(t)
                            ].join('')
                        }),
                        f.createEl('div', {
                            className: 'vjs-pi-section vjs-pi-section--source',
                            innerHTML: [
                                '<h2>' + this.localize('Source') + '</h2>',
                                this.contentForSource_(t)
                            ].join('')
                        })]
                    };
                    return r
                }(c);
                e.registerComponent('PlayerInfoModal', m);
                var g = e.registerPlugin || e.plugin;
                function y() {
                    var e = this;
                    if (this.playerInfo.modal) {
                        this.playerInfo.modal.dispose()
                    }
                    this.playerInfo = function () {
                        y.apply(this, arguments)
                    };
                    this.ready(function () {
                        e.addClass('vjs-player-info');
                        e.playerInfo.modal = e.addChild('playerInfoModal', {
                            fillAlways: true,
                            label: e.localize('Player Information Dialog'),
                            temporary: false
                        });
                        e.playerInfo.modal.on('dispose', function () {
                            delete e.playerInfo
                        })
                    })
                }
                g('playerInfo', y);
                y.VERSION = t;
                return y
            })
        })(); (function () {
            if (videojs.getPlugin('urlparams')) {
                return
            } (function () {
                var e = videojs.registerPlugin || videojs.plugin;
                e('urlparams', function (e) {
                    e = e || {
                    };
                    var t = function (e) {
                        var t = 0,
                            r;
                        e = (e || '').replace(/^\s+|\s+$/g, '');
                        if (!e || !/^(\d+h)?(\d+m)?(\d+s)?$/.test(e)) {
                            return - 1
                        }
                        r = e.match(/^(\d+)h/);
                        if (r) {
                            t += parseFloat(r[1]) * 3600;
                            e = e.replace(/^(\d+)h/, '')
                        }
                        r = e.match(/^(\d+)m/);
                        if (r) {
                            t += parseFloat(r[1]) * 60;
                            e = e.replace(/^(\d+)m/, '')
                        }
                        r = e.match(/^(\d+)s/);
                        if (r) {
                            t += parseFloat(r[1])
                        }
                        return t
                    },
                        r = 0.9,
                        n = function (e, t) {
                            var n = e - t;
                            if (isNaN(n)) {
                                return false
                            }
                            return Math.abs(n) < r
                        },
                        i = function (e) {
                            a.ready(function () {
                                if (a.networkState() === 2) {
                                    e()
                                } else {
                                    a.one('loadedmetadata', function () {
                                        a.setTimeout(e, 0)
                                    })
                                }
                            })
                        },
                        a = this,
                        s = videojs.bc_.qs(),
                        o = s.hash.t || s.search.t,
                        u;
                    if (typeof e.time === 'number') {
                        u = e.time
                    } else {
                        u = t(e.time)
                    }
                    if (o) {
                        if (/^[\d]+$/.test(o)) {
                            u = Number(o)
                        } else {
                            u = t(o)
                        }
                        if (!e.iframe && u !== - 1) {
                            videojs.log.warn('DEPRECATION: Using the `t` query parameter or URL hash value to set an initial playback start time for advanced, in-page embeds is deprecated and will be removed in Brightcove Player 7. Please add a `data-start-time` attribute going forward!')
                        }
                    }
                    if (u > 0) {
                        (function () {
                            var t = e.delay || 250,
                                r,
                                s = false,
                                o = function () {
                                    if (s || n(a.currentTime(), u)) {
                                        s = true;
                                        l()
                                    } else {
                                        a.currentTime(u);
                                        r = a.setTimeout(o, t)
                                    }
                                },
                                l = function () {
                                    a.clearTimeout(r);
                                    a.off('timeupdate', l);
                                    if (!s) {
                                        a.currentTime(u)
                                    }
                                };
                            a.on('timeupdate', l);
                            i(o)
                        })()
                    }
                    if (s.hash.captions !== undefined || s.search.captions !== undefined) {
                        (function () {
                            var e = s.hash.captions || s.search.captions;
                            a.one('play', function () {
                                var t = a.textTracks(),
                                    r,
                                    n;
                                if (t) {
                                    for (n = 0; n < t.length; n++) {
                                        r = t[n];
                                        if (r.language === e) {
                                            r.mode = 'showing';
                                            break
                                        }
                                    }
                                }
                            })
                        })()
                    }
                })
            })()
        })(); (function () {
            if (videojs.getPlugin('resizeTextTracks')) {
                return
            } (function () {
                var e = videojs.registerPlugin || videojs.plugin;
                e('resizeTextTracks', function (e) {
                    if (!e.iframe) {
                        return
                    }
                    var t = this,
                        r = videojs.bc_.debounce(function () {
                            t.textTrackSettings.updateDisplay()
                        }, 500);
                    videojs.on(window, 'resize', r);
                    t.on('dispose', function () {
                        videojs.off(window, 'resize', r)
                    })
                })
            })()
        })(); (function () {
            if (videojs.getPlugin('bcAnalytics')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('global/window'), require('global/document'), require('video.js'), require('@brightcove/loscore')) : typeof define === 'function' && define.amd ? define(['global/window',
                    'global/document',
                    'video.js',
                    '@brightcove/loscore'], t) : (e = e || self, e.videojsBcAnalytics = t(e.window, e.document, e.videojs, e.videojs.bc_))
            })(this, function (e, t, r, n) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                t = t && t.hasOwnProperty('default') ? t['default'] : t;
                r = r && r.hasOwnProperty('default') ? r['default'] : r;
                n = n && n.hasOwnProperty('default') ? n['default'] : n;
                var i = function (e, t, r) {
                    if (r === void 0) {
                        r = {
                        }
                    }
                    t.forEach(function (t) {
                        if (e[t] !== undefined) {
                            r[t] = e[t]
                        }
                    });
                    return r
                };
                var a = function e(t, i) {
                    if (i === void 0) {
                        i = [
                        ]
                    }
                    var a = {
                    };
                    Object.keys(t).forEach(function (s) {
                        var o = t[s];
                        i.push(s);
                        if (n.isObj(o)) {
                            a = r.mergeOptions(a, e(o, i))
                        } else {
                            a[i.join('.')] = o
                        }
                        i.pop()
                    });
                    return a
                };
                var s = function e(t) {
                    return t.charAt(0).toUpperCase() + t.slice(1)
                };
                var o = function e(t, r) {
                    return t + 'x' + r
                };
                var u = {
                    memory: [
                        'jsHeapSizeLimit',
                        'usedJSHeapSize',
                        'totalJSHeapSize'
                    ],
                    navigation: [
                        'redirectCount',
                        'type',
                        'directedMigration'
                    ],
                    timing: [
                        'loadEventEnd',
                        'loadEventStart',
                        'domComplete',
                        'domContentLoadedEventEnd',
                        'domContentLoadedEventStart',
                        'domInteractive',
                        'domLoading',
                        'responseEnd',
                        'responseStart',
                        'requestStart',
                        'secureConnectionStart',
                        'connectEnd',
                        'connectStart',
                        'domainLookupEnd',
                        'domainLookupStart',
                        'fetchStart',
                        'redirectEnd',
                        'redirectStart',
                        'unloadEventEnd',
                        'unloadEventStart',
                        'navigationStart'
                    ]
                };
                var l = {
                    bitrate: 'bitrates',
                    event: 'events'
                };
                var c = function () {
                    function t() {
                        this.data_ = {
                            bitrates: {
                                bitrates: [
                                ],
                                playlists: [
                                ],
                                rendered: [
                                ],
                                throughput: [
                                ]
                            },
                            events: [
                            ],
                            mr: 0,
                            performance: {
                            },
                            content: {
                            },
                            player: {
                                dimensions: [
                                ],
                                pixelratio: [
                                ],
                                screendimensions: [
                                ]
                            },
                            frames: {
                            }
                        }
                    }
                    var c = t.prototype;
                    c.keys = function e() {
                        return Object.keys(this.data_)
                    };
                    c.append = function e(t) {
                        t = l.hasOwnProperty(t) ? l[t] : t;
                        if (!this.data_.hasOwnProperty(t)) {
                            throw new Error('"' + t + '" is not a known QosBuffer key')
                        }
                        for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++) {
                            n[i - 1] = arguments[i]
                        }
                        this['append' + s(t) + '_'].apply(this, n)
                    };
                    c.flush = function e() {
                        var t = this;
                        for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++) {
                            a[o] = arguments[o]
                        }
                        if (!a.length) {
                            a = this.keys()
                        }
                        for (var u = 0; u < a.length; u++) {
                            if (!this.data_.hasOwnProperty(a[u])) {
                                throw new Error('"' + a[u] + '" is not a known QosBuffer key')
                            }
                        }
                        var l = a.map(function (e) {
                            return t['flush' + s(e) + '_']()
                        });
                        var c = r.mergeOptions.apply(r, l);
                        var d = n.qs().stringify(c).length;
                        if (d > 3000 && c['qos.bitrates']) {
                            c['qos.bitrates'] = JSON.stringify({
                                bitrates: [
                                ],
                                playlists: [
                                ],
                                rendered: [
                                ],
                                throughput: [
                                ]
                            })
                        }
                        return c
                    };
                    c.appendBitrates_ = function e(t) {
                        var r = this;
                        if (typeof t.playlists !== 'undefined') {
                            this.data_.bitrates.playlists.push([Date.now(),
                            t.bitrates,
                            t.playlists]);
                            delete t.bitrates;
                            delete t.playlists
                        }
                        Object.keys(t).forEach(function (e) {
                            r.data_.bitrates[e].push([Date.now(),
                            t[e]])
                        })
                    };
                    c.appendMr_ = function e(t) {
                        this.data_.mr = t ? 1 : null
                    };
                    c.appendPerformance_ = function t(r) {
                        var a = this;
                        var s = e.performance;
                        if (n.isNil(s)) {
                            return
                        }
                        Object.keys(u).forEach(function (e) {
                            if (!n.isNil(s[e])) {
                                a.data_.performance[e] = i(s[e], u[e])
                            }
                        });
                        if (n.isFn(s.measure)) {
                            [
                                'bcParse',
                                'bcInit'
                            ].forEach(function (e) {
                                s.getEntriesByName(e, 'measure').forEach(function (t) {
                                    a.data_.performance[e] = t.duration
                                })
                            })
                        }
                        if (this.data_.performance.navigation) {
                            this.data_.performance.navigation.directedMigration = r ? n.qs().parse(r).directedMigration === 'true' : false
                        }
                    };
                    c.appendFrames_ = function e(t) {
                        this.data_.frames = {
                            dropped: t.droppedVideoFrames,
                            corrupted: t.corruptedVideoFrames,
                            total: t.totalVideoFrames
                        }
                    };
                    c.appendPlayer_ = function t(r, n) {
                        if (n === void 0) {
                            n = Date.now()
                        }
                        this.data_.player.dimensions.push([n,
                            o(r.width, r.height),
                            o(r.computedWidth, r.computedHeight)]);
                        this.data_.player.pixelratio.push([n,
                            e.devicePixelRatio]);
                        this.data_.player.screendimensions.push([n,
                            o(e.screen.width, e.screen.height)])
                    };
                    c.appendEvents_ = function e() {
                        for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) {
                            r[n] = arguments[n]
                        }
                        this.data_.events.push({
                            type: r.join('.'),
                            time: Date.now()
                        })
                    };
                    c.appendContent_ = function e(t) {
                        this.data_.content = {
                            sourceMimeType: t.sourceMimeType
                        }
                    };
                    c.flushBitrates_ = function e() {
                        var t = this.data_.bitrates;
                        var r = {
                        };
                        if (t.bitrates.length || t.playlists.length || t.rendered.length || t.throughput.length) {
                            r['qos.bitrates'] = JSON.stringify(t)
                        }
                        t.bitrates.length = 0;
                        t.playlists.length = 0;
                        t.rendered.length = 0;
                        t.throughput.length = 0;
                        return r
                    };
                    c.flushEvents_ = function e() {
                        var t = this.data_.events;
                        var r = {
                        };
                        t.forEach(function (e) {
                            var t = e.time,
                                n = e.type;
                            var i = 'qos.events.' + n;
                            if (Array.isArray(r[i])) {
                                r[i].push(t)
                            } else if (r.hasOwnProperty(i)) {
                                r[i] = [
                                    r[i],
                                    t
                                ]
                            } else {
                                r[i] = t
                            }
                        });
                        Object.keys(r).forEach(function (e) {
                            if (Array.isArray(r[e])) {
                                r[e] = JSON.stringify(r[e])
                            }
                        });
                        t.length = 0;
                        return r
                    };
                    c.flushMr_ = function e() {
                        return {
                            'qos.mr': this.data_.mr
                        }
                    };
                    c.flushFrames_ = function e() {
                        var t = a(this.data_.frames, [
                            'qos',
                            'frames'
                        ]);
                        this.data_.frames = {
                        };
                        return t
                    };
                    c.flushPerformance_ = function e() {
                        return a(this.data_.performance, [
                            'qos',
                            'performance'
                        ])
                    };
                    c.flushPlayer_ = function e() {
                        var t = this.data_.player;
                        var r = {
                        };
                        Object.keys(t).forEach(function (e) {
                            var n = t[e];
                            if (n.length) {
                                r['qos.player.' + e] = JSON.stringify(n);
                                n.length = 0
                            }
                        });
                        return r
                    };
                    c.flushContent_ = function e() {
                        return a(this.data_.content, [
                            'qos',
                            'content'
                        ])
                    };
                    return t
                }();
                var d = [
                    'ad-playback',
                    'ads-ready?',
                    'postroll?',
                    'preroll?'
                ];
                var f = function e(t) {
                    return t.usingPlugin('ads') ? t.ads.state : undefined
                };
                var h = function e(t) {
                    return t.usingPlugin('ads') && !!t.adonly
                };
                var p = function e(t) {
                    return d.indexOf(t) > - 1
                };
                var v = function e(t) {
                    return t.usingPlugin('ads') && n.isFn(t.ads.inAdBreak)
                };
                var m = function e(t) {
                    if (!t.usingPlugin('ads')) {
                        return false
                    }
                    if (h(t)) {
                        return true
                    }
                    if (v(t)) {
                        return t.ads.isInAdMode()
                    }
                    return p(t.ads.state)
                };
                var g = function e(t, r) {
                    if (v(r) && t && t.type === 'loadstart') {
                        return true
                    }
                    return !m(r)
                };
                var y = function e(t) {
                    var r = {
                    };
                    if (t.ima3) {
                        var a = t.ima3.currentAdEventInfo;
                        r.plugin = 'ima3';
                        if (n.isFn(t.ima3)) {
                            return r
                        }
                        r.pluginVersion = t.ima3.VERSION || t.ima3.version;
                        r.adTech = t.ima3.adTech;
                        r.requestMode = t.ima3.settings.requestMode;
                        r.timeout = t.ima3.settings.timeout;
                        if (a) {
                            i(a, [
                                'adType',
                                'adPodLength',
                                'adPodId',
                                'creativeFormat',
                                'creativeLength',
                                'creativeId',
                                'creativeIndex',
                                'creativeUrl',
                                'advertiserName',
                                'wrapperCreativeIds',
                                'dealId',
                                'surveyUrl',
                                'adId',
                                'adTitle',
                                'adSystem',
                                'adIsciId',
                                'creativeAdId'
                            ], r);
                            var s = a.creativeIndex;
                            if (s && s.length) {
                                r.firstPlayedAdIndex = s[0]
                            }
                            r.startedInAdPod = a.started;
                            r.completedInAdPod = a.completed
                        }
                    } else if (t.FreeWheelPlugin) {
                        r.plugin = 'freewheel';
                        if (n.isFn(t.FreeWheelPlugin)) {
                            return r
                        }
                        r.pluginVersion = t.FreeWheelPlugin.VERSION || t.FreeWheelPlugin.getVersion()
                    }
                    return r
                };
                var _ = function e(t) {
                    t.adBreakIndex = null;
                    t.hasAdBreakStarted = false;
                    t['ads-request'] = null;
                    t['ads-response-received'] = null;
                    t['ads-loading'] = [
                    ];
                    t['ads-ad-started'] = [
                    ];
                    t['ads-ad-ended'] = [
                    ]
                };
                var b = function e() {
                    var t = {
                    };
                    _(t);
                    return t
                };
                var T = function e(t, r, n) {
                    var i = t.currentAdSequence_;
                    var a = [
                        'ads-loading',
                        'ads-ad-started',
                        'ads-ad-ended'
                    ];
                    if (r === 'ads-request') {
                        _(i)
                    } else if (r === 'adstart' || r === 'ads-loading') {
                        if (!i.hasAdBreakStarted) {
                            if (i.adBreakIndex === null) {
                                i.adBreakIndex = 0
                            } else {
                                i.adBreakIndex++
                            }
                            i.hasAdBreakStarted = true;
                            a.forEach(function (e) {
                                i[e].push([])
                            })
                        }
                    } else if (r === 'adend') {
                        i.hasAdBreakStarted = false
                    }
                    if (a.indexOf(r) > - 1) {
                        i[r][i.adBreakIndex].push(n)
                    } else if (r === 'ads-request' || r === 'ads-response-received') {
                        i[r] = n
                    }
                };
                var A = 'sendBeacon' in e.navigator;
                var S = e.Set;
                var k = 'lbu';
                var w = 4000;
                var C = new S;
                [
                    'account',
                    'domain',
                    'event',
                    'player'
                ].forEach(function (e) {
                    return C.add(e)
                });
                var E = new S;
                [
                    'account',
                    'catalog_url',
                    'destination',
                    'domain',
                    'dropped_frames',
                    'error_code',
                    'event',
                    'file_size_bytes',
                    'forward_buffer_seconds',
                    'load_time_ms',
                    'measured_bps',
                    'platform',
                    'platform_version',
                    'player',
                    'player_height',
                    'player_name',
                    'player_width',
                    'range',
                    'rebuffering_count',
                    'rebuffering_seconds',
                    'rendition_height',
                    'rendition_indicated_bps',
                    'rendition_mime_type',
                    'rendition_url',
                    'rendition_width',
                    'response_time_ms',
                    'session',
                    'start_time_ms',
                    'source',
                    'time',
                    'video',
                    'video_duration',
                    'video_name',
                    'video_seconds_viewed'
                ].forEach(function (e) {
                    return E.add(e)
                });
                var I = function e(t, r) {
                    return Math.floor(t) + '..' + (Math.floor(r) - 1)
                };
                var P = function e(t) {
                    var r = 2166136261;
                    var n = r;
                    for (var i = 0; i < t.length; ++i) {
                        n ^= t.charCodeAt(i);
                        n *= 16777619
                    }
                    return n >>> 0
                };
                var O = function e(t, r) {
                    var i = n.qs();
                    Object.keys(r).forEach(function (e) {
                        if (n.isNil(r[e])) {
                            delete r[e]
                        }
                    });
                    var a = t + '?' + i.stringify(r);
                    if (a.length <= w) {
                        return a
                    }
                    Object.keys(r).forEach(function (e) {
                        if (!E.has(e)) {
                            delete r[e]
                        }
                    });
                    r.usage = k;
                    return t + '?' + i.stringify(r)
                };
                var x = function e(t, r, n, i, a) {
                    var s = r - t;
                    if (a !== undefined && a < r) {
                        s -= a - t
                    } else if (n !== undefined && i !== undefined) {
                        if (n < t) {
                            n = t
                        }
                        if (i > r) {
                            i = r
                        }
                        s -= i - n
                    }
                    return s
                };
                var L = function e(t) {
                    for (var n = arguments.length, i = new Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++) {
                        i[a - 1] = arguments[a]
                    }
                    var s = r.mergeOptions.apply(r, [
                        t.params || {
                        }
                    ].concat(i));
                    delete t.params;
                    return s
                };
                var D = function e(t, r) {
                    var i = t.mediainfo;
                    var a = i && i.duration || t.duration();
                    if (i) {
                        if (r.video === undefined) {
                            r.video = i.id
                        }
                        if (r.video_name === undefined) {
                            r.video_name = i.name
                        }
                    }
                    if (n.isNum(a) && r.video_duration === undefined) {
                        r.video_duration = Math.floor(a);
                        if (r.video_duration < 1 || r.video_duration === Infinity) {
                            r.video_duration = null
                        }
                    }
                    return r
                };
                var R = function e(t, r) {
                    var n = t.preload();
                    if (typeof n !== 'string') {
                        n = t.el().getAttribute('preload')
                    }
                    if (typeof n === 'string' && n.length === 0) {
                        n = 'auto'
                    }
                    if (n) {
                        r.preload = n
                    }
                };
                var M = function () {
                    function a(e, t, r, n) {
                        if (n === void 0) {
                            n = {
                            }
                        }
                        this.baseUrl_ = r;
                        this.logger_ = n.logger;
                        this.history_ = t;
                        this.currentAdSequence_ = b();
                        this.player_ = e;
                        this.metrics_ = [
                        ];
                        this.eventCount_ = 0;
                        this.streamCount_ = - 1;
                        this.user(n.user || null);
                        this.defaultParams_ = {
                            domain: 'videocloud',
                            platform: 'video-js',
                            session: ''
                        };
                        for (var i = 0; i < 3; i++) {
                            this.defaultParams_.session += (Math.random() * 4294967295 >>> 0).toString(16)
                        }
                        this.qos = new c(this);
                        this.resetTimesOf()
                    }
                    var s = a.prototype;
                    s.logger = function e() {
                        if (this.logger_);
                    };
                    s.metrics = function e() {
                        return this.metrics_.map(r.mergeOptions)
                    };
                    s.resetTimesOf = function e() {
                        this.timeOfImpression = null;
                        this.timeOfView = null
                    };
                    s.defaultParams = function e(t) {
                        if (t) {
                            t = n.isFn(t) ? t() : t;
                            this.defaultParams_ = r.mergeOptions(this.defaultParams_, t)
                        }
                        return this.defaultParams_
                    };
                    s.getSession = function e() {
                        return this.defaultParams_.session
                    };
                    s.user = function e(t) {
                        if (t === null || n.isNonEmptyStr(t) || n.isNum(t)) {
                            this.user_ = t
                        }
                        return this.user_
                    };
                    s.send = function i(a, s) {
                        var o;
                        if (a === void 0) {
                            a = {
                            }
                        }
                        if (s === void 0) {
                            s = {
                            }
                        }
                        if (this.user()) {
                            a.user = P(this.user())
                        }
                        if (n.isNil(a.time)) {
                            a.time = Date.now()
                        }
                        s.qos = Array.isArray(s.qos) ? s.qos : [
                        ];
                        s.qos.push('mr');
                        a = r.mergeOptions(this.defaultParams_, a, (o = this.qos).flush.apply(o, s.qos));
                        a.seq = '' + this.eventCount_;
                        this.eventCount_++;
                        if ('streamCount' in s) {
                            a.seq += '_' + s.streamCount
                        }
                        C.forEach(function (e) {
                            if (n.isNil(a[e])) {
                                throw new Error('the "' + e + '" param is required')
                            }
                        });
                        var u = O(this.baseUrl_, a);
                        if (s.useSendBeaconOnly) {
                            if (A) {
                                e.navigator.sendBeacon(u)
                            } else {
                                return null
                            }
                        } else {
                            var l = t.createElement('img');
                            l.src = u
                        }
                        this.metrics_.push(a);
                        this.player_.trigger({
                            params: a,
                            type: 'analytics_request'
                        });
                        this.player_.trigger({
                            params: a,
                            type: 'analytics_request_' + a.event
                        });
                        return {
                            params: a,
                            url: u
                        }
                    };
                    s.sendCatalog_ = function e(t, r) {
                        if (r === void 0) {
                            r = {
                            }
                        }
                        var n = r,
                            i = n.error,
                            a = n.xhr;
                        if (a) {
                            var s = [
                                'BCOV-Debug-Cache-Stats',
                                'BCOV-instance',
                                'X-Cache',
                                'Via',
                                'X-Amz-Cf-Id'
                            ];
                            s.forEach(function (e) {
                                t[e] = a.getResponseHeader(e)
                            });
                            if (i) {
                                i.status = a.status
                            }
                        }
                        if (i) {
                            t.error = JSON.stringify(i)
                        }
                        return this.send(t, r)
                    };
                    s.sendVideoImpression = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var i = L(t, {
                            event: 'video_impression'
                        });
                        var a = y(this.player_);
                        if (Object.keys(a).length > 0) {
                            i.web_ad_info = JSON.stringify(a)
                        }
                        var s = n.isNonEmptyStr(this.player_.currentSrc());
                        if (!s || this.timeOfImpression) {
                            return null
                        }
                        if (r.bc_.isNonEmptyStr(this.player_.currentType())) {
                            this.qos.append('content', {
                                sourceMimeType: this.player_.currentType()
                            });
                            t.qos = t.qos || [
                                'content'
                            ]
                        }
                        this.streamCount_++;
                        t.streamCount = this.streamCount_;
                        D(this.player_, i);
                        i.autoplay = this.player_.autoplay();
                        R(this.player_, i);
                        var o = this.send(i, t);
                        if (o) {
                            this.timeOfImpression = Number(o.params.time)
                        }
                        return o
                    };
                    s.sendVideoView = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var r = L(t, {
                            event: 'video_view'
                        });
                        var i = n.isNonEmptyStr(this.player_.currentSrc());
                        if (!i || this.timeOfView || !this.timeOfImpression) {
                            return null
                        }
                        var a = this.history_;
                        var s = a.first('canplay');
                        var o = a.first('loadstart');
                        var u = a.first('play');
                        if (s) {
                            r.load_time_ms = s - this.timeOfImpression
                        }
                        r.start_time_ms = x(u || o, r.time, a.first('adstart', true), a.first('adend', true), a.first('adtimeout', true));
                        D(this.player_, r);
                        t.streamCount = this.streamCount_;
                        var l = this.send(r, t);
                        if (l) {
                            this.timeOfView = Number(l.params.time)
                        }
                        return l
                    };
                    s.sendVideoEngagement = function e(t, r, i) {
                        if (i === void 0) {
                            i = {
                            }
                        }
                        var a = L(i, {
                            event: 'video_engagement'
                        });
                        var s = r.buffered,
                            o = r.duration,
                            u = r.playbackEndTime,
                            l = r.height,
                            c = r.mediainfo,
                            d = r.playbackRate,
                            f = r.rebufferingCount,
                            h = r.rendition,
                            p = r.playbackStartTime,
                            v = r.rangeStart,
                            m = r.rangeEnd,
                            g = r.stats,
                            y = r.width;
                        var _ = u - p;
                        i.qos = i.qos || [
                            'bitrates',
                            'events',
                            'player',
                            'frames'
                        ];
                        t.length = t.end - t.start;
                        a.player_height = l;
                        a.player_width = y;
                        a.video_duration = o;
                        if (c) {
                            a.video = c.id;
                            a.video_name = c.name
                        }
                        if (h) {
                            a.rendition_url = h.url;
                            a.rendition_indicated_bps = h.indicatedBPS;
                            a.rendition_mime_type = h.mimeType;
                            a.rendition_height = h.height;
                            a.rendition_width = h.width
                        }
                        if (g) {
                            if (!n.isNil(g.mediaRequests)) {
                                a.media_requests = g.mediaRequests
                            }
                            if (!n.isNil(g.mediaTransferDuration)) {
                                a.media_transfer_duration = g.mediaTransferDuration
                            }
                            if (!n.isNil(g.mediaBytesTransferred)) {
                                a.media_bytes_transferred = g.mediaBytesTransferred
                            }
                            if (!n.isNil(g.bandwidth)) {
                                a.measured_bps = g.bandwidth
                            }
                        }
                        var b = _ / d * 1000;
                        var T = t.end - t.start;
                        var A = 100;
                        var S = Math.floor((T - b) / A) * A / 1000;
                        if (f > 0) {
                            a.rebuffering_count = f
                        }
                        if (S > 0) {
                            a.rebuffering_seconds = S
                        }
                        if (s) {
                            var k = 0;
                            for (var w = 0; w < s.length; w++) {
                                var C = s.start(w);
                                var E = s.end(w);
                                if (u >= C && u <= E) {
                                    k = E - u;
                                    break
                                }
                            }
                            a.forward_buffer_seconds = k
                        }
                        if (_ < 1 && !a.rebuffering_seconds) {
                            return null
                        }
                        var P = this.history_.filter(function (e) {
                            return e.name === 'licenserequestattempted' && e.time >= t.start && e.time < t.end
                        });
                        if (P.length) {
                            a.license_request_attempts = P.length
                        }
                        D(this.player_, a);
                        i.streamCount = this.streamCount_;
                        if (a.video_duration === Infinity) {
                            a.video_seconds_viewed = Math.round(_);
                            delete a.video_duration
                        } else if (_ >= 1) {
                            a['qos.derived_range'] = I(p, u);
                            a.range = v + '..' + m
                        }
                        return this.send(a, i)
                    };
                    s.sendVideoComplete = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var r = L(t, {
                            event: 'video_complete'
                        });
                        D(this.player_, r);
                        t.streamCount = this.streamCount_;
                        return this.send(r, t)
                    };
                    s.sendError = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var r = this.player_.error();
                        if (!r) {
                            return null
                        }
                        var i = L(t, {
                            event: 'error'
                        });
                        var a = n.isFn(this.player_.errors) && n.isFn(this.player_.errors.getAll) && this.player_.errors.getAll() || {
                            unknown: {
                                type: 'MEDIA_ERR_UNKNOWN'
                            }
                        };
                        if (r && a.hasOwnProperty(String(r.code))) {
                            i.error_code = a[String(r.code)].type
                        } else if (r.type !== undefined) {
                            i.error_code = r.type
                        } else {
                            i.error_code = a.unknown.type
                        }
                        D(this.player_, i);
                        t.streamCount = this.streamCount_;
                        return this.send(i, t)
                    };
                    s.sendCatalogRequest = function e(t, r) {
                        if (r === void 0) {
                            r = {
                            }
                        }
                        var n = L(r, {
                            event: 'catalog_request',
                            url: t
                        });
                        return this.sendCatalog_(n, r)
                    };
                    s.sendCatalogRequestError = function e(t, r) {
                        if (r === void 0) {
                            r = {
                            }
                        }
                        var n = L(r, {
                            event: 'catalog_request_error',
                            url: t
                        });
                        if (r.error) {
                            r.error = i(r.error, [
                                'code',
                                'message',
                                'type'
                            ])
                        }
                        return this.sendCatalog_(n, r)
                    };
                    s.sendCatalogResponse = function e(t, r) {
                        if (r === void 0) {
                            r = {
                            }
                        }
                        var n = L(r, {
                            event: 'catalog_response',
                            url: t
                        });
                        n.time = Date.now();
                        n.response_time_ms = n.time - this.history_.last('catalog_request');
                        return this.sendCatalog_(n, r)
                    };
                    s.sendAdEnd = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var r = y(this.player_);
                        var n = this.currentAdSequence_['ads-ad-started'];
                        var i = this.currentAdSequence_.adBreakIndex;
                        if (r.plugin !== undefined) {
                            if (r.adType === 'preroll' && n.length > 0 && n[0].length > 0) {
                                var a = this.history_.first('play', true);
                                r.prerollDelay = n[0][0] - a;
                                r.firstPlayInSession = a
                            }
                            r.adsRequest = this.currentAdSequence_['ads-request'];
                            r.adsResponseReceived = this.currentAdSequence_['ads-response-received'];
                            r.adsLoading = this.currentAdSequence_['ads-loading'][i];
                            r.adsAdStarted = this.currentAdSequence_['ads-ad-started'][i];
                            r.adsAdEnded = this.currentAdSequence_['ads-ad-ended'][i]
                        } else {
                            r.plugin = 'unknown'
                        }
                        var s = {
                            event: 'ad_end',
                            web_ad_info: JSON.stringify(r)
                        };
                        t.streamCount = this.streamCount_;
                        return this.send(D(this.player_, L(t, s)), t)
                    };
                    s.sendAdHardTimeout = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(D(this.player_, L(t, {
                            event: 'ad_hard_timeout'
                        })), t)
                    };
                    s.sendAdStart = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(D(this.player_, L(t, {
                            event: 'ad_start'
                        })), t)
                    };
                    s.sendAdTimeout = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(D(this.player_, L(t, {
                            event: 'ad_timeout'
                        })), t)
                    };
                    s.sendPlayRequest = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        t.streamCount = this.streamCount_;
                        return this.send(D(this.player_, L(t, {
                            event: 'play_request'
                        })), t)
                    };
                    s.sendPlayerInit = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        return this.send(L(t, {
                            event: 'player_init'
                        }), t)
                    };
                    s.sendPlayerLoad = function e(t) {
                        if (t === void 0) {
                            t = {
                            }
                        }
                        return this.send(L(t, {
                            event: 'player_load'
                        }), t)
                    };
                    return a
                }();
                var j = function (e) {
                    var t = e.bcAnalyticsLogger && e.bcAnalyticsLogger();
                    var r = function e() {
                        return t && t.add.apply(t, arguments)
                    };
                    return r
                };
                function U(e, t) {
                    e.prototype = Object.create(t.prototype);
                    e.prototype.constructor = e;
                    e.__proto__ = t
                }
                var N = function e(t) {
                    return typeof t === 'number' && !isNaN(t) && t >= 0 && t < Infinity
                };
                var B = function e(t) {
                    return t.map(function (e) {
                        return Math.floor(e)
                    }).reduce(function (e, t) {
                        var r = e[e.length - 1];
                        if (t !== r) {
                            e.push(t)
                        }
                        return e
                    }, [
                    ])
                };
                var q = function e(t) {
                    return t.reduce(function (e, t) {
                        var r = e[e.length - 1];
                        if (r) {
                            if (r.end + 1 === t) {
                                r.end = t
                            } else {
                                e.push({
                                    start: t,
                                    end: t
                                })
                            }
                        } else {
                            e.push({
                                start: t,
                                end: t
                            })
                        }
                        return e
                    }, [
                    ])
                };
                var F = function e(t) {
                    return t.map(function (e) {
                        var t = e.start,
                            r = e.end;
                        var n = r - t;
                        if (n > 0) {
                            return {
                                start: t,
                                end: r - 1,
                                remainder: r
                            }
                        }
                        return {
                            start: t,
                            end: r,
                            remainder: r
                        }
                    })
                };
                var V = function e(t) {
                    var r = [
                    ];
                    var n = t.shift() || {
                    },
                        i = n.start,
                        a = n.end,
                        s = n.remainder;
                    while (N(i) && N(a) && N(s) && i === a && i === s) {
                        var o = t.shift() || {
                        };
                        i = o.start;
                        a = o.end;
                        s = o.remainder
                    }
                    if (t.length === 0) {
                        r.push(s)
                    }
                    for (var u = 0; u < t.length; u++) {
                        var l = t[u],
                            c = l.start,
                            d = l.end,
                            f = l.remainder;
                        for (var h = c; h <= (f || d); h++) {
                            r.push(h)
                        }
                    }
                    return {
                        start: i,
                        end: a,
                        remainders: r,
                        ranges: t.length
                    }
                };
                var H = function e(t) {
                    return V(F(q(B(t))))
                };
                var z = 10000;
                var G = function e(t) {
                    return Boolean(t.onceux && t.onceux.currentTime && t.onceux.timeline)
                };
                var W = function (e) {
                    U(t, e);
                    function t(t, r) {
                        var n;
                        n = e.call(this) || this;
                        n.player_ = t;
                        n.logger_ = r;
                        n.stateBySrc_ = {
                        };
                        n.lastStateRecord_ = 0;
                        return n
                    }
                    var n = t.prototype;
                    n.logger = function e() {
                    };
                    n.stateBySrc = function e(t) {
                        if (t === void 0) {
                            t = this.player_.currentSrc()
                        }
                        if (!this.stateBySrc_.hasOwnProperty(t)) {
                            this.stateBySrc_[t] = {
                                buffered: null,
                                duration: 0,
                                end: 0,
                                height: 0,
                                mediainfo: null,
                                playbackRate: 1,
                                rebufferingCount: 0,
                                src: t,
                                start: 0,
                                width: 0,
                                playbackStartTime: 0,
                                playbackEndTime: 0,
                                stats: null,
                                rendition: null,
                                videoPlaybackQuality: null,
                                times: [
                                ]
                            }
                        }
                        var r = this.player_.tech_ && this.player_.tech_.hls;
                        this.stateBySrc_[t].stats = r && r.stats || null;
                        return this.stateBySrc_[t]
                    };
                    n.clearStateBySrc = function e(t) {
                        if (t === void 0) {
                            t = this.player_.currentSrc()
                        }
                        delete this.stateBySrc_[t]
                    };
                    n.recordState = function e() {
                        var t = this.player_;
                        var r = this.stateBySrc();
                        r.mediainfo = t.mediainfo;
                        r.playbackEndTime = t.currentTime();
                        r.times.push(r.playbackEndTime);
                        if (G(t)) {
                            r.duration = t.onceux.timeline.contentDuration
                        } else {
                            r.duration = t.duration()
                        }
                        r.buffered = t.buffered();
                        r.playbackRate = t.playbackRate()
                    };
                    n.isTracking = function e() {
                        return !!this.timerId_
                    };
                    n.start = function e(t) {
                        var r = this;
                        if (t === void 0) {
                            t = {
                            }
                        }
                        var n = t,
                            i = n.reason,
                            a = n.src;
                        if (!a) {
                            a = this.player_.currentSrc()
                        }
                        var s = this.stateBySrc(a);
                        s.playbackStartTime = s.playbackEndTime = this.player_.currentTime();
                        if (G(this.player_)) {
                            s.duration = this.player_.onceux.timeline.contentDuration
                        } else {
                            s.duration = this.player_.duration()
                        }
                        s.rebufferingCount = 0;
                        this.player_.clearTimeout(this.timerId_);
                        this.timerCreatedAt_ = Date.now();
                        this.timerId_ = this.player_.setTimeout(function () {
                            return r.stop({
                                src: a,
                                reason: 'engagement timer fired'
                            })
                        }, z);
                        return this
                    };
                    n.prepareState_ = function e(t) {
                        var n = this.player_;
                        var i = this.stateBySrc(t);
                        i.height = Math.round(n.currentHeight());
                        i.width = Math.round(n.currentWidth());
                        var a = n.tech_ && n.tech_.hls;
                        if (a && a.playlists && a.playlists.media()) {
                            var s = a.playlists.media();
                            var o = i.rendition = {
                                url: s.resolvedUri,
                                mimeType: n.currentType()
                            };
                            if (s.attributes) {
                                o.indicatedBPS = s.attributes.BANDWIDTH;
                                if (s.attributes.RESOLUTION) {
                                    o.height = s.attributes.RESOLUTION.height;
                                    o.width = s.attributes.RESOLUTION.width
                                }
                            }
                        }
                        i.videoPlaybackQuality = n.getVideoPlaybackQuality();
                        if (i.mediainfo) {
                            var u = {
                            };
                            Object.keys(i.mediainfo).forEach(function (e) {
                                if (!/_/.test(e)) {
                                    u[e] = i.mediainfo[e]
                                }
                            });
                            i.mediainfo = u
                        }
                        i.times.push(n.currentTime());
                        var l = H(i.times),
                            c = l.start,
                            d = l.end,
                            f = l.remainders,
                            h = l.ranges;
                        i.times = f;
                        return r.mergeOptions({
                            rangeExtras: h,
                            rangeStart: c,
                            rangeEnd: d
                        }, i)
                    };
                    n.stop = function e(t) {
                        var r = this;
                        if (t === void 0) {
                            t = {
                            }
                        }
                        if (!t.src) {
                            t.src = this.player_.currentSrc()
                        }
                        if (this.isTracking()) {
                            this.player_.clearTimeout(this.timerId_);
                            this.timerId_ = null;
                            var n = this.stateBySrc(t.src);
                            var i = (n.duration - n.playbackEndTime) * 1000;
                            if (!this.player_.ended() && i < 1500) {
                                this.timerId_ = true;
                                this.player_.one('ended', function () {
                                    r.recordState();
                                    r.stop({
                                        reason: 'content ended after we delayed the engager'
                                    })
                                });
                                return this
                            }
                            t.state = this.prepareState_(t.src);
                            t.period = t.period || {
                            };
                            t.period.start = t.period.start || this.timerCreatedAt_;
                            t.period.end = t.period.end || Date.now();
                            this.trigger({
                                type: 'engagement',
                                engagement: t
                            })
                        }
                        return this
                    };
                    return t
                }(r.EventTarget);
                var Y = [
                    'progress',
                    'seeking',
                    'suspend',
                    'timeupdate'
                ];
                var $ = [
                    'seek',
                    'stable',
                    'unstable'
                ];
                var X = [
                    'adend',
                    'adscanceled',
                    'adserror',
                    'adskip',
                    'adsready',
                    'adstart',
                    'adtimeout',
                    'contentplayback',
                    'contentupdate',
                    'nopostroll',
                    'nopreroll',
                    'readyforpreroll'
                ];
                var K = [
                ].concat(r.getTech('Html5').Events);
                var Q = K.filter(function (e) {
                    return Y.indexOf(e) === - 1
                });
                var J = [
                    'ads-request',
                    'ads-response-received',
                    'adstart',
                    'ads-loading',
                    'ads-ad-started',
                    'ads-ad-ended',
                    'adend'
                ];
                var Z = [
                    'NETWORK_EMPTY',
                    'NETWORK_IDLE',
                    'NETWORK_LOADING',
                    'NETWORK_NO_SOURCE'
                ];
                var ee = [
                    'HAVE_NOTHING',
                    'HAVE_METADATA',
                    'HAVE_CURRENT_DATA',
                    'HAVE_FUTURE_DATA',
                    'HAVE_ENOUGH_DATA'
                ];
                var te = function () {
                    function e(e) {
                        this.logger_ = e;
                        this.events_ = [
                        ]
                    }
                    var t = e.prototype;
                    t.add = function e(t, n, i) {
                        if (n === void 0) {
                            n = Date.now()
                        }
                        var a = r.mergeOptions(i, {
                            name: t,
                            time: n
                        });
                        this.events_.push(a);
                        return n
                    };
                    t.record = function e(t, r) {
                        var n = Date.now();
                        this.add(t, n, {
                            adState: f(r),
                            isInAdState: m(r),
                            networkState: Z[r.networkState()],
                            readyState: ee[r.readyState()]
                        });
                        return n
                    };
                    t.reset = function e() {
                        this.events_.length = 0
                    };
                    t.filter = function e(t) {
                        if (!n.isFn(t)) {
                            return this.events_.filter(function (e) {
                                return e.name === t
                            })
                        }
                        return this.events_.filter(t)
                    };
                    t.map = function e(t) {
                        return this.events_.map(t)
                    };
                    t.names = function e() {
                        return this.map(function (e) {
                            return e.name
                        })
                    };
                    t.first = function e(t, r) {
                        for (var n = 0; n < this.events_.length; n++) {
                            var i = this.events_[n];
                            if (!r && i.isInAdState) {
                                continue
                            }
                            if (i.name === t) {
                                return i.time
                            }
                        }
                    };
                    t.last = function e(t, r) {
                        var n = this.events_.length;
                        while (n--) {
                            var i = this.events_[n];
                            if (!r && i.isInAdState) {
                                continue
                            }
                            if (i.name === t) {
                                return i.time
                            }
                        }
                    };
                    return e
                }();
                var re = function () {
                    function e() {
                        this.log_ = {
                        }
                    }
                    var t = e.prototype;
                    t.put = function e(t) {
                        this.log_[t] = true
                    };
                    t.peek = function e() {
                        return Object.keys(this.log_)
                    };
                    t.flush = function e() {
                        var t = Object.keys(this.log_);
                        this.log_ = {
                        };
                        return t
                    };
                    return e
                }();
                var ne = '3.8.6';
                var ie = {
                    production: 'https://metrics.brightcove.com/v2/tracker',
                    staging: 'http://metrics.aws-qa.rnatest.brightcove.com/v2/tracker'
                };
                var ae = function e(t, r, i) {
                    Object.keys(i).forEach(function (e) {
                        r[e] = String(r[e] || '');
                        if (e === 'accountId' && !n.isNonEmptyStr(r[e])) {
                            r[e] = String(r.account || '')
                        }
                        if (!n.isNonEmptyStr(r[e])) {
                            r[e] = t.getAttribute('data-' + i[e]) || ''
                        }
                    });
                    return r
                };
                var se = function t(r, i) {
                    var a = ae(r.el(), i, {
                        accountId: 'account',
                        applicationId: 'application-id',
                        embedId: 'embed',
                        playerId: 'player',
                        playerName: 'name',
                        usage: 'usage'
                    }),
                        s = a.accountId,
                        o = a.applicationId,
                        u = a.embedId,
                        l = a.playerId;
                    if (!n.isNonEmptyStr(i.player)) {
                        if (e.location.hostname === 'players.api.brightcove.com') {
                            i.player = 'players.api.brightcove.com/' + l + '_' + u;
                            return
                        }
                        i.player = 'players.brightcove.com/' + s + '/' + l + '_' + u;
                        if (o) {
                            i.player += '/' + o
                        }
                    }
                    if (o) {
                        if (n.isNonEmptyStr(i.playerName)) {
                            i.playerName += ' - ' + o
                        } else {
                            i.playerName = o
                        }
                    }
                };
                var oe = function e(t) {
                    return {
                        computedHeight: t.currentHeight(),
                        computedWidth: t.currentWidth(),
                        height: t.height(),
                        width: t.width()
                    }
                };
                var ue = function t(n) {
                    if (typeof n === 'boolean') {
                        r.log.warn('The __iframe__ option should only be used in tests!');
                        return n
                    }
                    try {
                        return e.parent !== e.self
                    } catch (e) {
                        return true
                    }
                };
                var le = function i(a) {
                    var s = this;
                    if (a === void 0) {
                        a = {
                        }
                    }
                    var o = false;
                    var u = false;
                    var l = {
                    };
                    a = r.mergeOptions(a);
                    a.env = ie.hasOwnProperty(a.env) ? a.env : 'production';
                    se(this, a);
                    var c = j(this);
                    var d = new W(this, c);
                    var p = new te(c);
                    var y = new re;
                    var _ = n.isNonEmptyStr(a.usage) ? a.usage.split(',') : [
                    ];
                    _.forEach(function (e) {
                        y.put(e)
                    });
                    var b = new M(this, p, n.isNonEmptyStr(a.analyticsUrl) ? a.analyticsUrl : ie[a.env], {
                        logger: c,
                        user: a.user
                    });
                    b.defaultParams(function () {
                        var r = {
                            account: a.accountId || null,
                            destination: e.location.href,
                            platform_version: a.platformVersion,
                            player: a.player,
                            player_name: a.playerName,
                            source: t.referrer
                        };
                        if (ue(a.__iframe__)) {
                            r.destination = t.referrer;
                            if (n.isNonEmptyStr(a.referrer)) {
                                r.source = a.referrer
                            } else {
                                try {
                                    r.source = e.parent.document.referrer
                                } catch (e) {
                                    r.source = null
                                }
                            }
                        }
                        return r
                    });
                    this.bcAnalytics = {
                        client: b,
                        engager: d,
                        history: p,
                        settings: a,
                        VERSION: ne
                    };
                    this.on('usage', function (e) {
                        if (!e.name) {
                            return r.log.warn('Ignored usage event without a `name` parameter')
                        }
                        y.put(e.name)
                    });
                    var A = function e() {
                        y.put('unload');
                        d.stop({
                            fromUnload: true,
                            ignoreAdState: true,
                            reason: 'unload called'
                        })
                    };
                    e.addEventListener('unload', A);
                    var S = function e(t) {
                        if (!g(t, s)) {
                            return
                        }
                        var r = p.first('loadstart', v(s));
                        var n = p.first('play');
                        var i = p.last('playing');
                        if ((n || i) && !d.isTracking() && !s.paused()) {
                            d.start({
                                period: {
                                    start: n || i
                                },
                                reason: 'workflow detected that it is playing'
                            })
                        }
                        if (b.timeOfImpression && b.timeOfView) {
                            return
                        }
                        l.workflow = l.workflow || s.setTimeout(function () {
                            l.workflow = null;
                            r = p.first('loadstart', v(s));
                            n = p.first('play');
                            i = p.last('playing');
                            if ((r || n) && !b.timeOfImpression) {
                                b.sendVideoImpression({
                                    params: {
                                        time: Math.min(r || Infinity, n || Infinity)
                                    }
                                })
                            }
                            if (r && i && !b.timeOfView) {
                                b.sendVideoView({
                                    params: {
                                        time: i
                                    }
                                })
                            }
                        }, 1)
                    };
                    d.on('engagement', function (t) {
                        var r = t.engagement,
                            n = r.fromUnload,
                            i = r.ignoreAdState,
                            a = r.period,
                            o = r.state;
                        var u = m(s);
                        var l = {
                            useSendBeaconOnly: n,
                            params: {
                                time: a.end
                            }
                        };
                        if (o.rangeExtras >= 2) {
                            y.put('disco-engmnt')
                        }
                        var c = y.peek();
                        if (c && c.length) {
                            l.params.usage = c.map(e.encodeURIComponent).sort().join(',')
                        }
                        if (!u || i) {
                            b.qos.append('frames', o.videoPlaybackQuality);
                            if (b.sendVideoEngagement(a, o, l) && !s.paused()) {
                                if (u) {
                                    return
                                }
                                y.flush();
                                d.start({
                                    reason: 'sent engagement and still playing'
                                })
                            }
                        }
                    });
                    this.on('dispose', function () {
                        e.removeEventListener('unload', A);
                        y.put('disposed');
                        d.stop({
                            ignoreAdState: true,
                            reason: 'player disposed'
                        });
                        d.off()
                    });
                    this.on(Q.concat(X, $).concat('sourceunstable'), function (e) {
                        return p.record(e.type, s)
                    });
                    this.on(Q.concat('ads-ad-started'), function (e) {
                        b.qos.append('event', m(s) ? 'ad' : 'content', e.type)
                    });
                    this.on(['loadedmetadata',
                        'resize'], function () {
                            b.qos.append('player', oe(s))
                        });
                    this.on('fullscreenchange', function () {
                        var e = Date.now();
                        l.fullscreen = s.setTimeout(function () {
                            l.fullscreen = null;
                            b.qos.append('player', oe(s), e)
                        }, 500)
                    });
                    this.on('mediachange', function () {
                        if (s.tech_.hls) {
                            var e = s.tech_.hls.playlists.media();
                            b.qos.append('bitrate', {
                                bitrates: s.tech_.hls.bandwidth,
                                playlists: e && e.attributes && e.attributes.BANDWIDTH
                            })
                        }
                    });
                    this.on('ready', function () {
                        s.tech_.on('usage', function (e) {
                            if (!e.name) {
                                return r.log.warn('Ignored usage event without a `name` parameter')
                            }
                            y.put(e.name)
                        });
                        s.tech_.on('bandwidthupdate', function () {
                            b.qos.append('bitrate', {
                                bitrates: s.tech_.hls.bandwidth,
                                throughput: Math.round(s.tech_.hls.throughput)
                            })
                        });
                        s.tech_.on('liveresync', function () {
                            s.trigger({
                                type: 'usage',
                                name: 'hls-live-resync'
                            })
                        });
                        s.tech_.on('videounderflow', function () {
                            s.trigger({
                                type: 'usage',
                                name: 'hls-video-underflow'
                            })
                        });
                        s.tech_.on('licenserequestattempted', function () {
                            p.add('licenserequestattempted')
                        });
                        s.on('loadedmetadata', function () {
                            var e = s.textTracks();
                            for (var t = 0; t < e.length; t++) {
                                if (e[t].label === 'segment-metadata') {
                                    (function () {
                                        var r = e[t];
                                        var n = void 0;
                                        r.addEventListener('cuechange', function () {
                                            var e = r.activeCues[0];
                                            if (e) {
                                                var t = s.tech_.hls.playlists.master.playlists[e.value.playlist];
                                                if (n !== t.uri) {
                                                    n = t.uri;
                                                    if (t.attributes && t.attributes.BANDWIDTH) {
                                                        b.qos.append('bitrate', {
                                                            rendered: t.attributes.BANDWIDTH
                                                        })
                                                    }
                                                }
                                            }
                                        })
                                    })()
                                }
                            }
                        })
                    });
                    this.on('waiting', function (e) {
                        if (!u && !m(s)) {
                            d.stateBySrc().rebufferingCount++
                        }
                    });
                    this.on('sourcechanged', function (e, t) {
                        var r = t.interimEvents;
                        var n = r[0].event;
                        var i = function e() {
                            if (!u && !m(s)) {
                                d.recordState()
                            }
                        };
                        if (t.from) {
                            d.stop({
                                reason: 'changing sources',
                                period: {
                                    end: r[0].time
                                },
                                ignoreAdState: true,
                                src: t.from
                            });
                            d.clearStateBySrc(t.from)
                        }
                        o = false;
                        u = false;
                        b.resetTimesOf();
                        p.reset();
                        r.forEach(function (e) {
                            return p.add(e.event.type, e.time)
                        });
                        S();
                        s.onPerSrc('timeupdate', i);
                        s.onePerSrc('sourceunstable', function () {
                            if (f(s) === 'content-resuming') {
                                return
                            }
                            var e = s.currentSrc();
                            d.stop({
                                ignoreAdState: true,
                                reason: 'sourceunstable',
                                src: e
                            });
                            if (!m(s)) {
                                s.off('timeupdate', i)
                            }
                        });
                        s.onPerSrc(['loadstart',
                            'play',
                            'playing'], S);
                        s.onPerSrc(['pause',
                            'ratechange'], function (e) {
                                if (!u && !m(s) && !s.ended()) {
                                    d.stop({
                                        reason: 'saw "' + e.type + '"'
                                    });
                                    if (s.paused()) {
                                        s.onePerSrc('playing', function () {
                                            d.start({
                                                reason: 'playback began after a pause'
                                            })
                                        })
                                    } else if (e.type === 'ratechange') {
                                        l.ratechange = s.setTimeout(function () {
                                            l.ratechange = null;
                                            d.start({
                                                reason: 'the playback rate changed'
                                            })
                                        }, 1)
                                    }
                                }
                            });
                        s.onPerSrc('unstable', function () {
                            if (!u && !m(s)) {
                                u = true;
                                d.stop({
                                    reason: 'seeking'
                                })
                            }
                        });
                        s.onPerSrc('seek', function () {
                            if (u && !m(s)) {
                                u = false;
                                d.start({
                                    reason: 'stopped seeking'
                                })
                            }
                        });
                        s.onePerSrc('adstart', function () {
                            if (!h(s)) {
                                b.sendVideoImpression({
                                    params: {
                                        time: p.last('adstart', true) - 100
                                    }
                                })
                            }
                        });
                        s.onPerSrc('adstart', function () {
                            o = s.ended();
                            d.stop({
                                ignoreAdState: true,
                                period: {
                                    end: p.last('adstart', true)
                                },
                                reason: 'saw adstart'
                            })
                        });
                        s.onePerSrc('adend', function () {
                            if (!s.paused() && !s.ended()) {
                                S()
                            }
                        });
                        s.onPerSrc('adend', function () {
                            if (!o) {
                                d.start({
                                    reason: 'saw "adend"'
                                })
                            }
                        });
                        s.onePerSrc('ended', function () {
                            d.stop({
                                reason: 'end of content'
                            });
                            b.sendVideoComplete()
                        })
                    });
                    this.on('catalog_request', function (e) {
                        p.record(e.type, s);
                        b.sendCatalogRequest(e.url)
                    });
                    this.on('catalog_request_error', function (e) {
                        p.record(e.type, s);
                        b.sendCatalogRequestError(e.url, {
                            error: e.error,
                            xhr: e.response
                        })
                    });
                    this.on('catalog_response', function (e) {
                        p.record(e.type, s);
                        b.sendCatalogResponse(e.url, {
                            xhr: e.response
                        })
                    });
                    this.on('play', function (e) {
                        if (m(s)) {
                            return
                        }
                        var t = {
                            params: {
                                time: Date.now()
                            }
                        };
                        if (s.perSourceBehaviors.isSrcStable()) {
                            b.sendPlayRequest(t)
                        } else {
                            s.one('sourcechanged', function () {
                                return b.sendPlayRequest(t)
                            })
                        }
                    });
                    this.on('error', function () {
                        if (!m(s)) {
                            b.sendError()
                        }
                    });
                    this.on('adstart', function (e) {
                        b.sendAdStart();
                        l.perSrcDisable = s.setTimeout(function () {
                            l.perSrcDisable = null;
                            s.perSourceBehaviors.disable()
                        }, 1)
                    });
                    this.on('adend', function (e) {
                        b.sendAdEnd();
                        if (l.perSrcDisable) {
                            s.clearTimeout(l.perSrcDisable)
                        } else {
                            s.perSourceBehaviors.enable()
                        }
                    });
                    this.on('adtimeout', function () {
                        return b.sendAdTimeout()
                    });
                    this.on('ad-hard-timeout', function () {
                        return b.sendAdHardTimeout()
                    });
                    this.on(J, function (e) {
                        T(b, e.type, Date.now())
                    });
                    b.qos.append('mr', a.mr);
                    b.sendPlayerInit();
                    b.sendError();
                    this.ready(function () {
                        b.defaultParams({
                            feature: h(s) ? 'adonly' : null
                        });
                        b.qos.append('performance', (e.location.href || '').split('?')[1]);
                        b.qos.append('player', oe(s));
                        if ('hidden' in t && 'visibilityState' in t) {
                            if (t.hidden) {
                                s.trigger({
                                    type: 'usage',
                                    name: 'document-hidden'
                                })
                            }
                            var r = function e() {
                                s.trigger({
                                    type: 'usage',
                                    name: 'document-' + t.visibilityState
                                })
                            };
                            t.addEventListener('visibilitychange', r);
                            s.on('dispose', function () {
                                t.removeEventListener('visibilitychange', r)
                            })
                        }
                        if (t.querySelector('.bc-iframe')) {
                            s.trigger({
                                type: 'usage',
                                name: 'iframe-embed'
                            })
                        } else {
                            s.trigger({
                                type: 'usage',
                                name: 'inpage-embed'
                            })
                        }
                        b.sendPlayerLoad({
                            qos: b.qos.keys(),
                            params: {
                                usage: y.flush()
                            }
                        })
                    })
                };
                le.VERSION = ne;
                if (r.registerPlugin) {
                    r.registerPlugin('bcAnalytics', le)
                } else {
                    r.plugin('bcAnalytics', le)
                }
                return le
            })
        })(); (function () {
            if (videojs.getPlugin('errors')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js'), require('global/document')) : typeof define === 'function' && define.amd ? define(['video.js',
                    'global/document'], t) : e.videojsErrors = t(e.videojs, e.document)
            })(this, function (e, t) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                t = t && t.hasOwnProperty('default') ? t['default'] : t;
                var r = '4.2.0';
                var n = e.getComponent('Flash');
                var i = !e.browser.IS_IPHONE;
                var a = e.registerPlugin || e.plugin;
                var s = {
                    header: '',
                    code: '',
                    message: '',
                    timeout: 45 * 1000,
                    dismiss: i,
                    errors: {
                        1: {
                            type: 'MEDIA_ERR_ABORTED',
                            headline: 'The video download was cancelled'
                        },
                        2: {
                            type: 'MEDIA_ERR_NETWORK',
                            headline: 'The video connection was lost, please confirm you are ' + 'connected to the internet'
                        },
                        3: {
                            type: 'MEDIA_ERR_DECODE',
                            headline: 'The video is bad or in a format that cannot be played on your browser'
                        },
                        4: {
                            type: 'MEDIA_ERR_SRC_NOT_SUPPORTED',
                            headline: 'This video is either unavailable or not supported in this browser'
                        },
                        5: {
                            type: 'MEDIA_ERR_ENCRYPTED',
                            headline: 'The video you are trying to watch is encrypted and we do not know how ' + 'to decrypt it'
                        },
                        unknown: {
                            type: 'MEDIA_ERR_UNKNOWN',
                            headline: 'An unanticipated problem was encountered, check back soon and try again'
                        },
                        '-1': {
                            type: 'PLAYER_ERR_NO_SRC',
                            headline: 'No video has been loaded'
                        },
                        '-2': {
                            type: 'PLAYER_ERR_TIMEOUT',
                            headline: 'Could not download the video'
                        },
                        PLAYER_ERR_DOMAIN_RESTRICTED: {
                            headline: 'This video is restricted from playing on your current domain'
                        },
                        PLAYER_ERR_IP_RESTRICTED: {
                            headline: 'This video is restricted at your current IP address'
                        },
                        PLAYER_ERR_GEO_RESTRICTED: {
                            headline: 'This video is restricted from playing in your current geographic region'
                        },
                        FLASHLS_ERR_CROSS_DOMAIN: {
                            headline: 'The video could not be loaded: crossdomain access denied.'
                        }
                    }
                };
                var o = function i(a, o) {
                    var u;
                    var l;
                    var c;
                    var d = [
                    ];
                    var f = function t(r) {
                        o.errors = e.mergeOptions(o.errors, r);
                        Object.keys(o.errors).forEach(function (e) {
                            var t = o.errors[e];
                            if (!t.type) {
                                t.type = e
                            }
                        })
                    };
                    f();
                    var h = function e() {
                        a.clearTimeout(l);
                        if (c) {
                            c = false;
                            a.removeClass('vjs-waiting')
                        }
                        l = a.setTimeout(function () {
                            if (a.error() || a.paused() || a.ended()) {
                                return
                            }
                            c = true;
                            a.addClass('vjs-waiting')
                        }, 1000);
                        a.clearTimeout(u);
                        u = a.setTimeout(function () {
                            if (a.error() || a.paused() || a.ended()) {
                                return
                            }
                            a.error({
                                code: - 2,
                                type: 'PLAYER_ERR_TIMEOUT'
                            })
                        }, o.timeout);
                        if (a.error() && a.error().code === - 2) {
                            a.error(null)
                        }
                    };
                    var p = function e() {
                        var t;
                        while (d.length) {
                            t = d.shift();
                            a.off(t[0], t[1])
                        }
                        a.clearTimeout(u);
                        a.clearTimeout(l)
                    };
                    var v = function e(t, r) {
                        var n = function e() {
                            if (!a.error()) {
                                var t = a.$('.vjs-tech');
                                if (t && t.type === 'application/x-shockwave-flash' && !t.vjs_getProperty) {
                                    a.error({
                                        code: - 2,
                                        type: 'PLAYER_ERR_TIMEOUT'
                                    });
                                    return
                                }
                                if (a.paused()) {
                                    return h()
                                }
                                if (a.ended()) {
                                    return h()
                                }
                            }
                            r.call(this)
                        };
                        a.on(t, n);
                        d.push([t,
                            n])
                    };
                    var m = function e() {
                        var t = 0;
                        p();
                        h();
                        v(['timeupdate',
                            'adtimeupdate'], function () {
                                var e = a.currentTime();
                                if (e !== t) {
                                    t = e;
                                    h()
                                }
                            })
                    };
                    var g = function e() {
                        if (!a.currentSrc()) {
                            a.error({
                                code: - 1,
                                type: 'PLAYER_ERR_NO_SRC'
                            })
                        }
                    };
                    var y = function r() {
                        var i = '';
                        var s = a.error();
                        var u = t.createElement('div');
                        var l = '';
                        if (!s) {
                            return
                        }
                        s = e.mergeOptions(s, o.errors[s.code || s.type || 0]);
                        if (s.message) {
                            i = '<div class="vjs-errors-details">' + a.localize('Technical details') + '\n        : <div class="vjs-errors-message">' + a.localize(s.message) + '</div>\n        </div>'
                        }
                        if (s.code === 4 && n && !n.isSupported()) {
                            var c = a.localize('If you are using an older browser please try upgrading or installing Flash.');
                            i += '<span class="vjs-errors-flashmessage">' + c + '</span>'
                        }
                        var d = a.getChild('errorDisplay');
                        u.className = 'vjs-errors-dialog';
                        u.id = 'vjs-errors-dialog';
                        l = '<div class="vjs-errors-content-container">\n      <h2 class="vjs-errors-headline">' + this.localize(s.headline) + '</h2>\n        <div><b>' + this.localize('Error Code') + '</b>: ' + (s.type || s.code) + '</div>\n        ' + i + '\n      </div>';
                        var f = d.closeable(!('dismiss' in s) || s.dismiss);
                        if (f) {
                            l += '<div class="vjs-errors-ok-button-container">\n          <button class="vjs-errors-ok-button">' + this.localize('OK') + '</button>\n        </div>';
                            u.innerHTML = l;
                            d.fillWith(u);
                            d.contentEl().firstChild.appendChild(d.getChild('closeButton').el());
                            var h = d.el().querySelector('.vjs-errors-ok-button');
                            a.on(h, 'click', function () {
                                d.close()
                            })
                        } else {
                            u.innerHTML = l;
                            d.fillWith(u)
                        }
                        if (a.currentWidth() <= 600 || a.currentHeight() <= 250) {
                            d.addClass('vjs-xs')
                        }
                        d.one('modalclose', function () {
                            return a.error(null)
                        })
                    };
                    var _ = function e() {
                        p();
                        a.removeClass('vjs-errors');
                        a.off('play', m);
                        a.off('play', g);
                        a.off('dispose', e);
                        a.off(['aderror',
                            'error'], y)
                    };
                    var b = function t(r) {
                        _();
                        i(a, e.mergeOptions(s, r))
                    };
                    b.extend = function (e) {
                        return f(e)
                    };
                    b.getAll = function () {
                        return e.mergeOptions(o.errors)
                    };
                    b.timeout = function (e) {
                        if (typeof e === 'undefined') {
                            return o.timeout
                        }
                        if (e !== o.timeout) {
                            o.timeout = e;
                            if (!a.paused()) {
                                m()
                            }
                        }
                    };
                    b.disableProgress = function () {
                    };
                    a.on('play', m);
                    a.on('play', g);
                    a.on('dispose', _);
                    a.on(['aderror',
                        'error'], y);
                    a.ready(function () {
                        a.addClass('vjs-errors')
                    });
                    if (!a.paused()) {
                        m()
                    }
                    b.VERSION = r;
                    a.errors = b
                };
                var u = function t(r) {
                    o(this, e.mergeOptions(s, r))
                };
                [
                    'extend',
                    'getAll'
                ].forEach(function (t) {
                    u[t] = function () {
                        e.log.warn('The errors.' + t + '() method is not available until the plugin has been initialized!')
                    }
                });
                u.VERSION = r;
                a('errors', u);
                return u
            })
        })(); (function () {
            if (videojs.getPlugin('catalog')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js'), require('@brightcove/loscore'), require('global/window'), require('global/document')) : typeof define === 'function' && define.amd ? define(['video.js',
                    '@brightcove/loscore',
                    'global/window',
                    'global/document'], t) : e.videojsBcCatalog = t(e.videojs, e.videojs.bc_, e.window, e.document)
            })(this, function (e, t, r, n) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                t = t && t.hasOwnProperty('default') ? t['default'] : t;
                r = r && r.hasOwnProperty('default') ? r['default'] : r;
                n = n && n.hasOwnProperty('default') ? n['default'] : n;
                var i = '3.24.1';
                var a = 'video';
                var s = 'playlist';
                var o = 'search';
                var u = 'lazySequence';
                var l = [
                    {
                        attr: 'data-video-id',
                        query: 'videoId',
                        config: 'videoId',
                        type: a
                    },
                    {
                        attr: 'data-playlist-id',
                        query: 'playlistId',
                        config: 'playlistId',
                        type: s
                    },
                    {
                        attr: 'data-catalog-search',
                        query: 'catalogSearch',
                        config: 'search',
                        type: o
                    },
                    {
                        attr: 'data-catalog-sequence',
                        query: 'catalogSequence',
                        config: 'sequence',
                        type: u
                    }
                ];
                var c = function e(t, r, n) {
                    for (var i = 0; i < l.length; i++) {
                        var a = l[i];
                        var o = a[t];
                        if (r[o]) {
                            var u = {
                                id: r[o],
                                type: a.type
                            };
                            if (u.type === s) {
                                u.playlistVideoId = n
                            }
                            return u
                        }
                    }
                };
                var d = function r(n, i, a) {
                    var s = i.options_;
                    var d = Boolean(i.el().ownerDocument.querySelector('.bc-iframe'));
                    var f = t.qs();
                    a = a ? f.parse(a) : f.search;
                    l.concat({
                        query: 'playlistVideoId'
                    }).forEach(function (e) {
                        var t = e.query;
                        if (Array.isArray(a[t])) {
                            a[t] = a[t].pop()
                        }
                    });
                    if (l.filter(function (e) {
                        return !!n[e.config]
                    }).length > 1 || l.filter(function (e) {
                        return !!s[e.attr]
                    }).length > 1) {
                        i.error({
                            headline: 'Bad Request: Multiple catalog media queries provided. Please only provide one',
                            type: 'PLAYER_ERR_CONFLICTING_DATA',
                            code: - 3,
                            message: 'Too many catalog media parameters were provided in this player. ' + 'Please use only one of the following: videoId, playlistId, catalogSequence, or catalogSearch.'
                        });
                        return
                    }
                    var h = d && c('query', a, a.playlistVideoId) || c('attr', s, s['data-playlist-video-id'] || a.playlistVideoId) || c('config', n, a.playlistVideoId || n.playlistVideoId);
                    if (!h) {
                        return
                    }
                    if (typeof h.id === 'string' && (h.type === o || h.type === u)) {
                        var p = h.id;
                        try {
                            h.id = JSON.parse(p)
                        } catch (t) {
                            if (h.type === u) {
                                e.log.error('sequence must be valid JSON or an object', t);
                                return
                            }
                        }
                        if (!t.isObj(h.id) && !t.isArr(h.id)) {
                            h.id = p
                        }
                    }
                    return h
                };
                var f = function e(r) {
                    if (!t.isFn(r.errors) || !t.isFn(r.errors.extend)) {
                        return
                    }
                    r.errors.extend({
                        VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND: {
                            headline: 'The Video Cloud account was not found.'
                        },
                        VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND: {
                            headline: 'The Video Cloud resource was not found.'
                        },
                        VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND: {
                            headline: 'The Video Cloud video was not found.'
                        },
                        VIDEO_CLOUD_ERR_NOT_PLAYABLE: {
                            headline: 'The Video Cloud video is not playable.'
                        },
                        VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND: {
                            headline: 'The Video Cloud SSAI ad config id was not found.'
                        }
                    })
                };
                var h = {
                    403: {
                        ACCESS_DENIED: {
                            DOMAIN: 'PLAYER_ERR_DOMAIN_RESTRICTED',
                            CLIENT_IP: 'PLAYER_ERR_IP_RESTRICTED',
                            CLIENT_GEO: 'PLAYER_ERR_GEO_RESTRICTED'
                        },
                        VIDEO_NOT_PLAYABLE: 'VIDEO_CLOUD_ERR_NOT_PLAYABLE'
                    },
                    404: {
                        ACCOUNT_NOT_FOUND: 'VIDEO_CLOUD_ERR_ACCOUNT_NOT_FOUND',
                        RESOURCE_NOT_FOUND: 'VIDEO_CLOUD_ERR_RESOURCE_NOT_FOUND',
                        VIDEO_NOT_FOUND: 'VIDEO_CLOUD_ERR_VIDEO_NOT_FOUND'
                    },
                    400: {
                        AD_CONFIG_NOT_FOUND: 'VIDEO_CLOUD_ERR_AD_CONFIG_ID_NOT_FOUND'
                    }
                };
                var p = function e(r, n) {
                    var i = n.shift();
                    if (t.isNonEmptyStr(r[i])) {
                        return r[i]
                    }
                    if (!i || !r[i]) {
                        return 'unknown'
                    }
                    return e(r[i], n)
                };
                var v = function e(t, r) {
                    r = Array.isArray(r) ? r[0] : r || {
                    };
                    return {
                        code: p(h, [
                            t,
                            r.error_code,
                            r.error_subcode
                        ])
                    }
                };
                var m = function t(r, n, i) {
                    if (i.embedHasPoster) {
                        r.poster = n.options_.poster
                    }
                    if (i.embedHasSources) {
                        r.sources = n.options_.sources
                    }
                    if (i.embedHasTracks) {
                        r.textTracks = n.options_.tracks
                    }
                    if (r.textTracks && r.textTracks.length > 0 && e.browser.IS_ANY_SAFARI) {
                        n.$('.vjs-tech').setAttribute('crossorigin', 'anonymous')
                    }
                    return r
                };
                var g = function e(t, r) {
                    return function (e, n) {
                        if (e) {
                            e.data = n;
                            t.catalog.error = e;
                            t.error(v(e.status, n));
                            return t.trigger('bc-catalog-error')
                        }
                        t.ready(function () {
                            return t.catalog.load(r(n))
                        })
                    }
                };
                var y = function t(r, n, i) {
                    if (r === a) {
                        return g(n, function (e) {
                            return m(e, n, i)
                        })
                    }
                    return g(n, function (t) {
                        var a = m({
                        }, n, i);
                        if (Array.isArray(t.videos)) {
                            var o = t.videos[0] || {
                            };
                            t.videos[0] = e.mergeOptions(o, a, {
                                rawItem: o
                            })
                        } else {
                            t.videos = [
                                a
                            ]
                        }
                        if (i.playlistVideoId && r === s) {
                            for (var u = 0; u < t.length; u++) {
                                if (t[u].id === i.playlistVideoId || 'ref:' + t[u].referenceId === i.playlistVideoId) {
                                    t.startingIndex = u;
                                    break
                                }
                            }
                        }
                        return t
                    })
                };
                var _ = function e() {
                    return Number.MAX_SAFE_INTEGER || Math.pow(2, 53) - 2
                };
                var b = function e(t, r) {
                    var n = t.cuePoints;
                    var i = n[r];
                    var a;
                    for (r++; r < n.length; r++) {
                        if (n[r].time > i.time) {
                            a = n[r];
                            break
                        }
                    }
                    var s = isFinite(t.duration) ? t.duration : _();
                    i.startTime = i.time;
                    if (a && a.time < s) {
                        i.endTime = a.time
                    } else {
                        i.endTime = s
                    }
                    return i
                };
                var T = function e(t) {
                    var r = t.remoteTextTracks();
                    if (r) {
                        var n = r.length;
                        while (n--) {
                            t.removeRemoteTextTrack(r[n])
                        }
                    }
                    var i = t.textTracks();
                    if (i) {
                        var a = i.length;
                        while (a--) {
                            var s = i[a];
                            if (s.kind === 'metadata' && s.cues) {
                                var o = s.cues.length;
                                while (o--) {
                                    s.removeCue(s.cues[o])
                                }
                            }
                            s.mode = 'disabled'
                        }
                    }
                };
                var A = function e(t, n) {
                    T(t);
                    if (!n.cuePoints) {
                        return
                    }
                    var i = t.mediaCuePointsTrack();
                    var a = r.VTTCue || r.vttjs && r.vttjs.VTTCue || r.TextTrackCue;
                    for (var s = 0; s < n.cuePoints.length; s++) {
                        var o = n.cuePoints[s];
                        var u = new a(o.startTime, o.endTime, o.type);
                        u.originalCuePoint = o;
                        i.addCue(u)
                    }
                    i.mode = 'hidden'
                };
                var S = function e(t, r, n) {
                    var i = 0;
                    for (; i < t.length; i++) {
                        if (r(t[i])) {
                            return t[i]
                        }
                    }
                    return n
                };
                function k(e) {
                    var t = k.windowLocationProtocol();
                    var r = function e(r) {
                        return r.src && r.src.indexOf(t) === 0
                    };
                    if (e && e.length && e.length > 0) {
                        return S(e, r, e[0]).src
                    }
                }
                k.windowLocationProtocol = function () {
                    return r.location.protocol
                };
                var w = function e(t) {
                    return r.encodeURIComponent(t)
                };
                var C = function e(r) {
                    var n = {
                        ad_config_id: 'adConfigId'
                    };
                    var i = [
                        'ad_config_id',
                        'tveToken'
                    ];
                    if (r.type !== a) {
                        i.push('limit');
                        i.push('offset')
                    }
                    if (r.type === o) {
                        i.push('q');
                        i.push('sort')
                    }
                    var s = {
                    };
                    i.forEach(function (e) {
                        var t = n[e] || e;
                        if (r[t]) {
                            s[e] = r[t]
                        }
                    });
                    var u = t.qs().stringify(s);
                    return u ? '?' + u : ''
                };
                var E = function e(t) {
                    var r = t.accountId,
                        n = t.baseUrl,
                        i = n === void 0 ? 'https://edge.api.brightcove.com/playback/v1' : n,
                        a = t.type;
                    if (i.slice(- 1) === '/') {
                        i = i.slice(0, - 1)
                    }
                    var u;
                    u = i + '/accounts/' + w(r) + '/' + (a === s ? 'playlists' : 'videos');
                    if (a !== o) {
                        u += '/' + w(t.id)
                    }
                    u += C(t);
                    return u
                };
                var I = function r(n, i, u) {
                    if (u === void 0) {
                        u = function e() {
                        }
                    }
                    var l = i.accountId,
                        c = i.adConfigId,
                        d = i.id,
                        f = i.policyKey,
                        h = i.q,
                        p = i.type;
                    if (!l || !f || !p) {
                        return u(new Error('accountId, policyKey, and type are required'))
                    }
                    if (p === o && !h) {
                        return u(new Error('q is required when performing a search'))
                    } else if (p !== o && !d) {
                        return u(new Error('id is required when getting a video or playlist'))
                    }
                    var v = E(i);
                    var m = function e(r, i) {
                        n.trigger(t.assign({
                            type: 'catalog_' + r,
                            accountId: l,
                            adConfigId: c,
                            playlistId: p === s ? d : undefined,
                            search: p === o ? h : undefined,
                            url: v,
                            videoId: p === a ? d : undefined
                        }, i))
                    };
                    var g = function e(t, r, n) {
                        return m('request_error', {
                            error: t,
                            response: r,
                            body: n
                        })
                    };
                    m('request');
                    var y = {
                        Accept: 'application/json;pk=' + f
                    };
                    var _ = e.xhr({
                        headers: y,
                        json: true,
                        url: v
                    }, function (e, t, r) {
                        if (e) {
                            g(e, _, r);
                            return u(e, r)
                        }
                        if (_.status >= 400) {
                            g(new Error('Request Failed'), _, r);
                            return u(_, r)
                        }
                        m('response', {
                            response: _
                        });
                        u(null, r)
                    });
                    var b = _.onabort.bind(_);
                    _.onabort = function () {
                        var e = new Error('Request Aborted');
                        b();
                        g(e, _, null);
                        return u(e, null)
                    };
                    return _
                };
                var P = function e() {
                    var t = r.GestureEvent;
                    return !!(t && r.WebKitMediaKeys && r.WebKitMediaKeys.isTypeSupported('com.apple.fps.1_0', 'video/mp4'))
                };
                var O = function e(t) {
                    return t === 'application/vnd.apple.mpegurl' || t === 'application/x-mpegURL'
                };
                var x = function e(t) {
                    return t.isSecureContext || !/^http:/.test(t.location.href)
                };
                var L = {
                    isSafariWithFairplaySupport: P,
                    isHlsType: O,
                    preferHttps: x
                };
                var D = 'https://fps.brightcove.com/v1/application_certificate';
                var R = 'com.apple.fps.1_0';
                var M = function e(t) {
                    return r.btoa(String.fromCharCode.apply(null, t))
                };
                var j = function e(t) {
                    return String.fromCharCode.apply(null, new Uint16Array(t.buffer))
                };
                var U = function e(t) {
                    var r = t.source,
                        n = t.publisherId,
                        i = t.applicationId;
                    var a = r.key_systems[R].certificate_url;
                    if (a) {
                        return a
                    }
                    if (i && n) {
                        return D + '/' + n + '/' + i
                    }
                    return null
                };
                var N = function t(r, n) {
                    var i = U({
                        source: r.source,
                        publisherId: r.publisherId,
                        applicationId: r.applicationId
                    });
                    e.xhr({
                        uri: i,
                        responseType: 'arraybuffer'
                    }, function (e, t, r) {
                        if (e) {
                            n(e);
                            return
                        }
                        n(null, new Uint8Array(r))
                    })
                };
                var B = function e(t, r) {
                    return j(r).split('//')[1]
                };
                var q = function t(r) {
                    return function (t, n, i, a) {
                        e.xhr({
                            uri: r,
                            method: 'POST',
                            responseType: 'arraybuffer',
                            json: {
                                publisher_id: t.publisherId,
                                application_id: t.applicationId,
                                key_id: n.split('/')[3],
                                server_playback_context: M(i)
                            },
                            headers: {
                                'Content-Type': 'application/json',
                                Accept: 'application/octet-stream'
                            }
                        }, function (e, t, r) {
                            if (e) {
                                a(e);
                                return
                            }
                            a(null, r)
                        })
                    }
                };
                var F = {
                    getCertificateUri: U,
                    getCertificate: N,
                    getContentId: B,
                    createGetLicenseFunc: q,
                    base64EncodeUint8Array: M,
                    FAIRPLAY_KEY_SYSTEM: R
                };
                var V = function e(t) {
                    if (t === void 0) {
                        t = [
                        ]
                    }
                    return t.filter(function (e) {
                        return e.keySystems && e.keySystems[F.FAIRPLAY_KEY_SYSTEM]
                    })
                };
                var H = function e(t, r, n) {
                    var i = V(r);
                    if (!i.length || !t.eme) {
                        n();
                        return
                    }
                    var a = t.eme.options || {
                    };
                    var s = 0;
                    var o = [
                    ];
                    var u = {
                    };
                    var l = function e(t) {
                        var r = i[t];
                        var l = F.getCertificateUri({
                            source: r,
                            publisherId: a.publisherId,
                            applicationId: a.applicationId
                        });
                        if (!l) {
                            return 'continue'
                        }
                        if (u[l]) {
                            u[l].push(r);
                            return 'continue'
                        }
                        s++;
                        u[l] = [
                            r
                        ];
                        r.keySystems[F.FAIRPLAY_KEY_SYSTEM].getCertificate({
                            source: r,
                            publisherId: a.publisherId,
                            applicationId: a.applicationId
                        }, function (e, t) {
                            if (e) {
                                o.push({
                                    message: 'Unable to resolve FairPlay certificate',
                                    error: e
                                })
                            } else {
                                var r = u[l];
                                for (var i = 0; i < r.length; i++) {
                                    var a = r[i];
                                    a.keySystems[F.FAIRPLAY_KEY_SYSTEM].getCertificate = function (e, r) {
                                        r(null, t)
                                    }
                                }
                            }
                            s--;
                            if (!s) {
                                if (o.length) {
                                    n(o);
                                    return
                                }
                                n()
                            }
                        })
                    };
                    for (var c = 0; c < i.length; c++) {
                        var d = l(c);
                        if (d === 'continue') continue
                    }
                };
                var z = function e(t) {
                    if (!L.isHlsType(t.type) || !t.key_systems || !t.key_systems[F.FAIRPLAY_KEY_SYSTEM]) {
                        return null
                    }
                    var r = t.key_systems[F.FAIRPLAY_KEY_SYSTEM];
                    var n = r.key_request_url;
                    var i = {
                    };
                    i[F.FAIRPLAY_KEY_SYSTEM] = {
                        getCertificate: F.getCertificate,
                        getLicense: F.createGetLicenseFunc(n),
                        getContentId: F.getContentId
                    };
                    return i
                };
                var G = function e(t) {
                    return z(t)
                };
                var W = {
                    getKeySystemOptions: G,
                    getFairPlaySources: V,
                    resolveFairPlayCertificates: H
                };
                var Y = function e(t, r) {
                    r = r || t && t.mediainfo || {
                    };
                    return t && t.hasPlugin && t.hasPlugin('vr') && r && r.projection
                };
                var $ = 50 * 1024 * 1024;
                var X = 3 * 1024 * 1024;
                var K = 0.5 * 1024 * 1024;
                var Q = {
                    http: {
                        nativeHls: {
                            http: {
                                'application/vnd.apple.mpegurl': 1,
                                'video/mp4': 5,
                                'application/dash+xml': 3
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 2,
                                'video/mp4': 6,
                                'application/dash+xml': 4
                            }
                        },
                        noNativeHls: {
                            http: {
                                'application/vnd.apple.mpegurl': 1,
                                'video/mp4': 5,
                                'application/dash+xml': 3
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 2,
                                'video/mp4': 6,
                                'application/dash+xml': 4
                            }
                        },
                        preferMp4: {
                            http: {
                                'application/vnd.apple.mpegurl': 3,
                                'video/mp4': 1,
                                'application/dash+xml': 5
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 4,
                                'video/mp4': 2,
                                'application/dash+xml': 6
                            }
                        }
                    },
                    https: {
                        nativeHls: {
                            http: {
                                'application/vnd.apple.mpegurl': 2,
                                'video/mp4': 6,
                                'application/dash+xml': 5
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 1,
                                'video/mp4': 4,
                                'application/dash+xml': 3
                            }
                        },
                        noNativeHls: {
                            http: {
                                'application/vnd.apple.mpegurl': 5,
                                'video/mp4': 4,
                                'application/dash+xml': 6
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 1,
                                'video/mp4': 3,
                                'application/dash+xml': 2
                            }
                        },
                        preferMp4: {
                            http: {
                                'application/vnd.apple.mpegurl': 5,
                                'video/mp4': 4,
                                'application/dash+xml': 6
                            },
                            https: {
                                'application/vnd.apple.mpegurl': 2,
                                'video/mp4': 1,
                                'application/dash+xml': 3
                            }
                        }
                    }
                };
                var J = {
                    1: 3,
                    2: 3.2,
                    3: 4.2,
                    4: 5,
                    5: 6,
                    6: 7,
                    7: 8
                };
                var Z = function e(t, r) {
                    return r.type === 'application/vnd.apple.mpegurl' && r.key_systems && L.isSafariWithFairplaySupport() && t.eme && t.eme.options
                };
                var ee = function t(r, n, i) {
                    if (!n.src) {
                        return 9999
                    }
                    if (n.type === 'application/vnd.apple.mpegurl' && n.key_systems && !Z(i, n)) {
                        return 9999
                    }
                    if (n.profiles && n.profiles.match(/hbbtv/i)) {
                        return 9999
                    }
                    if (e.browser.IS_IOS && n.type === 'application/vnd.apple.mpegurl' && J[n.ext_x_version] > parseFloat(e.browser.IOS_VERSION)) {
                        return 9999
                    }
                    r = r[/^[^:]*/.exec(n.src)];
                    if (!r) {
                        return 9999
                    }
                    return r[n.type] || 9999
                };
                var te = function t(r, n, i, a) {
                    var s = re.preferHttps() ? Q.https : Q.http;
                    var o;
                    var u;
                    if (Y(r, n)) {
                        o = $
                    } else if (e.browser.IS_IOS || e.browser.IS_ANDROID) {
                        o = K
                    } else {
                        o = X
                    }
                    if (re.preferMp4(r, n)) {
                        s = s.preferMp4
                    } else if (re.supportsNativeHls()) {
                        s = s.nativeHls
                    } else {
                        s = s.noNativeHls
                    }
                    u = ee(s, i, r) - ee(s, a, r);
                    if (u) {
                        return u
                    }
                    if (i.type === 'video/mp4' && a.type === 'video/mp4') {
                        if (i.avg_bitrate && a.avg_bitrate) {
                            return Math.abs(i.avg_bitrate - o) - Math.abs(a.avg_bitrate - o)
                        }
                        if (i.avg_bitrate || a.avg_bitrate) {
                            u = i.avg_bitrate ? - 1 : 1
                        }
                    }
                    if (i.type === 'application/vnd.apple.mpegurl' && a.type === 'application/vnd.apple.mpegurl') {
                        if (i.ext_x_version && a.ext_x_version) {
                            return a.ext_x_version - i.ext_x_version
                        }
                        if (i.ext_x_version || a.ext_x_version) {
                            u = i.ext_x_version ? - 1 : 1
                        }
                    }
                    return u
                };
                function re(e, t) {
                    var r = t.sources || [
                    ];
                    var n = [
                    ];
                    for (var i = 0; i < r.length; i++) {
                        var a = r[i];
                        if (a.src && a.container === 'MP4') {
                            a.type = 'video/mp4'
                        } else if (a.src && (a.container === 'M2TS' || L.isHlsType(a.type))) {
                            a.type = 'application/vnd.apple.mpegurl';
                            if (Z(e, a)) {
                                a.keySystems = W.getKeySystemOptions(a)
                            }
                        }
                        n.push(a)
                    }
                    return n.sort(te.bind(null, e, t))
                }
                re.supportsNativeHls = function () {
                    var t = n.createElement('video');
                    var r = e.options.hls && e.options.hls.overrideNative;
                    if (t && t.canPlayType) {
                        return !r && /probably|maybe/i.test(t.canPlayType('application/vnd.apple.mpegurl'))
                    }
                    return false
                };
                re.preferHttps = function () {
                    return L.preferHttps(r)
                };
                re.preferMp4 = function (t, r) {
                    return e.browser.IS_ANDROID && e.browser.ANDROID_VERSION < 5 || Y(t, r)
                };
                var ne = {
                };
                var ie = function e(r, n, i) {
                    var a = t.assign({
                    }, ne);
                    if (r && !t.isObj(r)) {
                        a.id = r
                    } else {
                        t.assign(a, r);
                        if (t.isObj(r.id)) {
                            t.assign(a, r.id);
                            if (!r.id.hasOwnProperty('id')) {
                                delete a.id
                            }
                        }
                    }
                    if (typeof n === 'string') {
                        a.type = n
                    }
                    if (a.type === o) {
                        if (!a.q) {
                            a.q = a.id
                        }
                        delete a.id
                    }
                    if (typeof i === 'string') {
                        a.adConfigId = i
                    }
                    if ((a.type === s || a.type === o) && a.limit === undefined) {
                        a.limit = '100'
                    }
                    return a
                };
                var ae = function e(r) {
                    if (r === null) {
                        ne = {
                        }
                    } else {
                        t.assign(ne, r)
                    }
                };
                var se = /([A-Za-z0-9])_([A-Za-z0-9])/g;
                var oe = function e(t) {
                    return t.replace(se, function (e, t, r) {
                        return t + r.toUpperCase()
                    })
                };
                var ue = function t(r) {
                    var n = e.mergeOptions(r);
                    Object.keys(n).filter(function (e) {
                        return e.match(se)
                    }).forEach(function (e) {
                        n[oe(e)] = n[e]
                    });
                    return n
                };
                var le = function e(t, r) {
                    if (!r) {
                        return
                    }
                    t.mediainfo = ue(r);
                    var i = Boolean(t.el().ownerDocument.querySelector('.bc-iframe'));
                    var a = t.mediainfo.name;
                    if (i && a) {
                        n.title = a
                    }
                };
                var ce = function e(t, r) {
                    if (!r) {
                        return
                    }
                    t.playlistinfo = ue(r);
                    delete t.playlistinfo.videos
                };
                var de = function e(t, r) {
                    return (t.type === 'application/vnd.apple.mpegurl' || t.type === 'application/dash+xml') && r.toLowerCase() === 'html5'
                };
                function fe(r) {
                    var n = this;
                    var i = t.assign({
                        accountId: n.options_['data-account'],
                        policyKey: n.options_['data-policy-key']
                    }, r);
                    var l = [
                        'accountId',
                        'baseUrl',
                        'policyKey'
                    ].reduce(function (e, t) {
                        if (i[t]) {
                            e[t] = i[t]
                        }
                        return e
                    }, {
                    });
                    ae(l);
                    f(n);
                    n.on('loadstart', function () {
                        if (!t.isFn(n.playlist) || !n.playlist() || !n.playlist().length) {
                            return
                        }
                        le(n, n.playlist()[n.playlist.indexOf(n.currentSrc())])
                    });
                    n.on('dispose', function () {
                        return T(n)
                    });
                    var c = function t(r, i) {
                        var a = W.getFairPlaySources(r);
                        if (!a.length) {
                            i();
                            return
                        }
                        W.resolveFairPlayCertificates(n, a, function (t) {
                            if (t) {
                                e.log('Unable to resolve FairPlay certificates', t)
                            }
                            i()
                        })
                    };
                    var h = function t(r) {
                        if (!n.hasPlugin || !n.hasPlugin('ssai') || !r) {
                            return r
                        }
                        return r.map(function (t) {
                            if (t.vmap) {
                                t.type = e.getPlugin('ssai').MIME_TYPE;
                                t.originalHlsSource = t.src;
                                t.src = t.vmap
                            }
                            return t
                        })
                    };
                    var p = function e(t) {
                        var r = function e() {
                            var r = false;
                            le(n, t);
                            if (Y(n)) {
                                var i = n.el().querySelector('video');
                                i.setAttribute('crossorigin', 'anonymous')
                            }
                            n.el().setAttribute('data-video-id', t.id);
                            n.poster(t.poster);
                            if (t.sources) {
                                for (var a = 0; a < t.sources.length; a++) {
                                    if (t.sources[a].vmap !== undefined) {
                                        r = true;
                                        break
                                    }
                                }
                            }
                            if (r && n.onceux !== undefined) {
                                n.onceux.loadSourcesFromCatalog(t.sources)
                            } else {
                                if (r) {
                                    t.sources = h(t.sources)
                                }
                                n.src(t.sources)
                            }
                            A(n, t);
                            if (t.textTracks) {
                                for (var s = 0; s < t.textTracks.length; s++) {
                                    n.addRemoteTextTrack(t.textTracks[s])
                                }
                            }
                        };
                        c(t.sources, r)
                    };
                    var m = function e(t) {
                        var r = function e() {
                            n.on('beforeplaylistitem', function (e, t) {
                                return A(n, t)
                            });
                            for (var r = 0; r < t.length; r++) {
                                t[r].sources = h(t[r].sources)
                            }
                            var i = t.startingIndex || 0;
                            le(n, t[i]);
                            ce(n, n.catalog.data);
                            if (Y(n)) {
                                var a = n.el().querySelector('video');
                                a.setAttribute('crossorigin', 'anonymous')
                            }
                            n.playlist(t, i)
                        };
                        var i = t.filter(function (e) {
                            return e.sources
                        }).reduce(function (e, t) {
                            return e.concat(t.sources)
                        }, [
                        ]);
                        c(i, r)
                    };
                    var g = function e(t) {
                        var i;
                        var a = ue(t);
                        if (a.sources) {
                            a.rawSources_ = a.sources;
                            a.sources = (r.getSources || re)(n, a);
                            i = n.selectSource(a.sources)
                        }
                        if (a.posterSources) {
                            a.poster = k(a.posterSources)
                        }
                        if (a.thumbnailSources) {
                            a.thumbnail = k(a.thumbnailSources)
                        }
                        if (a.textTracks) {
                            var s = i && de(i.source, i.tech);
                            a.textTracks = a.textTracks.filter(function (e) {
                                return !(s && e.in_band_metadata_track_dispatch_type !== undefined)
                            }).map(function (e) {
                                if (e.sources) {
                                    e.src = k(e.sources)
                                }
                                return e
                            })
                        }
                        if (a.duration) {
                            a.duration = a.duration * 0.001
                        }
                        if (a.cuePoints) {
                            for (var o = 0; o < a.cuePoints.length; o++) {
                                b(a, o)
                            }
                        }
                        return a
                    };
                    n.catalog = {
                        transformCatalogError: v,
                        transformVideoResponse: g,
                        mediaCuePointsTrack: function t() {
                            if (!n.catalog.mediaCuePointsTrack.hasWarned_) {
                                e.log.warn('player.catalog.mediaCuePointsTrack() is deprecated, please use player.mediaCuePointsTrack() instead!');
                                n.catalog.mediaCuePointsTrack.hasWarned_ = true
                            }
                            return n.mediaCuePointsTrack()
                        },
                        get: function e(r, i) {
                            r = ie(r);
                            if (n.catalog.tveToken) {
                                r.tveToken = n.catalog.tveToken
                            }
                            n.catalog.loading++;
                            var s;
                            var u = new t.Promise(function (e, t) {
                                s = I(n, r, function (i, s) {
                                    n.catalog.loading--;
                                    if (r.type === o && s && (!s.videos || !s.videos.length)) {
                                        i = new Error('No videos returned from search')
                                    }
                                    if (i) {
                                        i.data = s;
                                        n.catalog.error = i;
                                        return t(i)
                                    }
                                    if (!s) {
                                        return e(null)
                                    }
                                    n.catalog.data = s;
                                    if (r.type === a) {
                                        n.catalog.sources = s.sources;
                                        n.catalog.poster = s.poster;
                                        return e(g(s))
                                    }
                                    return e(s.videos.map(g))
                                })
                            });
                            if (!t.isFn(i)) {
                                return u
                            }
                            u.then(function (e) {
                                i(null, e)
                            }).catch(function (e) {
                                i(e, e.data)
                            });
                            return s
                        },
                        getVideo: function e(t, r, n) {
                            if (r === void 0) {
                                r = function e() {
                                }
                            }
                            return this.get(ie(t, a, n), r)
                        },
                        getSequence: function t(r, i, a) {
                            var s = this;
                            if (i === void 0) {
                                i = function e() {
                                }
                            }
                            if (!Array.isArray(r)) {
                                r = [
                                    r
                                ]
                            }
                            r = r.filter(function (t) {
                                if (!/^(search|video|playlist)$/i.test(t.type)) {
                                    e.log.error('invalid sequence type, please use search, video, or playlist. for:', t);
                                    return false
                                }
                                return true
                            });
                            if (!r.length) {
                                i(new Error('No valid sequences'), null);
                                return
                            }
                            var o = r.length;
                            var u = new Array(r.length);
                            return r.map(function (t, l) {
                                return s.get(ie(t, t.type, a), function (a, s) {
                                    o--;
                                    if (a) {
                                        e.log.error('failed to request sequence', t);
                                        e.log.error('with error', a)
                                    } else if (s) {
                                        if (!Array.isArray(s)) {
                                            s = [
                                                s
                                            ]
                                        }
                                        u[l] = s
                                    }
                                    if (o === 0) {
                                        n.catalog.data = u;
                                        var c = u.reduce(function (e, t) {
                                            return t && e.concat(t)
                                        }, [
                                        ]);
                                        if (!c.length) {
                                            i(new Error('No data was loaded for the sequence ' + JSON.stringify(r), null))
                                        } else {
                                            i(null, c)
                                        }
                                    }
                                }, a)
                            })
                        },
                        getLazySequence: function e(t, r, i) {
                            var a = this;
                            if (r === void 0) {
                                r = function e() {
                                }
                            }
                            if (!Array.isArray(t)) {
                                t = [
                                    t
                                ]
                            }
                            var s = function e(r) {
                                return a.getSequence(t.shift(), function (n, i) {
                                    if ((n || !i) && t && t.length) {
                                        return e(r)
                                    }
                                    r(n, i)
                                }, i)
                            };
                            var o = function e() {
                                if (!t.length) {
                                    n.off('playlistitem', e);
                                    return
                                }
                                var r = n.playlist;
                                var i = r.currentIndex && r.currentIndex() || r.currentItem && r.currentItem() || 0;
                                var a = r.lastIndex && r.lastIndex() || r().length - 1 || 0;
                                if (i !== a) {
                                    return
                                }
                                s(function (e, t) {
                                    if (e || !t) {
                                        return
                                    }
                                    n.playlist(n.playlist().concat(t), i)
                                })
                            };
                            n.on('playlistitem', o);
                            return s(r)
                        },
                        getSearch: function e(t, r, n) {
                            if (r === void 0) {
                                r = function e() {
                                }
                            }
                            return this.get(ie(t, o, n), r)
                        },
                        getPlaylist: function e(t, r, n) {
                            if (r === void 0) {
                                r = function e() {
                                }
                            }
                            return this.get(ie(t, s, n), r)
                        },
                        load: function e(t) {
                            if (Array.isArray(t)) {
                                m(t)
                            } else {
                                p(t)
                            }
                        },
                        autoFindAndLoadMedia: function e(t) {
                            var r = d(t, n);
                            if (!r) {
                                return
                            }
                            t.playlistVideoId = r.playlistVideoId;
                            var i = y(r.type, n, t);
                            if (r.type === u) {
                                this.getLazySequence(r.id, i, t.adConfigId)
                            } else {
                                this.get(ie(r, r.type, t.adConfigId), i)
                            }
                            return r
                        },
                        loading: 0
                    }
                }
                e.registerPlugin('catalog', fe);
                fe.VERSION = i;
                return fe
            })
        })(); (function () {
            if (videojs.getPlugin('touchActive')) {
                return
            } (function (e, t) {
                var r = videojs.registerPlugin || videojs.plugin;
                r('touchActive', function () {
                    if (!videojs.browser.TOUCH_ENABLED) {
                        return
                    }
                    var e = this,
                        t = false,
                        r = function () {
                            if (!t) {
                                e.userActive(false)
                            }
                        };
                    e.one('play', function () {
                        e.el().className += ' vjs-user-active';
                        e.one(['click',
                            'tap'], function () {
                                t = true
                            });
                        e.setTimeout(r, 5000)
                    })
                })
            })(window, document)
        })(); (function () {
            if (videojs.getPlugin('playlist')) {
                return
            } (function (e, t) {
                typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = t(require('video.js')) : typeof define === 'function' && define.amd ? define(['video.js'], t) : e.videojsPlaylist = t(e.videojs)
            })(this, function (e) {
                'use strict';
                e = e && e.hasOwnProperty('default') ? e['default'] : e;
                var t = function e(t) {
                    return typeof t === 'number' && !isNaN(t) && t >= 0 && t < Infinity
                };
                var r = function e(t) {
                    var r = t.playlist.autoadvance_;
                    if (r.timeout) {
                        t.clearTimeout(r.timeout)
                    }
                    if (r.trigger) {
                        t.off('ended', r.trigger)
                    }
                    r.timeout = null;
                    r.trigger = null
                };
                var n = function e(n, i) {
                    r(n);
                    if (!t(i)) {
                        n.playlist.autoadvance_.delay = null;
                        return
                    }
                    n.playlist.autoadvance_.delay = i;
                    n.playlist.autoadvance_.trigger = function () {
                        var t = function t() {
                            return e(n, i)
                        };
                        n.one('play', t);
                        n.playlist.autoadvance_.timeout = n.setTimeout(function () {
                            r(n);
                            n.off('play', t);
                            n.playlist.next()
                        }, i * 1000)
                    };
                    n.one('ended', n.playlist.autoadvance_.trigger)
                };
                var i = function e(t) {
                    var r = t.remoteTextTracks();
                    var n = r && r.length || 0;
                    while (n--) {
                        t.removeRemoteTextTrack(r[n])
                    }
                };
                var a = function e(t, r) {
                    var a = !t.paused() || t.ended();
                    t.trigger('beforeplaylistitem', r);
                    t.poster(r.poster || '');
                    t.src(r.sources);
                    i(t);
                    t.ready(function () {
                        (r.textTracks || [
                        ]).forEach(t.addRemoteTextTrack.bind(t));
                        t.trigger('playlistitem', r);
                        if (a) {
                            var e = t.play();
                            if (typeof e !== 'undefined' && typeof e.then === 'function') {
                                e.then(null, function (e) {
                                })
                            }
                        }
                        n(t, t.playlist.autoadvance_.delay)
                    });
                    return t
                };
                var s = function e(t) {
                    return !!t && typeof t === 'object'
                };
                var o = function e(t) {
                    var r = [
                    ];
                    var n;
                    t.forEach(function (e) {
                        if (!s(e)) {
                            n = Object(e);
                            n.originalValue = e
                        } else {
                            n = e
                        }
                        r.push(n)
                    });
                    return r
                };
                var u = function e(t) {
                    var r = 1;
                    t.forEach(function (e) {
                        e.playlistItemId_ = r++
                    })
                };
                var l = function e(t, r) {
                    for (var n = 0; n < t.length; n++) {
                        if (t[n].playlistItemId_ === r) {
                            return n
                        }
                    }
                    return - 1
                };
                var c = function e(t, r) {
                    var n = t;
                    var i = r;
                    if (typeof t === 'object') {
                        n = t.src
                    }
                    if (typeof r === 'object') {
                        i = r.src
                    }
                    if (/^\/\//.test(n)) {
                        i = i.slice(i.indexOf('//'))
                    }
                    if (/^\/\//.test(i)) {
                        n = n.slice(n.indexOf('//'))
                    }
                    return n === i
                };
                var d = function e(t, r) {
                    for (var n = 0; n < t.length; n++) {
                        var i = t[n].sources;
                        if (Array.isArray(i)) {
                            for (var a = 0; a < i.length; a++) {
                                var s = i[a];
                                if (s && c(s, r)) {
                                    return n
                                }
                            }
                        }
                    }
                    return - 1
                };
                var f = function e(t) {
                    var r = - 1;
                    var n = t.length - 1;
                    while (++r < t.length) {
                        var i = r + Math.floor(Math.random() * (n - r + 1));
                        var a = t[i];
                        t[i] = t[r];
                        t[r] = a
                    }
                    return t
                };
                function h(t, i, c) {
                    if (c === void 0) {
                        c = 0
                    }
                    var h = null;
                    var p = false;
                    var v = t.playlist = function (e, r) {
                        if (r === void 0) {
                            r = 0
                        }
                        if (p) {
                            throw new Error('do not call playlist() during a playlist change')
                        }
                        if (Array.isArray(e)) {
                            var n = Array.isArray(h) ? h.slice() : null;
                            h = e.slice();
                            if (h.filter(function (e) {
                                return s(e)
                            }).length !== h.length) {
                                h = o(h)
                            }
                            p = true;
                            t.trigger({
                                type: 'duringplaylistchange',
                                nextIndex: r,
                                nextPlaylist: h,
                                previousIndex: v.currentIndex_,
                                previousPlaylist: n || [
                                ]
                            });
                            p = false;
                            if (r !== - 1) {
                                v.currentItem(r)
                            }
                            if (n) {
                                t.setTimeout(function () {
                                    t.trigger('playlistchange')
                                }, 0)
                            }
                            u(h)
                        }
                        return h.map(function (e) {
                            return e.originalValue || e
                        }).slice()
                    };
                    t.on('loadstart', function () {
                        if (v.currentItem() === - 1) {
                            r(t)
                        }
                    });
                    t.on('playlistitem', function (e, t) {
                        if (t && t.playlistItemId_) {
                            v.currentPlaylistItemId_ = t.playlistItemId_
                        }
                    });
                    v.currentIndex_ = - 1;
                    v.player_ = t;
                    v.autoadvance_ = {
                    };
                    v.repeat_ = false;
                    v.currentPlaylistItemId_ = null;
                    v.currentItem = function (e) {
                        if (p) {
                            return v.currentIndex_
                        }
                        if (typeof e === 'number' && v.currentIndex_ !== e && e >= 0 && e < h.length) {
                            v.currentIndex_ = e;
                            a(v.player_, h[v.currentIndex_])
                        } else {
                            v.currentIndex_ = l(h, v.currentPlaylistItemId_)
                        }
                        return v.currentIndex_
                    };
                    v.contains = function (e) {
                        return v.indexOf(e) !== - 1
                    };
                    v.indexOf = function (e) {
                        if (typeof e === 'string') {
                            return d(h, e)
                        }
                        var t = Array.isArray(e) ? e : e.sources;
                        for (var r = 0; r < t.length; r++) {
                            var n = t[r];
                            if (typeof n === 'string') {
                                return d(h, n)
                            } else if (n.src) {
                                return d(h, n.src)
                            }
                        }
                        return - 1
                    };
                    v.currentIndex = function () {
                        return v.currentItem()
                    };
                    v.lastIndex = function () {
                        return h.length - 1
                    };
                    v.nextIndex = function () {
                        var e = v.currentItem();
                        if (e === - 1) {
                            return - 1
                        }
                        var t = v.lastIndex();
                        if (v.repeat_ && e === t) {
                            return 0
                        }
                        return Math.min(e + 1, t)
                    };
                    v.previousIndex = function () {
                        var e = v.currentItem();
                        if (e === - 1) {
                            return - 1
                        }
                        if (v.repeat_ && e === 0) {
                            return v.lastIndex()
                        }
                        return Math.max(e - 1, 0)
                    };
                    v.first = function () {
                        if (p) {
                            return
                        }
                        var e = v.currentItem(0);
                        if (h.length) {
                            return h[e].originalValue || h[e]
                        }
                        v.currentIndex_ = - 1
                    };
                    v.last = function () {
                        if (p) {
                            return
                        }
                        var e = v.currentItem(v.lastIndex());
                        if (h.length) {
                            return h[e].originalValue || h[e]
                        }
                        v.currentIndex_ = - 1
                    };
                    v.next = function () {
                        if (p) {
                            return
                        }
                        var e = v.nextIndex();
                        if (e !== v.currentIndex_) {
                            var t = v.currentItem(e);
                            return h[t].originalValue || h[t]
                        }
                    };
                    v.previous = function () {
                        if (p) {
                            return
                        }
                        var e = v.previousIndex();
                        if (e !== v.currentIndex_) {
                            var t = v.currentItem(e);
                            return h[t].originalValue || h[t]
                        }
                    };
                    v.autoadvance = function (e) {
                        n(v.player_, e)
                    };
                    v.repeat = function (t) {
                        if (t === undefined) {
                            return v.repeat_
                        }
                        if (typeof t !== 'boolean') {
                            e.log.error('videojs-playlist: Invalid value for repeat', t);
                            return
                        }
                        v.repeat_ = !!t;
                        return v.repeat_
                    };
                    v.sort = function (e) {
                        if (!h.length) {
                            return
                        }
                        h.sort(e);
                        if (p) {
                            return
                        }
                        t.trigger('playlistsorted')
                    };
                    v.reverse = function () {
                        if (!h.length) {
                            return
                        }
                        h.reverse();
                        if (p) {
                            return
                        }
                        t.trigger('playlistsorted')
                    };
                    v.shuffle = function (e) {
                        var r = e === void 0 ? {
                        }
                            : e,
                            n = r.rest;
                        var i = 0;
                        var a = h;
                        if (n) {
                            i = v.currentIndex_ + 1;
                            a = h.slice(i)
                        }
                        if (a.length <= 1) {
                            return
                        }
                        f(a);
                        if (n) {
                            var s;
                            (s = h).splice.apply(s, [
                                i,
                                a.length
                            ].concat(a))
                        }
                        if (p) {
                            return
                        }
                        t.trigger('playlistsorted')
                    };
                    if (Array.isArray(i)) {
                        v(i.slice(), c)
                    } else {
                        h = [
                        ]
                    }
                    return v
                }
                var p = '4.3.0';
                var v = e.registerPlugin || e.plugin;
                var m = function e(t, r) {
                    h(this, t, r)
                };
                v('playlist', m);
                m.VERSION = p;
                return m
            })
        })(); (function () {
            if (videojs.getPlugin('ima3')) {
                return
            }
            !function (e) {
                if ('object' == typeof exports && 'undefined' != typeof module) module.exports = e();
                else if ('function' == typeof define && define.amd) define([], e);
                else {
                    var t;
                    t = 'undefined' != typeof window ? window : 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : this,
                        t.videojsIma3 = e()
                }
            }(function () {
                var e;
                return function () {
                    function e(t, r, n) {
                        function i(s, o) {
                            if (!r[s]) {
                                if (!t[s]) {
                                    var u = 'function' == typeof require && require;
                                    if (!o && u) return u(s, !0);
                                    if (a) return a(s, !0);
                                    var l = new Error('Cannot find module \'' + s + '\'');
                                    throw l.code = 'MODULE_NOT_FOUND',
                                    l
                                }
                                var c = r[s] = {
                                    exports: {
                                    }
                                };
                                t[s][0].call(c.exports, function (e) {
                                    var r = t[s][1][e];
                                    return i(r || e)
                                }, c, c.exports, e, t, r, n)
                            }
                            return r[s].exports
                        }
                        for (var a = 'function' == typeof require && require, s = 0; s < n.length; s++) i(n[s]);
                        return i
                    }
                    return e
                }()({
                    1: [
                        function (e, t, r) {
                            (function (n) {
                                'use strict';
                                function i(e) {
                                    return e && e.__esModule ? e : {
                                        default:
                                            e
                                    }
                                }
                                function a(e) {
                                    var t = o['default'].browser.IS_IOS,
                                        r = undefined;
                                    r = t && e.playsinline() ? [
                                        {
                                            prop: 'canAutoPlayInlineVideo',
                                            method: 'video',
                                            params: {
                                                retryAfterTimeout: 2,
                                                timeout: 250,
                                                muted: !1,
                                                inline: !0
                                            }
                                        },
                                        {
                                            prop: 'canAutoPlayMutedInlineVideo',
                                            method: 'video',
                                            params: {
                                                retryAfterTimeout: 2,
                                                timeout: 250,
                                                muted: !0,
                                                inline: !0
                                            }
                                        }
                                    ] : [
                                            {
                                                prop: 'canAutoPlayVideo',
                                                method: 'video',
                                                params: {
                                                    retryAfterTimeout: 2,
                                                    timeout: 250,
                                                    muted: !1
                                                }
                                            },
                                            {
                                                prop: 'canAutoPlayMutedVideo',
                                                method: 'video',
                                                params: {
                                                    retryAfterTimeout: 2,
                                                    timeout: 250,
                                                    muted: !0
                                                }
                                            }
                                        ];
                                    var n = function t(r) {
                                        return d['default'][r.method](r.params).then(function (n) {
                                            var i = n.result,
                                                a = n.error;
                                            if (e.ima3[r.prop] = i, a && 'Error' === a.name && r.params.retryAfterTimeout && (!e.ima3.canAutoPlayVideo || !e.ima3.canAutoPlayInlineVideo)) return r.params.retryAfterTimeout--,
                                                t(r)
                                        })
                                    };
                                    return l['default'].Promise ? e.autoplay() ? e.ima3.canAutoPlayTestsResult ? e.ima3.canAutoPlayTestsResult : (e.ima3.canAutoPlayTestsResult = function () {
                                        return r.reduce(function (t, r) {
                                            return t.then(function () {
                                                if (!e.ima3.canAutoPlayVideo && !e.ima3.canAutoPlayInlineVideo) return n(r)
                                            })
                                        }, Promise.resolve()).then(function () {
                                            return Promise.resolve()
                                        })
                                    }(), e.ima3.canAutoPlayTestsResult) : Promise.resolve() : (e.ima3.canAutoPlayVideo = !0, e.ima3.canAutoPlayMutedVideo = !0, {
                                        then: function (e) {
                                            e()
                                        }
                                    })
                                }
                                Object.defineProperty(r, '__esModule', {
                                    value: !0
                                }),
                                    r['default'] = a;
                                var s = 'undefined' != typeof window ? window.videojs : void 0 !== n ? n.videojs : null,
                                    o = i(s),
                                    u = e('global/window'),
                                    l = i(u),
                                    c = e('can-autoplay'),
                                    d = i(c);
                                t.exports = r['default']
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                            'can-autoplay': 4,
                            'global/window': 6
                        }
                    ],
                    2: [
                        function (e, t, r) {
                            (function (e) {
                                'use strict';
                                function n(e, t) {
                                    m(e, t),
                                        e.ima3.cueState_.cueModule.setMetadataTrackMode = function (e) {
                                            e.mode = 'hidden'
                                        },
                                        e.ima3.cueState_.cueModule.getCueId = function (e, t) {
                                            var r = e.ima3.cueState_.cueModule.getSupportedAdCue(e, t);
                                            return r ? r.id : null
                                        },
                                        e.ima3.cueState_.cueModule.isSupportedAdCue = function (e, t) {
                                            return null !== e.ima3.cueState_.cueModule.getSupportedAdCue(e, t)
                                        },
                                        e.ima3.cueState_.cueModule.getSupportedAdCue = function (e, t) {
                                            return e.ima3.settings.useMediaCuePoints && 'oncue' === e.ima3.settings.requestMode ? u(t) : 'oncue' === e.ima3.settings.requestMode ? o(t) : null
                                        },
                                        e.ima3.cueState_.cueModule.processMetadataTracks(e, v)
                                }
                                Object.defineProperty(r, '__esModule', {
                                    value: !0
                                }),
                                    r['default'] = n;
                                var i = 'undefined' != typeof window ? window.videojs : void 0 !== e ? e.videojs : null,
                                    a = function (e) {
                                        return e && e.__esModule ? e : {
                                            default:
                                                e
                                        }
                                    }(i),
                                    s = function (e, t) {
                                        var r = t.cues,
                                            n = t.label,
                                            i = t.inBandMetadataTrackDispatchType,
                                            a = t.kind;
                                        if ('metadata' === a) return 'media-cues' === n || (!(!i || 'metadata' !== a) || (!r || !r.length || e.ima3.cueState_.cueModule.isSupportedAdCue(e, r[0])))
                                    },
                                    o = function (e) {
                                        var t = undefined;
                                        if (e && !e.value || 'TXXX' !== e.value.key) return null;
                                        try {
                                            t = JSON.parse(e.value.data)
                                        } catch (e) {
                                            return a['default'].log.error('ERROR: Parsing JSON. Please confirm that JSON is valid.', e.message),
                                                null
                                        }
                                        if (!t.name) return null;
                                        var r = t.name.toLowerCase();
                                        return 'adcue' !== r && 'adcancel' !== r ? null : t
                                    },
                                    u = function (e) {
                                        if (!e.originalCuePoint || !e.text || 'ad' !== e.text.toLowerCase()) return null;
                                        if (!e.id) {
                                            var t = a['default'].mergeOptions({
                                            }, e);
                                            return t.id = e.originalCuePoint.id,
                                                t
                                        }
                                        return e
                                    },
                                    l = function (e, t) {
                                        return !(!t || !t.text || 'ad' !== t.text.toLowerCase()) || !(!t || !t.name || 'adcue' !== t.name.toLowerCase())
                                    },
                                    c = function (e, t, r) {
                                        var n = Math.abs(r - e.duration()),
                                            i = Math.abs(r - e.currentTime()),
                                            s = undefined;
                                        if (0 === r) {
                                            if (e.ima3.cueState_.prerollPlayed) return;
                                            e.ima3.cueState_.prerollPlayed = !0,
                                                e.ads.adType = 'preroll'
                                        }
                                        if (n <= 1) {
                                            if (e.ima3.cueState_.postrollPlayed) return;
                                            e.ima3.cueState_.postrollPlayed = !0
                                        }
                                        i >= 1 || (s = !e.ima3.settings.useMediaCuePoints && t.serverUrl ? t.serverUrl : e.ima3.settings.serverUrl, s = e.ima3.adMacroReplacement(s), t.duration && (/\?/.test(s) ? s += '&breaklength=' + t.duration : s += '?breaklength=' + t.duration), e.ima3.isReady_ && (a['default'].log('Oncue ad request at ' + r + ' seconds'), e.ima3.adrequest(s)))
                                    },
                                    d = function (e, t, r, n, i) {
                                        0 === n && e.ima3.cueState_.prerollPlayed || i <= 1 && e.ima3.cueState_.postrollPlayed || (c(e, t, n), e.ima3.cueState_.usedActiveCues[r] = !0)
                                    },
                                    f = function (e, t, r, n) {
                                        var i = e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration(),
                                            s = Math.abs(n - i);
                                        if (!e.ads.isAdPlaying() || !l(0, t)) {
                                            if (!r) return void a['default'].log.error('The cue does not have an ID and cannot be used', t);
                                            if (!(e.ima3.cueState_.usedActiveCues[r] || t.name && 'adcancel' === t.name.toLowerCase())) return 0 !== n || e.ima3.cueState_.prerollHandledEarly || e.ima3.cueState_.prerollPlayed || !e.paused() || e.ads._cancelledPlay ? s <= 1 && !e.ima3.cueState_.postrollHandled ? (e.ima3.cueState_.postrollHandled = !0, void e.ima3.oneUnlessContentUpdate_('contentended', function () {
                                                d(e, t, r, n, s)
                                            })) : void (e.ima3.isReady_ && d(e, t, r, n, s)) : (e.ima3.cueState_.prerollHandledEarly = !0, void e.ima3.oneUnlessContentUpdate_('play', function () {
                                                d(e, t, r, n, s)
                                            }))
                                        }
                                    },
                                    h = function (e, t, r, n) {
                                        e.ima3.settings.useMediaCuePoints || 'adCancel' !== t.name || !e.ima3.adsManager || e.ima3.cueState_.usedActiveCues[r] || (e.ima3.cueState_.usedActiveCues[r] = !0, e.ima3.adsManager.stop(), a['default'].log('Cancelling oncue ad at ' + n + ' seconds'))
                                    },
                                    p = function (e) {
                                        return function () {
                                            var t = this.activeCues;
                                            if (!e.scrubbing() && t && t.length) {
                                                var r = t[t.length - 1],
                                                    n = [
                                                        r
                                                    ];
                                                if (!s(e, this)) return void this.removeEventListener('cuechange', e.ima3.cueState_.adCueChangeHandler);
                                                e.ima3.cueState_.cueModule.processAdTrack(e, n, f, h)
                                            }
                                        }
                                    },
                                    v = function (e, t) {
                                        var r = t.cues,
                                            n = undefined;
                                        if (s(e, t)) {
                                            if (r && r.length) {
                                                for (var i = 0; i < r.length; i++) {
                                                    var a = e.mediainfo ? Math.max(e.duration(), e.mediainfo.duration) : e.duration();
                                                    Math.abs(r[i].startTime - a) <= 1 && (n = r[i])
                                                }
                                                n || (e.trigger('nopostroll'), e.ima3.oneUnlessContentUpdate_('ended', function () {
                                                    t.mode = 'hidden'
                                                }))
                                            }
                                            t.addEventListener('cuechange', e.ima3.cueState_.adCueChangeHandler)
                                        }
                                    },
                                    m = function (e, t) {
                                        e.ima3.cueState_ = {
                                            cueModule: t,
                                            adCueChangeHandler: p(e),
                                            usedActiveCues: {
                                            },
                                            prerollHandledEarly: !1,
                                            prerollPlayed: !1,
                                            postrollHandled: !1,
                                            postrollPlayed: !1
                                        }
                                    };
                                t.exports = r['default']
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                        }
                    ],
                    3: [
                        function (e, t, r) {
                        },
                        {
                        }
                    ],
                    4: [
                        function (e, t, r) {
                            'use strict';
                            function n(e) {
                                for (var t = /^data:([^;]+);base64,(.+)$/i, r = e.match(t), n = r[1], i = r[2], a = atob(i), s = a.length, o = Math.ceil(s / 1024), u = new Array(o), l = 0; l < o; ++l) {
                                    for (var c = 1024 * l, d = Math.min(c + 1024, s), f = new Array(d - c), h = c, p = 0; h < d; ++p, ++h) f[p] = a[h].charCodeAt(0);
                                    u[l] = new Uint8Array(f)
                                }
                                return new Blob(u, {
                                    type: n
                                })
                            }
                            function i(e) {
                                return Object.assign({
                                    muted: !1,
                                    timeout: 250,
                                    inline: !1,
                                    blob: !1
                                }, e)
                            }
                            function a(e, t) {
                                var r = e.muted,
                                    n = e.timeout,
                                    i = e.inline,
                                    a = t(),
                                    s = a.element,
                                    o = a.source,
                                    u = void 0,
                                    l = void 0,
                                    c = void 0;
                                return s.muted = r,
                                    !0 === r && s.setAttribute('muted', 'muted'),
                                    !0 === i && s.setAttribute('playsinline', 'playsinline'),
                                    s.src = o,
                                    new Promise(function (e) {
                                        u = s.play(),
                                            l = setTimeout(function () {
                                                c(!1, new Error('Timeout ' + n + ' ms has been reached'))
                                            }, n),
                                            c = function (t) {
                                                var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
                                                clearTimeout(l),
                                                    e({
                                                        result: t,
                                                        error: r
                                                    })
                                            },
                                            u !== undefined ? u.then(function () {
                                                return c(!0)
                                            })['catch'](function (e) {
                                                return c(!1, e)
                                            }) : c(!0)
                                    })
                            }
                            function s(e) {
                                return e = i(e),
                                    a(e, function () {
                                        var t = e.blob ? URL.createObjectURL(n(l)) : l;
                                        return {
                                            element: document.createElement('video'),
                                            source: t
                                        }
                                    })
                            }
                            function o(e) {
                                return e = i(e),
                                    a(e, function () {
                                        var t = e.blob ? URL.createObjectURL(n(l)) : u;
                                        return {
                                            element: document.createElement('audio'),
                                            source: t
                                        }
                                    })
                            }
                            var u = 'data:audio/mpeg;base64,/+MYxAAAAANIAUAAAASEEB/jwOFM/0MM/90b/+RhST//w4NFwOjf///PZu////9lns5GFDv//l9GlUIEEIAAAgIg8Ir/JGq3/+MYxDsLIj5QMYcoAP0dv9HIjUcH//yYSg+CIbkGP//8w0bLVjUP///3Z0x5QCAv/yLjwtGKTEFNRTMuOTeqqqqqqqqqqqqq/+MYxEkNmdJkUYc4AKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq',
                                l = 'data:video/mp4;base64,AAAAHGZ0eXBpc29tAAACAGlzb21pc28ybXA0MQAAAAhmcmVlAAAC721kYXQhEAUgpBv/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcCEQBSCkG//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADengAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcAAAAsJtb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAALwABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAB7HRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAIAAAAAAAAALwAAAAAAAAAAAAAAAQEAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAC8AAAAAAAEAAAAAAWRtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAAKxEAAAIAFXEAAAAAAAtaGRscgAAAAAAAAAAc291bgAAAAAAAAAAAAAAAFNvdW5kSGFuZGxlcgAAAAEPbWluZgAAABBzbWhkAAAAAAAAAAAAAAAkZGluZgAAABxkcmVmAAAAAAAAAAEAAAAMdXJsIAAAAAEAAADTc3RibAAAAGdzdHNkAAAAAAAAAAEAAABXbXA0YQAAAAAAAAABAAAAAAAAAAAAAgAQAAAAAKxEAAAAAAAzZXNkcwAAAAADgICAIgACAASAgIAUQBUAAAAAAfQAAAHz+QWAgIACEhAGgICAAQIAAAAYc3R0cwAAAAAAAAABAAAAAgAABAAAAAAcc3RzYwAAAAAAAAABAAAAAQAAAAIAAAABAAAAHHN0c3oAAAAAAAAAAAAAAAIAAAFzAAABdAAAABRzdGNvAAAAAAAAAAEAAAAsAAAAYnVkdGEAAABabWV0YQAAAAAAAAAhaGRscgAAAAAAAAAAbWRpcmFwcGwAAAAAAAAAAAAAAAAtaWxzdAAAACWpdG9vAAAAHWRhdGEAAAABAAAAAExhdmY1Ni40MC4xMDE=',
                                c = {
                                    audio: o,
                                    video: s
                                };
                            t.exports = c
                        },
                        {
                        }
                    ],
                    5: [
                        function (e, t, r) {
                            (function (r) {
                                var n = void 0 !== r ? r : 'undefined' != typeof window ? window : {
                                },
                                    i = e('min-document');
                                if ('undefined' != typeof document) t.exports = document;
                                else {
                                    var a = n['__GLOBAL_DOCUMENT_CACHE@4'];
                                    a || (a = n['__GLOBAL_DOCUMENT_CACHE@4'] = i),
                                        t.exports = a
                                }
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                            'min-document': 3
                        }
                    ],
                    6: [
                        function (e, t, r) {
                            (function (e) {
                                'undefined' != typeof window ? t.exports = window : void 0 !== e ? t.exports = e : 'undefined' != typeof self ? t.exports = self : t.exports = {
                                }
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                        }
                    ],
                    7: [
                        function (t, r, n) {
                            (function (t) {
                                !function (t, i) {
                                    'object' == typeof n && void 0 !== r ? r.exports = i('undefined' != typeof window ? window.videojs : void 0 !== t ? t.videojs : null) : 'function' == typeof e && e.amd ? e(['video.js'], i) : t.videojsContribAds = i(t.videojs)
                                }(this, function (e) {
                                    'use strict';
                                    function r(e) {
                                        'playing' === e.type ? p(this, e) : 'ended' === e.type ? v(this, e) : 'loadstart' === e.type || 'loadeddata' === e.type || 'loadedmetadata' === e.type ? m(this, e) : 'play' === e.type ? g(this, e) : this.ads.isInAdMode() && (this.ads.isContentResuming() ? h(this, 'content', e) : h(this, 'ad', e))
                                    }
                                    function n(t) {
                                        var r = void 0;
                                        r = e.browser.IS_IOS && t.ads.isLive(t) && t.seekable().length > 0 ? t.currentTime() - t.seekable().end(0) : t.currentTime();
                                        var n = t.$('.vjs-tech'),
                                            i = t.textTracks ? t.textTracks() : [
                                            ],
                                            a = [
                                            ],
                                            s = {
                                                ended: t.ended(),
                                                currentSrc: t.currentSrc(),
                                                src: t.tech_.src(),
                                                currentTime: r,
                                                type: t.currentType()
                                            };
                                        n && (s.nativePoster = n.poster, s.style = n.getAttribute('style'));
                                        for (var o = 0; o < i.length; o++) {
                                            var u = i[o];
                                            a.push({
                                                track: u,
                                                mode: u.mode
                                            }),
                                                u.mode = 'disabled'
                                        }
                                        return s.suppressedTracks = a,
                                            s
                                    }
                                    function i(t, r) {
                                        if (!0 === t.ads.disableNextSnapshotRestore) return void (t.ads.disableNextSnapshotRestore = !1);
                                        var n = t.$('.vjs-tech'),
                                            i = 20,
                                            a = r.suppressedTracks,
                                            s = void 0,
                                            o = function () {
                                                for (var e = 0; e < a.length; e++) s = a[e],
                                                    s.track.mode = s.mode
                                            },
                                            u = function () {
                                                var n = void 0;
                                                e.browser.IS_IOS && t.ads.isLive(t) ? r.currentTime < 0 && (n = t.seekable().length > 0 ? t.seekable().end(0) + r.currentTime : t.currentTime(), t.currentTime(n)) : r.ended ? t.currentTime(t.duration()) : t.currentTime(r.currentTime),
                                                    r.ended || t.play(),
                                                    t.ads.shouldRemoveAutoplay_ && (t.autoplay(!1), t.ads.shouldRemoveAutoplay_ = !1)
                                            },
                                            l = function r() {
                                                if (t.off('contentcanplay', r), t.ads.tryToResumeTimeout_ && (t.clearTimeout(t.ads.tryToResumeTimeout_), t.ads.tryToResumeTimeout_ = null), n = t.el().querySelector('.vjs-tech'), n.readyState > 1) return u();
                                                if (n.seekable === undefined) return u();
                                                if (n.seekable.length > 0) return u();
                                                if (i--) d.setTimeout(r, 50);
                                                else try {
                                                    u()
                                                } catch (t) {
                                                    e.log.warn('Failed to resume the content after an advertisement', t)
                                                }
                                            };
                                        r.nativePoster && (n.poster = r.nativePoster),
                                            'style' in r && n.setAttribute('style', r.style || ''),
                                            t.ads.videoElementRecycled() ? (t.one('contentloadedmetadata', o), e.browser.IS_IOS && !t.autoplay() && (t.autoplay(!0), t.ads.shouldRemoveAutoplay_ = !0), t.src({
                                                src: r.currentSrc,
                                                type: r.type
                                            }), t.one('contentcanplay', l), t.ads.tryToResumeTimeout_ = t.setTimeout(l, 2000)) : (o(), t.ended() || t.play())
                                    }
                                    function a(e) {
                                        e.ads.contentSrc = e.currentSrc();
                                        var t = function () {
                                            if ('ad-playback' !== e.ads.state) {
                                                var t = e.currentSrc();
                                                t !== e.ads.contentSrc && (e.trigger({
                                                    type: 'contentupdate',
                                                    oldValue: e.ads.contentSrc,
                                                    newValue: t
                                                }), e.ads.contentSrc = t)
                                            }
                                        };
                                        e.on('loadstart', t),
                                            d.setTimeout(t, 1)
                                    }
                                    function s(e) {
                                        e.ads.cancelPlayTimeout || (e.ads.cancelPlayTimeout = d.setTimeout(function () {
                                            e.ads.cancelPlayTimeout = null,
                                                e.paused() || e.pause(),
                                                e.ads._cancelledPlay = !0
                                        }, 1))
                                    }
                                    function o(t, r, n) {
                                        r === undefined && (r = !1);
                                        var i = {
                                        };
                                        n !== undefined && (i = n),
                                            i['{player.id}'] = this.options_['data-player'],
                                            i['{mediainfo.id}'] = this.mediainfo ? this.mediainfo.id : '',
                                            i['{mediainfo.name}'] = this.mediainfo ? this.mediainfo.name : '',
                                            i['{mediainfo.description}'] = this.mediainfo ? this.mediainfo.description : '',
                                            i['{mediainfo.tags}'] = this.mediainfo ? this.mediainfo.tags : '',
                                            i['{mediainfo.reference_id}'] = this.mediainfo ? this.mediainfo.reference_id : '',
                                            i['{mediainfo.duration}'] = this.mediainfo ? this.mediainfo.duration : '',
                                            i['{mediainfo.ad_keys}'] = this.mediainfo ? this.mediainfo.ad_keys : '',
                                            i['{player.duration}'] = this.duration(),
                                            i['{timestamp}'] = (new Date).getTime(),
                                            i['{document.referrer}'] = A.referrer,
                                            i['{window.location.href}'] = d.location.href,
                                            i['{random}'] = Math.floor(1000000000000 * Math.random()),
                                            w(this.mediainfo, i, 'custom_fields'),
                                            w(this.mediainfo, i, 'customFields');
                                        for (var a in i) t = t.split(a).join(k(i[a], r));
                                        return t = t.replace(/{pageVariable\.([^}]+)}/g, function (t, n) {
                                            for (var i = void 0, a = d, s = n.split('.'), o = 0; o < s.length; o++) o === s.length - 1 ? i = a[s[o]] : a = a[s[o]];
                                            var u = void 0 === i ? 'undefined' : S(i);
                                            return null === i ? 'null' : i === undefined ? (e.log.warn('Page variable "' + n + '" not found'), '') : 'string' !== u && 'number' !== u && 'boolean' !== u ? (e.log.warn('Page variable "' + n + '" is not a supported type'), '') : k(String(i), r)
                                        })
                                    }
                                    e = e && e.hasOwnProperty('default') ? e['default'] : e;
                                    var u,
                                        l = 'undefined' != typeof window ? window : void 0 !== t ? t : 'undefined' != typeof self ? self : {
                                        };
                                    u = 'undefined' != typeof window ? window : void 0 !== l ? l : 'undefined' != typeof self ? self : {
                                    };
                                    var c,
                                        d = u,
                                        f = function (e, t) {
                                            t.isImmediatePropagationStopped = function () {
                                                return !0
                                            },
                                                t.cancelBubble = !0,
                                                t.isPropagationStopped = function () {
                                                    return !0
                                                }
                                        },
                                        h = function (e, t, r) {
                                            f(0, r),
                                                e.trigger({
                                                    type: t + r.type,
                                                    state: e.ads.state,
                                                    originalEvent: r
                                                })
                                        },
                                        p = function (e, t) {
                                            e.ads.isInAdMode() && (e.ads.isContentResuming() ? e.ads._contentEnding && h(e, 'content', t) : e.ads._cancelledPlay ? f(0, t) : h(e, 'ad', t))
                                        },
                                        v = function (e, t) {
                                            if (e.ads.isInAdMode()) {
                                                if (e.ads.isContentResuming()) return;
                                                h(e, 'ad', t)
                                            } else h(e, 'content', t)
                                        },
                                        m = function (e, t) {
                                            if (!('loadstart' === t.type && !e.ads._hasThereBeenALoadStartDuringPlayerLife || 'loadeddata' === t.type && !e.ads._hasThereBeenALoadedData || 'loadedmetadata' === t.type && !e.ads._hasThereBeenALoadedMetaData)) if (e.ads.isAdPlaying()) h(e, 'ad', t);
                                            else {
                                                if (e.currentSrc() !== e.ads.contentSrc) return;
                                                h(e, 'content', t)
                                            }
                                        },
                                        g = function (e, t) {
                                            var r = e.ads._cancelledPlay && !e.ads.isInAdMode();
                                            e.ads.isAdPlaying() ? h(e, 'ad', t) : (e.ads.isContentResuming() || r) && h(e, 'content', t)
                                        },
                                        y = {
                                        },
                                        _ = (Object.freeze || Object)({
                                            default:
                                                y
                                        }),
                                        b = _ && y || _,
                                        T = void 0 !== l ? l : 'undefined' != typeof window ? window : {
                                        };
                                    'undefined' != typeof document ? c = document : (c = T['__GLOBAL_DOCUMENT_CACHE@4']) || (c = T['__GLOBAL_DOCUMENT_CACHE@4'] = b);
                                    var A = c,
                                        S = 'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator ? function (e) {
                                            return typeof e
                                        }
                                            : function (e) {
                                                return e && 'function' == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e
                                            },
                                        k = function (e, t) {
                                            return t ? encodeURIComponent(e) : e
                                        },
                                        w = function (e, t, r) {
                                            if (e && e[r]) for (var n = e[r], i = Object.keys(n), a = 0; a < i.length; a++) {
                                                var s = '{mediainfo.' + r + '.' + i[a] + '}';
                                                t[s] = n[i[a]]
                                            }
                                        },
                                        C = {
                                        };
                                    C.processMetadataTracks = function (e, t) {
                                        for (var r = e.textTracks(), n = function (r) {
                                            'metadata' === r.kind && (e.ads.cueTextTracks.setMetadataTrackMode(r), t(e, r))
                                        }, i = 0; i < r.length; i++) n(r[i]);
                                        r.addEventListener('addtrack', function (e) {
                                            n(e.track)
                                        })
                                    },
                                        C.setMetadataTrackMode = function (e) {
                                        },
                                        C.getSupportedAdCue = function (e, t) {
                                            return t
                                        },
                                        C.isSupportedAdCue = function (e, t) {
                                            return !0
                                        },
                                        C.getCueId = function (e, t) {
                                            return t.id
                                        };
                                    var E = function (e, t) {
                                        return t !== undefined && e.ads.includedCues[t]
                                    },
                                        I = function (e, t) {
                                            t !== undefined && '' !== t && (e.ads.includedCues[t] = !0)
                                        };
                                    C.processAdTrack = function (t, r, n, i) {
                                        t.ads.includedCues = {
                                        };
                                        for (var a = 0; a < r.length; a++) {
                                            var s = r[a],
                                                o = this.getSupportedAdCue(t, s);
                                            if (!this.isSupportedAdCue(t, s)) return void e.log.warn('Skipping as this is not a supported ad cue.', s);
                                            var u = this.getCueId(t, s),
                                                l = s.startTime;
                                            if (E(t, u)) return void e.log('Skipping ad already seen with ID ' + u);
                                            i && i(t, o, u, l),
                                                n(t, o, u, l),
                                                I(t, u)
                                        }
                                    };
                                    var P = e.getTech('Html5').Events,
                                        O = function (e) {
                                            var t = e.$('.vjs-tech');
                                            t && t.removeAttribute('poster')
                                        },
                                        x = {
                                            timeout: 5000,
                                            prerollTimeout: 100,
                                            postrollTimeout: 100,
                                            debug: !1,
                                            stitchedAds: !1
                                        },
                                        L = function (t) {
                                            var u = this,
                                                l = e.mergeOptions(x, t),
                                                c = P.concat(['firstplay',
                                                    'loadedalldata',
                                                    'playing']);
                                            u.on(c, r),
                                                d.setTimeout(function () {
                                                    u.ads._hasThereBeenALoadStartDuringPlayerLife || '' === u.src() || e.log.error('videojs-contrib-ads has not seen a loadstart event 5 seconds after being initialized, but a source is present. This indicates that videojs-contrib-ads was initialized too late. It must be initialized immediately after video.js in the same tick. As a result, some ads will not play and some media events will be incorrect. For more information, see https://github.com/videojs/videojs-contrib-ads#important-note-about-initialization')
                                                }, 5000),
                                                u.on('ended', function () {
                                                    u.hasClass('vjs-has-started') || u.addClass('vjs-has-started')
                                                }),
                                                u.on(['addurationchange',
                                                    'adcanplay'], function () {
                                                        u.ads.snapshot && u.currentSrc() === u.ads.snapshot.currentSrc || u.ads.isAdPlaying() && u.play()
                                                    }),
                                                u.on('nopreroll', function () {
                                                    u.ads.nopreroll_ = !0
                                                }),
                                                u.on('nopostroll', function () {
                                                    u.ads.nopostroll_ = !0
                                                }),
                                                u.on(['ads-ad-started',
                                                    'playing'], function () {
                                                        u.removeClass('vjs-ad-loading')
                                                    }),
                                                u.on('playing', function () {
                                                    u.ads._cancelledPlay = !1
                                                }),
                                                u.one('loadstart', function () {
                                                    u.ads._hasThereBeenALoadStartDuringPlayerLife = !0
                                                }),
                                                u.on('loadeddata', function () {
                                                    u.ads._hasThereBeenALoadedData = !0
                                                }),
                                                u.on('loadedmetadata', function () {
                                                    u.ads._hasThereBeenALoadedMetaData = !0
                                                }),
                                                u.ads = {
                                                    state: 'content-set',
                                                    disableNextSnapshotRestore: !1,
                                                    _contentEnding: !1,
                                                    _contentHasEnded: !1,
                                                    _hasThereBeenALoadStartDuringPlayerLife: !1,
                                                    _hasThereBeenALoadedData: !1,
                                                    _hasThereBeenALoadedMetaData: !1,
                                                    _inLinearAdMode: !1,
                                                    adType: null,
                                                    VERSION: '__VERSION__',
                                                    reset: function () {
                                                        u.ads.disableNextSnapshotRestore = !1,
                                                            u.ads._contentEnding = !1,
                                                            u.ads._contentHasEnded = !1,
                                                            u.ads.snapshot = null,
                                                            u.ads.adType = null,
                                                            u.ads._hasThereBeenALoadedData = !1,
                                                            u.ads._hasThereBeenALoadedMetaData = !1,
                                                            u.ads._cancelledPlay = !1
                                                    },
                                                    startLinearAdMode: function () {
                                                        'preroll?' !== u.ads.state && 'content-playback' !== u.ads.state && 'postroll?' !== u.ads.state || (u.ads._inLinearAdMode = !0, u.trigger('adstart'))
                                                    },
                                                    endLinearAdMode: function () {
                                                        'ad-playback' === u.ads.state && (u.ads._inLinearAdMode = !1, u.trigger('adend'), u.removeClass('vjs-ad-loading'))
                                                    },
                                                    skipLinearAdMode: function () {
                                                        'ad-playback' !== u.ads.state && u.trigger('adskip')
                                                    },
                                                    stitchedAds: function (e) {
                                                        return e !== undefined && (this._stitchedAds = !!e),
                                                            this._stitchedAds
                                                    },
                                                    videoElementRecycled: function () {
                                                        if (u.ads.shouldPlayContentBehindAd(u)) return !1;
                                                        if (!this.snapshot) throw new Error('You cannot use videoElementRecycled while there is no snapshot.');
                                                        var e = u.tech_.src() !== this.snapshot.src,
                                                            t = u.currentSrc() !== this.snapshot.currentSrc;
                                                        return e || t
                                                    },
                                                    isLive: function (t) {
                                                        return t.duration() === Infinity || '8' === e.browser.IOS_VERSION && 0 === t.duration()
                                                    },
                                                    shouldPlayContentBehindAd: function (t) {
                                                        return !e.browser.IS_IOS && !e.browser.IS_ANDROID && t.duration() === Infinity
                                                    },
                                                    isInAdMode: function () {
                                                        return 'ads-ready?' === u.ads.state || 'preroll?' === u.ads.state || 'ad-playback' === u.ads.state || 'content-resuming' === u.ads.state
                                                    },
                                                    isContentResuming: function () {
                                                        return 'content-resuming' === u.ads.state
                                                    },
                                                    isAdPlaying: function () {
                                                        return this._inLinearAdMode
                                                    }
                                                },
                                                u.ads.stitchedAds(l.stitchedAds),
                                                u.ads.cueTextTracks = C,
                                                u.ads.adMacroReplacement = o.bind(u),
                                                a(u),
                                                u.on('contentupdate', u.ads.reset);
                                            var f = {
                                                'content-set': {
                                                    events: {
                                                        adscanceled: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adsready: function () {
                                                            this.state = 'ads-ready'
                                                        },
                                                        play: function () {
                                                            this.state = 'ads-ready?',
                                                                s(u),
                                                                O(u)
                                                        },
                                                        adserror: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adskip: function () {
                                                            this.state = 'content-playback'
                                                        }
                                                    }
                                                },
                                                'ads-ready': {
                                                    events: {
                                                        play: function () {
                                                            this.state = 'preroll?',
                                                                s(u)
                                                        },
                                                        adskip: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adserror: function () {
                                                            this.state = 'content-playback'
                                                        }
                                                    }
                                                },
                                                'preroll?': {
                                                    enter: function () {
                                                        u.ads.nopreroll_ ? (u.trigger('readyforpreroll'), d.setTimeout(function () {
                                                            u.trigger('nopreroll')
                                                        }, 1)) : (u.addClass('vjs-ad-loading'), u.ads.adTimeoutTimeout = d.setTimeout(function () {
                                                            u.trigger('adtimeout')
                                                        }, l.prerollTimeout), u.ads._hasThereBeenALoadStartDuringPlayerLife ? u.trigger('readyforpreroll') : u.one('loadstart', function () {
                                                            u.trigger('readyforpreroll')
                                                        }))
                                                    },
                                                    leave: function () {
                                                        d.clearTimeout(u.ads.adTimeoutTimeout)
                                                    },
                                                    events: {
                                                        play: function () {
                                                            s(u)
                                                        },
                                                        adstart: function () {
                                                            this.state = 'ad-playback',
                                                                u.ads.adType = 'preroll'
                                                        },
                                                        adskip: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adtimeout: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adserror: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        nopreroll: function () {
                                                            this.state = 'content-playback'
                                                        }
                                                    }
                                                },
                                                'ads-ready?': {
                                                    enter: function () {
                                                        u.addClass('vjs-ad-loading'),
                                                            u.ads.adTimeoutTimeout = d.setTimeout(function () {
                                                                u.trigger('adtimeout')
                                                            }, l.timeout)
                                                    },
                                                    leave: function () {
                                                        d.clearTimeout(u.ads.adTimeoutTimeout),
                                                            u.removeClass('vjs-ad-loading')
                                                    },
                                                    events: {
                                                        play: function () {
                                                            s(u)
                                                        },
                                                        adscanceled: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adsready: function () {
                                                            this.state = 'preroll?'
                                                        },
                                                        adskip: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adtimeout: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        adserror: function () {
                                                            this.state = 'content-playback'
                                                        }
                                                    }
                                                },
                                                'ad-playback': {
                                                    enter: function () {
                                                        u.ads.shouldPlayContentBehindAd(u) || (this.snapshot = n(u)),
                                                            u.ads.shouldPlayContentBehindAd(u) && (this.preAdVolume_ = u.volume(), u.volume(0)),
                                                            u.addClass('vjs-ad-playing'),
                                                            u.hasClass('vjs-live') && u.removeClass('vjs-live'),
                                                            O(u),
                                                            u.ads.cancelPlayTimeout && d.setTimeout(function () {
                                                                d.clearTimeout(u.ads.cancelPlayTimeout),
                                                                    u.ads.cancelPlayTimeout = null
                                                            }, 1)
                                                    },
                                                    leave: function () {
                                                        u.removeClass('vjs-ad-playing'),
                                                            u.ads.isLive(u) && u.addClass('vjs-live'),
                                                            u.ads.shouldPlayContentBehindAd(u) || i(u, this.snapshot),
                                                            u.ads.shouldPlayContentBehindAd(u) && u.volume(this.preAdVolume_)
                                                    },
                                                    events: {
                                                        adend: function () {
                                                            this.state = 'content-resuming',
                                                                u.ads.adType = null
                                                        },
                                                        adserror: function () {
                                                            u.ads.endLinearAdMode()
                                                        }
                                                    }
                                                },
                                                'content-resuming': {
                                                    enter: function () {
                                                        this._contentHasEnded && (d.clearTimeout(u.ads._fireEndedTimeout), u.ads._fireEndedTimeout = d.setTimeout(function () {
                                                            u.trigger('ended')
                                                        }, 1000))
                                                    },
                                                    leave: function () {
                                                        d.clearTimeout(u.ads._fireEndedTimeout)
                                                    },
                                                    events: {
                                                        contentupdate: function () {
                                                            this.state = 'content-set'
                                                        },
                                                        contentresumed: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        playing: function () {
                                                            this.state = 'content-playback'
                                                        },
                                                        ended: function () {
                                                            this.state = 'content-playback'
                                                        }
                                                    }
                                                },
                                                'postroll?': {
                                                    enter: function () {
                                                        u.ads._contentEnding = !0,
                                                            u.ads.nopostroll_ ? d.setTimeout(function () {
                                                                u.ads.state = 'content-resuming',
                                                                    u.trigger('ended')
                                                            }, 1) : (u.addClass('vjs-ad-loading'), u.ads.adTimeoutTimeout = d.setTimeout(function () {
                                                                u.trigger('adtimeout')
                                                            }, l.postrollTimeout))
                                                    },
                                                    leave: function () {
                                                        d.clearTimeout(u.ads.adTimeoutTimeout),
                                                            u.removeClass('vjs-ad-loading')
                                                    },
                                                    events: {
                                                        adstart: function () {
                                                            this.state = 'ad-playback',
                                                                u.ads.adType = 'postroll'
                                                        },
                                                        adskip: function () {
                                                            this.state = 'content-resuming',
                                                                d.setTimeout(function () {
                                                                    u.trigger('ended')
                                                                }, 1)
                                                        },
                                                        adtimeout: function () {
                                                            this.state = 'content-resuming',
                                                                d.setTimeout(function () {
                                                                    u.trigger('ended')
                                                                }, 1)
                                                        },
                                                        adserror: function () {
                                                            this.state = 'content-resuming',
                                                                d.setTimeout(function () {
                                                                    u.trigger('ended')
                                                                }, 1)
                                                        },
                                                        contentupdate: function () {
                                                            this.state = 'ads-ready?'
                                                        }
                                                    }
                                                },
                                                'content-playback': {
                                                    enter: function () {
                                                        u.ads.cancelPlayTimeout && (d.clearTimeout(u.ads.cancelPlayTimeout), u.ads.cancelPlayTimeout = null),
                                                            u.trigger({
                                                                type: 'contentplayback',
                                                                triggerevent: u.ads.triggerevent
                                                            }),
                                                            u.ads._cancelledPlay && u.paused() && u.play()
                                                    },
                                                    events: {
                                                        adsready: function () {
                                                            u.trigger('readyforpreroll')
                                                        },
                                                        adstart: function () {
                                                            this.state = 'ad-playback',
                                                                'preroll' !== u.ads.adType && (u.ads.adType = 'midroll')
                                                        },
                                                        contentupdate: function () {
                                                            u.paused() ? this.state = 'content-set' : this.state = 'ads-ready?'
                                                        },
                                                        contentended: function () {
                                                            if (this._contentHasEnded) return void (this.state = 'content-resuming');
                                                            this._contentEnding = !1,
                                                                this._contentHasEnded = !0,
                                                                this.state = 'postroll?'
                                                        }
                                                    }
                                                }
                                            },
                                                h = function (t) {
                                                    var r = u.ads.state,
                                                        n = f[r].events;
                                                    if (n) {
                                                        var i = n[t.type];
                                                        i && i.apply(u.ads)
                                                    }
                                                    if (r !== u.ads.state) {
                                                        var a = r,
                                                            s = u.ads.state;
                                                        u.ads.triggerevent = t.type,
                                                            f[a].leave && f[a].leave.apply(u.ads),
                                                            f[s].enter && f[s].enter.apply(u.ads),
                                                            l.debug && e.log('ads', u.ads.triggerevent + ' triggered: ' + a + ' -> ' + s)
                                                    }
                                                },
                                                p = function () {
                                                    return !u.ads.shouldPlayContentBehindAd(u) && u.ads.isAdPlaying() && u.tech_.featuresNativeTextTracks && e.browser.IS_IOS && !Array.isArray(u.textTracks())
                                                },
                                                v = function () {
                                                    var e = u.textTracks();
                                                    if (p()) for (var t = 0; t < e.length; t++) {
                                                        var r = e[t];
                                                        'showing' === r.mode && (r.mode = 'disabled')
                                                    }
                                                };
                                            u.ready(function () {
                                                u.textTracks().addEventListener('change', v)
                                            }),
                                                u.on(P.concat(['adtimeout',
                                                    'contentupdate',
                                                    'contentplaying',
                                                    'contentended',
                                                    'contentresumed',
                                                    'adstart',
                                                    'adend',
                                                    'adskip',
                                                    'adsready',
                                                    'adserror',
                                                    'adscanceled',
                                                    'nopreroll']), h),
                                                u.on('dispose', function () {
                                                    u.ads.adTimeoutTimeout && d.clearTimeout(u.ads.adTimeoutTimeout),
                                                        u.ads._fireEndedTimeout && d.clearTimeout(u.ads._fireEndedTimeout),
                                                        u.ads.cancelPlayTimeout && d.clearTimeout(u.ads.cancelPlayTimeout),
                                                        u.ads.tryToResumeTimeout_ && u.clearTimeout(u.ads.tryToResumeTimeout_),
                                                        u.textTracks().removeEventListener('change', v)
                                                }),
                                                u.paused() || h({
                                                    type: 'play'
                                                })
                                        };
                                    return (e.registerPlugin || e.plugin)('ads', L),
                                        L
                                })
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                        }
                    ],
                    8: [
                        function (e, t, r) {
                            (function (t) {
                                'use strict';
                                function r(e) {
                                    return e && e.__esModule ? e : {
                                        default:
                                            e
                                    }
                                }
                                function r(e) {
                                    return e && e.__esModule ? e : {
                                        default:
                                            e
                                    }
                                }
                                function r(e) {
                                    return e && e.__esModule ? e : {
                                        default:
                                            e
                                    }
                                }
                                var n = 'undefined' != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                                    i = r(n);
                                e('videojs-contrib-ads');
                                var a = e('global/window'),
                                    s = r(a),
                                    o = e('./videojs.ima3-cuepoints.js'),
                                    u = r(o),
                                    l = e('./videojs.ima3-canautoplay.js'),
                                    c = r(l),
                                    d = i['default'].ima3 = {
                                    },
                                    f = d.defaults = {
                                        sdkurl: (/^(file|data):/.test(s['default'].location.protocol) ? 'http:' : '') + '//imasdk.googleapis.com/js/sdkloader/ima3.js',
                                        adTechOrder: [
                                            'flash',
                                            'html5'
                                        ],
                                        serverUrl: ('file:' === s['default'].location.protocol ? 'http:' : '') + '//pubads.g.doubleclick.net/gampad/ads?sz=400x300&iu=%2F6062%2Fiab_vast_samples&ciu_szs=300x250%2C728x90&gdfp_req=1&env=vp&output=xml_vast2&unviewed_position_start=1&url=[referrer_url]&correlator=[timestamp]&cust_params=iab_vast_samples%3Dlinear',
                                        adSwf: ('file:' === s['default'].location.protocol ? 'http:' : '') + '//players.brightcove.net/videojs-ima3/2.22.3/videojs.ima3.swf',
                                        loadingSpinner: !1,
                                        timeout: 4000,
                                        requestMode: 'onload',
                                        hardTimeouts: !0,
                                        showVpaidControls: !1
                                    },
                                    h = i['default'].ima3.extend = function (e) {
                                        for (var t = 1; t < arguments.length; t++) {
                                            var r = arguments[t];
                                            for (var n in r) r.hasOwnProperty(n) && (e[n] = r[n])
                                        }
                                        return e
                                    },
                                    p = function (e) {
                                        var t = this,
                                            r = h({
                                            }, f, e || {
                                            }),
                                            n = this.el().querySelector('.vjs-tech'),
                                            a = r.adTechOrder,
                                            o = !1,
                                            l = undefined;
                                        if (this.addClass('vjs-ima3-not-playing-yet'), e && e.useMediaCuePoints && 'oncue' !== e.requestMode) throw new Error('useMediaCuePoints must be used with requestMode "oncue" rather than the currently set ' + e.requestMode);
                                        if (this.ready(function () {
                                            var e = this;
                                            (0, c['default'])(this).then(function () {
                                                e.autoplay() && !e.ima3.canAutoPlayVideo && e.ima3.canAutoPlayMutedVideo && (e.muted(!0), e.play()),
                                                    i['default'].browser.IS_IOS && e.playsinline() && e.autoplay() && !e.ima3.canAutoPlayInlineVideo && e.ima3.canAutoPlayMutedInlineVideo && (e.muted(!0), e.play())
                                            })
                                        }), this.on(['playing'], function (e) {
                                            t.removeClass('vjs-ima3-not-playing-yet'),
                                                t.tech_.el_.removeAttribute('poster')
                                        }), r.prerollTimeout && (i['default'].log.warn('The prerollTimeout option is deprecated and will be removed, please use the timeout option. The prerollTimeout will be set to the value of the timeout option.'), r.prerollTimeout = undefined), r.postrollTimeout && (i['default'].log.warn('The postrollTimeout option is deprecated and will be removed, please use the timeout option. The postrollTimeout will be set to the value of the timeout option.'), r.postrollTimeout = undefined), r.timeout && (r.prerollTimeout = r.postrollTimeout = r.timeout), r.contribAdsPrerollTimeout && (r.prerollTimeout = r.contribAdsPrerollTimeout), r.contribAdsPostrollTimeout && (r.postrollTimeout = r.contribAdsPostrollTimeout), !this.autoplay() || i['default'].browser.IS_IOS || i['default'].browser.IS_ANDROID || this.addClass('vjs-ima3-autoplay'), 'onplay' === r.requestMode && this.autoplay() && (r.requestMode = 'onload'), !('adControlBar' in r)) {
                                            var d = {
                                                name: 'adControlBar'
                                            },
                                                p = this.getChild('controlBar');
                                            p && p.getChild('volumeMenuButton') ? d.volumeMenuButton = {
                                                vertical: p.getChild('volumeMenuButton').options_.vertical
                                            }
                                                : p && p.getChild('volumePanel') && (d.volumePanel = {
                                                    inline: p.getChild('volumePanel').options_.inline
                                                }),
                                                r.adControlBar = h({
                                                }, this.options_.children.controlBar, d)
                                        }
                                        r.adControlBar.hasOwnProperty('children') || function () {
                                            var e = i['default'].getComponent('ControlBar'),
                                                t = [
                                                    'audioTrackButton',
                                                    'captionsButton',
                                                    'chaptersButton',
                                                    'descriptionsButton',
                                                    'subsCapsButton',
                                                    'subtitlesButton'
                                                ];
                                            r.adControlBar.children = [
                                            ].concat(e.prototype.options_.children).filter(function (e) {
                                                return - 1 === t.indexOf(e)
                                            })
                                        }(),
                                            r.eventMap = {
                                                'ima3-click': 'ads-click',
                                                'ima3-started': 'ads-ad-started',
                                                'ima3-complete': 'ads-ad-ended',
                                                'ima3-first-quartile': 'ads-first-quartile',
                                                'ima3-midpoint': 'ads-midpoint',
                                                'ima3-third-quartile': 'ads-third-quartile',
                                                'ima3-volume-changed': 'ads-volumechange',
                                                'ima3-paused': 'ads-pause',
                                                'ima3-resumed': 'ads-play',
                                                'ima3-skipped': 'ads-ad-skipped',
                                                'ima3-all-ads-completed': 'ads-allpods-completed',
                                                'ads-request': 'ads-request',
                                                'ads-pod-ended': 'ads-pod-ended',
                                                'ads-pod-started': 'ads-pod-started',
                                                'ads-load': 'ads-load'
                                            },
                                            this.ads(r),
                                            this.ads.ad = {
                                            },
                                            this.ads.pod = {
                                                id: undefined,
                                                size: undefined
                                            },
                                            'oncue' === r.requestMode && this.on('loadedmetadata', function () {
                                                (0, u['default'])(t, t.ads.cueTextTracks)
                                            }),
                                            'ondemand' !== r.requestMode && 'oncue' !== r.requestMode || ('ondemand' === r.requestMode && (this.trigger('nopreroll'), this.trigger('nopostroll')), this.trigger('adsready'), this.on('contentupdate', function () {
                                                t.trigger('adsready')
                                            })),
                                            this.on('ima3-ready', function () {
                                                this.ima3.isReady_ = !0,
                                                    this.contextmenu && (this.contextmenu.options.disabled = this.ima3.contextMenuPreviouslyDisabled),
                                                    this.removeClass('vjs-ima3-right-click');
                                                for (var e = 0; e < this.ima3.readyQueue_.length; e++) this.ima3.readyQueue_[e].call(this);
                                                this.ima3.readyQueue_ = [
                                                ]
                                            }),
                                            this.on('ads-ad-started', function () {
                                                this.ima3.volume = this.volume(),
                                                    this.muted() ? this.ima3.adPlayer.muted(!0) : this.ima3.adPlayer.volume(this.volume() || this.ads.preAdVolume_),
                                                    this.ima3.adPlayer.trigger('durationchange')
                                            }),
                                            this.on(['ads-ad-ended',
                                                'ads-ad-skipped'], function () {
                                                    this.volume(this.ima3.adPlayer.volume()),
                                                        this.ads.preAdVolume_ && (this.ads.preAdVolume_ = this.volume()),
                                                        this.muted(this.ima3.adPlayer.muted())
                                                }),
                                            r.showVpaidControls || this.addClass('vjs-vpaid-controls-disabled'),
                                            this.ima3 = {
                                                readyQueue_: [
                                                ],
                                                isReady_: !1,
                                                player: this,
                                                tech: n,
                                                settings: r,
                                                ready: function (e) {
                                                    return e && (t.ima3.isReady_ ? e.call(t) : (t.ima3.readyQueue_ === undefined && (t.ima3.readyQueue_ = [
                                                    ]), t.ima3.readyQueue_.push(e))),
                                                        t.ima3
                                                },
                                                makeAdRequestFunction: function (e) {
                                                    var t = this;
                                                    return function (r) {
                                                        var n = r || t.settings.serverUrl;
                                                        return t.player.mediainfo && 'FREE' === t.player.mediainfo.economics ? void i['default'].log('On demand adRequest attempted on video with advertising disabled.') : n ? (i['default'].log('Clearing any previous VAST ad data and triggering ondemand adrequest.'), void e.call(t, n)) : void i['default'].log('On demand adRequest attempted without an adTagUrl!')
                                                    }
                                                },
                                                adMacroReplacement: function (e) {
                                                    var r = {
                                                    };
                                                    return t.bcAnalytics && (r['{player.url}'] = s['default'].location.protocol + '//' + t.bcAnalytics.settings.player),
                                                        t.ads.adMacroReplacement(e, !0, r)
                                                },
                                                insertAdContainer: function (e) {
                                                    var r = t.el().querySelector('.vjs-big-play-button');
                                                    t.el().insertBefore(e, r)
                                                },
                                                currentAdEventInfo: {
                                                },
                                                addToCurrentAdEventInfo: function (e, t) {
                                                    '' !== t && (this.currentAdEventInfo[e] ? this.currentAdEventInfo[e].push(t) : this.currentAdEventInfo[e] = [
                                                        t
                                                    ])
                                                },
                                                setAdsRenderingSettings: function (e) {
                                                    this.adsRenderingSettings_ = e,
                                                        this.adsManager && this.adsManager.updateAdsRenderingSettings(e)
                                                },
                                                oneHandlers_: [
                                                ],
                                                oneUnlessContentUpdate_: function (e, t) {
                                                    this.oneHandlers_.push({
                                                        type: e,
                                                        handler: t
                                                    }),
                                                        this.player.one(e, t)
                                                },
                                                version: '2.22.3',
                                                VERSION: '2.22.3'
                                            },
                                            this.on('contentupdate', function () {
                                                for (var e = this.ima3.oneHandlers_, t = 0; t < e.length; t++) {
                                                    var r = e[t];
                                                    this.off(r.type, r.handler)
                                                }
                                                this.ima3.oneHandlers_ = [
                                                ]
                                            }),
                                            this.on('adstart', function (e) {
                                                t.duration() !== Infinity && t.pause(),
                                                    t.hasStarted(!0),
                                                    t.ima3.currentAdEventInfo = {
                                                    }
                                            }),
                                            this.on('adend', function () {
                                                t.duration() === Infinity && t.trigger('playing')
                                            }),
                                            this.on('adplay', function () {
                                                t.tech_.src() !== t.ads.snapshot.src || t.currentSrc() !== t.ads.snapshot.currentSrc || setTimeout(function () {
                                                    t.pause()
                                                }, 0)
                                            }),
                                            this.ready(function () {
                                                for (var e = 0; e < a.length; e++) if (l = a[e].charAt(0).toUpperCase() + a[e].substring(1).toLowerCase(), i['default'].getTech(l).isSupported()) {
                                                    i['default'].ima3[l].call(t, r),
                                                        t.addClass('vjs-ima3-' + l.toLowerCase()),
                                                        r.loadingSpinner && t.addClass('ima3-loading-spinner'),
                                                        o = !0;
                                                    break
                                                }
                                                if (!o) return void i['default'].log('No supported ad tech available. If you have removed one of the default ad techs, you may want to consider adding it back in.')
                                            }, !0)
                                    };
                                i['default'].ima3.AdPlayer = i['default'].extend(i['default'].getComponent('Component'), {
                                    constructor: function () {
                                        var e = [
                                            this
                                        ].concat(Array.prototype.slice.call(arguments));
                                        i['default'].getComponent('Component').apply(this, e)
                                    },
                                    buffered: function () {
                                        return []
                                    },
                                    language: function (e) {
                                        return e === undefined ? this.options_.contentPlayer.language_ : this.options_.contentPlayer.language(e)
                                    },
                                    languages: function () {
                                        return this.options_.contentPlayer.languages()
                                    },
                                    localize: function (e) {
                                        return this.options_.contentPlayer.localize(e)
                                    },
                                    remainingTime: function () {
                                        return this.duration() - this.currentTime()
                                    },
                                    remainingTimeDisplay: function () {
                                        return Math.floor(this.duration()) - Math.floor(this.currentTime())
                                    },
                                    exitFullscreen: function () {
                                        return this.options_.contentPlayer.exitFullscreen()
                                    },
                                    reportUserActivity: function () {
                                    },
                                    requestFullscreen: function () {
                                        return this.options_.contentPlayer.requestFullscreen()
                                    },
                                    el: function () {
                                        return this.options_.contentPlayer.el()
                                    },
                                    audioTracks: function () {
                                    },
                                    textTracks: function () {
                                    },
                                    videoTracks: function () {
                                    },
                                    remoteTextTracks: function () {
                                    },
                                    addTextTrack: function () {
                                    },
                                    addRemoteTextTrack: function () {
                                    },
                                    removeRemoteTextTrack: function () {
                                    },
                                    scrubbing: function () {
                                    },
                                    lastVolume_: function () {
                                        var e;
                                        return (e = this.options_.contentPlayer).lastVolume_.apply(e, arguments)
                                    }
                                }),
                                    (i['default'].registerPlugin || i['default'].plugin)('ima3', p);
                                var n = 'undefined' != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                                    i = r(n),
                                    a = e('global/window'),
                                    s = r(a),
                                    v = e('global/document'),
                                    m = r(v),
                                    g = function (e) {
                                        for (var t = e.split('.'), r = s['default'], n = 0; n < t.length; n++) r[t[n]] || (r[t[n]] = {
                                        }),
                                            r = r[t[n]]
                                    };
                                i['default'].ima3.Flash = function (e) {
                                    var t = this,
                                        r = m['default'].createElement('div'),
                                        n = '<param name="flashvars" value="playerId=' + this.el().id + '&debug=' + this.ima3.settings.debug + '"><param name="wmode" value="transparent"><param name="AllowScriptAccess" value="always">',
                                        a = this.el().id + '-ima3-flash',
                                        o = i['default'].getComponent('ControlBar'),
                                        u = undefined,
                                        l = undefined,
                                        c = undefined,
                                        d = undefined,
                                        f = function (e) {
                                            return e && !/^https?:|file:/.test(e) ? s['default'].location.protocol + e : e
                                        },
                                        h = function () {
                                            u.vjs_postrolltimeout(),
                                                t.trigger('ad-hard-timeout'),
                                                i['default'].log('ima3-hard-timeout')
                                        },
                                        p = function () {
                                            t.ads.ad = {
                                            },
                                                t.ads.pod = {
                                                }
                                        },
                                        v = function (e) {
                                            t.ima3.ready(function () {
                                                p(),
                                                    u.vjs_trigger({
                                                        type: 'adrequest',
                                                        adTag: this.ima3.adMacroReplacement(f(e)),
                                                        currentTime: this.currentTime(),
                                                        options: {
                                                        }
                                                    })
                                            })
                                        };
                                    this.ima3.adTech = 'flash',
                                        i['default'].ima3.Flash.adrequest = function () {
                                            return i['default'].log.warn('videojs.ima3.Flash.adrequest is deprecated. Use player.ima3.adrequest instead.'),
                                                v.apply(this, arguments)
                                        },
                                        this.ima3.adrequest = this.ima3.makeAdRequestFunction(v),
                                        e.serverUrl = f(e.serverUrl),
                                        r.className = 'vjs-ima3-ad-container vjs-ima3-ad-background',
                                        r.innerHTML = '<!--[if !IE]>--><object width="100%" height="100%" type="application/x-shockwave-flash" data="' + e.adSwf + '">' + n + '</object><!--<![endif]-->',
                                        u = r.querySelector('object'),
                                        u || (r.innerHTML = '<object width="100%" height="100%" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">  <param name="movie" value="' + e.adSwf + '">' + n + '</object>', u = r.querySelector('object')),
                                        u.id = a,
                                        u.name = a,
                                        u.className = 'vjs-ima3-flash-ad-container',
                                        g('google.ima.ImaSdkSettings'),
                                        g('google.ima.AdsManager'),
                                        g('google.ima.AdsLoader'),
                                        s['default'].google.ima.ImaSdkSettings.setAutoPlayAdBreaks = function (e) {
                                            u.vjs_autoplayadbreaks(e)
                                        },
                                        s['default'].google.ima.AdsManager.getRemainingTime = function () {
                                            return u.vjs_getRemainingTime()
                                        },
                                        s['default'].google.ima.AdsManager.destroy = function () {
                                            return u.vjs_destroyAdsManager()
                                        },
                                        s['default'].google.ima.AdsManager.stop = function () {
                                            return u.vjs_stopAdsManager()
                                        },
                                        s['default'].google.ima.AdsLoader.contentComplete = function () {
                                            return u.vjs_contentComplete()
                                        },
                                        this.contextmenu && (this.ima3.contextMenuPreviouslyDisabled = this.contextmenu.options.disabled, this.contextmenu.options.disabled = !0),
                                        this.addClass('vjs-ima3-right-click'),
                                        this.ima3.insertAdContainer(r);
                                    var y = i['default'].ima3.Flash.adPlayer(u, {
                                        contentPlayer: this
                                    }),
                                        _ = new o(y, e.adControlBar);
                                    _.addClass('vjs-ad-control-bar'),
                                        this.addClass('vjs-ad-controls'),
                                        this.addChild(_),
                                        this.on(['contentupdate',
                                            'adend',
                                            'ima3-ready'], function () {
                                                p()
                                            }),
                                        this.on('adscanceled', function () {
                                            u.vjs_destroyAdsManager && u.vjs_destroyAdsManager()
                                        }),
                                        this.on('adserror', function () {
                                            this.removeClass('ima3-ad-loading'),
                                                u.vjs_destroyAdsManager && u.vjs_destroyAdsManager()
                                        });
                                    var b = function () {
                                        'none' === u.style.display && (t.contextmenu && (t.contextmenu.options.disabled = t.ima3.contextMenuPreviouslyDisabled), t.removeClass('vjs-ima3-right-click'), t.trigger('adtimeout'), s['default'].clearInterval(l)),
                                            t.ima3.settings.hardTimeouts && t.ads.adTimeoutTimeout && !c && (s['default'].clearTimeout(t.ads.adTimeoutTimeout), c = !0, s['default'].setTimeout(function () {
                                                d = !0
                                            }, t.ima3.settings.timeout))
                                    };
                                    l = s['default'].setInterval(function () {
                                        b();
                                        var r = function (e) {
                                            u.vjs_trigger({
                                                type: e.type,
                                                options: {
                                                    serverUrl: t.ima3.adMacroReplacement(t.ima3.settings.serverUrl)
                                                }
                                            })
                                        };
                                        u.vjs_trigger && (t.trigger('ima3-ready'), s['default'].clearInterval(l), d && t.trigger('adtimeout'), t.on('readyforpreroll', function (e) {
                                            var n = t.ima3.settings;
                                            'ondemand' !== n.requestMode && 'oncue' !== n.requestMode && r(e)
                                        }), t.on('contentended', function (e) {
                                            'postroll?' === this.ads.state && (this.one('adtimeout', h), e.type = 'ended', r(e))
                                        }), t.on(['contentupdate',
                                            'dispose'], function () {
                                                t.off('adtimeout', h)
                                            }), t.on('timeupdate', function (e) {
                                                u.vjs_trigger({
                                                    type: e.type,
                                                    currentTime: t.currentTime()
                                                })
                                            }), t.on('contentupdate', function (n) {
                                                var i = t.currentSrc();
                                                if (p(), t.mediainfo && 'FREE' === t.mediainfo.economics) return t.trigger('adscanceled'),
                                                    t.trigger('nopreroll'),
                                                    void t.trigger('nopostroll');
                                                t.ima3.currentSrc !== i && (t.ima3.currentSrc = i, 'onplay' === e.requestMode ? t.paused() ? t.one('play', function (e) {
                                                    r({
                                                        type: 'contentupdate'
                                                    })
                                                }) : r({
                                                    type: 'contentupdate'
                                                }) : 'onload' === e.requestMode && r(n))
                                            }), t.ready(function () {
                                                var n = t.currentSrc();
                                                if (t.ads.ad = {
                                                }, t.ads.pod = {
                                                }, n && t.ima3.currentSrc !== n) {
                                                    if (t.ima3.currentSrc = n, t.mediainfo && 'FREE' === t.mediainfo.economics) return t.trigger('adscanceled'),
                                                        t.trigger('nopreroll'),
                                                        void t.trigger('nopostroll');
                                                    'onplay' === e.requestMode ? t.one('play', function () {
                                                        r({
                                                            type: 'contentupdate'
                                                        })
                                                    }) : 'onload' === e.requestMode && r({
                                                        type: 'contentupdate'
                                                    })
                                                }
                                            }), t.on('debug', function (e) {
                                                u.vjs_trigger({
                                                    type: e.type,
                                                    enable: e.enable
                                                })
                                            }))
                                    }, 50),
                                        this.ima3.adControlBar = _,
                                        this.ima3.adPlayer = y,
                                        this.ima3.el = u,
                                        this.ima3._object = u,
                                        this.ima3.adsManager = s['default'].google.ima.AdsManager,
                                        this.ima3.adsLoader = s['default'].google.ima.AdsLoader
                                },
                                    i['default'].ima3.Flash.adPlayer = function (e, t) {
                                        var r = t.contentPlayer,
                                            n = new i['default'].ima3.AdPlayer(t),
                                            a = function (e) {
                                                r.ima3._object.vjs_cancelNextAd(),
                                                    r.ima3._object.vjs_stopAdsManager(),
                                                    r.ads.isAdPlaying() && r.trigger('adend')
                                            };
                                        r.on('ima3-ads-manager-loaded', function (e) {
                                            var t = r.ima3.settings,
                                                n = r.ima3._object.vjs_getCuePoints(),
                                                s = n && n.length > 0;
                                            t.useMediaCuePoints && 'oncue' === t.requestMode && s && (a(), i['default'].log.error('Cancelling VMAP ad because useMediaCuePoints must be used with VAST'))
                                        });
                                        var o = function (t, r) {
                                            return function () {
                                                var n = 'vjs_' + t;
                                                return e[n] ? e[n].apply(e, Array.prototype.slice.call(arguments)) : r
                                            }
                                        },
                                            u = o('duration', - 1),
                                            l = o('currentTime'),
                                            c = o('pause'),
                                            d = o('play'),
                                            f = o('volume', 1);
                                        return function () {
                                            var e = !1,
                                                t = {
                                                    0: 'PREROLL',
                                                    '-1': 'POSTROLL'
                                                },
                                                a = function () {
                                                    if (!n.paused()) {
                                                        n.options_.contentPlayer.$('.vjs-ima3-flash .vjs-ad-control-bar .vjs-play-progress').className.match('vjs-play-progress-resetting') || n.trigger('timeupdate')
                                                    }
                                                },
                                                o = function t() {
                                                    e && (a(), s['default'].setTimeout(t, 250))
                                                },
                                                u = function (e) {
                                                    if (e !== undefined) {
                                                        var t = r.ima3;
                                                        t.currentAdEventInfo.adPodId = r.ads.pod.id,
                                                            t.currentAdEventInfo.adPodLength = r.ads.pod.size,
                                                            t.currentAdEventInfo.adType = r.ads.adType,
                                                            t.addToCurrentAdEventInfo('adId', r.ads.ad.id),
                                                            t.addToCurrentAdEventInfo('creativeLength', r.ads.ad.duration),
                                                            t.addToCurrentAdEventInfo('creativeIndex', r.ads.ad.index),
                                                            t.addToCurrentAdEventInfo('adIsciId', e.isci),
                                                            t.addToCurrentAdEventInfo('creativeFormat', e.contentType),
                                                            t.addToCurrentAdEventInfo('creativeUrl', e.mediaUrl),
                                                            t.addToCurrentAdEventInfo('surveyUrl', e.surveyUrl),
                                                            t.addToCurrentAdEventInfo('adTitle', e.title),
                                                            t.addToCurrentAdEventInfo('wrapperCreativeIds', e.wrapperAdIds),
                                                            t.addToCurrentAdEventInfo('adSystem', e.adSystem),
                                                            t.addToCurrentAdEventInfo('wrapperAdSystems', e.wrapperAdSystems)
                                                    }
                                                },
                                                l = function (e) {
                                                    var n = e.type,
                                                        i = r.ima3.settings.eventMap[n];
                                                    r.ima3.currentAd !== undefined && (r.ads.ad.id = r.ima3.currentAd.id, r.ads.ad.duration = r.ima3.currentAd.duration, r.ads.ad.index = r.ima3.currentAd.adPodInfo.adPosition - 1, r.ads.ad.type = t[r.ima3.currentAd.adPodInfo.timeOffset] || 'MIDROLL', r.ads.pod.id = r.ima3.currentAd.adPodInfo.podIndex, r.ads.pod.size = r.ima3.currentAd.adPodInfo.totalAds, 'ima3-started' === n ? (u(r.ima3.currentAd), r.ima3.addToCurrentAdEventInfo('started', r.ads.ad.index)) : 'ima3-complete' === n && r.ima3.addToCurrentAdEventInfo('completed', r.ads.ad.index)),
                                                        e.type = i || n,
                                                        r.trigger(e)
                                                };
                                            n.on('play', function () {
                                                r.removeClass('vjs-ima3-paused'),
                                                    e = !0,
                                                    s['default'].setTimeout(o, 250)
                                            }),
                                                n.on('pause', function () {
                                                    r.addClass('vjs-ima3-paused'),
                                                        e = !1
                                                }),
                                                n.on('ima3-started', function (e) {
                                                    i['default'].log('ima3-started'),
                                                        l(e);
                                                    var t = n.options_.contentPlayer.$('.vjs-ad-control-bar .vjs-play-progress');
                                                    t.className = t.className.replace(' vjs-play-progress-resetting', '')
                                                }),
                                                n.on('ima3-complete', function (e) {
                                                    i['default'].log('ima3-complete');
                                                    var t = n.options_.contentPlayer.$('.vjs-ima3-flash .vjs-ad-control-bar .vjs-play-progress');
                                                    t.className += ' vjs-play-progress-resetting',
                                                        t.style.width = '0'
                                                });
                                            var c = function (e) {
                                                var t = r.ima3._object.vjs_getCuePoints(),
                                                    n = t && 0 === t.length,
                                                    a = t && 0 === t.indexOf(0);
                                                'VAST' === e && n ? (r.ima3._object.vjs_destroyAdsManager(), r.trigger('ad-hard-timeout'), i['default'].log('ima3-hard-timeout')) : 'VMAP' === e && a && (r.ima3._object.vjs_cancelNextAd(), r.trigger('ad-hard-timeout'), i['default'].log('ima3-hard-timeout'))
                                            };
                                            r.ima3.settings.hardTimeouts && r.on('adtimeout', function () {
                                                var e = this;
                                                r.ima3._object.vjs_isAdsManagerReady && r.ima3._object.vjs_isAdsManagerReady() ? c('VAST') : function () {
                                                    var t = function (e) {
                                                        c('VMAP')
                                                    },
                                                        n = function (e) {
                                                            c('VAST')
                                                        };
                                                    r.ima3.oneUnlessContentUpdate_('ima3-ads-manager-loaded', t),
                                                        r.ima3.oneUnlessContentUpdate_('adsready', n),
                                                        e.one('adstart', function (r) {
                                                            e.off('ima3-ads-manager-loaded', t),
                                                                e.off('adsready', n)
                                                        })
                                                }()
                                            }),
                                                n.on('ima3-resumed', l),
                                                n.on('ima3-paused', l),
                                                n.on('ima3-first-quartile', l),
                                                n.on('ima3-midpoint', l),
                                                n.on('ima3-third-quartile', l),
                                                n.on('ima3-volume-changed', l),
                                                n.on('ima3-click', l),
                                                n.on('ima3-complete', l),
                                                n.on('ima3-all-ads-completed', l),
                                                n.on('ima3-skipped', l),
                                                n.on('ads-request', l),
                                                n.on('ads-load', l),
                                                n.on('ads-pod-ended', l),
                                                n.on('ads-pod-started', l),
                                                n.on('ads-loading', l),
                                                n.on('ads-response-received', l)
                                        }(),
                                            n.currentTime = function () {
                                                if (n.currentTimeCache && (new Date).getTime() - n.currentTimeCacheTime < 250) return n.currentTimeCache;
                                                var e = l();
                                                return e = e < 0 ? 0 : e,
                                                    n.currentTimeCache = e,
                                                    n.currentTimeCacheTime = (new Date).getTime(),
                                                    e
                                            },
                                            n.on('ima3-started', function () {
                                                r.removeClass('vjs-ima3-paused')
                                            }),
                                            n.on('adserror', function () {
                                                r.trigger('adserror')
                                            }),
                                            n.on('adscanceled', function () {
                                                r.trigger('adscanceled')
                                            }),
                                            n.duration = function () {
                                                if (n.durationCache && (new Date).getTime() - n.durationCacheTime < 250) return n.durationCache;
                                                var e = u();
                                                return e = e < 0 ? 0 : e,
                                                    n.durationCache = e,
                                                    n.durationCacheTime = (new Date).getTime(),
                                                    e
                                            },
                                            n.isFullscreen = function () {
                                                return r.isFullscreen()
                                            },
                                            n.requestFullscreen = function () {
                                                return r.requestFullscreen()
                                            },
                                            n.volume = function (e) {
                                                var t = f();
                                                if (e === undefined) return t || r.ima3.volume;
                                                f(e),
                                                    r.ima3.volume = e || r.ima3.volume,
                                                    n.trigger('volumechange')
                                            },
                                            n.muted = function (e) {
                                                var t = f();
                                                return e !== undefined ? 0 === n.volume(e ? 0 : r.ima3.volume) : 0 === t
                                            },
                                            n.pause = function () {
                                                n.trigger('pause'),
                                                    c()
                                            },
                                            n.paused = o('paused'),
                                            n.play = function () {
                                                n.trigger('play'),
                                                    d()
                                            },
                                            n
                                    };
                                var n = 'undefined' != typeof window ? window.videojs : void 0 !== t ? t.videojs : null,
                                    i = r(n),
                                    a = e('global/window'),
                                    s = r(a),
                                    v = e('global/document'),
                                    m = r(v),
                                    l = e('./videojs.ima3-canautoplay.js'),
                                    c = r(l),
                                    h = i['default'].ima3.extend,
                                    y = function (e, t) {
                                        return 'function' == typeof getComputedStyle ? s['default'].getComputedStyle(e)[t] : e.currentStyle[t]
                                    },
                                    _ = function (e) {
                                        return {
                                            width: parseInt(y(e.el(), 'width'), 10),
                                            height: parseInt(y(e.el(), 'height'), 10)
                                        }
                                    },
                                    b = function (e, t, r) {
                                        var n = {
                                        },
                                            i = {
                                                0: 'PREROLL',
                                                '-1': 'POSTROLL'
                                            },
                                            a = function (e) {
                                                if (e !== undefined) {
                                                    var t = r.ima3;
                                                    t.currentAdEventInfo.adPodId = r.ads.pod.id,
                                                        t.currentAdEventInfo.adPodLength = r.ads.pod.size,
                                                        t.currentAdEventInfo.adType = r.ads.adType,
                                                        t.addToCurrentAdEventInfo('adId', r.ads.ad.id),
                                                        t.addToCurrentAdEventInfo('creativeLength', r.ads.ad.duration),
                                                        t.addToCurrentAdEventInfo('creativeIndex', r.ads.ad.index),
                                                        t.addToCurrentAdEventInfo('creativeId', e.getCreativeId()),
                                                        t.addToCurrentAdEventInfo('creativeAdId', e.getCreativeAdId()),
                                                        t.addToCurrentAdEventInfo('creativeFormat', e.getContentType()),
                                                        t.addToCurrentAdEventInfo('creativeUrl', e.getMediaUrl()),
                                                        t.addToCurrentAdEventInfo('surveyUrl', e.getSurveyUrl()),
                                                        t.addToCurrentAdEventInfo('adTitle', e.getTitle()),
                                                        t.addToCurrentAdEventInfo('wrapperCreativeIds', e.getWrapperCreativeIds()),
                                                        t.addToCurrentAdEventInfo('advertiserName', e.getAdvertiserName()),
                                                        t.addToCurrentAdEventInfo('dealId', e.getDealId()),
                                                        t.addToCurrentAdEventInfo('adSystem', e.getAdSystem()),
                                                        t.addToCurrentAdEventInfo('wrapperAdSystems', e.getWrapperAdSystems())
                                                }
                                            };
                                        for (var s in t) !function (t, s) {
                                            var o = function (t) {
                                                var n = {
                                                    emitter: e,
                                                    originalEvent: t
                                                };
                                                n.type = s,
                                                    r.trigger(n),
                                                    n.type = r.ima3.settings.eventMap[s],
                                                    r.trigger(n),
                                                    r.ima3.currentAd !== undefined && (r.ads.ad.id = r.ima3.currentAd.getAdId(), r.ads.ad.duration = r.ima3.currentAd.getDuration(), r.ads.ad.currentTime = r.ima3.currentAd.getAdPodInfo().getTimeOffset(), r.ads.ad.index = r.ima3.currentAd.getAdPodInfo().getAdPosition() - 1, r.ads.ad.type = i[r.ima3.currentAd.getAdPodInfo().getTimeOffset()] || 'MIDROLL', r.ads.pod.id = r.ima3.currentAd.getAdPodInfo().getPodIndex(), r.ads.pod.size = r.ima3.currentAd.getAdPodInfo().getTotalAds(), 'ima3-started' === s && (a(r.ima3.currentAd), r.ima3.addToCurrentAdEventInfo('started', r.ads.ad.index))),
                                                    'ima3-complete' === s && r.ima3.addToCurrentAdEventInfo('completed', r.ads.ad.index)
                                            };
                                            n[t] = o,
                                                e.addEventListener(t, o, !1)
                                        }(t[s][0], t[s][1]);
                                        return function () {
                                            for (var t in n) e.removeEventListener(t, n[t])
                                        }
                                    },
                                    T = function (e, t) {
                                        var r = m['default'].createElement('script'),
                                            n = m['default'].querySelector('head');
                                        r.async = !0,
                                            r.src = e,
                                            r.onload = r.onreadystatechange = function (e, n) {
                                                (n || !r.readyState || /loaded|complete/.test(r.readyState)) && (r.onload = r.onreadystatechange = null, r.parentNode.removeChild(r), r = null, t(n))
                                            },
                                            n.insertBefore(r, n.firstChild)
                                    },
                                    A = function (e) {
                                        for (var t = {
                                        }, r = [
                                            'AdErrorEvent',
                                            'AdEvent',
                                            'AdsManagerLoadedEvent'
                                        ], n = r.length; n--;) if (e[r[n]] && e[r[n]].Type) {
                                            var i = e[r[n]].Type;
                                            for (var a in i) i.hasOwnProperty(a) && (t[i[a]] = [
                                                i[a],
                                                function (e) {
                                                    return 'ima3-' + e.toLowerCase().replace(/_/g, '-')
                                                }(a)
                                            ])
                                        }
                                        return t
                                    },
                                    d = i['default'].ima3.Html5 = function (e) {
                                        var t = this,
                                            r = this.el().querySelector('.vjs-tech'),
                                            n = undefined,
                                            a = undefined,
                                            o = m['default'].createElement('div'),
                                            u = undefined,
                                            l = undefined,
                                            d = undefined,
                                            f = function () {
                                                t.ima3 && t.ima3.adsManager && t.ima3.adsManager.skip && t.ima3.adsManager.skip(),
                                                    d(),
                                                    t.trigger('ad-hard-timeout'),
                                                    i['default'].log('ima3-hard-timeout')
                                            },
                                            p = undefined,
                                            v = undefined,
                                            g = function (e) {
                                                e.ads.ad = {
                                                },
                                                    e.ads.pod = {
                                                    }
                                            };
                                        this.ima3.adTech = 'html5',
                                            o.className = 'vjs-ima3-ad-container',
                                            this.ima3.insertAdContainer(o);
                                        var y = function (r) {
                                            if (!t.ima3.isReady_) return i['default'].log.error('Cannot make an ad request when the plugin is not ready. Skipping ad...'),
                                                void t.ads.endLinearAdMode();
                                            t.ads.startLinearAdMode(),
                                                d(),
                                                u(e, r),
                                                t.addClass('ima3-ad-loading')
                                        };
                                        i['default'].ima3.Html5.adrequest = function () {
                                            return i['default'].log.warn('videojs.ima3.Html5.adrequest is deprecated. Use player.ima3.adrequest instead.'),
                                                y.apply(this, arguments)
                                        },
                                            this.ima3.adrequest = this.ima3.makeAdRequestFunction(y),
                                            this.on('ima3-content-pause-requested', function (e) {
                                                t.ads.startLinearAdMode(),
                                                    t.addClass('ima3-ad-loading'),
                                                    t.trigger('ads-pod-started'),
                                                    'application/javascript' === e.originalEvent.getAd().getContentType() && t.addClass('vjs-vpaid-playing')
                                            }),
                                            this.on('ima3-content-resume-requested', function (e) {
                                                t.ads.endLinearAdMode(),
                                                    t.removeClass('ima3-ad-loading'),
                                                    t.removeClass('vjs-vpaid-playing'),
                                                    t.trigger('ads-pod-ended')
                                            }),
                                            this.on('fullscreenchange', function (e) {
                                                if (i['default'].IS_ANY_SAFARI) for (var r = t.textTracks(), n = 0; n < r.length; n++) 'metadata' === r[n].kind && 'disabled' === r[n].mode && (r[n].mode = 'hidden');
                                                var a = t.hasClass('vjs-fullscreen'),
                                                    s = 3,
                                                    o = undefined;
                                                if (t.ima3 && t.ima3.adsManager) {
                                                    o = a ? p.ViewMode.FULLSCREEN : p.ViewMode.NORMAL;
                                                    var u = _(t);
                                                    o === p.ViewMode.FULLSCREEN ? t.ima3.adsManager.resize(t.el().offsetWidth, t.el().offsetHeight, o) : t.ima3.adsManager.resize(u.width, u.height, o),
                                                        setTimeout(function e(r, n) {
                                                            var i = _(t);
                                                            return function () {
                                                                o === p.ViewMode.FULLSCREEN ? t.ima3.adsManager.resize(t.el().offsetWidth, t.el().offsetHeight, o) : t.ima3.adsManager.resize(i.width, i.height, o),
                                                                    i.width === r && i.height === n || s-- && setTimeout(e(i.width, i.height), 1000)
                                                            }
                                                        }(u.width, u.height), 1000)
                                                }
                                            }),
                                            this.on('ima3-started', function () {
                                                t.removeClass('ima3-ad-loading'),
                                                    i['default'].log('ima3-started');
                                                var e = t.$('.vjs-ad-control-bar .vjs-play-progress');
                                                e.className = e.className.replace(' vjs-play-progress-resetting', '')
                                            });
                                        var S = function (e) {
                                            var t = p.AdError.ErrorCode;
                                            for (var r in t) if (t.hasOwnProperty(r) && !r.match('COMPANION|NONLINEAR|OVERLAY') && e.getErrorCode() === t[r] && 'adLoadError' === e.getType()) return !0;
                                            return !1
                                        };
                                        this.on('ima3-ad-error', function (e) {
                                            var r = {
                                            },
                                                n = undefined;
                                            e.originalEvent && (r = e.originalEvent.getError(), n = r.getErrorCode(), i['default'].log('ima3-ad-error', e.originalEvent.getError().toString(), e), (S(r) && 'onload' === t.ima3.settings.requestMode || 'onplay' === t.ima3.settings.requestMode) && t.trigger('nopostroll')),
                                                t.removeClass('ima3-ad-loading'),
                                                t.trigger({
                                                    type: 'adserror',
                                                    errorCode: n
                                                })
                                        });
                                        var k = function () {
                                            var e = t.ima3.adsManager && 0 === t.ima3.adsManager.getCuePoints().length,
                                                r = t.ima3.adsManager && t.ima3.adsManager.getCuePoints().indexOf(0) >= 0;
                                            e ? (d(), t.trigger('ad-hard-timeout'), i['default'].log('ima3-hard-timeout')) : r && (t.ima3.adsManager.discardAdBreak(), t.trigger('ad-hard-timeout'), i['default'].log('ima3-hard-timeout'))
                                        };
                                        e.hardTimeouts && this.on('adtimeout', function () {
                                            t.ima3.adsManager ? k() : (t.one('ima3-ads-manager-loaded', k), t.one(['adstart',
                                                'contentupdate',
                                                'dispose'], function (e) {
                                                    t.off('ima3-ads-manager-loaded', k)
                                                }))
                                        }),
                                            this.on('ima3-loaded', function (e) {
                                                var r = e.originalEvent.getAd();
                                                t.ima3.currentAd = r,
                                                    t.trigger('ads-loading'),
                                                    t.removeClass('ima3-ad-loading'),
                                                    r && !r.isLinear() && (t.addClass('vjs-ima3-overlay'), t.trigger('adstart'), t.trigger('adend'))
                                            }),
                                            this.on('ima3-complete', function (e) {
                                                var r = e.originalEvent.getAd();
                                                i['default'].log('ima3-complete'),
                                                    delete t.ima3.currentAd,
                                                    r && (r.isLinear() ? t.addClass('ima3-ad-loading') : t.removeClass('vjs-ima3-overlay'));
                                                var n = t.$('.vjs-ad-control-bar .vjs-play-progress');
                                                n.className += ' vjs-play-progress-resetting',
                                                    n.style.width = '0'
                                            }),
                                            this.on('resize', function () {
                                                if (t.ima3.adsManager) {
                                                    var e = _(t);
                                                    t.ima3.adsManager.resize(e.width, e.height, p.ViewMode.NORMAL)
                                                }
                                            }),
                                            this.on('readyforpreroll', function () {
                                                'ondemand' !== e.requestMode && 'oncue' !== e.requestMode && l()
                                            }),
                                            this.on('adserror', function () {
                                                d()
                                            }),
                                            this.on('adscanceled', function () {
                                                d()
                                            });
                                        var w = function (e) {
                                            t.ima3.adsManager.discardAdBreak(),
                                                t.ima3.adsManager.skip(),
                                                t.ima3.managerCleanup = null,
                                                'ad-playback' === t.ads.state && t.ads.endLinearAdMode()
                                        };
                                        this.on('ima3-ads-manager-loaded', function (e) {
                                            t.ima3.managerCleanup && d();
                                            var r = {
                                            };
                                            r.currentTime = t.currentTime(),
                                                r.duration = t.duration(),
                                                t.on('timeupdate', function () {
                                                    r.currentTime = t.currentTime()
                                                });
                                            var n = e.originalEvent.getAdsManager(r, t.ima3.adsRenderingSettings_);
                                            t.ima3.adsManager = n,
                                                t.trigger('ads-response-received');
                                            var a = t.ima3.settings,
                                                s = t.ima3.adsManager.getCuePoints(),
                                                o = s && s.length > 0;
                                            if (a.useMediaCuePoints && 'oncue' === a.requestMode && o) return w(),
                                                void i['default'].log.error('Cancelling VMAP ad because useMediaCuePoints must be used with VAST');
                                            t.ima3.managerCleanup = b(n, v, t),
                                                'ad-playback' === t.ads.state ? l() : t.trigger('adsready'),
                                                'oncue' !== a.requestMode && (n.getCuePoints().length && n.getCuePoints().indexOf(0) < 0 && t.trigger('nopreroll'), n.getCuePoints().indexOf(- 1) < 0 && t.trigger('nopostroll'))
                                        });
                                        var C = function (e, r) {
                                            if (!p || p && !p.AdsRequest) throw new Error('An ad request was made before the plugin is ready');
                                            var n = _(t);
                                            return !t.ima3.lastSrc_ || t.ima3.lastSrc_ !== t.currentSrc() || 'onload' !== e.requestMode && 'onplay' !== e.requestMode ? (t.ima3.lastSrc_ = t.currentSrc(), t.ima3.adsRequest = h(new p.AdsRequest, {
                                                adTagUrl: t.ima3.adMacroReplacement(r || t.ima3.settings.serverUrl),
                                                linearAdSlotWidth: n.width,
                                                linearAdSlotHeight: n.height,
                                                nonLinearAdSlotWidth: n.width,
                                                nonLinearAdSlotHeight: n.height
                                            }), t.ima3.adsRequest.adTagUrl ? void (0, c['default'])(t).then(function () {
                                                t.ima3.adsRequest.setAdWillPlayMuted(t.muted()),
                                                    t.ima3.adsRequest.setAdWillAutoPlay(t.autoplay()),
                                                    t.ima3.adsLoader.requestAds(t.ima3.adsRequest),
                                                    t.trigger('ads-request')
                                            }) : void t.trigger('adscanceled')) : void i['default'].log('Cancelling repeat adsRequest for ' + t.currentSrc())
                                        };
                                        u = function (e, r) {
                                            'onplay' === e.requestMode && t.paused() ? t.one('play', function () {
                                                C(e, r)
                                            }) : C(e, r)
                                        };
                                        var E = function () {
                                            t.ima3.adDisplayContainer && !t.ima3.adDisplayContainer.initialized && (t.ima3.adDisplayContainer.initialize(), t.ima3.adDisplayContainer.initialized = !0)
                                        };
                                        l = function () {
                                            var e = _(t);
                                            try {
                                                t.muted() ? t.ima3.adsManager.setVolume(0) : t.ima3.adsManager.setVolume(0.01),
                                                    E(),
                                                    t.trigger('ads-load'),
                                                    t.ima3.adsManager.init(e.width, e.height, p.ViewMode.NORMAL),
                                                    t.ima3.adsManager.start()
                                            } catch (e) {
                                                t.trigger('adserror')
                                            }
                                        },
                                            d = function () {
                                                t.ima3.adsManager && (t.ima3.adsManager.destroy(), t.ima3.adsManager = null),
                                                    t.ima3.managerCleanup && (t.ima3.managerCleanup(), t.ima3.managerCleanup = null)
                                            };
                                        var I = function () {
                                            var l = i['default'].getComponent('ControlBar');
                                            if (p = s['default'].google.ima, v = A(p), e.ima3SdkSettings) for (var c in e.ima3SdkSettings) {
                                                var d = 'set' + c.charAt(0).toUpperCase() + c.slice(1);
                                                'function' == typeof p.settings[d] ? p.settings[d](e.ima3SdkSettings[c]) : i['default'].log.warn('Invalid ima3SdkSetting: "' + c + '"')
                                            }
                                            a = i['default'].ima3.Html5.adPlayer(o, {
                                                contentPlayer: t
                                            }),
                                                n = new l(a, e.adControlBar),
                                                n.addClass('vjs-ad-control-bar'),
                                                t.addClass('vjs-ad-controls'),
                                                t.addChild(n),
                                                t.ima3.adControlBar = n,
                                                t.ima3.adPlayer = a;
                                            var h = i['default'].browser.IS_IOS,
                                                m = i['default'].browser.IS_ANDROID;
                                            if (!h && !m || t.tech_.featuresVolumeControl || t.muted() || n.volumeMenuButton && n.volumeMenuButton.addClass('vjs-hidden'), e.vpaidMode) {
                                                if ('number' != typeof p.ImaSdkSettings.VpaidMode[e.vpaidMode]) throw new Error('Invalid VPAID Mode: "' + e.vpaidMode + '"');
                                                p.settings.setVpaidMode(p.ImaSdkSettings.VpaidMode[e.vpaidMode])
                                            }
                                            t.ima3.adDisplayContainer = new p.AdDisplayContainer(o, r, e.clickTrackingElement),
                                                t.ima3.adDisplayContainer.initialized = !1;
                                            var y = 'click';
                                            (h || m) && (y = 'touchend'),
                                                t.one(y, function () {
                                                    E()
                                                }),
                                                t.ima3.adsLoader = new p.AdsLoader(t.ima3.adDisplayContainer);
                                            var _ = t.ima3.adsLoader.getSettings();
                                            _.setPlayerVersion(t.ima3.version),
                                                _.setPlayerType('brightcove/player-html5'),
                                                t.ima3.loaderCleanup = b(t.ima3.adsLoader, v, t);
                                            var T = t.currentSrc();
                                            t.mediainfo && 'FREE' === t.mediainfo.economics ? (t.trigger('adscanceled'), t.trigger('nopreroll'), t.trigger('nopostroll')) : T && '' !== T && 'ondemand' !== e.requestMode && 'oncue' !== e.requestMode && u(e),
                                                t.on('contentupdate', function () {
                                                    if (T = t.currentSrc(), t.mediainfo && 'FREE' === t.mediainfo.economics) return t.trigger('adscanceled'),
                                                        t.trigger('nopreroll'),
                                                        void t.trigger('nopostroll');
                                                    T && '' !== T && 'ondemand' !== e.requestMode && 'oncue' !== e.requestMode && u(e)
                                                }),
                                                t.on('contentended', function () {
                                                    'postroll?' === t.ads.state && (t.one('adtimeout', f), t.ima3.adsLoader.contentComplete())
                                                }),
                                                t.on(['contentupdate',
                                                    'dispose'], function () {
                                                        t.off('adtimeout', f)
                                                    }),
                                                t.on(['contentupdate',
                                                    'adend',
                                                    'ima3-ready'], function () {
                                                        g(t)
                                                    }),
                                                t.ima3.el = o
                                        };
                                        s['default'].google && s['default'].google.ima ? (I(), this.trigger('ima3-ready')) : T(e.sdkurl, function (e) {
                                            I(),
                                                e ? t.trigger({
                                                    type: 'adserror',
                                                    info: e
                                                }) : t.trigger('ima3-ready')
                                        })
                                    };
                                d.eventTypes = A,
                                    i['default'].ima3.Html5.adPlayer = function (e, t) {
                                        var r = t.contentPlayer,
                                            n = new i['default'].ima3.AdPlayer(t),
                                            a = !0;
                                        return n.currentTime = function () {
                                            var e = n.duration();
                                            if (!e || !r.ima3.adsManager) return 0;
                                            var t = r.ima3.adsManager.getRemainingTime();
                                            return t <= 0 ? 0 : t > e ? 0 : t > 0 ? e - t : void 0
                                        },
                                            n.duration = function () {
                                                var e = r.ima3.currentAd;
                                                if (e) {
                                                    var t = e.getDuration();
                                                    return t > 0 ? t : 0
                                                }
                                                return 0
                                            },
                                            n.pause = function () {
                                                a = !0,
                                                    r.ima3.adsManager.pause()
                                            },
                                            n.paused = function () {
                                                return a
                                            },
                                            n.play = function () {
                                                a = !1,
                                                    r.ima3.adsManager.resume(),
                                                    n.trigger('play')
                                            },
                                            n.isFullscreen = function () {
                                                return r.isFullscreen()
                                            },
                                            n.requestFullscreen = function () {
                                                return r.requestFullscreen()
                                            },
                                            n.volume = function (e) {
                                                if (!r.ima3 || !r.ima3.adsManager) return void i['default'].log.error('Too early to set Volume. IMA3 is not loaded');
                                                var t = r.ima3.adsManager.getVolume();
                                                return e !== undefined && (r.ima3.adsManager.setVolume(e), r.ima3.volume = e || r.ima3.volume, n.trigger('volumechange')),
                                                    t || r.ima3.volume
                                            },
                                            n.muted = function (e) {
                                                var t = r.ima3.adsManager.getVolume();
                                                return e !== undefined ? 0 === n.volume(e ? 0 : r.ima3.volume) : 0 === t
                                            },
                                            r.on('ima3-started', function () {
                                                r.removeClass('vjs-ima3-paused'),
                                                    n.trigger('play'),
                                                    a = !1
                                            }),
                                            r.on('ima3-resumed', function () {
                                                r.removeClass('vjs-ima3-paused'),
                                                    n.trigger('play'),
                                                    a = !1
                                            }),
                                            r.on('ima3-paused', function () {
                                                r.addClass('vjs-ima3-paused'),
                                                    n.trigger('pause'),
                                                    a = !0
                                            }),
                                            function e() {
                                                r.ads.isAdPlaying() && !n.paused() && n.trigger('timeupdate'),
                                                    s['default'].setTimeout(e, 1000)
                                            }(),
                                            n
                                    }
                            }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                            })
                        },
                        {
                            './videojs.ima3-canautoplay.js': 1,
                            './videojs.ima3-cuepoints.js': 2,
                            'global/document': 5,
                            'global/window': 6,
                            'videojs-contrib-ads': 7
                        }
                    ]
                }, {
                }, [
                    8
                ])(8)
            })
        })(); (function () {
            if (videojs.getPlugin('qualityMenu')) {
                return
            }
            !function e(t, r, n) {
                function i(s, o) {
                    if (!r[s]) {
                        if (!t[s]) {
                            var u = 'function' == typeof require && require;
                            if (!o && u) return u(s, !0);
                            if (a) return a(s, !0);
                            var l = new Error('Cannot find module \'' + s + '\'');
                            throw l.code = 'MODULE_NOT_FOUND',
                            l
                        }
                        var c = r[s] = {
                            exports: {
                            }
                        };
                        t[s][0].call(c.exports, function (e) {
                            var r = t[s][1][e];
                            return i(r ? r : e)
                        }, c, c.exports, e, t, r, n)
                    }
                    return r[s].exports
                }
                for (var a = 'function' == typeof require && require, s = 0; s < n.length; s++) i(n[s]);
                return i
            }({
                1: [
                    function (e, t, r) {
                        (function (t) {
                            'use strict';
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            function i(e, t) {
                                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
                            }
                            function a(e, t) {
                                if (!e) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                return !t || 'object' != typeof t && 'function' != typeof t ? e : t
                            }
                            function s(e, t) {
                                if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function, not ' + typeof t);
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }),
                                    t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                            }
                            r.__esModule = !0;
                            var o = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof t ? t.videojs : null,
                                u = n(o),
                                l = e(2),
                                c = n(l),
                                d = u['default'].getComponent('MenuButton'),
                                f = function (e) {
                                    for (var t = 0, r = e.length; t < r; t++) if (!e[t].height) return !1;
                                    return !0
                                },
                                h = function (e) {
                                    return e >= 2160 ? '4K' : e >= 720 ? 'HD' : ''
                                },
                                p = function (e) {
                                    function t(r) {
                                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                                        };
                                        i(this, t);
                                        var s = a(this, e.call(this, r, n));
                                        return s.el_.setAttribute('aria-label', s.localize('Quality Levels')),
                                            s.controlText('Quality Levels'),
                                            s.qualityLevels_ = r.qualityLevels(),
                                            s.update = s.update.bind(s),
                                            s.handleQualityChange_ = s.handleQualityChange_.bind(s),
                                            s.changeHandler_ = function () {
                                                for (var e = s.options_.defaultResolution, t = 0; t < s.items.length; t++) s.items[t].options_.label.indexOf(e) !== - 1 && s.items[t].handleClick()
                                            },
                                            s.on(s.qualityLevels_, 'addqualitylevel', s.update),
                                            s.on(s.qualityLevels_, 'removequalitylevel', s.update),
                                            s.on(s.qualityLevels_, 'change', s.handleQualityChange_),
                                            s.one(s.qualityLevels_, 'change', s.changeHandler_),
                                            s.update(),
                                            s.on('dispose', function () {
                                                s.off(s.qualityLevels_, 'addqualitylevel', s.update),
                                                    s.off(s.qualityLevels_, 'removequalitylevel', s.update),
                                                    s.off(s.qualityLevels_, 'change', s.handleQualityChange_),
                                                    s.off(s.qualityLevels_, 'change', s.changeHandler_)
                                            }),
                                            s
                                    }
                                    return s(t, e),
                                        t.prototype.buildWrapperCSSClass = function () {
                                            return 'vjs-quality-menu-wrapper ' + e.prototype.buildWrapperCSSClass.call(this)
                                        },
                                        t.prototype.buildCSSClass = function () {
                                            return 'vjs-quality-menu-button ' + e.prototype.buildCSSClass.call(this)
                                        },
                                        t.prototype.createItems = function () {
                                            var e = this,
                                                t = [
                                                ];
                                            if (!this.qualityLevels_ || !this.qualityLevels_.length) return t;
                                            var r = void 0;
                                            if (this.options_.useResolutionLabels && f(this.qualityLevels_) ? (r = this.groupByResolution_(), this.addClass('vjs-quality-menu-button-use-resolution')) : (r = this.groupByBitrate_(), this.removeClass('vjs-quality-menu-button-use-resolution')), r.length <= 1) return [];
                                            r.forEach(function (r) {
                                                r.levels.length && (r.selectable = !0, t.push(new c['default'](e.player(), r)))
                                            });
                                            var n = new c['default'](this.player(), {
                                                levels: Array.prototype.map.call(this.qualityLevels_, function (e, t) {
                                                    return t
                                                }),
                                                label: 'Auto',
                                                controlText: 'Auto',
                                                active: !0,
                                                selected: !0,
                                                selectable: !0
                                            });
                                            return this.autoMenuItem_ = n,
                                                t.push(n),
                                                t
                                        },
                                        t.prototype.groupByResolution_ = function () {
                                            for (var e = {
                                            }, t = [
                                            ], r = 0, n = this.qualityLevels_.length; r < n; r++) {
                                                var i = this.qualityLevels_[r],
                                                    a = this.qualityLevels_.selectedIndex === r,
                                                    s = i.height,
                                                    o = void 0;
                                                if (this.options_.resolutionLabelBitrates) {
                                                    var u = Math.round(i.bitrate / 1000);
                                                    o = s + 'p @ ' + u + ' kbps'
                                                } else o = s + 'p';
                                                if (!e[o]) {
                                                    var l = h(s);
                                                    e[o] = {
                                                        levels: [
                                                        ],
                                                        label: o,
                                                        controlText: o,
                                                        subLabel: l
                                                    },
                                                        t.push({
                                                            label: o,
                                                            lines: s
                                                        })
                                                }
                                                a && (e[o].active = !0),
                                                    e[o].levels.push(r)
                                            }
                                            t.sort(function (e, t) {
                                                return t.lines - e.lines
                                            });
                                            var c = [
                                            ];
                                            return t.forEach(function (t) {
                                                c.push(e[t.label])
                                            }),
                                                c
                                        },
                                        t.prototype.groupByBitrate_ = function () {
                                            for (var e = [
                                                {
                                                    levels: [
                                                    ],
                                                    label: 'HD',
                                                    controlText: 'High Definition'
                                                },
                                                {
                                                    levels: [
                                                    ],
                                                    label: 'SD',
                                                    controlText: 'Standard Definition'
                                                }
                                            ], t = 0, r = this.qualityLevels_.length; t < r; t++) {
                                                var n = this.qualityLevels_[t],
                                                    i = this.qualityLevels_.selectedIndex === t,
                                                    a = void 0;
                                                a = n.bitrate < this.options_.sdBitrateLimit ? e[1] : e[0],
                                                    i && (a.active = !0),
                                                    a.levels.push(t)
                                            }
                                            return e[0].levels.length && e[1].levels.length ? e : [
                                            ]
                                        },
                                        t.prototype.handleQualityChange_ = function () {
                                            var e = this.qualityLevels_[this.qualityLevels_.selectedIndex],
                                                t = this.options_.useResolutionLabels && f(this.qualityLevels_),
                                                r = '';
                                            e && (t ? r = h(e.height) : e.bitrate >= this.options_.sdBitrateLimit && (r = 'HD')),
                                                'HD' === r ? (this.addClass('vjs-quality-menu-button-HD-flag'), this.removeClass('vjs-quality-menu-button-4K-flag')) : '4K' === r ? (this.removeClass('vjs-quality-menu-button-HD-flag'), this.addClass('vjs-quality-menu-button-4K-flag')) : (this.removeClass('vjs-quality-menu-button-HD-flag'), this.removeClass('vjs-quality-menu-button-4K-flag')),
                                                this.autoMenuItem_ && (this.autoMenuItem_.manuallySelected_ && e ? this.autoMenuItem_.subLabel_.innerHTML = this.localize(r) : this.autoMenuItem_.subLabel_.innerHTML = '')
                                        },
                                        t
                                }(d);
                            u['default'].registerComponent('QualityMenuButton', p),
                                r['default'] = p
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                2: [
                    function (e, t, r) {
                        (function (e) {
                            'use strict';
                            function t(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            function n(e, t) {
                                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
                            }
                            function i(e, t) {
                                if (!e) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                return !t || 'object' != typeof t && 'function' != typeof t ? e : t
                            }
                            function a(e, t) {
                                if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function, not ' + typeof t);
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }),
                                    t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                            }
                            r.__esModule = !0;
                            var s = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof e ? e.videojs : null,
                                o = t(s),
                                u = o['default'].getComponent('MenuItem'),
                                l = o['default'].dom || o['default'],
                                c = function (e) {
                                    function t(r) {
                                        var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                                        };
                                        n(this, t);
                                        var s = a.selected;
                                        a.selected = a.active;
                                        var o = i(this, e.call(this, r, a)),
                                            u = r.qualityLevels();
                                        return o.levels_ = a.levels,
                                            o.selected_ = s,
                                            o.handleQualityChange = o.handleQualityChange.bind(o),
                                            o.controlText(a.controlText),
                                            o.on(u, 'change', o.handleQualityChange),
                                            o.on('dispose', function () {
                                                o.off(u, 'change', o.handleQualityChange)
                                            }),
                                            o
                                    }
                                    return a(t, e),
                                        t.prototype.createEl = function (t, r, n) {
                                            var i = e.prototype.createEl.call(this, t, r, n),
                                                a = l.createEl('span', {
                                                    className: 'vjs-quality-menu-item-sub-label',
                                                    innerHTML: this.localize(this.options_.subLabel || '')
                                                });
                                            return this.subLabel_ = a,
                                                i && i.appendChild(a),
                                                i
                                        },
                                        t.prototype.handleClick = function () {
                                            this.updateSiblings_();
                                            for (var e = this.player().qualityLevels(), t = e.selectedIndex, r = 0, n = e.length; r < n; r++) r !== t && (e[r].enabled = !1);
                                            for (var i = 0, a = this.levels_.length; i < a; i++) e[this.levels_[i]].enabled = !0;
                                            t !== - 1 && this.levels_.indexOf(t) === - 1 && (e[t].enabled = !1)
                                        },
                                        t.prototype.handleQualityChange = function () {
                                            var e = this.player().qualityLevels(),
                                                t = this.levels_.indexOf(e.selectedIndex) > - 1;
                                            this.selected(t)
                                        },
                                        t.prototype.selected = function (e) {
                                            if (this.selectable) if (this.selected_) {
                                                this.addClass('vjs-selected'),
                                                    this.el_.setAttribute('aria-checked', 'true'),
                                                    this.controlText(this.localize(this.options_.controlText) + this.localize(', selected'));
                                                var t = this.player().controlBar,
                                                    r = t.getChild('QualityMenuButton');
                                                e ? r.removeClass('vjs-quality-menu-button-waiting') : r.addClass('vjs-quality-menu-button-waiting')
                                            } else this.removeClass('vjs-selected'),
                                                this.el_.setAttribute('aria-checked', 'false'),
                                                this.controlText(this.options_.controlText)
                                        },
                                        t.prototype.updateSiblings_ = function () {
                                            for (var e = this.player().qualityLevels(), t = this.player().controlBar, r = t.getChild('QualityMenuButton').items, n = 0, i = r.length; n < i; n++) {
                                                var a = r[n],
                                                    s = a.levels_.indexOf(e.selectedIndex) > - 1;
                                                a.selected_ = a === this,
                                                    a.selected(s)
                                            }
                                        },
                                        t
                                }(u);
                            r['default'] = c
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                3: [
                    function (e, t, r) {
                    },
                    {
                    }
                ],
                4: [
                    function (e, t, r) {
                        (function (r) {
                            var n = 'undefined' != typeof r ? r : 'undefined' != typeof window ? window : {
                            },
                                i = e(3);
                            if ('undefined' != typeof document) t.exports = document;
                            else {
                                var a = n['__GLOBAL_DOCUMENT_CACHE@4'];
                                a || (a = n['__GLOBAL_DOCUMENT_CACHE@4'] = i),
                                    t.exports = a
                            }
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                5: [
                    function (e, t, r) {
                        (function (t) {
                            'use strict';
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            r.__esModule = !0;
                            var i = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof t ? t.videojs : null,
                                a = n(i),
                                s = e(6),
                                o = n(s),
                                u = a['default'].registerPlugin || a['default'].plugin,
                                l = function (e, t) {
                                    var r = e.qualityLevels,
                                        n = new o['default'],
                                        i = function t() {
                                            n.dispose(),
                                                e.qualityLevels = r,
                                                e.off('dispose', t)
                                        };
                                    return e.on('dispose', i),
                                        e.qualityLevels = function () {
                                            return n
                                        },
                                        e.qualityLevels.VERSION = '2.0.3',
                                        n
                                },
                                c = function (e) {
                                    return l(this, a['default'].mergeOptions({
                                    }, e))
                                };
                            u('qualityLevels', c),
                                c.VERSION = '2.0.3',
                                r['default'] = c
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                6: [
                    function (e, t, r) {
                        (function (t) {
                            'use strict';
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            function i(e, t) {
                                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
                            }
                            function a(e, t) {
                                if (!e) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');
                                return !t || 'object' != typeof t && 'function' != typeof t ? e : t
                            }
                            function s(e, t) {
                                if ('function' != typeof t && null !== t) throw new TypeError('Super expression must either be null or a function, not ' + typeof t);
                                e.prototype = Object.create(t && t.prototype, {
                                    constructor: {
                                        value: e,
                                        enumerable: !1,
                                        writable: !0,
                                        configurable: !0
                                    }
                                }),
                                    t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t)
                            }
                            r.__esModule = !0;
                            var o = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof t ? t.videojs : null,
                                u = n(o),
                                l = e(4),
                                c = n(l),
                                d = e(7),
                                f = n(d),
                                h = function (e) {
                                    function t() {
                                        var r;
                                        i(this, t);
                                        var n = a(this, e.call(this)),
                                            s = n;
                                        if (u['default'].browser.IS_IE8) {
                                            s = c['default'].createElement('custom');
                                            for (var o in t.prototype) 'constructor' !== o && (s[o] = t.prototype[o])
                                        }
                                        return s.levels_ = [
                                        ],
                                            s.selectedIndex_ = - 1,
                                            Object.defineProperty(s, 'selectedIndex', {
                                                get: function () {
                                                    return s.selectedIndex_
                                                }
                                            }),
                                            Object.defineProperty(s, 'length', {
                                                get: function () {
                                                    return s.levels_.length
                                                }
                                            }),
                                            r = s,
                                            a(n, r)
                                    }
                                    return s(t, e),
                                        t.prototype.addQualityLevel = function (e) {
                                            var t = this.getQualityLevelById(e.id);
                                            if (t) return t;
                                            var r = this.levels_.length;
                                            return t = new f['default'](e),
                                                '' + r in this || Object.defineProperty(this, r, {
                                                    get: function () {
                                                        return this.levels_[r]
                                                    }
                                                }),
                                                this.levels_.push(t),
                                                this.trigger({
                                                    qualityLevel: t,
                                                    type: 'addqualitylevel'
                                                }),
                                                t
                                        },
                                        t.prototype.removeQualityLevel = function (e) {
                                            for (var t = null, r = 0, n = this.length; r < n; r++) if (this[r] === e) {
                                                t = this.levels_.splice(r, 1)[0],
                                                    this.selectedIndex_ === r ? this.selectedIndex_ = - 1 : this.selectedIndex_ > r && this.selectedIndex_--;
                                                break
                                            }
                                            return t && this.trigger({
                                                qualityLevel: e,
                                                type: 'removequalitylevel'
                                            }),
                                                t
                                        },
                                        t.prototype.getQualityLevelById = function (e) {
                                            for (var t = 0, r = this.length; t < r; t++) {
                                                var n = this[t];
                                                if (n.id === e) return n
                                            }
                                            return null
                                        },
                                        t.prototype.dispose = function () {
                                            this.selectedIndex_ = - 1,
                                                this.levels_.length = 0
                                        },
                                        t
                                }(u['default'].EventTarget);
                            h.prototype.allowedEvents_ = {
                                change: 'change',
                                addqualitylevel: 'addqualitylevel',
                                removequalitylevel: 'removequalitylevel'
                            };
                            for (var p in h.prototype.allowedEvents_) h.prototype['on' + p] = null;
                            r['default'] = h
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                7: [
                    function (e, t, r) {
                        (function (t) {
                            'use strict';
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            function i(e, t) {
                                if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function')
                            }
                            r.__esModule = !0;
                            var a = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof t ? t.videojs : null,
                                s = n(a),
                                o = e(4),
                                u = n(o),
                                l = function e(t) {
                                    i(this, e);
                                    var r = this;
                                    if (s['default'].browser.IS_IE8) {
                                        r = u['default'].createElement('custom');
                                        for (var n in e.prototype) 'constructor' !== n && (r[n] = e.prototype[n])
                                    }
                                    return r.id = t.id,
                                        r.label = r.id,
                                        r.width = t.width,
                                        r.height = t.height,
                                        r.bitrate = t.bandwidth,
                                        r.enabled_ = t.enabled,
                                        Object.defineProperty(r, 'enabled', {
                                            get: function () {
                                                return r.enabled_()
                                            },
                                            set: function (e) {
                                                r.enabled_(e)
                                            }
                                        }),
                                        r
                                };
                            r['default'] = l
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ],
                8: [
                    function (e, t, r) {
                        (function (t) {
                            'use strict';
                            function n(e) {
                                return e && e.__esModule ? e : {
                                    default:
                                        e
                                }
                            }
                            r.__esModule = !0;
                            var i = 'undefined' != typeof window ? window.videojs : 'undefined' != typeof t ? t.videojs : null,
                                a = n(i);
                            e(5),
                                e(1);
                            var s = a['default'].registerPlugin || a['default'].plugin,
                                o = {
                                    sdBitrateLimit: 2000000,
                                    useResolutionLabels: !0,
                                    resolutionLabelBitrates: !1,
                                    defaultResolution: 'none'
                                },
                                u = function (e, t) {
                                    e.addClass('vjs-quality-menu');
                                    var r = e.getChild('controlBar'),
                                        n = r.addChild('QualityMenuButton', t, r.children_.length - 2);
                                    return function () {
                                        e.removeClass('vjs-quality-menu'),
                                            r.removeChild(n),
                                            n.dispose()
                                    }
                                },
                                l = function (e, t) {
                                    if ('undefined' != typeof e.qualityLevels) {
                                        e.qualityLevels();
                                        var r = function () {
                                        };
                                        e.ready(function () {
                                            r = u(e, t),
                                                e.on('loadstart', function () {
                                                    r(),
                                                        r = u(e, t)
                                                })
                                        }),
                                            e.qualityMenu = function () {
                                            },
                                            e.qualityMenu.VERSION = '1.2.2'
                                    }
                                },
                                c = function (e) {
                                    l(this, a['default'].mergeOptions(o, e))
                                };
                            s('qualityMenu', c),
                                c.VERSION = '1.2.2',
                                r['default'] = c
                        }).call(this, 'undefined' != typeof global ? global : 'undefined' != typeof self ? self : 'undefined' != typeof window ? window : {
                        })
                    },
                    {
                    }
                ]
            }, {
            }, [
                8
            ])
        })(); (function () {
            if (videojs.getPlugin('cuAdControl')) {
                return
            }
            videojs.registerPlugin('cuAdControl', function (e) {
                var t = this;
                __bcplayer = t;
                var r = t.id();
                var n,
                    i;
                var a = {
                    debug: false
                };
                if (e.debug != undefined && e.debug == true) {
                    a.debug = true
                }
                Ze();
                var s = e.imgDir;
                if (s != undefined) {
                    et('imgDir = ' + s);
                    var o = s + 'resumeTitle.png';
                    var u = s + 'playStart.png';
                    var l = s + 'playStart_h.png';
                    var c = s + 'resumeStart.png';
                    var d = s + 'resumeStart_h.png'
                }
                var f = '';
                var h = '';
                var p = 0;
                var v = '';
                var m = 0;
                var g = '';
                var y = '';
                var _ = '';
                var b = 0;
                var T = 0;
                var A = '';
                var S = '';
                var k = '';
                var w = '';
                var C = '';
                var E = '';
                var I = '';
                var P = 0;
                var O = false;
                var x = [
                ];
                var L = {
                };
                var D = true;
                var R = false;
                var M = false;
                var j = 0;
                var U;
                var N = null;
                var B = false;
                var q = 0;
                var F = false;
                var V = '';
                var H = '';
                var z = '';
                var G = '';
                var W = '';
                var Y = '';
                var X = 'inline';
                __bcplayer_vr_sceneshare = false;
                var K = e.vmapUrl;
                var Q,
                    J = 0;
                var Z = false;
                if (e.autoPlay != undefined && e.autoPlay == true) {
                    Z = true
                }
                var ee = false;
                if (e.resumeDialog != undefined && e.resumeDialog == true && s != undefined) {
                    ee = true
                }
                et('[Player Setting] AutoPlay: ' + Z + ', resumeDialog: ' + ee + ', vmapUrl: ' + K);
                var te = window.location.href;
                et('Page URL = ' + te);
                var re = {
                };
                var ne = location.search.substring(1).split('&');
                for (var ie = 0; ne[ie]; ie++) {
                    var ae = ne[ie].split('=');
                    re[ae[0]] = ae[1]
                }
                var se = 0;
                for (var oe in re) {
                    if (oe === 'pht') {
                        if (!tt(re[oe]) && !isNaN(re[oe])) {
                            se = parseInt(re[oe]);
                            et('pht param is found in Page URL, pht = ' + se)
                        }
                    }
                }
                var ue = navigator.userAgent;
                var le = '';
                var ce = false;
                var de = '';
                if (ue.search(/iPhone/) != - 1 || ue.search(/iPad/) != - 1 || ue.search(/iPod/) != - 1) {
                    le = 'ios';
                    if (a.debug) {
                        de = '9005'
                    } else {
                        de = '0005'
                    }
                } else if (ue.search(/Android/) != - 1) {
                    le = 'android';
                    if (a.debug) {
                        de = '9006'
                    } else {
                        de = '0006'
                    }
                } else {
                    le = 'desktop';
                    if (a.debug) {
                        de = '9001'
                    } else {
                        de = '0001'
                    }
                    if (ue.match(/MSIE/)) ce = true
                }
                et('DeviceType = ' + le + ', vr_tagid = ' + de);
                var fe,
                    he,
                    pe;
                if (ue.toLowerCase().indexOf('safari') !== - 1 && ue.toLowerCase().indexOf('chrome') === - 1) {
                    try {
                        fe = ue.indexOf('Version');
                        he = ue.indexOf('.', fe);
                        pe = ue.substring(fe + 8, he);
                        et('This browser is Safari [Ver:' + pe + ']');
                        if (parseInt(pe) >= 11) {
                            et('Autoplay is disable because this browser is Safari11 later.');
                            Z = false
                        }
                    } catch (e) {
                    }
                }
                __bcplayer_vr_flag = true;
                function ve(e) {
                    _overlayContent = '<span id="adClickBlock" style="position:absolute;width:100%;height:100%;display:block;" ></span>';
                    n = document.createElement('div');
                    n.className = 'ad-block-overlay';
                    n.innerHTML = _overlayContent;
                    var r = t.el().getElementsByClassName('vjs-ad-control-bar')[0];
                    t.el().insertBefore(n, r);
                    $('.dropdownShare').css('display', 'none');
                    $('.aroundIconRating').css('display', 'none');
                    $('.Combined-Shape').css('display', 'none');
                    if ($('.share-control:visible').length == 0) {
                        $('.Around-shape').css('display', 'none')
                    }
                }
                function me(e) {
                    $('.dropdownShare').css({
                        opacity: '0',
                        position: 'absolute'
                    });
                    $('.aroundIconRating').css({
                        opacity: '0',
                        top: '-200px'
                    });
                    $('.Combined-Shape').css({
                        opacity: '0',
                        top: '-200px'
                    })
                }
                function ge(e) {
                    if (t.el().getElementsByClassName('ad-block-overlay').length > 0) {
                        t.el().removeChild(t.el().getElementsByClassName('ad-block-overlay')[0]);
                        $('.dropdownShare').css('display', 'block');
                        $('.aroundIconRating').css('display', 'block');
                        $('.Combined-Shape').css('display', 'block');
                        if ($('.share-control:visible').length == 0) {
                            $('.Around-shape').css('display', 'none')
                        }
                    }
                }
                function ye(e) {
                    $('.dropdownShare').css({
                        opacity: '1',
                        position: 'unset'
                    });
                    $('.aroundIconRating').css({
                        opacity: '1',
                        top: 'auto'
                    });
                    $('.Combined-Shape').css({
                        opacity: '1',
                        top: '60px'
                    })
                }
                function _e() {
                    var e = '<div id="overlayContent" >' + '<span id="stillImage" style="position:absolute;width:100%;height:100%;' + 'display:block;background-color: #000;" >' + '</span>' + '</div>';
                    i = document.createElement('div');
                    i.className = 'vjs-adblack-overlay';
                    i.innerHTML = e;
                    var r = t.el().getElementsByClassName('vjs-ima3-ad-container')[0];
                    if (t.el().getElementsByClassName('vjs-adblack-overlay').length <= 0) {
                        t.el().insertBefore(i, r)
                    }
                }
                function be() {
                    if (t.el().getElementsByClassName('vjs-adblack-overlay').length > 0) {
                        t.el().removeChild(t.el().getElementsByClassName('vjs-adblack-overlay')[0])
                    }
                }
                function Te(e) {
                    console.log('Dnqdat Play');
                    t.one('timeupdate', function () {
                        if (!D && q > 0) return;
                        if (x[0] != undefined) {
                            et(x[0].name + ' is requested');
                            H = x[0].name;
                            Q = x[0];
                            J = 0;
                            Ne(Q, J)
                        }
                    });
                    $('.vjs-big-play-button').css('display', 'none');
                    $('.dropdownShare').css('display', 'block');
                    $('.aroundIconRating').css('display', 'block');
                    $('.Combined-Shape').css('display', 'block')
                }
                function Ae(e) {
                    console.log('Dnqdat Playing');
                    et('[media begin] VideoId: ' + f);
                    $('.dropdownShare').css('display', 'block');
                    $('.aroundIconRating').css('display', 'block');
                    $('.Combined-Shape').css('display', 'block');
                    b = Be();
                    T = qe(b);
                    window.onbeforeunload = function () {
                        b = Be();
                        T = qe(b);
                        Fe('leave_watch')
                    };
                    if (q > 0 && q <= p) {
                        F = true;
                        t.currentTime(q);
                        b = parseInt(q + 2);
                        T = qe(b);
                        et('playHeadTime is moved to ' + q + ' sec')
                    }
                    Fe('start_watch')
                }
                function Se(e) {
                    if (!O) {
                        if (t.currentTime() != m) {
                            P = m;
                            m = t.currentTime();
                            var r = null;
                            for (var n in x) {
                                if (P < n && n < m && !F) {
                                    if (x[n].name.toLowerCase().indexOf('midroll') != - 1 && !x[n].played) {
                                        r = n
                                    }
                                }
                            }
                            F = false;
                            if (!__bcplayer_vr_flag && q > 0) {
                                if (t.currentTime() > q) {
                                    __bcplayer_vr_flag = true;
                                    et('__bcplayer_vr_flag is set to ' + __bcplayer_vr_flag)
                                }
                            }
                            if (r != null) {
                                et('Midroll Cue at ' + r + ' is found, ' + x[r].name + ' is requested');
                                H = x[r].name;
                                J = 0;
                                Q = x[r];
                                Ne(Q, J);
                                x[r].played = true
                            }
                        }
                    }
                }
                function ke(e) {
                    if (!M && j != 0 && x[j] != undefined && x[j].name.toLowerCase() == 'postroll') {
                        et(x[j].name + ' is requested');
                        H = x[j].name;
                        J = 0;
                        Q = x[j];
                        Ne(Q, J)
                    }
                    if (!M) M = true;
                    b = p;
                    T = 100;
                    Fe('complete_watch')
                }
                function we(e) {
                    O = true
                }
                function Ce(e) {
                    O = false;
                    var r = t.currentTime();
                    var n = Math.round(r);
                    var i = Math.floor(P);
                    et('seeked to ' + r + ' from ' + P);
                    if ((n != 0 || Math.abs(p - P) >= 1) && Math.abs(r - P) >= 1 && F != true) {
                        He('change_player_location', i, n)
                    }
                    t.one('seeking', we)
                }
                function Ee(e) {
                    et('Ad is started');
                    $('.dropdownShare').css('display', 'none');
                    $('.aroundIconRating').css('display', 'none');
                    $('.Combined-Shape').css('display', 'none');
                    if (le != 'desktop') {
                        $('.vjs-control-bar.vjs-ad-control-bar').css('display', 'none')
                    } else {
                        if (!t.paused()) t.pause()
                    }
                    var r = t.ima3.currentAd.getTitle();
                    et('adTitle : ' + r);
                    if (r.match(/non-clickable/)) {
                        ve();
                        et('Ad is Non-Clickable, adTitle = ' + r)
                    } else if (r.match(/clickable/)) {
                        me();
                        et('Ad is Clickable, adTitle = ' + r)
                    } else if (r.match(/survey/)) {
                        me();
                        et('Ad is survey, adTitle = ' + r)
                    } else {
                        ve()
                    }
                    if (t.muted()) {
                        t.ima3.adPlayer.volume(0)
                    } else {
                        t.ima3.adPlayer.volume(t.volume())
                    }
                    V = t.ima3.currentAd.getAdId();
                    z = t.ima3.currentAd.getAdPodInfo().getAdPosition();
                    G = t.ima3.currentAd.getAdPodInfo().getTotalAds();
                    Y = t.ima3.currentAd.getDuration();
                    W = 0;
                    b = Be();
                    T = qe(b);
                    Ve('start_watch');
                    window.onbeforeunload = function () {
                        Fe('leave_watch');
                        Ve('leave_watch')
                    }
                }
                function Ie(e) {
                    t.volume(t.ima3.adPlayer.volume());
                    t.muted(t.ima3.adPlayer.muted());
                    ge();
                    ye();
                    if (Q.url.length - 1 > J) {
                        J++;
                        Ne(Q, J)
                    }
                    W = parseInt(Y);
                    b = Be();
                    T = qe(b);
                    Ve('complete_watch')
                }
                function Pe() {
                    et('AdPod is start');
                    var e = t.currentTime();
                    var r = Math.round(e);
                    var n = Math.round(P);
                    et('Seeking: seeked to ' + e + ' from ' + P);
                    if (Math.abs(e - P) >= 1) {
                        He('change_player_location', n, r)
                    }
                }
                function Oe(e) {
                    et('AdPod is ended');
                    __bcplayer_vr_flag = true;
                    $('#dropdownSNSShare').css({
                        display: 'block'
                    });
                    $('#checkRating').css({
                        display: 'block'
                    });
                    be()
                }
                function xe(e) {
                    this.ima3.adsManager.pause()
                }
                function Le(e) {
                    et('ad play from pause');
                    b = Be();
                    T = qe(b);
                    var r = t.ima3.adsManager.getRemainingTime();
                    W = parseInt(Y - r);
                    if (W > 0) {
                        Ve('start_watch')
                    }
                }
                function De(e) {
                    b = Be();
                    T = qe(b);
                    var r = t.ima3.adsManager.getRemainingTime();
                    W = parseInt(Y - r);
                    Ve('pause_watch')
                }
                function Re(e) {
                    et('AD Timeout Error is occured.');
                    ge();
                    ye();
                    __bcplayer_vr_flag = true;
                    be()
                }
                function Me(e) {
                    et('AD Error is occured.');
                    ge();
                    ye();
                    __bcplayer_vr_flag = true;
                    be()
                }
                function je(e) {
                    newPlayRate = t.playbackRate();
                    He('change_player_speed', A, newPlayRate);
                    A = newPlayRate
                }
                function Ue(e) {
                    if (t.isFullscreen()) {
                        X = 'fullscreen'
                    } else {
                        X = 'inline'
                    }
                }
                function Ne(e, r) {
                    if (t.ima3.settings.requestMode != 'ondemand') {
                        t.ima3.settings.requestMode = 'ondemand'
                    }
                    t.ima3.settings.serverUrl = e.url[r];
                    t.ima3.adrequest()
                }
                function Be() {
                    b = parseInt(t.currentTime());
                    return b
                }
                function qe(e) {
                    T = e == 0 ? 0 : (e / p * 100).toPrecision(3);
                    return T
                }
                function Fe(e) {
                    AF('pba', 'event', {
                        eventType: 'EVENT',
                        eventName: e,
                        eventValue: {
                            content_type: 'episode',
                            content_id: f,
                            mode: X,
                            location_percent: T,
                            location: b,
                            genre: g,
                            episode_length: p,
                            program_id: v,
                            program_title: _,
                            episode_title: y
                        }
                    })
                }
                function Ve(e) {
                    AF('pba', 'event', {
                        eventType: 'EVENT',
                        eventName: e,
                        eventValue: {
                            content_type: 'ad',
                            content_id: V,
                            mode: X,
                            location: W,
                            location_percent: T,
                            'ad-type': H,
                            'ad-count': z,
                            'ad-total-count': G,
                            'video-location': b,
                            genre: g,
                            episode_length: p,
                            program_id: v,
                            program_title: _,
                            episode_title: y,
                            episode_id: f
                        }
                    })
                }
                function He(e, t, r) {
                    AF('pba', 'event', {
                        eventType: 'EVENT',
                        eventName: e,
                        eventValue: {
                            from: t,
                            to: r,
                            mode: X,
                            content_type: 'episode',
                            content_id: f,
                            genre: g,
                            episode_length: p,
                            program_id: v,
                            program_title: _,
                            episode_title: y
                        }
                    })
                }
                t.ready(function () {
                    U = t.play;
                    t.play = function () {
                    }
                });
                t.one('loadedmetadata', function () {
                    L = t.mediainfo;
                    f = L.id;
                    h = L.reference_id;
                    p = Math.floor(L.duration);
                    et('VideoId = ' + f + ', Duration = ' + p);
                    if (!ce) {
                        N = getBCResumeInfo(f)
                    }
                    if (N != null && N.lastPlayed > 0 && N.lastPlayed < N.duration) {
                        B = true;
                        et('Resume Dialog will be shown, Last Playe time = ' + N.lastPlayed);
                        $('.dropdownShare').css('display', 'none');
                        $('.aroundIconRating').css('display', 'none');
                        $('.Combined-Shape').css('display', 'none')
                    }
                    if (!tt(L.custom_fields.programkey)) {
                        v = L.custom_fields.programkey
                    }
                    v = !tt(L.custom_fields.programkey) ? L.custom_fields.programkey : '';
                    g = !tt(L.custom_fields.genre) ? L.custom_fields.genre : '';
                    y = !tt(L.custom_fields.title) ? L.custom_fields.title : '';
                    _ = !tt(L.custom_fields.bangumi) ? L.custom_fields.bangumi : '';
                    et('[custom_field] programKey = ' + v);
                    A = t.playbackRate();
                    var e = localStorage.getItem('tver');
                    if (e != null) {
                        var n = JSON.parse(e);
                        if (typeof n !== 'undefined') {
                            S = typeof n.prefCode !== 'undefined' ? n.prefCode : '';
                            k = typeof n.cityCode !== 'undefined' ? n.cityCode : '';
                            w = typeof n.postCode !== 'undefined' ? n.postCode : '';
                            if (typeof n.genderCode !== 'undefined') {
                                if (n.genderCode === 1) {
                                    C = 'm'
                                } else if (n.genderCode === 2) {
                                    C = 'f'
                                }
                            }
                            if (typeof n.birthYyyymm01 !== 'undefined' && n.birthYyyymm01.length == 8) {
                                var i = new Date;
                                var a = i.getFullYear();
                                var s = Number(a) - Number(n.birthYyyymm01.substring(0, 4));
                                E = s;
                                if (s >= 4 && s <= 12) {
                                    I = 1
                                } else if (s >= 13 && s <= 19) {
                                    I = 2
                                } else if (s >= 20 && s <= 34) {
                                    I = 3
                                } else if (s >= 35 && s <= 49) {
                                    I = 4
                                } else if (s >= 50 && s <= 79) {
                                    I = 5
                                } else {
                                    I = 6
                                }
                            }
                        }
                    }
                    t.on('ads-ad-started', Ee);
                    t.on('ads-ad-ended', Ie);
                    t.on('ads-pod-started', Pe);
                    t.on('ads-pod-ended', Oe);
                    t.on('ads-click', xe);
                    t.on('ads-play', Le);
                    t.on('ads-pause', De);
                    t.on('ima3-ad-error', Me);
                    t.on('adtimeout', Re);
                    t.one('play', Te);
                    t.one('playing', Ae);
                    t.on('timeupdate', Se);
                    t.on('ended', ke);
                    t.one('seeking', we);
                    t.on('seeked', Ce);
                    t.on('ratechange', je);
                    t.on('fullscreenchange', Ue);
                    var o = document.getElementById(r).getAttribute('data-playheadtime');
                    if (!tt(o) && !isNaN(o)) {
                        q = parseInt(o)
                    }
                    var u = document.getElementById(r).getAttribute('data-sceneshare-play');
                    if (!tt(u)) {
                        if (u == 'true') {
                            __bcplayer_vr_sceneshare = true;
                            et('This play is SceneShare Play.')
                        }
                    }
                    if (se >= 60) {
                        q = se;
                        __bcplayer_vr_sceneshare = true
                    }
                    if (!ce && q > 0 && q <= p) {
                        F = true;
                        __bcplayer_vr_flag = false;
                        B = false
                    }
                    var l = document.getElementById(r).getAttribute('data-prerollenabled');
                    if (!tt(l)) {
                        if (l == 'true') R = true
                    }
                    et('data-prerollenabled is ' + R);
                    if (q > 0 && !R) {
                        D = false;
                        et('Preroll is desabled, because of resume play without preroll')
                    }
                    Ge(ze(K))
                });
                function ze(e) {
                    var t = '';
                    t = e.replace(/{programKey}/g, v);
                    t = t.replace('{vid}', f);
                    t = t.replace('{random}', Xe(10));
                    t = t.replace('{pageurl}', encodeURIComponent(te));
                    t = t.replace('{vrTagId2}', de);
                    t = t.replace('{tvcu_pcode}', S);
                    t = t.replace('{tvcu_ccode}', k);
                    t = t.replace('{tvcu_zcode}', w);
                    t = t.replace('{tvcu_g}', C);
                    t = t.replace('{tvcu_age}', E);
                    t = t.replace('{tvcu_agegrp}', I);
                    et('VMAP URL = ' + t);
                    return t
                }
                function Ge(e) {
                    $.ajax({
                        url: e,
                        dataType: 'xml',
                        success: function (e) {
                            We(e)
                        },
                        error: function (e) {
                            et('VMAP can\'t be loaded.')
                        }
                    })
                }
                function We(e) {
                    var r,
                        n;
                    var i = '';
                    $(e).find('AdBreak, vmap\\:AdBreak').each(function (e) {
                        if ($(this).attr('breakType') == 'linear') {
                            i = $(this).find('AdTagURI, vmap\\:AdTagURI').text();
                            n = $(this).attr('breakId');
                            et('timeOffset=' + $(this).attr('timeOffset') + ', breakId=' + n + ', AdTagURI=' + i);
                            if ($(this).attr('timeOffset') == 'start') {
                                r = 0
                            } else if ($(this).attr('timeOffset') == 'end') {
                                r = L.duration;
                                j = r
                            } else {
                                r = Ke($(this).attr('timeOffset'))
                            }
                            if (x[r] == undefined) {
                                x[r] = {
                                    name: n,
                                    url: [
                                        i
                                    ],
                                    played: false
                                }
                            } else {
                                x[r].url.push(i)
                            }
                        }
                    });
                    if (D && x[0] != undefined) {
                        __bcplayer_vr_flag = false
                    }
                    var a = 0,
                        s = document.getElementsByClassName('vjs-progress-control vjs-control')[0];
                    for (var o in x) {
                        if (o != 0) {
                            var u = document.createElement('div');
                            u.className = 'vjs-marker';
                            u.id = 'ad' + a;
                            u.style.left = o / p * 100 + '%';
                            s.appendChild(u);
                            a++
                        }
                    }
                    t.play = U;
                    if (B && ee) {
                        Ye()
                    } else {
                        if (Z && le == 'desktop') {
                            t.play()
                        } else {
                            $('.vjs-big-play-button').css('display', 'block')
                        }
                    }
                }
                function Ye() {
                    var e = '';
                    e += '<div class="resumeDialog">';
                    e += '<img src="' + o + '" class="resumeTitle"></img>';
                    e += '<a href="javascript:void(0);" onclick="__bcplayer.bcPlayStart();"><img src="' + u + '" class="playStartImg" onmouseover="this.src=\'' + l + '\'" onmouseout="this.src=\'' + u + '\'"></img></a>';
                    e += '<a href="javascript:void(0);" onclick="__bcplayer.bcResumePlay();"><img src="' + c + '" class="resumeStartImg" onmouseover="this.src=\'' + d + '\'" onmouseout="this.src=\'' + c + '\'"></img></a>';
                    e += '</div>';
                    n = document.createElement('div');
                    n.innerHTML = e;
                    t.el().appendChild(n)
                }
                function $e() {
                    if (n != null) {
                        t.el().removeChild(n)
                    }
                }
                __bcplayer.bcPlayStart = function () {
                    $e();
                    t.play()
                };
                __bcplayer.bcResumePlay = function () {
                    $e();
                    q = N.lastPlayed - 2;
                    if (q < 0) {
                        q = 0
                    }
                    if (q > 0) {
                        t.ima3.settings.serverUrl = '';
                        D = false
                    }
                    t.play()
                };
                function Xe(e) {
                    var t = '0123456789';
                    var r = '';
                    for (var n = 0, i = t.length; n < e; n++) {
                        r += t.charAt(Math.floor(i * Math.random()))
                    }
                    return r
                }
                function Ke(e) {
                    var t = parseInt(e.substr(0, 2));
                    var r = parseInt(e.substr(3, 2));
                    var n = parseInt(e.substr(6, 2));
                    var i = parseInt(e.substr(9, 3));
                    return t * 3600 + r * 60 + n + i / 1000
                }
                function Qe(e) {
                    return (e < 10 ? '0' : '') + e
                }
                function Je(e) {
                    for (var t in a) {
                        if (t == e) return true
                    }
                    return false
                }
                function Ze() {
                    if (tt(e)) {
                        return
                    }
                    for (var t in e) {
                        if (Je(t)) {
                            a[t] = e[t]
                        }
                    }
                }
                function et(e) {
                    if (a.debug) {
                        console.log(e)
                    } else if (typeof _bc_debug !== 'undefined' && _bc_debug) {
                        console.log(e)
                    }
                }
                function tt(e) {
                    if (e != null && e != undefined && e != '' && e.length != 0) {
                        return false
                    }
                    return true
                }
            })
        })(); (function () {
            if (videojs.getPlugin('resumeControl')) {
                return
            }
            videojs.registerPlugin('resumeControl', function (e) {
                var t = this;
                var r = null;
                var n = {
                    debug: false
                };
                if (e.debug != undefined && e.debug == true) {
                    n.debug = true
                }
                var i = 'TXresumeInfo';
                var a = '';
                var s = '';
                var o = 0;
                var u = 1;
                var l = - 1;
                var c = 0;
                var d = 0;
                var f = false;
                var h = false;
                var p = 50;
                var v = - 1;
                var m = new Array;
                if (window['console'] == null) window['console'] = {
                };
                if (console['log'] == null) console['log'] = function () {
                };
                I();
                t.on('loadedmetadata', g);
                t.on('error', k);
                function g(e) {
                    var n = t.mediainfo.id;
                    if (n === r) {
                        return
                    }
                    r = n;
                    a = n;
                    s = t.mediainfo.reference_id;
                    o = Math.floor(t.mediainfo.duration);
                    v = w(a);
                    t.one('ended', T);
                    t.on('timeupdate', y);
                    t.on('seeked', b);
                    t.one('seeking', _);
                    t.on('ads-request', A);
                    t.on('ads-pod-ended', S);
                    t.on('ima3-ad-error', S);
                    t.on('adtimeout', S)
                }
                function y(e) {
                    if (t.currentTime() != c) {
                        d = c;
                        c = t.currentTime();
                        var r = Math.floor(t.currentTime() / u) * u;
                        if (r > l && !f && !h && r != 0) {
                            C(a, r, v);
                            l = r
                        }
                    }
                }
                function _(e) {
                    f = true
                }
                function b(e) {
                    f = false;
                    l = Math.floor(t.currentTime() / u) * u;
                    t.one('seeking', _)
                }
                function T(e) {
                    C(a, o, v);
                    l = - 1
                }
                function A(e) {
                    h = true
                }
                function S(e) {
                    h = false
                }
                function k(e) {
                    P(e)
                }
                function w(e) {
                    var t = localStorage.getItem(i);
                    var r = - 1;
                    if (!O(t)) {
                        m = JSON.parse(t)
                    }
                    for (var n in m) {
                        if (isBCRefIdMatch(e, m[n].vid)) {
                            r = n;
                            m[n].duration = o;
                            P(e + ' is already exit')
                        }
                    }
                    if (r == - 1) {
                        var a = {
                        };
                        a.vid = e;
                        a.duration = o;
                        a.lastPlayed = 0;
                        m.unshift(a);
                        r = 0
                    }
                    if (m.length > p) {
                        m.splice(p, m.length - p)
                    }
                    return r
                }
                function C(e, t, r) {
                    m[r].lastPlayed = t;
                    P('[setBCResumeInfo] VideoId=' + e + ', currentTime=' + t);
                    localStorage.setItem(i, JSON.stringify(m))
                }
                function E(e) {
                    for (var t in n) {
                        if (t == e) return true
                    }
                    return false
                }
                function I() {
                    if (O(e)) {
                        return
                    }
                    for (var t in e) {
                        if (E(t)) {
                            n[t] = e[t]
                        }
                    }
                }
                function P(e) {
                    if (n.debug) {
                        console.log(e)
                    } else if (typeof _bc_debug !== 'undefined' && _bc_debug) {
                        console.log(e)
                    }
                }
                function O(e) {
                    if (e != null && e != undefined && e != '' && e.length != 0) {
                        return false
                    }
                    return true
                }
            })
        })(); (function () {
            if (videojs.getPlugin('TXconversionJS')) {
                return
            }
            videojs.registerPlugin('TXconversionJS', function (e) {
                var t = this;
                var r = null;
                var n = true;
                var i = 30;
                var a = false;
                var s = '';
                var o = {
                    debug: false
                };
                var u = 0.9;
                var l = - 1;
                var c = false;
                if (window['console'] == null) window['console'] = {
                };
                if (console['log'] == null) console['log'] = function () {
                };
                y();
                t.on('loadedmetadata', d);
                t.on('timeupdate', h);
                t.on('error', v);
                function d(e) {
                    _('# ' + e.type);
                    currentId = t.mediainfo.id;
                    s = t.mediainfo.custom_fields['programKey'];
                    if (currentId === r) {
                        return
                    }
                    r = currentId;
                    l = - 1;
                    t.one('playing', f);
                    t.one('ended', p)
                }
                function f(e) {
                    _('track media PLAY');
                    if (n) {
                        w();
                        C();
                        I()
                    }
                }
                function h(e) {
                    var r = t.mediainfo.id;
                    var s = Math.floor(t.currentTime());
                    if (n && s > i && !a) {
                        _('track media PROGRESS:' + s);
                        a = true;
                        T();
                        S();
                        k();
                        E();
                        A()
                    }
                }
                function p(e) {
                    var r = t.mediainfo.id;
                    _('media COMPLETE ' + r);
                    if (n) {
                        _('track media COMPLETE');
                        trackEvent(_eventTag['mediaComplete'], m(r))
                    }
                }
                function v(e) {
                    _('# ' + e.type);
                    _(e)
                }
                function m(e) {
                    var t = [
                        'sun',
                        'mon',
                        'tue',
                        'wed',
                        'thi',
                        'fri',
                        'sat'
                    ];
                    var r = new Date;
                    var n = r.getFullYear();
                    var i = r.getMonth() + 1;
                    var a = r.getDate();
                    var s = r.getDay();
                    var o = r.getHours();
                    if (i < 10) {
                        i = '0' + i
                    }
                    if (a < 10) {
                        a = '0' + a
                    }
                    if (o < 10) {
                        o = '0' + o
                    }
                    return e + '_' + t[s] + o + '-' + n + i + a
                }
                function g(e) {
                    for (var t in o) {
                        if (t == e) return true
                    }
                    return false
                }
                function y() {
                    if (b(e)) {
                        return
                    }
                    for (var t in e) {
                        if (g(t)) {
                            o[t] = e[t]
                        }
                    }
                }
                function _(e) {
                    if (o.debug) {
                        console.log(e)
                    }
                }
                function b(e) {
                    if (e != null && e != undefined && e != '' && e.length != 0) {
                        return false
                    }
                    return true
                }
                function T() {
                    if (location.protocol == 'http:') {
                        strServerName = 'http://ac.ebis.ne.jp'
                    } else {
                        strServerName = 'https://ac.ebis.ne.jp'
                    }
                    $(document.body).append($('<img src="https://ac.ebis.ne.jp/log.php?argument=L46EsqQs&ebisPageID=video_view&ebisMember=&ebisAmount=&ebisOther1=' + s + '&ebisOther2=&ebisOther3=&ebisOther4=&ebisOther5=" width="0" height="0" />'))
                }
                function A() {
                    twttr.conversion.trackPid('nugje', {
                        tw_sale_amount: 0,
                        tw_order_quantity: 0
                    })
                }
                function S() {
                    var e = parseInt(new Date / 1000) + Math.random();
                    $(document.body).append($('<img height="1" width="1" style="border-style:none;" alt="" src="https://b91.yahoo.co.jp/pagead/conversion/1000245366/?value=0&amp;label=3F1jCIetgGAQufWSwQM&amp;guid=ON&amp;script=0&amp;disvt=true" />'));
                    $(document.body).append($('<img height="1" width="1" style="border-style:none;" alt="" src="//b90.yahoo.co.jp/c?yahoo_ydn_conv_io=BwWGMtQOLDVd7uXKHsLm&yahoo_ydn_conv_label=ADTBOUD9Z8GRGV0WVVHH70101&yahoo_ydn_conv_transaction_id=&yahoo_ydn_conv_amount=0&r=\'' + e + '" />'))
                }
                function k() {
                    $(document.body).append($('<img height="1" width="1" style="border-style:none;" alt="" src="//www.googleadservices.com/pagead/conversion/945299138/?value=1.00&amp;currency_code=JPY&amp;label=G5xQCNnL818Qwr3gwgM&amp;guid=ON&amp;script=0" />'))
                }
                function w() {
                    var e = '75NS6PLEST';
                    var t = '';
                    $(document.body).append($('<script type="text/javascript" language="javascript" src="//b92.yahoo.co.jp/js/s_retargeting.js"></script>'));
                    $(document.body).append($('<img height="1" width="1" style="border-style:none;" alt="" src="//b97.yahoo.co.jp/pagead/conversion/1000245366/?guid=ON&script=0&disvt=false" />'))
                }
                function C() {
                    $(document.body).append($('<img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/945299138/?value=0&amp;guid=ON&amp;script=0" />'))
                }
                function E() {
                    fbq('track', 'ViewContent', {
                        content_name: s,
                        content_type: 'product',
                        content_ids: r
                    })
                }
                function I() {
                    !function (e, t, r, n, i, a, s) {
                        if (e.fbq) return;
                        i = e.fbq = function () {
                            i.callMethod ? i.callMethod.apply(i, arguments) : i.queue.push(arguments)
                        };
                        if (!e._fbq) e._fbq = i;
                        i.push = i;
                        i.loaded = !0;
                        i.version = '2.0';
                        i.queue = [
                        ];
                        a = t.createElement(r);
                        a.async = !0;
                        a.src = n;
                        s = t.getElementsByTagName(r)[0];
                        s.parentNode.insertBefore(a, s)
                    }(window, document, 'script', '//connect.facebook.net/en_US/fbevents.js');
                    fbq('init', '889785484438816');
                    fbq('track', 'PageView')
                }
            })
        })(); (function () {
            if (videojs.getPlugin('td')) {
                return
            } (function () {
                'use strict';
                var e = [
                ].indexOf || function (e) {
                    for (var t = 0, r = this.length; t < r; t++) if (t in this && this[t] === e) return t;
                    return - 1
                };
                (videojs.registerPlugin || videojs.plugin)('td', function (t) {
                    var r,
                        n,
                        i,
                        a,
                        s,
                        o,
                        u,
                        l,
                        c,
                        d,
                        f,
                        h,
                        p,
                        v,
                        m,
                        g,
                        y,
                        _,
                        b;
                    if (t.writeKey && t.database && t.table) if ((r = document.createElement('a')).href = document.referrer, self === top || 'players.brightcove.net' !== window.location.host && 'preview-players.brightcove.net' !== window.location.host || 'studio.brightcove.com' !== r.hostname) {
                        if (n = this, i = new function (e) {
                            this.td = new TreasureVideojs({
                                host: e.host || 'in.treasuredata.com',
                                writeKey: e.writeKey,
                                database: e.database,
                                startInSignedMode: e.startInSignedMode || !1
                            }),
                                this.table = e.table,
                                this.debug = e.debug || !1,
                                this.td.set(this.table, {
                                    bc_session_id: n.bcAnalytics.client.defaultParams_.session
                                }),
                                e.trackCrossDomain && this.td.set('$global', 'td_global_id', 'td_global_id'),
                                this.log = function (e, t) {
                                    void 0 === t && (t = {
                                    }),
                                        t.bc_event = e,
                                        this.debug ? (videojs.log('Table name is ' + this.table + ', params are as follows.'), videojs.log(t)) : this.td.trackEvent(this.table, t)
                                }
                        }(t), u = function (t) {
                            var r = 10;
                            return void 0 !== t.interval && 0 <= e.call([5,
                                10,
                                25], t.interval) && (r = t.interval),
                                r
                        }(t), s = [
                            'play',
                            'pause',
                            'error',
                            'fullscreen_change',
                            'volume_change',
                            'ended',
                            'percent_of_view',
                            'seek',
                            'player_load',
                            'video_loaded'
                        ], 0 === (a = t.trackEventList || s).length && (a = s), c = l = 0, !(o = [
                        ]), d = {
                            player_load: 'Player Loaded',
                            video_loaded: 'Contents Loaded',
                            play: 'Play',
                            pause: 'Pause',
                            error: 'Error',
                            fullscreenchange: 'FullScreen Start',
                            fullscreenchangeexit: 'FullScreen Exit',
                            volumechange: 'Volume Change',
                            ended: 'Complete',
                            percent_of_view: 'Percent of View',
                            seek: 'Seek'
                        }, t.eventNameLabels && 0 < Object.keys(t.eventNameLabels).length) for (var T = Object.keys(t.eventNameLabels), A = T.length, S = 0; S < A; S++) d[T[S]] = t.eventNameLabels[T[S]];
                        f = function () {
                            i.td.set(i.table, {
                                bc_video_id: this.mediainfo.id
                            }),
                                i.td.set(i.table, {
                                    bc_duration: this.mediainfo.duration
                                }),
                                i.td.set(i.table, {
                                    bc_video_name: this.mediainfo.name
                                }),
                                i.log(d.video_loaded)
                        },
                            h = function () {
                                i.log(d.ended)
                            },
                            p = function () {
                                i.log(d.play),
                                    !1
                            },
                            v = function () {
                                i.log(d.pause),
                                    !1
                            },
                            m = function () {
                                i.log(d.error)
                            },
                            g = function () {
                                this.isFullscreen() ? i.log(d.fullscreenchange) : i.log(d.fullscreenchangeexit)
                            },
                            y = function () {
                                var e;
                                e = !0 === this.muted() ? 0 : this.volume(),
                                    i.log(d.volumechange, {
                                        bc_volume: e
                                    })
                            },
                            _ = function () {
                                var t,
                                    r,
                                    n,
                                    a,
                                    s;
                                for (t = Math.round(this.currentTime()), r = Math.round(this.duration()), a = Math.round(t / r * 100), n = s = 0; s <= 100; n = s += u) n <= a && e.call(o, n) < 0 && (i.log(d.percent_of_view, {
                                    bc_percent: n
                                }), o.push(n))
                            },
                            b = function () {
                                var e = Math.round(this.currentTime());
                                l = c,
                                    c = e,
                                    1 < Math.abs(l - c) && (!0, i.log(d.seek, {
                                        bc_seek_start: l,
                                        bc_seek_end: c
                                    }))
                            },
                            this.ready(function () {
                                0 <= e.call(a, 'player_load') && i.log(d.player_load),
                                    0 <= e.call(a, 'video_loaded') && n.on('loadedmetadata', f),
                                    0 <= e.call(a, 'play') && n.on('play', p),
                                    0 <= e.call(a, 'pause') && n.on('pause', v),
                                    0 <= e.call(a, 'error') && n.on('error', m),
                                    0 <= e.call(a, 'fullscreen_change') && n.on('fullscreenchange', g),
                                    0 <= e.call(a, 'volume_change') && n.on('volumechange', y),
                                    0 <= e.call(a, 'percent_of_view') && n.on('timeupdate', _),
                                    0 <= e.call(a, 'seek') && n.on('timeupdate', b),
                                    0 <= e.call(a, 'ended') && n.on('ended', h)
                            })
                    } else videojs.log('TreasureData plugin will not track events in Video Cloud Studio');
                    else videojs.log('require writeKey, database, table')
                })
            }).call(this)
        })(); (function () {
            if (videojs.getPlugin('bcTracker')) {
                return
            }
            var registerPlugin = videojs.registerPlugin || videojs.plugin;
            registerPlugin('bcTracker', function (settings) {
                if (settings.vr_config_url === undefined) {
                    return
                }
                var _vr_config_url = settings.vr_config_url;
                var _vr_tagid1 = settings.vr_tagid1 !== undefined ? settings.vr_tagid1 : '';
                var _vr_tagid2 = settings.vr_tagid2 !== undefined ? settings.vr_tagid2 : '';
                var _vr_useid1 = settings.vr_useid1 !== undefined ? settings.vr_useid1 : '';
                var _url = settings.url !== undefined ? settings.url : '';
                var _vr_tid = settings.vr_tid !== undefined ? settings.vr_tid : '';
                var _vr_uid = settings.vr_uid !== undefined ? settings.vr_uid : '';
                var _vr_opt1 = settings.vr_opt1 !== undefined ? settings.vr_opt1 : '';
                var _vr_opt2 = settings.vr_opt2 !== undefined ? settings.vr_opt2 : '';
                var _vr_opt3 = settings.vr_opt3 !== undefined ? settings.vr_opt3 : '';
                var _vr_opt4 = settings.vr_opt4 !== undefined ? settings.vr_opt4 : '';
                var _vr_opt5 = settings.vr_opt5 !== undefined ? settings.vr_opt5 : '';
                var _vr_opt6 = settings.vr_opt6 !== undefined ? settings.vr_opt6 : '';
                var _vr_opt7 = settings.vr_opt7 !== undefined ? settings.vr_opt7 : '';
                var _vr_opt8 = settings.vr_opt8 !== undefined ? settings.vr_opt8 : '';
                var _vr_opt9 = settings.vr_opt9 !== undefined ? settings.vr_opt9 : '';
                var _vr_opt10 = settings.vr_opt10 !== undefined ? settings.vr_opt10 : '';
                var _vr_opt11 = settings.vr_opt11 !== undefined ? settings.vr_opt11 : '';
                var _vr_opt12 = settings.vr_opt12 !== undefined ? settings.vr_opt12 : '';
                var _vr_opt13 = settings.vr_opt13 !== undefined ? settings.vr_opt13 : '';
                var _vr_opt14 = settings.vr_opt14 !== undefined ? settings.vr_opt14 : '';
                var _vr_opt15 = settings.vr_opt15 !== undefined ? settings.vr_opt15 : '';
                try {
                    VR3252918568log7 = function () {
                        var vrServerAddress = 'log7stg.interactive-circle.jp/data7';
                        var vrTagID = 'VR_TAG_efeb816b0c1d_log7';
                        var vrNameID1 = 'VR_ID1_66beeb45e341';
                        var vrNameID2 = 'GUID';
                        var vrCookiePath = '/';
                        var vrCookieExpires = 'Thu, 1-Jan-2030 00:00:00 GMT';
                        var vrDisableCookieID2 = '********-****-****-****-************';
                        var vr_tag = window.document.createElement('script');
                        function getVRTag() {
                            return vr_tag
                        }
                        function getUUID4() {
                            var e = [
                            ];
                            var t = '0123456789ABCDEF'.split('');
                            for (var r = 0; r < 36; r++) {
                                e[r] = t[Math.floor(Math.random() * 16)]
                            }
                            e[14] = '4';
                            e[19] = e[19] & 3 | 8;
                            e[8] = e[13] = e[18] = e[23] = '-';
                            return e.join('')
                        }
                        function getCookie(e) {
                            if (navigator.cookieEnabled) {
                                var t = document.cookie.split(' ').join('').split(';');
                                for (var r = 0; r < t.length; r++) {
                                    var n = t[r].split('=');
                                    if (n[0] == e) return n[1]
                                }
                            }
                            return ''
                        }
                        function setCookie(e, t, r, n) {
                            if (navigator.cookieEnabled) {
                                document.cookie = e + '=' + t + '; path=' + r + '; expires=' + n
                            }
                        }
                        function getLocalStorage(e) {
                            return isEnableLocalStorage() && localStorage.getItem(e) ? localStorage.getItem(e) : ''
                        }
                        function setLocalStorage(e, t) {
                            if (isEnableLocalStorage()) {
                                localStorage.removeItem(e);
                                localStorage.setItem(e, t)
                            }
                        }
                        function isEnableLocalStorage() {
                            var e = 'local_storage_test';
                            try {
                                if (localStorage == null) {
                                    throw null
                                } else {
                                    localStorage.removeItem(e);
                                    localStorage.setItem(e, '')
                                }
                                return true
                            } catch (e) {
                            } finally {
                                try {
                                    localStorage.removeItem(e)
                                } catch (e) {
                                }
                            }
                            return false
                        }
                        function getID1() {
                            var e = getLocalStorage(vrNameID1);
                            var t = getCookie(vrNameID1);
                            return e.length ? e : t.length ? t : getUUID4()
                        }
                        function saveID1(e) {
                            setLocalStorage(vrNameID1, e);
                            setCookie(vrNameID1, e, vrCookiePath, vrCookieExpires);
                            return e
                        }
                        function mkParam(e, t) {
                            try {
                                if (t == undefined) {
                                    t = getVRTag().getAttribute(e)
                                }
                            } catch (e) {
                            }
                            var r = t != null ? t : '';
                            return e + '=' + escape(r)
                        }
                        function mkQueryParam(param) {
                            var qopt = '?' + (param.vr_tagid1 ? mkParam('vr_tagid1', param.vr_tagid1) : mkParam('vr_tagid1', _vr_tagid1)) + '&' + (param.vr_tagid2 ? mkParam('vr_tagid2', param.vr_tagid2) : mkParam('vr_tagid2', _vr_tagid2)) + '&' + (_vr_useid1 == 'on' ? mkParam('id1', saveID1(getID1())) : '') + '&' + (param.url ? mkParam('url', param.url) : mkParam('url', _url)) + '&' + mkParam('ref', document.referrer) + '&' + mkParam('pla', navigator.platform) + '&' + (param.vr_tid ? mkParam('vr_tid', param.vr_tid) : mkParam('vr_tid', _vr_tid)) + '&' + (param.vr_uid ? mkParam('vr_uid', param.vr_uid) : mkParam('vr_uid', _vr_uid));
                            for (i = 1; i <= 15; ++i) {
                                var opt = 'vr_opt' + i;
                                var _opt = '_vr_opt' + i;
                                qopt += '&' + (param[opt] ? mkParam(opt, param[opt]) : mkParam(opt, eval(_opt)))
                            }
                            return qopt
                        }
                        function mkVRUrl() {
                            return 'https://' + vrServerAddress + '/'
                        }
                        function mkBeaconUrl(e) {
                            return mkVRUrl() + Math.floor(Math.random() * 1000000000) + '.gif' + mkQueryParam(e)
                        }
                        function mkRedirectUrl(e) {
                            return mkVRUrl() + 'redirect' + mkQueryParam(e) + '&' + mkParam('redirect', e.redirect)
                        }
                        function forBackForward() {
                            if (window.addEventListener) {
                                window.addEventListener('pageshow', onPageshow, false);
                                window.addEventListener('unload', function () {
                                }, false)
                            }
                        }
                        function onPageshow(e) {
                            if (e.persisted) {
                                beaconFire()
                            }
                        }
                        function beaconFire(e) {
                            var t = mkBeaconUrl(e ? e : {
                            });
                            if (t) {
                                var r = new Image;
                                r.src = t.slice(0, 2083)
                            }
                        }
                        function autoRepeat() {
                            if (getVRTag().getAttribute('vr_repeat') && getVRTag().getAttribute('id') == vrTagID) {
                                var e = getVRTag().getAttribute('vr_repeat');
                                if (e > 0) {
                                    _repeat_timer = setInterval('VR3252918568log7.repeatTag("' + e + '")', e * 1000)
                                }
                            }
                        }
                        var _repeat_timer;
                        var _repeat_count = 0;
                        function accessLog() {
                            autoRepeat();
                            beaconFire();
                            forBackForward();
                            if (document.getElementById(vrTagID)) vr_tag = document.getElementById(vrTagID)
                        }
                        if (!getVRTag().getAttribute('vr_enabled')) {
                            accessLog()
                        }
                        return {
                            localStorageEnabled: function () {
                                return isEnableLocalStorage()
                            },
                            clickAd: function (e, t, r) {
                                try {
                                    switch (arguments.length) {
                                        case 1:
                                            e.setAttribute('href', mkRedirectUrl({
                                                vr_opt1: 'click',
                                                vr_opt2: e.href,
                                                redirect: e.href
                                            }));
                                            break;
                                        case 2:
                                            e.setAttribute('href', mkRedirectUrl({
                                                vr_opt1: 'click',
                                                vr_opt2: t,
                                                redirect: e.href
                                            }));
                                            break;
                                        case 3:
                                            e.setAttribute('href', mkRedirectUrl({
                                                vr_opt1: 'click',
                                                vr_opt2: t,
                                                redirect: r
                                            }));
                                            break;
                                        default:
                                    }
                                } catch (e) {
                                }
                            },
                            clickMoviePlay: function (e) {
                                try {
                                    beaconFire({
                                        vr_opt1: 'click',
                                        vr_opt2: e
                                    })
                                } catch (e) {
                                }
                            },
                            clickFbLike: function (e) {
                                try {
                                    beaconFire({
                                        vr_opt1: 'click',
                                        vr_opt2: e
                                    })
                                } catch (e) {
                                }
                            },
                            flashAction: function (e) {
                                try {
                                    beaconFire({
                                        vr_opt1: 'flash',
                                        vr_opt2: e
                                    })
                                } catch (e) {
                                }
                            },
                            repeatTag: function (e) {
                                try {
                                    beaconFire({
                                        vr_opt1: 'repeat',
                                        vr_opt2: e * ++_repeat_count
                                    })
                                } catch (e) {
                                }
                            },
                            optout: function () {
                                try {
                                    var e = new Image;
                                    e.src = mkVRUrl() + 'optout'
                                } catch (e) {
                                }
                            },
                            click: function (e, t) {
                                try {
                                    if (!e || typeof e != 'string') {
                                        return
                                    }
                                    var r = {
                                        url: e
                                    };
                                    if (typeof t == 'object') {
                                        for (var n in t) {
                                            if (n.match(/^vr_opt[0-9]+$/) && typeof t[n] == 'string') {
                                                r[n] = t[n]
                                            }
                                        }
                                    }
                                    beaconFire(r)
                                } catch (e) {
                                }
                            }
                        }
                    }()
                } catch (e) {
                }
                var __MV_CONFIG_FILE__ = {
                    common: _vr_config_url,
                    specif: [
                    ]
                };
                var bcTracker = {
                };
                bcTracker.player = {
                };
                bcTracker.beaconSeq = 0;
                bcTracker.isStart = false;
                bcTracker.latestMilestoneSendSec = 0;
                bcTracker.latestLoopSendSec = 0;
                bcTracker.latestSeekTime = 0;
                bcTracker.latestSeekSendTime = 0;
                bcTracker.latestCustomEndedSendSec = 0;
                bcTracker.latestCustomStartSendTime = 0;
                bcTracker.isEnded = false;
                bcTracker.sessionId = Math.floor(Math.random() * 1000000000000);
                bcTracker.init = function (e) {
                    try {
                        bcTracker.player = e;
                        if (bcTracker.canSendVrBeacon()) {
                            bcTracker.getConfig();
                            bcTracker.player.on('timeupdate', bcTracker.onMediaProgressFired);
                            bcTracker.player.on('durationchange', bcTracker.onMediaChangeFired);
                            bcTracker.player.on('seeked', bcTracker.onMediaSeekFired)
                        }
                    } catch (e) {
                        var t = e
                    }
                };
                bcTracker.canSendVrBeacon = function () {
                    bcTracker.sendVrBeaconFlag = bcTracker.player.options()['data-vr-beacon-flag'];
                    if (bcTracker.sendVrBeaconFlag == 'false') {
                        return false
                    }
                    return true
                };
                bcTracker.getConfig = function () {
                    var configFilePath;
                    var dataVideoId = bcTracker.player.options()['data-video-id'];
                    var specif = typeof __MV_CONFIG_FILE__.specif === 'object' ? __MV_CONFIG_FILE__.specif : [
                    ];
                    for (var i = 0; i < specif.length; i++) {
                        if (dataVideoId === specif[i].id) {
                            configFilePath = specif[i].file;
                            break
                        }
                    }
                    if (typeof configFilePath !== 'string') {
                        configFilePath = __MV_CONFIG_FILE__.common
                    }
                    _getJsonData = function (json) {
                        bcTracker.removeEventListeners();
                        bcTracker.config = typeof JSON == 'object' ? JSON.parse(json) : eval('(' + json + ')');
                        bcTracker.setEventListeners()
                    };
                    var script = document.createElement('script');
                    script.src = configFilePath;
                    document.body.appendChild(script)
                };
                bcTracker.setEventListeners = function (e) {
                    var t = bcTracker.config.user_actions_html5;
                    for (var r = 0; r < t.length; r++) {
                        bcTracker.player.on(t[r], bcTracker.onMediaEventFired)
                    }
                };
                bcTracker.removeEventListeners = function (e) {
                    var t = bcTracker.config;
                    var r = t && t.user_actions_html5 ? t.user_actions_html5 : [
                    ];
                    for (var n = 0; n < r.length; n++) {
                        bcTracker.player.off(r[n], bcTracker.onMediaEventFired)
                    }
                };
                bcTracker.onMediaEventFired = function (e) {
                    try {
                        if (e.type === 'seeking' || e.type === 'seeked') {
                            var t = Math.floor((new Date).getTime() / 1000);
                            if (bcTracker.latestSeekSendTime !== 0) {
                                if (t - bcTracker.latestSeekSendTime < 2) {
                                    return
                                }
                            }
                        }
                        if (e.type === 'play' && !bcTracker.isStart) {
                            return
                        }
                        if (e.type === 'ended') {
                            if (bcTracker.isEnded) return;
                            bcTracker.isEnded = true;
                            bcTracker.sendBeacon(e);
                            return
                        }
                        bcTracker.sendBeacon(e)
                    } catch (e) {
                        var r = e
                    }
                };
                bcTracker.onMediaChangeFired = function (e) {
                    try {
                        if (!bcTracker.isStart || bcTracker.player.duration() > 0) {
                            return
                        }
                        bcTracker.getConfig();
                        bcTracker.latestMilestoneSendSec = 0;
                        bcTracker.latestLoopSendSec = 0;
                        bcTracker.latestCustomEndedSendSec = 0
                    } catch (e) {
                        var t = e
                    }
                };
                bcTracker.onMediaSeekFired = function (e) {
                    try {
                        if (bcTracker.canSendCustomStart(e) === true) {
                            bcTracker.sendBeacon({
                                type: bcTracker.config.custom_start.event_name
                            });
                            bcTracker.latestCustomStartSendTime = Math.floor((new Date).getTime() / 1000);
                            bcTracker.latestMilestoneSendSec = 0;
                            bcTracker.latestLoopSendSec = 0;
                            return
                        }
                        var t = Math.floor((new Date).getTime() / 1000);
                        if (bcTracker.latestSeekTime !== 0 && t - bcTracker.latestSeekTime < 2) {
                            return
                        }
                        bcTracker.latestSeekTime = Math.floor((new Date).getTime() / 1000);
                        bcTracker.latestMilestoneSendSec = 0;
                        bcTracker.latestLoopSendSec = 0;
                        var r = Math.floor(bcTracker.player.currentTime());
                        var n = Math.floor(bcTracker.player.mediainfo.duration);
                        if (r !== n) {
                            bcTracker.latestCustomEndedSendSec = 0
                        }
                    } catch (e) {
                        var i = e
                    }
                };
                bcTracker.onMediaProgressFired = function (e) {
                    try {
                        if (bcTracker.player.paused() === true) {
                            return
                        }
                        if (bcTracker.canSendStart()) {
                            bcTracker.sendBeacon({
                                type: 'start'
                            });
                            bcTracker.isStart = true;
                            bcTracker.latestMilestoneSendSec = Math.floor(bcTracker.player.currentTime());
                            bcTracker.latestLoopSendSec = Math.floor(bcTracker.player.currentTime())
                        }
                        var t = bcTracker.config;
                        var r = Math.floor(bcTracker.player.currentTime());
                        var n = bcTracker.player.mediainfo.duration;
                        var i = bcTracker.latestMilestoneSendSec;
                        var a = bcTracker.latestLoopSendSec;
                        if (bcTracker.canSendCustomEnded(r, n)) {
                            bcTracker.sendBeacon({
                                type: t.custom_ended.event_name
                            });
                            bcTracker.latestCustomEndedSendSec = r
                        }
                        if (r === i || r === a) {
                            return
                        }
                        if (r === 0) {
                            return
                        }
                        if (!bcTracker.isStart) {
                            return
                        }
                        if (r === Math.floor(n)) {
                            return
                        }
                        if (typeof t.milestone === 'object' && n > 0) {
                            if (typeof t.milestone.sec !== 'object') {
                                t.milestone.sec = bcTracker.convertMilestoneToSec(n, t)
                            }
                            for (var s = 0; s < t.milestone.sec.length; s++) {
                                if (bcTracker.canSendMilestone(r, t.milestone.sec[s])) {
                                    bcTracker.sendBeacon(e);
                                    bcTracker.latestMilestoneSendSec = r
                                }
                            }
                        }
                        if (typeof t.loop.currentTime === 'object') {
                            if (typeof bcTracker.config.loop.currentTime.uTime !== 'object') {
                                t.loop.currentTime.uTime = bcTracker.convertStrToUnixtime(t)
                            }
                            for (var s = 0; s < t.loop.currentTime.uTime.length; s++) {
                                if (bcTracker.isInDefinedTime(t.loop.currentTime.uTime[s])) {
                                    if (bcTracker.canSendLoop(r, t.loop.currentTime.uTime[s].interval)) {
                                        bcTracker.sendBeacon(e);
                                        bcTracker.latestLoopSendSec = r
                                    }
                                    return
                                }
                            }
                        }
                        if (typeof t.loop.section == 'object') {
                            for (var s = 0; s < t.loop.section.length; s++) {
                                if (bcTracker.isInDefinedSection(r, t.loop.section[s])) {
                                    if (bcTracker.canSendLoop(r, t.loop.section[s].interval)) {
                                        bcTracker.sendBeacon(e);
                                        bcTracker.latestLoopSendSec = r
                                    }
                                    return
                                }
                            }
                        }
                        if (t.loop.wholeInterval) {
                            if (bcTracker.canSendLoop(r, t.loop.wholeInterval)) {
                                bcTracker.sendBeacon(e);
                                bcTracker.latestLoopSendSec = r
                            }
                        }
                    } catch (e) {
                        var o = e
                    }
                };
                bcTracker.convertMilestoneToSec = function (e, t) {
                    bcTracker.config.milestone.sec = [
                    ];
                    for (var r = 0; r < t.milestone.length; r++) {
                        var n = t.milestone[r].split('/');
                        var i = e * parseInt(n[0], 10) / parseInt(n[1], 10);
                        i = Math.floor(i);
                        bcTracker.config.milestone.sec.push(i)
                    }
                    return bcTracker.config.milestone.sec
                };
                bcTracker.convertStrToUnixtime = function (e) {
                    bcTracker.config.loop.currentTime.uTime = [
                    ];
                    for (var t = 0; t < e.loop.currentTime.length; t++) {
                        var r = e.loop.currentTime[t].start;
                        r = Math.floor(new Date(r).getTime() / 1000);
                        var n = e.loop.currentTime[t].end;
                        n = Math.floor(new Date(n).getTime() / 1000);
                        bcTracker.config.loop.currentTime.uTime.push({
                            start: r,
                            end: n,
                            interval: e.loop.currentTime[t].interval
                        })
                    }
                    return bcTracker.config.loop.currentTime.uTime
                };
                bcTracker.isInDefinedTime = function (e) {
                    var t = Math.floor((new Date).getTime() / 1000);
                    if (t >= e.start && t <= e.end) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.isInDefinedSection = function (e, t) {
                    if (e >= parseInt(t.start, 10) && e <= parseInt(t.end, 10)) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.canSendMilestone = function (e, t) {
                    if (e === t) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.canSendLoop = function (e, t) {
                    if (e % parseInt(t, 10) === 0) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.canSendStart = function () {
                    if (bcTracker.isStart) {
                        return false
                    }
                    if (!bcTracker.player.duration() > 0) {
                        return false
                    }
                    if (typeof window.__bcplayer_vr_flag === 'undefined') {
                        return true
                    }
                    if (window.__bcplayer_vr_flag === false) {
                        return false
                    }
                    return true
                };
                bcTracker.canSendCustomStart = function (e) {
                    if (typeof bcTracker.config.custom_start !== 'object') {
                        return false
                    }
                    var t = Math.floor((new Date).getTime() / 1000);
                    if (bcTracker.latestCustomStartSendTime != 0) {
                        if (t - bcTracker.latestCustomStartSendTime < 2) {
                            return false
                        }
                    }
                    if (bcTracker.isStart && Math.floor(bcTracker.player.currentTime()) === 0) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.canSendCustomEnded = function (e, t) {
                    if (bcTracker.latestCustomEndedSendSec === e) {
                        return false
                    }
                    if (typeof bcTracker.config.custom_ended !== 'object') {
                        return false
                    }
                    t = Math.floor(parseInt(t, 10));
                    if (e === t) {
                        return true
                    } else {
                        return false
                    }
                };
                bcTracker.sendBeacon = function (e) {
                    try {
                        var t = 'movie';
                        var r = bcTracker.player.mediainfo.id ? bcTracker.player.mediainfo.id : '';
                        var n = Math.floor(bcTracker.player.currentTime()).toString();
                        var i;
                        var a = Math.floor(bcTracker.player.mediainfo.duration);
                        if (a !== Infinity && a > 0) {
                            i = Math.floor(a).toString()
                        } else {
                            i = '0'
                        }
                        var s;
                        if (typeof window.__bcplayer_vr_sceneshare !== 'undefined') {
                            if (window.__bcplayer_vr_sceneshare === true) {
                                s = 'share'
                            }
                        }
                        var o = bcTracker.player.mediainfo.account_id;
                        var u = e.type === 'timeupdate' ? 'loop' : e.type;
                        var l = bcTracker.sessionId.toString() || '0';
                        var c = (++bcTracker.beaconSeq).toString();
                        vrOpt11 = bcTracker.player.mediainfo.id ? bcTracker.player.mediainfo.id : '';
                        var d = {
                            vr_opt1: t,
                            vr_opt2: r,
                            vr_opt3: n,
                            vr_opt4: i,
                            vr_opt5: s,
                            vr_opt6: o,
                            vr_opt7: u,
                            vr_opt9: l,
                            vr_opt10: c,
                            vr_opt11: vrOpt11
                        };
                        window.VR3252918568log7.click(window.location.href, d);
                        if (e.type === 'seeking' || e.type === 'seeked') {
                            bcTracker.latestSeekSendTime = Math.floor((new Date).getTime() / 1000)
                        }
                    } catch (e) {
                        var f = e
                    }
                };
                var player = this;
                player.ready(function () {
                    bcTracker.init(player)
                })
            })
        })(); (function () {
            if (videojs.getPlugin('brightcove_tx')) {
                return
            }
            videojs.registerPlugin('brightcove_tx', function (e) {
                console.log('brightcove_tx loaded 20190513');
                window.addEventListener('beforeunload', Se, false);
                var t = this;
                var r = t.id();
                var n,
                    i;
                var a,
                    s,
                    o,
                    u,
                    l,
                    c;
                var d,
                    f,
                    h,
                    p,
                    v,
                    m;
                var g = window.location.href;
                var y = [
                ];
                var _,
                    b;
                var T;
                var A = '';
                var S = '';
                var k = 0;
                var w = 1;
                var C = - 1;
                var E = 0;
                var I = 0;
                var P = false;
                var O = false;
                var x,
                    L;
                var D = false;
                var R = false;
                var M = false;
                var j = false;
                var U = false;
                var N = '1.0';
                var B = {
                    debug: false
                };
                if (e.debug != undefined && e.debug == true) {
                    B.debug = true
                }
                Ee();
                var q,
                    F,
                    V = 'https://edge.api.brightcove.com/playback/v1/accounts/',
                    H = 'BCpkADawqM1F2YPxbuFJzWtohXjxdgDgIJcsnWacQKaAuaf0gyu8yxCQUlca9Dh7V0Uu_8Rt5JUWZTpgcqzD_IT5hRVde8JIR7r1UYR73ne8S9iLSroqTOA2P-jtl2EUw_OrSMAtenvuaXRF',
                    z = '3971130137001',
                    G = '',
                    W = '',
                    Y;
                var X = false;
                if (e.playbackRatesEnabled != undefined && e.playbackRatesEnabled == true) {
                    X = true
                }
                var K = false;
                if (e.sceneShareEnabled != undefined && e.sceneShareEnabled == true) {
                    K = true
                }
                Ie('[Player Setting] playbackRatesEnabled: ' + X + ', sceneShareEnabled: ' + K);
                var Q = navigator.userAgent;
                var J = '';
                if (Q.search(/iPhone/) != - 1 || Q.search(/iPad/) != - 1 || Q.search(/iPod/) != - 1) {
                    J = 'ios'
                } else if (Q.search(/Android/) != - 1) {
                    J = 'android'
                } else {
                    J = 'desktop'
                }
                Ie('DeviceType = ' + J);
                t.ready(function () {
                    Ie('Player is ready');
                    var n = document.getElementById(r).getAttribute('data-sceneshare-enabled');
                    if (!Pe(n)) {
                        if (n == 'true') {
                            M = true
                        }
                    }
                    var i = document.getElementById(r).getAttribute('data-playbackRate-enabled');
                    if (!Pe(i)) {
                        if (i == 'true') {
                            j = true
                        }
                    }
                    Ie('[Embed Setting] data-sceneshare-enabled = ' + M + ', data-playbackRate-enabled = ' + j);
                    if (X) {
                        j = true
                    } else {
                        j = false
                    }
                    if (K && M) {
                        M = true
                    } else {
                        M = false
                    }
                    Ie('[Final Setting] SceneShare = ' + M + ', playbackRage = ' + j);
                    if (M) {
                        x = document.getElementById('player-share-button');
                        L = document.getElementById('player-share-sns');
                        if (Pe(x) || Pe(L)) {
                            M = false
                        }
                    }
                    if (j) {
                        if (Array.isArray(e.playbackRates)) {
                            Ie('settings.playbackRates' + e.playbackRates);
                            t.options_.sourceOrder = false;
                            if (t.controlBar.playbackRateMenuButton) {
                                var a = t.controlBar.playbackRateMenuButton;
                                a.removeChild(a.menu);
                                a.options_.playbackRates = e.playbackRates;
                                a.addChild(a.createMenu());
                                a.updateLabel();
                                a.updateVisibility()
                            } else {
                                t.controlBar.playbackRateMenuButton = t.controlBar.addChild('PlaybackRateMenuButton', {
                                    playbackRates: e.playbackRates
                                });
                                t.controlBar.playbackRateMenuButton.updateVisibility()
                            }
                            if (Array.isArray(e.playbackRateLabels)) {
                                _ = t.el().getElementsByClassName('vjs-playback-rate-value');
                                _[0].innerHTML = e.playbackRateLabels[0];
                                b = document.querySelectorAll('div.vjs-playback-rate.vjs-menu-button.vjs-menu-button-popup.vjs-control.vjs-button > div.vjs-menu > ul.vjs-menu-content > li.vjs-menu-item');
                                for (var s in e.playbackRates) {
                                    if (e.playbackRates.hasOwnProperty(s)) {
                                        for (De = 0; De < b.length; De++) {
                                            if (b[De].innerText.indexOf(e.playbackRates[s] + 'x') > - 1) {
                                                b[De].innerText = e.playbackRateLabels[s]
                                            }
                                        }
                                    }
                                }
                            }
                            if (videojs.browser.IE_VERSION && window.MediaSource) {
                                Ie('IE11 using MSE.');
                                prevPaused = false;
                                function o() {
                                    rateEl = document.getElementsByClassName('vjs-playback-rate-value')[0].innerText;
                                    N = rateEl.substr(0, 3);
                                    return N
                                }
                                t.on('pause', function () {
                                    N = o();
                                    prevPaused = true
                                });
                                t.on('ratechange', function () {
                                    if (t.paused()) {
                                        N = o()
                                    }
                                    t.one('timeupdate', function () {
                                        if (t.paused()) {
                                            N = o()
                                        }
                                        t.one('timeupdate', function () {
                                            N = o()
                                        })
                                    })
                                });
                                t.on('play', function () {
                                    t.playbackRate(N)
                                });
                                t.on('ads-pod-ended', function () {
                                    t.playbackRate(N);
                                    t.one('timeupdate', function () {
                                        for (var t in e.playbackRates) {
                                            if (N == e.playbackRates[t]) {
                                                document.getElementsByClassName('vjs-playback-rate-value')[0].innerText = e.playbackRateLabels[t]
                                            }
                                        }
                                    })
                                });
                                t.on('ima3-ad-error', function () {
                                    t.playbackRate(N);
                                    t.one('timeupdate', function () {
                                        for (var t in e.playbackRates) {
                                            if (N == e.playbackRates[t]) {
                                                document.getElementsByClassName('vjs-playback-rate-value')[0].innerText = e.playbackRateLabels[t]
                                            }
                                        }
                                    })
                                })
                            }
                        }
                    }
                });
                t.one('loadedmetadata', te);
                t.on('error', we);
                function Z() {
                    if (!O && !R) {
                        if (M) {
                            x.style.display = 'block'
                        }
                    }
                }
                function ee() {
                    if (M) {
                        x.style.display = 'none';
                        L.style.display = 'none'
                    }
                }
                function te(e) {
                    Ie('brightcove_tx #loadedmetadata');
                    Ie('myMediaInfo: ' + n + ' /videoid: ' + d + ' /video_duration: ' + f + ' /videoReferenceId: ' + i);
                    n = t.mediainfo;
                    d = n.id;
                    f = Math.floor(n.duration);
                    i = n.reference_id;
                    if (!Pe(n.custom_fields.programkey)) {
                        a = n.custom_fields.programkey
                    }
                    if (!Pe(n.custom_fields.bangumi)) {
                        u = n.custom_fields.bangumi
                    }
                    if (!Pe(n.custom_fields.genre)) {
                        o = n.custom_fields.genre
                    }
                    if (!Pe(n.custom_fields.onairdate)) {
                        l = n.custom_fields.onairdate
                    }
                    if (!Pe(n.custom_fields.releasedate)) {
                        var r = new Date;
                        c = n.custom_fields.releasedate;
                        var p = r.getTime() - Oe(c, '-').getTime();
                        var v = Math.floor(p / (1000 * 60 * 60 * 24));
                        h = ++v
                    }
                    if (!Pe(n.custom_fields.title)) {
                        s = n.custom_fields.title
                    }
                    var m = t.textTracks();
                    for (var g = 0; g < m.length; g++) {
                        if (m[g].kind === 'subtitles') {
                            m[g].mode = 'hidden'
                        }
                    }
                    ke('loaded', false);
                    t.one('play', oe);
                    t.one('playing', se);
                    t.one('leave', Se);
                    t.on('pause', le);
                    t.on('ended', ce);
                    t.on('seeked', fe);
                    t.on('seeking', de);
                    t.on('ratechange', ue);
                    t.on('progress', ne);
                    t.on('waiting', ie);
                    t.on('stalled', ae);
                    t.on('ads-request', he);
                    t.on('ads-ad-started', pe);
                    t.on('ads-first-quartile', ve);
                    t.on('ads-midpoint', me);
                    t.on('ads-third-quartile', ge);
                    t.on('ads-ad-ended', ye);
                    t.on('ads-pod-started', _e);
                    t.on('ads-pod-ended', be);
                    t.on('ima3-ad-error', ye);
                    t.on('adtimeout', ye);
                    t.on('fullscreenchange', Te);
                    t.on('timeupdate', Ae);
                    $(function () {
                        $('#playerWrapper').hover(function (e) {
                            U = true;
                            Z()
                        }, function (e) {
                            U = false;
                            ee()
                        })
                    })
                }
                function re(e, t, r) {
                    var n = new XMLHttpRequest,
                        i,
                        a,
                        s = function () {
                            try {
                                if (n.readyState === 4) {
                                    if (n.status >= 200 && n.status < 300) {
                                        i = n.responseText;
                                        a = JSON.parse(i);
                                        switch (e) {
                                            case 'video':
                                                r(a);
                                                break;
                                            case 'playlist':
                                                break
                                        }
                                    } else {
                                        Ie('There was a problem with the request. Request returned ' + n.status)
                                    }
                                }
                            } catch (e) {
                                Ie('Playback Request Error.')
                            }
                        };
                    n.onreadystatechange = s;
                    n.open('GET', t);
                    n.setRequestHeader('Accept', 'application/json;pk=' + H);
                    n.send()
                }
                function ne(e) {
                    Ie('progress')
                }
                function ie(e) {
                    Ie('waiting')
                }
                function ae(e) {
                    Ie('stalled')
                }
                function se(e) {
                    if (t.currentTime() < 60) {
                        console.log('datalayer.push video_view_0');
                        ke('video_view_0', false)
                    }
                    if (M) {
                        x.style.display = 'none';
                        L.style.display = 'none'
                    }
                }
                function oe(e) {
                    Ie('onPlay');
                    if (!O && !P && !R && M) {
                        L.style.display = 'none'
                    }
                    Ie('datalayer.push start');
                    ke('start', false)
                }
                function ue(r) {
                    T = t.playbackRate();
                    Ie('ratechange : ' + T);
                    ke('play_speed', false);
                    for (var n in e.playbackRates) {
                        if (T == e.playbackRates[n]) {
                            _[0].innerHTML = e.playbackRateLabels[n]
                        }
                    }
                }
                function le(e) {
                    Ie('onPause');
                    if (!O && !P && !R) {
                        if (M) {
                            L.style.display = 'none'
                        }
                    }
                    Ie('datalayer.push pause');
                    ke('pause', false)
                }
                function ce(e) {
                    Ie('datalayer.push ended');
                    ke('video_view_100', false);
                    Ie('datalayer.push completed');
                    ke('completed', false)
                }
                function de(e) {
                    Ie('seeking');
                    P = true
                }
                function fe(e) {
                    Ie('seeked');
                    P = false
                }
                function he(e) {
                    O = true;
                    if (M) {
                        x.style.display = 'none';
                        L.style.display = 'none'
                    }
                }
                function pe(e) {
                    m = t.ima3.currentAd.getCreativeId();
                    v = t.ima3.currentAd.getDuration();
                    adType = t.ads.adType;
                    adPodInfo = t.ima3.currentAd.getAdPodInfo();
                    p = adPodInfo.getPodIndex();
                    ke('ad_view_0', true)
                }
                function ve(e) {
                    Ie('datalayer.push ad_view_25')
                }
                function me(e) {
                    Ie('datalayer.push ad_view_50')
                }
                function ge(e) {
                    Ie('datalayer.push ad_view_75')
                }
                function ye(e) {
                    Ie('datalayer.push ad_view_100');
                    ke('ad_view_100', true);
                    O = false
                }
                function _e(e) {
                    Ie('datalayer.push ad_pod_start')
                }
                function be(e) {
                    O = false;
                    Ie('datalayer.push ad_pod_end')
                }
                function Te(e) {
                    if (t.isFullscreen()) {
                        R = true;
                        if (M) {
                            x.style.display = 'none';
                            L.style.display = 'none'
                        }
                    } else {
                        R = false
                    }
                    Ie('[onFullscreenChange] isFullscreen is ' + R)
                }
                function Ae(e) {
                    var r,
                        n,
                        i;
                    r = Math.round(t.currentTime());
                    n = Math.round(t.duration());
                    i = Math.round(r / n * 100);
                    if (i >= 25 && i < 50 && y.indexOf(25) < 0) {
                        Ie('datalayer.push video_view_25');
                        ke('video_view_25', false);
                        y.push(25)
                    }
                    if (i >= 50 && i < 75 && y.indexOf(50) < 0) {
                        Ie('datalayer.push video_view_50');
                        ke('video_view_50', false);
                        y.push(50)
                    }
                    if (i >= 75 && i < 100 && y.indexOf(75) < 0) {
                        Ie('datalayer.push video_view_75');
                        ke('video_view_75', false);
                        y.push(75)
                    }
                    if (r >= 300 && y.indexOf(300) < 0) {
                        Ie('datalayer.push video_view5min');
                        ke('video_view5min', false);
                        y.push(300)
                    }
                    if (M) {
                        if (r > 60) {
                            if (!D) {
                                D = true;
                                x.style.display = 'none';
                                x = document.getElementById('player-sceneshare-button');
                                if (U) {
                                    x.style.display = 'block'
                                }
                            }
                        } else {
                            if (D) {
                                D = false;
                                x.style.display = 'none';
                                x = document.getElementById('player-share-button');
                                if (U) {
                                    x.style.display = 'block'
                                }
                            }
                        }
                    }
                }
                function Se(e) {
                    Ie('datalayer.push leave');
                    ke('leave', false)
                }
                function ke(e, t) {
                    data = {
                        title: s,
                        bangumikey: a,
                        videoid: d,
                        genre: o,
                        url: g,
                        bangumi: u,
                        onair_date: l,
                        video_duration: f,
                        release_date: c,
                        release_days: h,
                        event: e
                    };
                    if (t) {
                        data.ad_duration = v;
                        data.ad_type = p
                    } else {
                        data.ad_duration = '';
                        data.ad_type = ''
                    }
                    if (e == 'play_speed') {
                        data.speed = T
                    }
                    Ie(data);
                    dataLayer.push(data)
                }
                function we(e) {
                    Ie(e)
                }
                function Ce(e) {
                    for (var t in B) {
                        if (t == e) return true
                    }
                    return false
                }
                function Ee() {
                    Ie(e);
                    if (Pe(e)) {
                        return
                    }
                    for (var t in e) {
                        if (Ce(t)) {
                            B[t] = e[t]
                        }
                    }
                }
                function Ie(e) {
                    if (B.debug) {
                        console.log(e)
                    } else if (typeof _bc_debug !== 'undefined' && _bc_debug) {
                        console.log(e)
                    }
                }
                function Pe(e) {
                    if (e != null && e != undefined && e != '' && e.length != 0) {
                        return false
                    }
                    return true
                }
                function Oe(e, t) {
                    var r = e.split(t);
                    return new Date(r[0], r[1] - 1, r[2])
                }
                function xe(e) {
                    var t = '';
                    t = V + z + '/videos/' + e;
                    return t
                }
                var Le = videojs.getAllPlayers()[0].textTracks();
                for (var De = 0; De < Le.length; De++) {
                    if (Le[De].kind === 'subtitles') {
                        Le[De].mode = 'hidden'
                    }
                }
                t.textTracks()
            })
        })(); !function (e) {
            function t(n) {
                if (r[n]) return r[n].exports;
                var i = r[n] = {
                    exports: {
                    },
                    id: n,
                    loaded: !1
                };
                return e[n].call(i.exports, i, i.exports, t),
                    i.loaded = !0,
                    i.exports
            }
            var r = {
            };
            t.m = e,
                t.c = r,
                t.p = '',
                t(0)
        }([function (e, t, r) {
            var n = r(1),
                i = r(76),
                a = r(72).GLOBAL;
            r(82)(n, a),
                i[a] = n
        },
        function (e, t, r) {
            function n(e) {
                return this instanceof n ? (this.init(e), this) : new n(e)
            }
            var i = r(2),
                a = r(9),
                s = r(71),
                o = r(73),
                u = r(64),
                l = r(72);
            n.prototype.init = function (e) {
                this.configure(e);
                for (var t in n.Plugins) n.Plugins.hasOwnProperty(t) && n.Plugins[t].configure.call(this, e)
            },
                n.version = n.prototype.version = o,
                n.prototype.log = function () {
                    for (var e = [
                        '[' + l.GLOBAL + ']'
                    ], t = 0, r = arguments.length - 1; t <= r; t++) e.push(arguments[t]);
                    'undefined' != typeof console && this.client.logging && console.log.apply(console, e)
                },
                n.prototype.configure = s.configure,
                n.prototype.set = s.set,
                n.prototype.get = s.get,
                n.prototype.ready = r(74),
                n.prototype.applyProperties = i.applyProperties,
                n.prototype.addRecord = i.addRecord,
                n.prototype._sendRecord = i._sendRecord,
                n.prototype.blockEvents = i.blockEvents,
                n.prototype.unblockEvents = i.unblockEvents,
                n.prototype.areEventsBlocked = i.areEventsBlocked,
                n.prototype.setSignedMode = i.setSignedMode,
                n.prototype.setAnonymousMode = i.setAnonymousMode,
                n.prototype.inSignedMode = i.inSignedMode,
                n.prototype.getCookie = u.getItem,
                n.prototype._configurator = s,
                n.Plugins = {
                    Clicks: r(75),
                    GlobalID: r(78),
                    Personalization: r(79),
                    Track: r(80)
                },
                a.forIn(n.Plugins, function (e) {
                    a.forIn(e, function (e, t) {
                        n.prototype[t] || (n.prototype[t] = e)
                    })
                }),
                e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                i(o.isString(e), 'Must provide a table'),
                    i(/^[a-z0-9_]{3,255}$/.test(e), 'Table must be between 3 and 255 characters and must consist only of lower case letters, numbers, and _'),
                    i(o.isObject(t), 'Must provide a record')
            }
            var i = r(3).invariant,
                a = r(3).noop,
                s = r(4),
                o = r(9),
                u = r(64),
                l = r(65),
                c = r(66);
            t.BLOCKEVENTSCOOKIE = '__td_blockEvents',
                t.SIGNEDMODECOOKIE = '__td_signed',
                t.blockEvents = function () {
                    l(this.client.storage, '__td_blockEvents', 'true')
                },
                t.unblockEvents = function () {
                    l(this.client.storage, '__td_blockEvents', 'false')
                },
                t.areEventsBlocked = function () {
                    return 'true' === u.getItem('__td_blockEvents')
                },
                t.setSignedMode = function (e) {
                    return l(this.client.storage, '__td_signed', 'true'),
                        this
                },
                t.setAnonymousMode = function (e) {
                    return l(this.client.storage, '__td_signed', 'false'),
                        this
                },
                t.inSignedMode = function () {
                    return 'false' !== u.getItem('__td_signed') && ('true' === u.getItem('__td_signed') || this.client.startInSignedMode)
                },
                t._sendRecord = function (e, t, r) {
                    if (t = t || a, r = r || a, !this.areEventsBlocked()) {
                        i('jsonp' === e.type, 'Request type ' + e.type + ' not supported');
                        var n = [
                            'api_key=' + encodeURIComponent(e.apikey),
                            'modified=' + encodeURIComponent((new Date).getTime()),
                            'data=' + encodeURIComponent(c(e.record))
                        ];
                        e.time && n.push('time=' + encodeURIComponent(e.time));
                        var o = e.url + '?' + n.join('&');
                        s(o, {
                            prefix: 'TreasureVideojsJSONPCallback',
                            timeout: 10000
                        }, function (e, n) {
                            return e ? r(e) : t(n)
                        })
                    }
                },
                t.applyProperties = function (e, t) {
                    return o.assign({
                    }, this.get('$global'), this.get(e), t)
                },
                t.addRecord = function (e, t, r, i) {
                    n(e, t);
                    var a = this.applyProperties(e, t),
                        s = this.inSignedMode() ? a : o.omit(a, [
                            'td_ip',
                            'td_client_id',
                            'td_global_id'
                        ]),
                        u = {
                            apikey: this.client.writeKey,
                            record: s,
                            time: null,
                            type: this.client.requestType,
                            url: this.client.endpoint + this.client.database + '/' + e
                        };
                    u.record.time && (u.time = u.record.time),
                        this.client.development ? this.log('addRecord', u) : this.areEventsBlocked() || this._sendRecord(u, r, i)
                },
                t._validateRecord = n
        },
        function (e, t) {
            function r(e) {
                var t = !1;
                return function () {
                    t || (t = !0, e())
                }
            }
            function n(e, t) {
                if (!e) throw new Error(t)
            }
            function i() {
            }
            e.exports = {
                disposable: r,
                invariant: n,
                noop: i
            }
        },
        function (e, t, r) {
            function n() {
            }
            function i(e, t, r) {
                function i() {
                    u.parentNode && u.parentNode.removeChild(u),
                        window[d] = n,
                        l && clearTimeout(l)
                }
                function o() {
                    window[d] && i()
                }
                'function' == typeof t && (r = t, t = {
                }),
                    t || (t = {
                    });
                var u,
                    l,
                    c = t.prefix || '__jp',
                    d = t.name || c + s++,
                    f = t.param || 'callback',
                    h = null != t.timeout ? t.timeout : 60000,
                    p = encodeURIComponent,
                    v = document.getElementsByTagName('script')[0] || document.head;
                return h && (l = setTimeout(function () {
                    i(),
                        r && r(new Error('Timeout'))
                }, h)),
                    window[d] = function (e) {
                        a('jsonp got', e),
                            i(),
                            r && r(null, e)
                    },
                    e += (~e.indexOf('?') ? '&' : '?') + f + '=' + p(d),
                    e = e.replace('?&', '?'),
                    a('jsonp req "%s"', e),
                    u = document.createElement('script'),
                    u.src = e,
                    v.parentNode.insertBefore(u, v),
                    o
            }
            var a = r(5)('jsonp');
            e.exports = i;
            var s = 0
        },
        function (e, t, r) {
            (function (n) {
                function i() {
                    return !('undefined' == typeof window || !window.process || 'renderer' !== window.process.type) || ('undefined' != typeof document && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || 'undefined' != typeof window && window.console && (window.console.firebug || window.console.exception && window.console.table) || 'undefined' != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || 'undefined' != typeof navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))
                }
                function a(e) {
                    var r = this.useColors;
                    if (e[0] = (r ? '%c' : '') + this.namespace + (r ? ' %c' : ' ') + e[0] + (r ? '%c ' : ' ') + '+' + t.humanize(this.diff), r) {
                        var n = 'color: ' + this.color;
                        e.splice(1, 0, n, 'color: inherit');
                        var i = 0,
                            a = 0;
                        e[0].replace(/%[a-zA-Z%]/g, function (e) {
                            '%%' !== e && (i++, '%c' === e && (a = i))
                        }),
                            e.splice(a, 0, n)
                    }
                }
                function s() {
                    return 'object' == typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments)
                }
                function o(e) {
                    try {
                        null == e ? t.storage.removeItem('debug') : t.storage.debug = e
                    } catch (e) {
                    }
                }
                function u() {
                    var e;
                    try {
                        e = t.storage.debug
                    } catch (e) {
                    }
                    return !e && void 0 !== n && 'env' in n && (e = n.env.DEBUG),
                        e
                }
                t = e.exports = r(7),
                    t.log = s,
                    t.formatArgs = a,
                    t.save = o,
                    t.load = u,
                    t.useColors = i,
                    t.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : function () {
                        try {
                            return window.localStorage
                        } catch (e) {
                        }
                    }(),
                    t.colors = [
                        'lightseagreen',
                        'forestgreen',
                        'goldenrod',
                        'dodgerblue',
                        'darkorchid',
                        'crimson'
                    ],
                    t.formatters.j = function (e) {
                        try {
                            return JSON.stringify(e)
                        } catch (e) {
                            return '[UnexpectedJSONParseError]: ' + e.message
                        }
                    },
                    t.enable(u())
            }).call(t, r(6))
        },
        function (e, t) {
            function r() {
                throw new Error('setTimeout has not been defined')
            }
            function n() {
                throw new Error('clearTimeout has not been defined')
            }
            function i(e) {
                if (c === setTimeout) return setTimeout(e, 0);
                if ((c === r || !c) && setTimeout) return c = setTimeout,
                    setTimeout(e, 0);
                try {
                    return c(e, 0)
                } catch (t) {
                    try {
                        return c.call(null, e, 0)
                    } catch (t) {
                        return c.call(this, e, 0)
                    }
                }
            }
            function a(e) {
                if (d === clearTimeout) return clearTimeout(e);
                if ((d === n || !d) && clearTimeout) return d = clearTimeout,
                    clearTimeout(e);
                try {
                    return d(e)
                } catch (t) {
                    try {
                        return d.call(null, e)
                    } catch (t) {
                        return d.call(this, e)
                    }
                }
            }
            function s() {
                v && h && (v = !1, h.length ? p = h.concat(p) : m = - 1, p.length && o())
            }
            function o() {
                if (!v) {
                    var e = i(s);
                    v = !0;
                    for (var t = p.length; t;) {
                        for (h = p, p = [
                        ]; ++m < t;) h && h[m].run();
                        m = - 1,
                            t = p.length
                    }
                    h = null,
                        v = !1,
                        a(e)
                }
            }
            function u(e, t) {
                this.fun = e,
                    this.array = t
            }
            function l() {
            }
            var c,
                d,
                f = e.exports = {
                };
            !function () {
                try {
                    c = 'function' == typeof setTimeout ? setTimeout : r
                } catch (e) {
                    c = r
                }
                try {
                    d = 'function' == typeof clearTimeout ? clearTimeout : n
                } catch (e) {
                    d = n
                }
            }();
            var h,
                p = [
                ],
                v = !1,
                m = - 1;
            f.nextTick = function (e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1) for (var r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];
                p.push(new u(e, t)),
                    1 !== p.length || v || i(o)
            },
                u.prototype.run = function () {
                    this.fun.apply(null, this.array)
                },
                f.title = 'browser',
                f.browser = !0,
                f.env = {
                },
                f.argv = [
                ],
                f.version = '',
                f.versions = {
                },
                f.on = l,
                f.addListener = l,
                f.once = l,
                f.off = l,
                f.removeListener = l,
                f.removeAllListeners = l,
                f.emit = l,
                f.binding = function (e) {
                    throw new Error('process.binding is not supported')
                },
                f.cwd = function () {
                    return '/'
                },
                f.chdir = function (e) {
                    throw new Error('process.chdir is not supported')
                },
                f.umask = function () {
                    return 0
                }
        },
        function (e, t, r) {
            function n(e) {
                var r,
                    n = 0;
                for (r in e) n = (n << 5) - n + e.charCodeAt(r),
                    n |= 0;
                return t.colors[Math.abs(n) % t.colors.length]
            }
            function i(e) {
                function r() {
                    if (r.enabled) {
                        var e = r,
                            n = + new Date,
                            i = n - (l || n);
                        e.diff = i,
                            e.prev = l,
                            e.curr = n,
                            l = n;
                        for (var a = new Array(arguments.length), s = 0; s < a.length; s++) a[s] = arguments[s];
                        a[0] = t.coerce(a[0]),
                            'string' != typeof a[0] && a.unshift('%O');
                        var o = 0;
                        a[0] = a[0].replace(/%([a-zA-Z%])/g, function (r, n) {
                            if ('%%' === r) return r;
                            o++;
                            var i = t.formatters[n];
                            if ('function' == typeof i) {
                                var s = a[o];
                                r = i.call(e, s),
                                    a.splice(o, 1),
                                    o--
                            }
                            return r
                        }),
                            t.formatArgs.call(e, a);
                        (r.log || t.log || console.log.bind(console)).apply(e, a)
                    }
                }
                return r.namespace = e,
                    r.enabled = t.enabled(e),
                    r.useColors = t.useColors(),
                    r.color = n(e),
                    'function' == typeof t.init && t.init(r),
                    r
            }
            function a(e) {
                t.save(e),
                    t.names = [
                    ],
                    t.skips = [
                    ];
                for (var r = ('string' == typeof e ? e : '').split(/[\s,]+/), n = r.length, i = 0; i < n; i++) r[i] && (e = r[i].replace(/\*/g, '.*?'), '-' === e[0] ? t.skips.push(new RegExp('^' + e.substr(1) + '$')) : t.names.push(new RegExp('^' + e + '$')))
            }
            function s() {
                t.enable('')
            }
            function o(e) {
                var r,
                    n;
                for (r = 0, n = t.skips.length; r < n; r++) if (t.skips[r].test(e)) return !1;
                for (r = 0, n = t.names.length; r < n; r++) if (t.names[r].test(e)) return !0;
                return !1
            }
            function u(e) {
                return e instanceof Error ? e.stack || e.message : e
            }
            t = e.exports = i.debug = i['default'] = i,
                t.coerce = u,
                t.disable = s,
                t.enable = a,
                t.enabled = o,
                t.humanize = r(8),
                t.names = [
                ],
                t.skips = [
                ],
                t.formatters = {
                };
            var l
        },
        function (e, t) {
            function r(e) {
                if (e = String(e), !(e.length > 100)) {
                    var t = /^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);
                    if (t) {
                        var r = parseFloat(t[1]);
                        switch ((t[2] || 'ms').toLowerCase()) {
                            case 'years':
                            case 'year':
                            case 'yrs':
                            case 'yr':
                            case 'y':
                                return r * c;
                            case 'days':
                            case 'day':
                            case 'd':
                                return r * l;
                            case 'hours':
                            case 'hour':
                            case 'hrs':
                            case 'hr':
                            case 'h':
                                return r * u;
                            case 'minutes':
                            case 'minute':
                            case 'mins':
                            case 'min':
                            case 'm':
                                return r * o;
                            case 'seconds':
                            case 'second':
                            case 'secs':
                            case 'sec':
                            case 's':
                                return r * s;
                            case 'milliseconds':
                            case 'millisecond':
                            case 'msecs':
                            case 'msec':
                            case 'ms':
                                return r;
                            default:
                                return undefined
                        }
                    }
                }
            }
            function n(e) {
                return e >= l ? Math.round(e / l) + 'd' : e >= u ? Math.round(e / u) + 'h' : e >= o ? Math.round(e / o) + 'm' : e >= s ? Math.round(e / s) + 's' : e + 'ms'
            }
            function i(e) {
                return a(e, l, 'day') || a(e, u, 'hour') || a(e, o, 'minute') || a(e, s, 'second') || e + ' ms'
            }
            function a(e, t, r) {
                if (!(e < t)) return e < 1.5 * t ? Math.floor(e / t) + ' ' + r : Math.ceil(e / t) + ' ' + r + 's'
            }
            var s = 1000,
                o = 60 * s,
                u = 60 * o,
                l = 24 * u,
                c = 365.25 * l;
            e.exports = function (e, t) {
                t = t || {
                };
                var a = typeof e;
                if ('string' === a && e.length > 0) return r(e);
                if ('number' === a && !1 === isNaN(e)) return t['long'] ? i(e) : n(e);
                throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(e))
            }
        },
        function (e, t, r) {
            e.exports = {
                forEach: r(10),
                isNumber: r(39),
                isObject: r(17),
                isString: r(18),
                isArray: r(32),
                keys: r(21),
                assign: r(40),
                forIn: r(47),
                omit: r(49),
                noop: r(63)
            }
        },
        function (e, t, r) {
            var n = r(11),
                i = r(12),
                a = r(36),
                s = a(n, i);
            e.exports = s
        },
        function (e, t) {
            function r(e, t) {
                for (var r = - 1, n = e.length; ++r < n && !1 !== t(e[r], r, e););
                return e
            }
            e.exports = r
        },
        function (e, t, r) {
            var n = r(13),
                i = r(35),
                a = i(n);
            e.exports = a
        },
        function (e, t, r) {
            function n(e, t) {
                return i(e, t, a)
            }
            var i = r(14),
                a = r(21);
            e.exports = n
        },
        function (e, t, r) {
            var n = r(15),
                i = n();
            e.exports = i
        },
        function (e, t, r) {
            function n(e) {
                return function (t, r, n) {
                    for (var a = i(t), s = n(t), o = s.length, u = e ? o : - 1; e ? u-- : ++u < o;) {
                        var l = s[u];
                        if (!1 === r(a[l], l, a)) break
                    }
                    return t
                }
            }
            var i = r(16);
            e.exports = n
        },
        function (e, t, r) {
            function n(e) {
                if (s.unindexedChars && a(e)) {
                    for (var t = - 1, r = e.length, n = Object(e); ++t < r;) n[t] = e.charAt(t);
                    return n
                }
                return i(e) ? e : Object(e)
            }
            var i = r(17),
                a = r(18),
                s = r(20);
            e.exports = n
        },
        function (e, t) {
            function r(e) {
                var t = typeof e;
                return !!e && ('object' == t || 'function' == t)
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                return 'string' == typeof e || i(e) && o.call(e) == a
            }
            var i = r(19),
                a = '[object String]',
                s = Object.prototype,
                o = s.toString;
            e.exports = n
        },
        function (e, t) {
            function r(e) {
                return !!e && 'object' == typeof e
            }
            e.exports = r
        },
        function (e, t) {
            var r = Array.prototype,
                n = Error.prototype,
                i = Object.prototype,
                a = i.propertyIsEnumerable,
                s = r.splice,
                o = {
                };
            !function (e) {
                var t = function () {
                    this.x = 1
                },
                    r = {
                        0: 1,
                        length: 1
                    },
                    i = [
                    ];
                t.prototype = {
                    valueOf: 1,
                    y: 1
                };
                for (var u in new t) i.push(u);
                o.enumErrorProps = a.call(n, 'message') || a.call(n, 'name'),
                    o.enumPrototypes = a.call(t, 'prototype'),
                    o.nonEnumShadows = !/valueOf/.test(i),
                    o.ownLast = 'x' != i[0],
                    o.spliceObjects = (s.call(r, 0, 1), !r[0]),
                    o.unindexedChars = 'x'[0] + Object('x')[0] != 'xx'
            }(),
                e.exports = o
        },
        function (e, t, r) {
            var n = r(22),
                i = r(26),
                a = r(17),
                s = r(30),
                o = r(20),
                u = n(Object, 'keys'),
                l = u ? function (e) {
                    var t = null == e ? undefined : e.constructor;
                    return 'function' == typeof t && t.prototype === e || ('function' == typeof e ? o.enumPrototypes : i(e)) ? s(e) : a(e) ? u(e) : [
                    ]
                }
                    : s;
            e.exports = l
        },
        function (e, t, r) {
            function n(e, t) {
                var r = null == e ? undefined : e[t];
                return i(r) ? r : undefined
            }
            var i = r(23);
            e.exports = n
        },
        function (e, t, r) {
            function n(e) {
                return null != e && (i(e) ? d.test(l.call(e)) : s(e) && (a(e) ? d : o).test(e))
            }
            var i = r(24),
                a = r(25),
                s = r(19),
                o = /^\[object .+?Constructor\]$/,
                u = Object.prototype,
                l = Function.prototype.toString,
                c = u.hasOwnProperty,
                d = RegExp('^' + l.call(c).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
            e.exports = n
        },
        function (e, t, r) {
            function n(e) {
                return i(e) && o.call(e) == a
            }
            var i = r(17),
                a = '[object Function]',
                s = Object.prototype,
                o = s.toString;
            e.exports = n
        },
        function (e, t) {
            var r = function () {
                try {
                    Object({
                        toString: 0
                    }
                        + '')
                } catch (e) {
                    return function () {
                        return !1
                    }
                }
                return function (e) {
                    return 'function' != typeof e.toString && 'string' == typeof (e + '')
                }
            }();
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                return null != e && a(i(e))
            }
            var i = r(27),
                a = r(29);
            e.exports = n
        },
        function (e, t, r) {
            var n = r(28),
                i = n('length');
            e.exports = i
        },
        function (e, t, r) {
            function n(e) {
                return function (t) {
                    return null == t ? undefined : i(t)[e]
                }
            }
            var i = r(16);
            e.exports = n
        },
        function (e, t) {
            function r(e) {
                return 'number' == typeof e && e > - 1 && e % 1 == 0 && e <= n
            }
            var n = 9007199254740991;
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                for (var t = l(e), r = t.length, n = r && e.length, c = !!n && o(n) && (a(e) || i(e) || u(e)), f = - 1, h = [
                ]; ++f < r;) {
                    var p = t[f];
                    (c && s(p, n) || d.call(e, p)) && h.push(p)
                }
                return h
            }
            var i = r(31),
                a = r(32),
                s = r(33),
                o = r(29),
                u = r(18),
                l = r(34),
                c = Object.prototype,
                d = c.hasOwnProperty;
            e.exports = n
        },
        function (e, t, r) {
            function n(e) {
                return a(e) && i(e) && o.call(e, 'callee') && !u.call(e, 'callee')
            }
            var i = r(26),
                a = r(19),
                s = Object.prototype,
                o = s.hasOwnProperty,
                u = s.propertyIsEnumerable;
            e.exports = n
        },
        function (e, t, r) {
            var n = r(22),
                i = r(29),
                a = r(19),
                s = Object.prototype,
                o = s.toString,
                u = n(Array, 'isArray'),
                l = u || function (e) {
                    return a(e) && i(e.length) && '[object Array]' == o.call(e)
                };
            e.exports = l
        },
        function (e, t) {
            function r(e, t) {
                return e = 'number' == typeof e || n.test(e) ? + e : - 1,
                    t = null == t ? i : t,
                    e > - 1 && e % 1 == 0 && e < t
            }
            var n = /^\d+$/,
                i = 9007199254740991;
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                if (null == e) return [];
                c(e) || (e = Object(e));
                var t = e.length;
                t = t && l(t) && (s(e) || a(e) || d(e)) && t || 0;
                for (var r = e.constructor, n = - 1, i = o(r) && r.prototype || y, S = i === e, k = Array(t), w = t > 0, C = f.enumErrorProps && (e === g || e instanceof Error), E = f.enumPrototypes && o(e); ++n < t;) k[n] = n + '';
                for (var I in e) E && 'prototype' == I || C && ('message' == I || 'name' == I) || w && u(I, t) || 'constructor' == I && (S || !b.call(e, I)) || k.push(I);
                if (f.nonEnumShadows && e !== y) {
                    var P = e === _ ? v : e === g ? h : T.call(e),
                        O = A[P] || A[p];
                    for (P == p && (i = y), t = m.length; t--;) {
                        I = m[t];
                        var x = O[I];
                        S && x || (x ? !b.call(e, I) : e[I] === i[I]) || k.push(I)
                    }
                }
                return k
            }
            var i = r(11),
                a = r(31),
                s = r(32),
                o = r(24),
                u = r(33),
                l = r(29),
                c = r(17),
                d = r(18),
                f = r(20),
                h = '[object Error]',
                p = '[object Object]',
                v = '[object String]',
                m = [
                    'constructor',
                    'hasOwnProperty',
                    'isPrototypeOf',
                    'propertyIsEnumerable',
                    'toLocaleString',
                    'toString',
                    'valueOf'
                ],
                g = Error.prototype,
                y = Object.prototype,
                _ = String.prototype,
                b = y.hasOwnProperty,
                T = y.toString,
                A = {
                };
            A['[object Array]'] = A['[object Date]'] = A['[object Number]'] = {
                constructor: !0,
                toLocaleString: !0,
                toString: !0,
                valueOf: !0
            },
                A['[object Boolean]'] = A[v] = {
                    constructor: !0,
                    toString: !0,
                    valueOf: !0
                },
                A[h] = A['[object Function]'] = A['[object RegExp]'] = {
                    constructor: !0,
                    toString: !0
                },
                A[p] = {
                    constructor: !0
                },
                i(m, function (e) {
                    for (var t in A) if (b.call(A, t)) {
                        var r = A[t];
                        r[e] = b.call(r, e)
                    }
                }),
                e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                return function (r, n) {
                    var o = r ? i(r) : 0;
                    if (!a(o)) return e(r, n);
                    for (var u = t ? o : - 1, l = s(r); (t ? u-- : ++u < o) && !1 !== n(l[u], u, l););
                    return r
                }
            }
            var i = r(27),
                a = r(29),
                s = r(16);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                return function (r, n, s) {
                    return 'function' == typeof n && s === undefined && a(r) ? e(r, n) : t(r, i(n, s, 3))
                }
            }
            var i = r(37),
                a = r(32);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t, r) {
                if ('function' != typeof e) return i;
                if (t === undefined) return e;
                switch (r) {
                    case 1:
                        return function (r) {
                            return e.call(t, r)
                        };
                    case 3:
                        return function (r, n, i) {
                            return e.call(t, r, n, i)
                        };
                    case 4:
                        return function (r, n, i, a) {
                            return e.call(t, r, n, i, a)
                        };
                    case 5:
                        return function (r, n, i, a, s) {
                            return e.call(t, r, n, i, a, s)
                        }
                }
                return function () {
                    return e.apply(t, arguments)
                }
            }
            var i = r(38);
            e.exports = n
        },
        function (e, t) {
            function r(e) {
                return e
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                return 'number' == typeof e || i(e) && o.call(e) == a
            }
            var i = r(19),
                a = '[object Number]',
                s = Object.prototype,
                o = s.toString;
            e.exports = n
        },
        function (e, t, r) {
            var n = r(41),
                i = r(42),
                a = r(44),
                s = a(function (e, t, r) {
                    return r ? n(e, t, r) : i(e, t)
                });
            e.exports = s
        },
        function (e, t, r) {
            function n(e, t, r) {
                for (var n = - 1, a = i(t), s = a.length; ++n < s;) {
                    var o = a[n],
                        u = e[o],
                        l = r(u, t[o], o, e, t);
                    (l === l ? l === u : u !== u) && (u !== undefined || o in e) || (e[o] = l)
                }
                return e
            }
            var i = r(21);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                return null == t ? e : i(t, a(t), e)
            }
            var i = r(43),
                a = r(21);
            e.exports = n
        },
        function (e, t) {
            function r(e, t, r) {
                r || (r = {
                });
                for (var n = - 1, i = t.length; ++n < i;) {
                    var a = t[n];
                    r[a] = e[a]
                }
                return r
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                return s(function (t, r) {
                    var n = - 1,
                        s = null == t ? 0 : r.length,
                        o = s > 2 ? r[s - 2] : undefined,
                        u = s > 2 ? r[2] : undefined,
                        l = s > 1 ? r[s - 1] : undefined;
                    for ('function' == typeof o ? (o = i(o, l, 5), s -= 2) : (o = 'function' == typeof l ? l : undefined, s -= o ? 1 : 0), u && a(r[0], r[1], u) && (o = s < 3 ? undefined : o, s = 1); ++n < s;) {
                        var c = r[n];
                        c && e(t, c, o)
                    }
                    return t
                })
            }
            var i = r(37),
                a = r(45),
                s = r(46);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t, r) {
                if (!s(r)) return !1;
                var n = typeof t;
                if ('number' == n ? i(r) && a(t, r.length) : 'string' == n && t in r) {
                    var o = r[t];
                    return e === e ? e === o : o !== o
                }
                return !1
            }
            var i = r(26),
                a = r(33),
                s = r(17);
            e.exports = n
        },
        function (e, t) {
            function r(e, t) {
                if ('function' != typeof e) throw new TypeError(n);
                return t = i(t === undefined ? e.length - 1 : + t || 0, 0),
                    function () {
                        for (var r = arguments, n = - 1, a = i(r.length - t, 0), s = Array(a); ++n < a;) s[n] = r[t + n];
                        switch (t) {
                            case 0:
                                return e.call(this, s);
                            case 1:
                                return e.call(this, r[0], s);
                            case 2:
                                return e.call(this, r[0], r[1], s)
                        }
                        var o = Array(t + 1);
                        for (n = - 1; ++n < t;) o[n] = r[n];
                        return o[t] = s,
                            e.apply(this, o)
                    }
            }
            var n = 'Expected a function',
                i = Math.max;
            e.exports = r
        },
        function (e, t, r) {
            var n = r(14),
                i = r(48),
                a = i(n);
            e.exports = a
        },
        function (e, t, r) {
            function n(e) {
                return function (t, r, n) {
                    return 'function' == typeof r && n === undefined || (r = i(r, n, 3)),
                        e(t, r, a)
                }
            }
            var i = r(37),
                a = r(34);
            e.exports = n
        },
        function (e, t, r) {
            var n = r(50),
                i = r(51),
                a = r(58),
                s = r(37),
                o = r(34),
                u = r(60),
                l = r(61),
                c = r(46),
                d = c(function (e, t) {
                    if (null == e) return {
                    };
                    if ('function' != typeof t[0]) {
                        var t = n(a(t), String);
                        return u(e, i(o(e), t))
                    }
                    var r = s(t[0], t[1], 3);
                    return l(e, function (e, t, n) {
                        return !r(e, t, n)
                    })
                });
            e.exports = d
        },
        function (e, t) {
            function r(e, t) {
                for (var r = - 1, n = e.length, i = Array(n); ++r < n;) i[r] = t(e[r], r, e);
                return i
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e, t) {
                var r = e ? e.length : 0,
                    n = [
                    ];
                if (!r) return n;
                var u = - 1,
                    l = i,
                    c = !0,
                    d = c && t.length >= o ? s(t) : null,
                    f = t.length;
                d && (l = a, c = !1, t = d);
                e: for (; ++u < r;) {
                    var h = e[u];
                    if (c && h === h) {
                        for (var p = f; p--;) if (t[p] === h) continue e;
                        n.push(h)
                    } else l(t, h, 0) < 0 && n.push(h)
                }
                return n
            }
            var i = r(52),
                a = r(54),
                s = r(55),
                o = 200;
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t, r) {
                if (t !== t) return i(e, r);
                for (var n = r - 1, a = e.length; ++n < a;) if (e[n] === t) return n;
                return - 1
            }
            var i = r(53);
            e.exports = n
        },
        function (e, t) {
            function r(e, t, r) {
                for (var n = e.length, i = t + (r ? 0 : - 1); r ? i-- : ++i < n;) {
                    var a = e[i];
                    if (a !== a) return i
                }
                return - 1
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e, t) {
                var r = e.data;
                return ('string' == typeof t || i(t) ? r.set.has(t) : r.hash[t]) ? 0 : - 1
            }
            var i = r(17);
            e.exports = n
        },
        function (e, t, r) {
            (function (t) {
                function n(e) {
                    return o && s ? new i(e) : null
                }
                var i = r(56),
                    a = r(22),
                    s = a(t, 'Set'),
                    o = a(Object, 'create');
                e.exports = n
            }).call(t, function () {
                return this
            }())
        },
        function (e, t, r) {
            (function (t) {
                function n(e) {
                    var t = e ? e.length : 0;
                    for (this.data = {
                        hash: o(null),
                        set: new s
                    }; t--;) this.push(e[t])
                }
                var i = r(57),
                    a = r(22),
                    s = a(t, 'Set'),
                    o = a(Object, 'create');
                n.prototype.push = i,
                    e.exports = n
            }).call(t, function () {
                return this
            }())
        },
        function (e, t, r) {
            function n(e) {
                var t = this.data;
                'string' == typeof e || i(e) ? t.set.add(e) : t.hash[e] = !0
            }
            var i = r(17);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t, r, l) {
                l || (l = [
                ]);
                for (var c = - 1, d = e.length; ++c < d;) {
                    var f = e[c];
                    u(f) && o(f) && (r || s(f) || a(f)) ? t ? n(f, t, r, l) : i(l, f) : r || (l[l.length] = f)
                }
                return l
            }
            var i = r(59),
                a = r(31),
                s = r(32),
                o = r(26),
                u = r(19);
            e.exports = n
        },
        function (e, t) {
            function r(e, t) {
                for (var r = - 1, n = t.length, i = e.length; ++r < n;) e[i + r] = t[r];
                return e
            }
            e.exports = r
        },
        function (e, t, r) {
            function n(e, t) {
                e = i(e);
                for (var r = - 1, n = t.length, a = {
                }; ++r < n;) {
                    var s = t[r];
                    s in e && (a[s] = e[s])
                }
                return a
            }
            var i = r(16);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                var r = {
                };
                return i(e, function (e, n, i) {
                    t(e, n, i) && (r[n] = e)
                }),
                    r
            }
            var i = r(62);
            e.exports = n
        },
        function (e, t, r) {
            function n(e, t) {
                return i(e, t, a)
            }
            var i = r(14),
                a = r(34);
            e.exports = n
        },
        function (e, t) {
            function r() {
            }
            e.exports = r
        },
        function (e, t) {
            var r = function (e) {
                try {
                    return encodeURIComponent(e)
                } catch (e) {
                    console.error('error encode %o')
                }
                return null
            },
                n = function (e) {
                    try {
                        return decodeURIComponent(e)
                    } catch (e) {
                        console.error('error decode %o')
                    }
                    return null
                },
                i = function (e) {
                    return r(e).replace(/[\-\.\+\*]/g, '\\$&')
                },
                a = {
                    getItem: function (e) {
                        return e ? n(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\s*' + i(e) + '\\s*\\=\\s*([^;]*).*$)|^.*$'), '$1')) || null : null
                    },
                    setItem: function (e, t, n, i, a, s) {
                        if (!e || /^(?:expires|max\-age|path|domain|secure)$/i.test(e)) return !1;
                        var o = '';
                        if (n) switch (n.constructor) {
                            case Number:
                                o = n === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + n;
                                break;
                            case String:
                                o = '; expires=' + n;
                                break;
                            case Date:
                                o = '; expires=' + n.toUTCString()
                        }
                        return document.cookie = [
                            r(e),
                            '=',
                            r(t),
                            o,
                            a ? '; domain=' + a : '',
                            i ? '; path=' + i : '',
                            s ? '; secure' : ''
                        ].join(''),
                            !0
                    },
                    removeItem: function (e, t, n) {
                        return !!this.hasItem(e) && (document.cookie = [
                            r(e),
                            '=; expires=Thu, 01 Jan 1970 00:00:00 GMT',
                            n ? '; domain=' + n : '',
                            t ? '; path=' + t : ''
                        ].join(''), !0)
                    },
                    hasItem: function (e) {
                        return !!e && new RegExp('(?:^|;\\s*)' + r(e).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=').test(document.cookie)
                    },
                    keys: function () {
                        var e = document.cookie.replace(/((?:^|\s*;)[^=]+)(?=;|$)|^\s*|\s*(?:=[^;]*)?(?:\1|$)/g, '').split(/\s*(?:=[^;]*)?;\s*/);
                        return e = e.map(function (e) {
                            return n(e)
                        })
                    }
                };
            e.exports = a
        },
        function (e, t, r) {
            function n(e) {
                for (var t = e.split('.'), r = [
                ], n = t.length - 1; n >= 0; n--) r.push(t.slice(n).join('.'));
                return r
            }
            var i = r(64),
                a = r(9);
            e.exports = function (e, t, r) {
                var s = a.assign({
                }, e),
                    o = {
                        ip: e.domain.match(/\d*\.\d*\.\d*\.\d*$/),
                        local: 'localhost' === e.domain,
                        custom: e.customDomain
                    },
                    u = new Date;
                if (u.setSeconds(u.getSeconds() + s.expires), o.ip || o.local || o.custom) s.domain = o.local ? null : s.domain,
                    i.setItem(t, r, u, s.path, s.domain);
                else {
                    var l = n(e.domain),
                        c = l.length,
                        d = 0;
                    if (r) {
                        for (; d < c; d++) if (s.domain = l[d], i.setItem(t, r, u, s.path, s.domain), i.getItem(t) === r) {
                            e.domain = s.domain;
                            break
                        }
                    } else for (; d < c; d++) i.removeItem(t, e.path, l[d])
                }
            }
        },
        function (e, t, r) {
            var n = r(67),
                i = r(70);
            e.exports = function (e) {
                return i(n.stringify(e))
            }
        },
        function (e, t, r) {
            var n;
            (function (e, i) {
                (function () {
                    function a(e, t) {
                        function r(e) {
                            if (r[e] !== m) return r[e];
                            var a;
                            if ('bug-string-char-index' == e) a = 'a' != 'a'[0];
                            else if ('json' == e) a = r('json-stringify') && r('json-parse');
                            else {
                                var s,
                                    o = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';
                                if ('json-stringify' == e) {
                                    var l = t.stringify,
                                        c = 'function' == typeof l && _;
                                    if (c) {
                                        (s = function () {
                                            return 1
                                        }).toJSON = s;
                                        try {
                                            c = '0' === l(0) && '0' === l(new n) && '""' == l(new i) && l(y) === m && l(m) === m && l() === m && '1' === l(s) && '[1]' == l([s]) && '[null]' == l([m]) && 'null' == l(null) && '[null,null,null]' == l([m,
                                                y,
                                                null]) && l({
                                                    a: [
                                                        s,
                                                        !0,
                                                        !1,
                                                        null,
                                                        '\0\n\f\r\t'
                                                    ]
                                                }) == o && '1' === l(null, s) && '[\n 1,\n 2\n]' == l([1,
                                                    2], null, 1) && '"-271821-04-20T00:00:00.000Z"' == l(new u(- 8640000000000000)) && '"+275760-09-13T00:00:00.000Z"' == l(new u(8640000000000000)) && '"-000001-01-01T00:00:00.000Z"' == l(new u(- 62198755200000)) && '"1969-12-31T23:59:59.999Z"' == l(new u(- 1))
                                        } catch (e) {
                                            c = !1
                                        }
                                    }
                                    a = c
                                }
                                if ('json-parse' == e) {
                                    var d = t.parse;
                                    if ('function' == typeof d) try {
                                        if (0 === d('0') && !d(!1)) {
                                            s = d(o);
                                            var f = 5 == s.a.length && 1 === s.a[0];
                                            if (f) {
                                                try {
                                                    f = !d('"\t"')
                                                } catch (e) {
                                                }
                                                if (f) try {
                                                    f = 1 !== d('01')
                                                } catch (e) {
                                                }
                                                if (f) try {
                                                    f = 1 !== d('1.')
                                                } catch (e) {
                                                }
                                            }
                                        }
                                    } catch (e) {
                                        f = !1
                                    }
                                    a = f
                                }
                            }
                            return r[e] = !!a
                        }
                        e || (e = l.Object()),
                            t || (t = l.Object());
                        var n = e.Number || l.Number,
                            i = e.String || l.String,
                            s = e.Object || l.Object,
                            u = e.Date || l.Date,
                            c = e.SyntaxError || l.SyntaxError,
                            d = e.TypeError || l.TypeError,
                            f = e.Math || l.Math,
                            h = e.JSON || l.JSON;
                        'object' == typeof h && h && (t.stringify = h.stringify, t.parse = h.parse);
                        var p,
                            v,
                            m,
                            g = s.prototype,
                            y = g.toString,
                            _ = new u(- 3509827334573292);
                        try {
                            _ = - 109252 == _.getUTCFullYear() && 0 === _.getUTCMonth() && 1 === _.getUTCDate() && 10 == _.getUTCHours() && 37 == _.getUTCMinutes() && 6 == _.getUTCSeconds() && 708 == _.getUTCMilliseconds()
                        } catch (e) {
                        }
                        if (!r('json')) {
                            var b = r('bug-string-char-index');
                            if (!_) var T = f.floor,
                                A = [
                                    0,
                                    31,
                                    59,
                                    90,
                                    120,
                                    151,
                                    181,
                                    212,
                                    243,
                                    273,
                                    304,
                                    334
                                ],
                                S = function (e, t) {
                                    return A[t] + 365 * (e - 1970) + T((e - 1969 + (t = + (t > 1))) / 4) - T((e - 1901 + t) / 100) + T((e - 1601 + t) / 400)
                                };
                            if ((p = g.hasOwnProperty) || (p = function (e) {
                                var t,
                                    r = {
                                    };
                                return (r.__proto__ = null, r.__proto__ = {
                                    toString: 1
                                }, r).toString != y ? p = function (e) {
                                    var t = this.__proto__,
                                        r = e in (this.__proto__ = null, this);
                                    return this.__proto__ = t,
                                        r
                                }
                                    : (t = r.constructor, p = function (e) {
                                        var r = (this.constructor || t).prototype;
                                        return e in this && !(e in r && this[e] === r[e])
                                    }),
                                    r = null,
                                    p.call(this, e)
                            }), v = function (e, t) {
                                var r,
                                    n,
                                    i,
                                    a = 0;
                                (r = function () {
                                    this.valueOf = 0
                                }).prototype.valueOf = 0,
                                    n = new r;
                                for (i in n) p.call(n, i) && a++;
                                return r = n = null,
                                    a ? v = 2 == a ? function (e, t) {
                                        var r,
                                            n = {
                                            },
                                            i = '[object Function]' == y.call(e);
                                        for (r in e) i && 'prototype' == r || p.call(n, r) || !(n[r] = 1) || !p.call(e, r) || t(r)
                                    }
                                        : function (e, t) {
                                            var r,
                                                n,
                                                i = '[object Function]' == y.call(e);
                                            for (r in e) i && 'prototype' == r || !p.call(e, r) || (n = 'constructor' === r) || t(r);
                                            (n || p.call(e, r = 'constructor')) && t(r)
                                        }
                                        : (n = [
                                            'valueOf',
                                            'toString',
                                            'toLocaleString',
                                            'propertyIsEnumerable',
                                            'isPrototypeOf',
                                            'hasOwnProperty',
                                            'constructor'
                                        ], v = function (e, t) {
                                            var r,
                                                i,
                                                a = '[object Function]' == y.call(e),
                                                s = !a && 'function' != typeof e.constructor && o[typeof e.hasOwnProperty] && e.hasOwnProperty || p;
                                            for (r in e) a && 'prototype' == r || !s.call(e, r) || t(r);
                                            for (i = n.length; r = n[--i]; s.call(e, r) && t(r));
                                        }),
                                    v(e, t)
                            }, !r('json-stringify')) {
                                var k = {
                                    92: '\\\\',
                                    34: '\\"',
                                    8: '\\b',
                                    12: '\\f',
                                    10: '\\n',
                                    13: '\\r',
                                    9: '\\t'
                                },
                                    w = function (e, t) {
                                        return ('000000' + (t || 0)).slice(- e)
                                    },
                                    C = function (e) {
                                        for (var t = '"', r = 0, n = e.length, i = !b || n > 10, a = i && (b ? e.split('') : e); r < n; r++) {
                                            var s = e.charCodeAt(r);
                                            switch (s) {
                                                case 8:
                                                case 9:
                                                case 10:
                                                case 12:
                                                case 13:
                                                case 34:
                                                case 92:
                                                    t += k[s];
                                                    break;
                                                default:
                                                    if (s < 32) {
                                                        t += '\\u00' + w(2, s.toString(16));
                                                        break
                                                    }
                                                    t += i ? a[r] : e.charAt(r)
                                            }
                                        }
                                        return t + '"'
                                    },
                                    E = function (e, t, r, n, i, a, s) {
                                        var o,
                                            u,
                                            l,
                                            c,
                                            f,
                                            h,
                                            g,
                                            _,
                                            b,
                                            A,
                                            k,
                                            I,
                                            P,
                                            O,
                                            x,
                                            L;
                                        try {
                                            o = t[e]
                                        } catch (e) {
                                        }
                                        if ('object' == typeof o && o) if ('[object Date]' != (u = y.call(o)) || p.call(o, 'toJSON')) 'function' == typeof o.toJSON && ('[object Number]' != u && '[object String]' != u && '[object Array]' != u || p.call(o, 'toJSON')) && (o = o.toJSON(e));
                                        else if (o > - 1 / 0 && o < 1 / 0) {
                                            if (S) {
                                                for (f = T(o / 86400000), l = T(f / 365.2425) + 1970 - 1; S(l + 1, 0) <= f; l++);
                                                for (c = T((f - S(l, 0)) / 30.42); S(l, c + 1) <= f; c++);
                                                f = 1 + f - S(l, c),
                                                    h = (o % 86400000 + 86400000) % 86400000,
                                                    g = T(h / 3600000) % 24,
                                                    _ = T(h / 60000) % 60,
                                                    b = T(h / 1000) % 60,
                                                    A = h % 1000
                                            } else l = o.getUTCFullYear(),
                                                c = o.getUTCMonth(),
                                                f = o.getUTCDate(),
                                                g = o.getUTCHours(),
                                                _ = o.getUTCMinutes(),
                                                b = o.getUTCSeconds(),
                                                A = o.getUTCMilliseconds();
                                            o = (l <= 0 || l >= 10000 ? (l < 0 ? '-' : '+') + w(6, l < 0 ? - l : l) : w(4, l)) + '-' + w(2, c + 1) + '-' + w(2, f) + 'T' + w(2, g) + ':' + w(2, _) + ':' + w(2, b) + '.' + w(3, A) + 'Z'
                                        } else o = null;
                                        if (r && (o = r.call(t, e, o)), null === o) return 'null';
                                        if ('[object Boolean]' == (u = y.call(o))) return '' + o;
                                        if ('[object Number]' == u) return o > - 1 / 0 && o < 1 / 0 ? '' + o : 'null';
                                        if ('[object String]' == u) return C('' + o);
                                        if ('object' == typeof o) {
                                            for (O = s.length; O--;) if (s[O] === o) throw d();
                                            if (s.push(o), k = [
                                            ], x = a, a += i, '[object Array]' == u) {
                                                for (P = 0, O = o.length; P < O; P++) I = E(P, o, r, n, i, a, s),
                                                    k.push(I === m ? 'null' : I);
                                                L = k.length ? i ? '[\n' + a + k.join(',\n' + a) + '\n' + x + ']' : '[' + k.join(',') + ']' : '[]'
                                            } else v(n || o, function (e) {
                                                var t = E(e, o, r, n, i, a, s);
                                                t !== m && k.push(C(e) + ':' + (i ? ' ' : '') + t)
                                            }),
                                                L = k.length ? i ? '{\n' + a + k.join(',\n' + a) + '\n' + x + '}' : '{' + k.join(',') + '}' : '{}';
                                            return s.pop(),
                                                L
                                        }
                                    };
                                t.stringify = function (e, t, r) {
                                    var n,
                                        i,
                                        a,
                                        s;
                                    if (o[typeof t] && t) if ('[object Function]' == (s = y.call(t))) i = t;
                                    else if ('[object Array]' == s) {
                                        a = {
                                        };
                                        for (var u, l = 0, c = t.length; l < c; u = t[l++], ('[object String]' == (s = y.call(u)) || '[object Number]' == s) && (a[u] = 1));
                                    }
                                    if (r) if ('[object Number]' == (s = y.call(r))) {
                                        if ((r -= r % 1) > 0) for (n = '', r > 10 && (r = 10); n.length < r; n += ' ');
                                    } else '[object String]' == s && (n = r.length <= 10 ? r : r.slice(0, 10));
                                    return E('', (u = {
                                    }, u[''] = e, u), i, a, n, '', [
                                    ])
                                }
                            }
                            if (!r('json-parse')) {
                                var I,
                                    P,
                                    O = i.fromCharCode,
                                    x = {
                                        92: '\\',
                                        34: '"',
                                        47: '/',
                                        98: '',
                                        116: '\t',
                                        110: '\n',
                                        102: '\f',
                                        114: '\r'
                                    },
                                    L = function () {
                                        throw I = P = null,
                                        c()
                                    },
                                    D = function () {
                                        for (var e, t, r, n, i, a = P, s = a.length; I < s;) switch (i = a.charCodeAt(I)) {
                                            case 9:
                                            case 10:
                                            case 13:
                                            case 32:
                                                I++;
                                                break;
                                            case 123:
                                            case 125:
                                            case 91:
                                            case 93:
                                            case 58:
                                            case 44:
                                                return e = b ? a.charAt(I) : a[I],
                                                    I++,
                                                    e;
                                            case 34:
                                                for (e = '@', I++; I < s;) if ((i = a.charCodeAt(I)) < 32) L();
                                                else if (92 == i) switch (i = a.charCodeAt(++I)) {
                                                    case 92:
                                                    case 34:
                                                    case 47:
                                                    case 98:
                                                    case 116:
                                                    case 110:
                                                    case 102:
                                                    case 114:
                                                        e += x[i],
                                                            I++;
                                                        break;
                                                    case 117:
                                                        for (t = ++I, r = I + 4; I < r; I++) (i = a.charCodeAt(I)) >= 48 && i <= 57 || i >= 97 && i <= 102 || i >= 65 && i <= 70 || L();
                                                        e += O('0x' + a.slice(t, I));
                                                        break;
                                                    default:
                                                        L()
                                                } else {
                                                    if (34 == i) break;
                                                    for (i = a.charCodeAt(I), t = I; i >= 32 && 92 != i && 34 != i;) i = a.charCodeAt(++I);
                                                    e += a.slice(t, I)
                                                }
                                                if (34 == a.charCodeAt(I)) return I++,
                                                    e;
                                                L();
                                            default:
                                                if (t = I, 45 == i && (n = !0, i = a.charCodeAt(++I)), i >= 48 && i <= 57) {
                                                    for (48 == i && (i = a.charCodeAt(I + 1)) >= 48 && i <= 57 && L(), n = !1; I < s && (i = a.charCodeAt(I)) >= 48 && i <= 57; I++);
                                                    if (46 == a.charCodeAt(I)) {
                                                        for (r = ++I; r < s && (i = a.charCodeAt(r)) >= 48 && i <= 57; r++);
                                                        r == I && L(),
                                                            I = r
                                                    }
                                                    if (101 == (i = a.charCodeAt(I)) || 69 == i) {
                                                        for (i = a.charCodeAt(++I), 43 != i && 45 != i || I++, r = I; r < s && (i = a.charCodeAt(r)) >= 48 && i <= 57; r++);
                                                        r == I && L(),
                                                            I = r
                                                    }
                                                    return + a.slice(t, I)
                                                }
                                                if (n && L(), 'true' == a.slice(I, I + 4)) return I += 4,
                                                    !0;
                                                if ('false' == a.slice(I, I + 5)) return I += 5,
                                                    !1;
                                                if ('null' == a.slice(I, I + 4)) return I += 4,
                                                    null;
                                                L()
                                        }
                                        return '$'
                                    },
                                    R = function (e) {
                                        var t,
                                            r;
                                        if ('$' == e && L(), 'string' == typeof e) {
                                            if ('@' == (b ? e.charAt(0) : e[0])) return e.slice(1);
                                            if ('[' == e) {
                                                for (t = [
                                                ]; ']' != (e = D()); r || (r = !0)) r && (',' == e ? ']' == (e = D()) && L() : L()),
                                                    ',' == e && L(),
                                                    t.push(R(e));
                                                return t
                                            }
                                            if ('{' == e) {
                                                for (t = {
                                                }; '}' != (e = D()); r || (r = !0)) r && (',' == e ? '}' == (e = D()) && L() : L()),
                                                    ',' != e && 'string' == typeof e && '@' == (b ? e.charAt(0) : e[0]) && ':' == D() || L(),
                                                    t[e.slice(1)] = R(D());
                                                return t
                                            }
                                            L()
                                        }
                                        return e
                                    },
                                    M = function (e, t, r) {
                                        var n = j(e, t, r);
                                        n === m ? delete e[t] : e[t] = n
                                    },
                                    j = function (e, t, r) {
                                        var n,
                                            i = e[t];
                                        if ('object' == typeof i && i) if ('[object Array]' == y.call(i)) for (n = i.length; n--;) M(i, n, r);
                                        else v(i, function (e) {
                                            M(i, e, r)
                                        });
                                        return r.call(e, t, i)
                                    };
                                t.parse = function (e, t) {
                                    var r,
                                        n;
                                    return I = 0,
                                        P = '' + e,
                                        r = R(D()),
                                        '$' != D() && L(),
                                        I = P = null,
                                        t && '[object Function]' == y.call(t) ? j((n = {
                                        }, n[''] = r, n), '', t) : r
                                }
                            }
                        }
                        return t.runInContext = a,
                            t
                    }
                    var s = r(69),
                        o = {
                            function: !0,
                            object: !0
                        },
                        u = o[typeof t] && t && !t.nodeType && t,
                        l = o[typeof window] && window || this,
                        c = u && o[typeof e] && e && !e.nodeType && 'object' == typeof i && i;
                    if (!c || c.global !== c && c.window !== c && c.self !== c || (l = c), u && !s) a(l, u);
                    else {
                        var d = l.JSON,
                            f = l.JSON3,
                            h = !1,
                            p = a(l, l.JSON3 = {
                                noConflict: function () {
                                    return h || (h = !0, l.JSON = d, l.JSON3 = f, d = f = null),
                                        p
                                }
                            });
                        l.JSON = {
                            parse: p.parse,
                            stringify: p.stringify
                        }
                    }
                    s && (n = function () {
                        return p
                    }.call(t, r, t, e)) !== undefined && (e.exports = n)
                }).call(this)
            }).call(t, r(68)(e), function () {
                return this
            }())
        },
        function (e, t) {
            e.exports = function (e) {
                return e.webpackPolyfill || (e.deprecate = function () {
                }, e.paths = [
                ], e.children = [
                ], e.webpackPolyfill = 1),
                    e
            }
        },
        function (e, t) {
            (function (t) {
                e.exports = t
            }).call(t, {
            })
        },
        function (e, t) {
            function r(e) {
                var t,
                    r,
                    i,
                    s,
                    o,
                    u,
                    l,
                    c = '',
                    d = 0;
                for (e = n(e); d < e.length;) t = e.charCodeAt(d++),
                    r = e.charCodeAt(d++),
                    i = e.charCodeAt(d++),
                    s = t >> 2,
                    o = (3 & t) << 4 | r >> 4,
                    u = isNaN(r) ? 64 : (15 & r) << 2 | i >> 6,
                    l = isNaN(r) || isNaN(i) ? 64 : 63 & i,
                    c = c + a.charAt(s) + a.charAt(o) + a.charAt(u) + a.charAt(l);
                return c
            }
            function n(e) {
                for (var t, r = '', n = 0; n < e.length;) t = e.charCodeAt(n++),
                    r += t < 128 ? i(t) : t > 127 && t < 2048 ? i(t >> 6 | 192) + i(63 & t | 128) : i(t >> 12 | 224) + i(t >> 6 & 63 | 128) + i(63 & t | 128);
                return r
            }
            var i = String.fromCharCode,
                a = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
            e.exports = r
        },
        function (e, t, r) {
            function n(e) {
                a(i.isObject(e), 'Check out our JavaScript SDK Usage Guide: http://docs.treasuredata.com/articles/javascript-sdk'),
                    a(i.isString(e.writeKey), 'Must provide a writeKey'),
                    a(i.isString(e.database), 'Must provide a database'),
                    a(/^[a-z0-9_]{3,255}$/.test(e.database), 'Database must be between 3 and 255 characters and must consist only of lower case letters, numbers, and _')
            }
            var i = r(9),
                a = r(3).invariant,
                s = r(72);
            t.DEFAULT_CONFIG = {
                database: s.DATABASE,
                development: !1,
                globalIdCookie: '_td_global',
                host: s.HOST,
                logging: !0,
                pathname: s.PATHNAME,
                requestType: 'jsonp',
                startInSignedMode: !1
            },
                t.configure = function (e) {
                    return this.client = i.assign({
                        globals: {
                        }
                    }, t.DEFAULT_CONFIG, e, {
                        requestType: 'jsonp'
                    }),
                        n(this.client),
                        this.client.endpoint || (this.client.endpoint = 'https://' + this.client.host + this.client.pathname),
                        this
                },
                t.set = function (e, t, r) {
                    return i.isObject(e) && (t = e, e = '$global'),
                        this.client.globals[e] = this.client.globals[e] || {
                        },
                        i.isObject(t) ? i.assign(this.client.globals[e], t) : this.client.globals[e][t] = r,
                        this
                },
                t.get = function (e, t) {
                    return e = e || '$global',
                        this.client.globals[e] = this.client.globals[e] || {
                        },
                        t ? this.client.globals[e][t] : this.client.globals[e]
                }
        },
        function (e, t) {
            e.exports = {
                GLOBAL: 'TreasureVideojs',
                VERSION: '2.1.0',
                HOST: 'in.treasuredata.com',
                DATABASE: '',
                PATHNAME: '/js/v3/event/'
            }
        },
        function (e, t, r) {
            e.exports = r(72).VERSION
        },
        function (e, t, r) {
            !function (t, r) {
                e.exports = r()
            }(0, function (e) {
                function t(e) {
                    for (u = 1; e = n.shift();) e()
                }
                var r,
                    n = [
                    ],
                    i = document,
                    a = i.documentElement,
                    s = a.doScroll,
                    o = s ? /^loaded|^c/ : /^loaded|c/,
                    u = o.test(i.readyState);
                return i.addEventListener && i.addEventListener('DOMContentLoaded', r = function () {
                    i.removeEventListener('DOMContentLoaded', r, !1),
                        t()
                }, !1),
                    s && i.attachEvent('onreadystatechange', r = function () {
                        /^c/.test(i.readyState) && (i.detachEvent('onreadystatechange', r), t())
                    }),
                    e = s ? function (t) {
                        self != top ? u ? t() : n.push(t) : function () {
                            try {
                                a.doScroll('left')
                            } catch (r) {
                                return setTimeout(function () {
                                    e(t)
                                }, 50)
                            }
                            t()
                        }()
                    }
                        : function (e) {
                            u ? e() : n.push(e)
                        }
            })
        },
        function (e, t, r) {
            function n(e, t) {
                return t
            }
            function i() {
                this._clickTrackingInstalled = !1
            }
            function a(e) {
                function t(e) {
                    var t = o.findElement(o.getEventTarget(e));
                    if (t && !a(t)) {
                        var n = o.getElementData(t),
                            s = i.extendClickData(e, n);
                        s && r.trackEvent(i.tableName, s)
                    }
                }
                if (!this._clickTrackingInstalled) {
                    var r = this,
                        i = u({
                            element: s.document,
                            extendClickData: n,
                            ignoreAttribute: 'td-ignore',
                            tableName: 'clicks'
                        }, e),
                        a = o.createTreeHasIgnoreAttribute(i.ignoreAttribute),
                        c = o.addEventListener(i.element, 'click', t);
                    return r._clickTrackingInstalled = !0,
                        l(function () {
                            c(),
                                r._clickTrackingInstalled = !1
                        })
                }
            }
            var s = r(76),
                o = r(77),
                u = r(9).assign,
                l = r(3).disposable;
            e.exports = {
                configure: i,
                trackClicks: a
            }
        },
        function (e, t) {
            (function (t) {
                'undefined' != typeof window ? e.exports = window : void 0 !== t ? e.exports = t : 'undefined' != typeof self ? e.exports = self : e.exports = {
                }
            }).call(t, function () {
                return this
            }())
        },
        function (e, t, r) {
            function n(e) {
                var t = e.target || e.srcElement || window.document;
                return 3 === t.nodeType ? t.parentNode : t
            }
            function i(e, t, r) {
                function n(t) {
                    r.call(e, t || window.event)
                }
                if (e.addEventListener) return e.addEventListener(t, n, !1),
                    h(function () {
                        e.removeEventListener(t, n, !1)
                    });
                if (e.attachEvent) return e.attachEvent('on' + t, n),
                    h(function () {
                        e.detachEvent('on' + t, n)
                    });
                throw new Error('addEventListener')
            }
            function a(e) {
                if (!e || !e.tagName) return null;
                for (var t = e.tagName.toLowerCase(); t && 'body' !== t; e = e.parentNode, t = e && e.tagName && e.tagName.toLowerCase()) {
                    var r = e.getAttribute('type');
                    if ('input' === t && 'password' === r) return null;
                    var n = e.getAttribute('role');
                    if ('button' === n || 'link' === n || 'a' === t || 'button' === t || 'input' === t) return e
                }
                return null
            }
            function s(e) {
                var t = 'data-' + e;
                return function r(n) {
                    return !(!n || !n.tagName || 'html' === n.tagName.toLowerCase()) && (!(!c(n, e) && !c(n, t)) || r(n.parentNode))
                }
            }
            function o(e) {
                var t = {
                    tag: e.tagName.toLowerCase(),
                    tree: u(e)
                };
                return d(['alt',
                    'class',
                    'href',
                    'id',
                    'name',
                    'role',
                    'title',
                    'type'], function (r) {
                        c(e, r) && (t[r] = e.getAttribute(r))
                    }),
                    t
            }
            function u(e) {
                for (var t, r = [
                ], n = 0, i = 0, a = ' > '.length; e && n++ < 5 && !('html' === (t = l(e)) || n > 1 && i + r.length * a + t.length >= 80);) r.push(t),
                    i += t.length,
                    e = e.parentNode;
                return r.reverse().join(' > ')
            }
            function l(e) {
                var t,
                    r,
                    n,
                    i,
                    a,
                    s = [
                    ];
                if (!e || !e.tagName) return '';
                if (s.push(e.tagName.toLowerCase()), e.id && s.push('#' + e.id), (t = e.className) && f(t)) for (r = t.split(' '), a = 0; a < r.length; a++) s.push('.' + r[a]);
                var o = [
                    'type',
                    'name',
                    'title',
                    'alt'
                ];
                for (a = 0; a < o.length; a++) n = o[a],
                    (i = e.getAttribute(n)) && s.push('[' + n + '="' + i + '"]');
                return s.join('')
            }
            function c(e, t) {
                return 'function' == typeof e.hasAttribute ? e.hasAttribute(t) : null !== e.getAttribute(t)
            }
            var d = r(9).forEach,
                f = r(9).isString,
                h = r(3).disposable;
            e.exports = {
                addEventListener: i,
                createTreeHasIgnoreAttribute: s,
                getElementData: o,
                getEventTarget: n,
                hasAttribute: c,
                htmlElementAsString: l,
                htmlTreeAsString: u,
                findElement: a
            }
        },
        function (e, t, r) {
            function n(e, t) {
                return l.setItem(t, e.global_id, 6000),
                    e.global_id
            }
            function i() {
            }
            function a(e, t, r) {
                e = e || u,
                    t = t || u;
                var i = this.client.globalIdCookie,
                    a = l.getItem(this.client.globalIdCookie);
                if (a && !r) return setTimeout(function () {
                    e(a)
                }, 0);
                var c = 'https://' + this.client.host + '/js/v3/global_id';
                o('jsonp' === this.client.requestType, 'Request type ' + this.client.requestType + ' not supported'),
                    s(c, {
                        prefix: 'TreasureVideojsJSONPCallback',
                        timeout: 10000
                    }, function (r, a) {
                        return r ? t(r) : e(n(a, i))
                    })
            }
            var s = r(4),
                o = r(3).invariant,
                u = r(3).noop,
                l = r(64);
            e.exports = {
                cacheSuccess: n,
                configure: i,
                fetchGlobalID: a
            }
        },
        function (e, t, r) {
            function n(e) {
                return e = u.isObject(e) ? e : {
                },
                    this.client.cdpHost = e.cdpHost || 'cdp.in.treasuredata.com',
                    this
            }
            function i(e, t, r) {
                var n = u.isObject(e) && !u.isArray(e),
                    i = n ? e.audienceToken : e,
                    l = n && e.keys || {
                    };
                t = t || s,
                    r = r || s,
                    o('string' == typeof i || u.isArray(i), 'audienceToken must be a string or array; received "' + i.toString() + '"'),
                    o(u.isObject(l), 'keys must be an object; received "' + l + '"');
                var c = u.isArray(i) ? i.join(',') : i,
                    d = u.keys(l),
                    f = [
                    ];
                u.forEach(d, function (e) {
                    f.push(['key.',
                        e,
                        '=',
                        l[e]].join(''))
                });
                var h = f.join('&'),
                    p = 'https://' + this.client.cdpHost + '/cdp/lookup/collect/segments?version=2&token=' + c + (h && '&' + h);
                a(p, {
                    prefix: 'TreasureVideojsJSONPCallback',
                    timeout: 10000
                }, function (e, n) {
                    return e ? r(e) : t(n)
                })
            }
            var a = r(4),
                s = r(3).noop,
                o = r(3).invariant,
                u = r(9);
            e.exports = {
                configure: n,
                fetchUserSegments: i
            }
        },
        function (e, t, r) {
            function n(e) {
                return u.assign({
                    td_version: function () {
                        return f
                    },
                    td_client_id: function () {
                        return e.uuid
                    },
                    td_charset: function () {
                        return (h.characterSet || h.charset || '-').toLowerCase()
                    },
                    td_language: function () {
                        var e = o.navigator;
                        return (e && (e.language || e.browserLanguage) || '-').toLowerCase()
                    },
                    td_color: function () {
                        return o.screen ? o.screen.colorDepth + '-bit' : '-'
                    },
                    td_screen: function () {
                        return o.screen ? o.screen.width + 'x' + o.screen.height : '-'
                    },
                    td_viewport: function () {
                        var e = h.documentElement && h.documentElement.clientHeight,
                            t = h.documentElement && h.documentElement.clientWidth,
                            r = o.innerHeight,
                            n = o.innerWidth,
                            i = e < r ? r : e;
                        return (t < n ? n : t) + 'x' + i
                    },
                    td_title: function () {
                        return h.title
                    },
                    td_description: function () {
                        return s('description')
                    },
                    td_url: function () {
                        return h.location && h.location.href ? h.location.href.split('#')[0] : ''
                    },
                    td_user_agent: function () {
                        return o.navigator.userAgent
                    },
                    td_platform: function () {
                        return o.navigator.platform
                    },
                    td_host: function () {
                        return h.location.host
                    },
                    td_path: function () {
                        return h.location.pathname
                    },
                    td_referrer: function () {
                        return h.referrer
                    },
                    td_ip: function () {
                        return 'td_ip'
                    },
                    td_browser: function () {
                        return 'td_browser'
                    },
                    td_browser_version: function () {
                        return 'td_browser_version'
                    },
                    td_os: function () {
                        return 'td_os'
                    },
                    td_os_version: function () {
                        return 'td_os_version'
                    }
                }, e.values)
            }
            function i(e) {
                return u.assign({
                    pageviews: 'pageviews',
                    events: 'events',
                    values: {
                    }
                }, e)
            }
            function a(e) {
                return 'none' !== e && (e = u.isObject(e) ? e : {
                }, u.assign({
                    name: '_td',
                    expires: 63072000,
                    domain: h.location.hostname,
                    customDomain: !!e.domain,
                    path: '/'
                }, e))
            }
            function s(e) {
                for (var t = h.head || h.getElementsByTagName('head')[0], r = t.getElementsByTagName('meta'), n = r.length, i = 0; i < n; i++) if (r[i].getAttribute('name') === e) return (r[i].getAttribute('content') || '').substr(0, 8192);
                return ''
            }
            var o = r(76),
                u = r(9),
                l = r(64),
                c = r(65),
                d = r(81),
                f = r(73),
                h = o.document;
            t.configure = function (e) {
                return e = u.isObject(e) ? e : {
                },
                    this.client.track = e.track = i(e.track),
                    this.client.storage = e.storage = a(e.storage),
                    u.isNumber(e.clientId) ? e.clientId = e.clientId.toString() : e.clientId && u.isString(e.clientId) || (e.storage && e.storage.name && (e.clientId = l.getItem(e.storage.name)), e.clientId && 'undefined' !== e.clientId || (e.clientId = d())),
                    this.resetUUID(e.storage, e.clientId),
                    this
            },
                t.resetUUID = function (e, t) {
                    var r = t || d(),
                        i = e || this.client.storage;
                    return this.client.track.uuid = r.replace(/\0/g, ''),
                        i && i.expires && (c(i, i.name, undefined), c(i, i.name, this.client.track.uuid)),
                        this.client.track.values = u.assign(n(this.client.track), this.client.track.values),
                        this
                },
                t.trackEvent = function (e, t, r, n) {
                    return e || (e = this.client.track.events),
                        t = u.assign(this.getTrackValues(), t),
                        this.addRecord(e, t, r, n),
                        this
                },
                t.trackPageview = function (e, t, r) {
                    return e || (e = this.client.track.pageviews),
                        this.trackEvent(e, {
                        }, t, r),
                        this
                },
                t.getTrackValues = function () {
                    var e = {
                    };
                    return u.forIn(this.client.track.values, function (t, r) {
                        t && (e[r] = 'function' == typeof t ? t() : t)
                    }),
                        e
                }
        },
        function (e, t, r) {
            var n = r(76);
            e.exports = function () {
                var e = (new Date).getTime();
                return n.performance && 'function' == typeof n.performance.now && (e += n.performance.now()),
                    'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (t) {
                        var r = (e + 16 * Math.random()) % 16 | 0;
                        return e = Math.floor(e / 16),
                            ('x' === t ? r : 3 & r | 8).toString(16)
                    })
            }
        },
        function (e, t, r) {
            function n(e, t) {
                var r = '_' + t;
                if (e[r]) {
                    for (var n = e[r] || [
                    ]; n.length;) e[t].apply(e, n.shift());
                    delete e[r]
                }
            }
            var i = r(9),
                a = r(76),
                s = [
                    'init',
                    'set',
                    'blockEvents',
                    'unblockEvents',
                    'setSignedMode',
                    'setAnonymousMode',
                    'resetUUID',
                    'addRecord',
                    'fetchGlobalID',
                    'trackPageview',
                    'trackEvent',
                    'trackClicks',
                    'fetchUserSegments',
                    'ready'
                ];
            e.exports = function (e, t) {
                if (i.isObject(a[t])) {
                    var r = a[t],
                        o = r.clients;
                    i.forIn(e.prototype, function (e, t) {
                        r.prototype[t] = e
                    }),
                        i.forEach(o, function (e) {
                            i.forEach(s, function (t) {
                                n(e, t)
                            })
                        })
                }
            }
        }
        ]);
        var localStorageKey = 'TXresumeInfo';
        function getBCResumeInfo(e) {
            var t = new Array;
            var r = localStorage.getItem(localStorageKey);
            t = JSON.parse(r);
            var n = - 1;
            for (var i in t) {
                if (isBCRefIdMatch(e, t[i].vid)) {
                    n = i
                }
            }
            return n != - 1 ? t[n] : null
        }
        function getBCAllResumeInfo() {
            var e = new Array;
            var t = localStorage.getItem(localStorageKey);
            e = JSON.parse(t);
            return e
        }
        function clearBCAllResumeInfo() {
            localStorage.removeItem(localStorageKey)
        }
        function isBCRefIdMatch(e, t) {
            var r = ' ' + e + ' ';
            if (r.indexOf(' ' + t + ' ') !== - 1) {
                return true
            }
            return false
        }
        var rawQueryString = _.qs();
        var queryString = iframe ? rawQueryString.search : {
        };
        var urlHash = iframe ? rawQueryString.hash : {
        };
        var changeDimension = function (e, t, r) {
            if (!t && !r && t !== 0 && r !== 0) {
                return
            }
            var n = document.querySelector('.bc-style-6ZGqqysfA-default') || document.querySelector('.bc-style-vjs');
            var i = 'bc-player-6ZGqqysfA_default';
            var a = i + '-index-' + e;
            var s = a + '-video-dimensions';
            var o = document.querySelector('.' + s);
            var u = /width: (\d+)px;/g;
            var l = /height: (\d+)px;/g;
            var c;
            var d;
            if (!o) {
                o = document.createElement('style');
                o.className = s;
                if (n) {
                    n.parentNode.insertBefore(o, n.nextSibling)
                } else {
                    document.head.appendChild(o)
                }
            } else if (o.innerText) {
                if (!t && t !== 0) {
                    c = u.exec(o.innerText);
                    if (c && c[1]) {
                        t = parseInt(c[1])
                    }
                } else if (!r && r !== 0) {
                    c = l.exec(o.innerText);
                    if (c && c[1]) {
                        r = parseInt(c[1])
                    }
                }
            }
            d = '.' + a + '{';
            if (t || t === 0) {
                d += 'width: ' + parseInt(t) + 'px;'
            }
            if (r || r === 0) {
                d += 'height: ' + parseInt(r) + 'px;'
            }
            d += '}';
            o.innerText = d
        };
        var bc = function (e) {
            var t = videojs.getPlayer(e);
            if (t) {
                t.trigger({
                    type: 'usage',
                    name: 'bc-used-as-getter'
                });
                return t
            }
            bcPlayerIndex++;
            var r;
            var n;
            var i;
            var a;
            var s;
            var o;
            var u;
            var l;
            var c;
            var d;
            _.perf.mark('bcInitStart');
            var f;
            var h = function (e, t) {
                r = e;
                t = t || {
                };
                if (!videojs.browser.IS_ANY_SAFARI) {
                    t.html5 = t.html5 || {
                    };
                    t.html5.nativeCaptions = false
                }
                applicationId = queryString.applicationId || e.getAttribute('data-application-id') || '';
                var u = urlHash.t || queryString.t || e.getAttribute('data-start-time');
                if (/^[\d]+$/.test(u)) {
                    c = Number(u)
                } else if (/^(\d+h)?(\d+m)?(\d+s)?$/.test(u)) {
                    c = u
                }
                var l = queryString.adConfigId;
                var h = e.getAttribute('data-ad-config-id');
                if (iframe && _.isNonEmptyStr(l)) {
                    f = l
                } else if (_.isNonEmptyStr(h)) {
                    f = h
                }
                if (typeof f === 'string') {
                    f = f.trim()
                }
                if (rawQueryString.hash.hasOwnProperty('autoplay') || rawQueryString.search.hasOwnProperty('autoplay')) {
                    t.autoplay = rawQueryString.hash.autoplay || rawQueryString.search.autoplay || true
                } else if (e.hasAttribute('autoplay')) {
                    t.autoplay = true
                } else if (!t.hasOwnProperty('autoplay')) {
                    t.autoplay = 'play'
                }
                if (t.autoplay) {
                    videojs.dom.addClass(e, 'vjs-waiting-for-autoplay')
                }
                s = !!e.querySelector('source');
                a = !!e.querySelector('track');
                o = e.hasAttribute('poster');
                t.inactivityTimeout = 5000;
                if (videojs.browser.TOUCH_ENABLED) {
                    t.inactivityTimeout = 0
                }
                n = e.getAttribute('height') || undefined;
                i = e.getAttribute('width') || undefined;
                if (!iframe && e && i || n) {
                    changeDimension(bcPlayerIndex, i, n)
                }
                t = videojs.mergeOptions(t, {
                    width: i,
                    height: n,
                    nativeControlsForTouch: useNativeControlsOnAndroid(),
                    controls: iframe ? true : e.hasAttribute('controls'),
                    persistTextTrackSettings: true,
                    preload: 'auto',
                    responsive: true,
                    'vtt.js': t['vttjs'] || 'https://vjs.zencdn.net/vttjs/0.12.5/vtt.global.min.js',
                    sourceOrder: true,
                    controlBar: {
                    }
                });
                if (queryString.language) {
                    t.language = queryString.language
                }
                if (queryString.preload) {
                    t.preload = queryString.preload
                }
                if (queryString.playsinline !== undefined) {
                    e.setAttribute('playsinline', 'playsinline')
                }
                if (queryString.muted !== undefined) {
                    e.setAttribute('muted', 'muted');
                    e.muted = true;
                    t.muted = true
                }
                if (queryString.crossorigin !== undefined) {
                    e.setAttribute('crossorigin', 'anonymous')
                }
                if (queryString.loop !== undefined) {
                    t.loop = true
                }
                d = e.getAttribute('data-vttjs') || queryString.vttjs;
                if (d && _.isNonEmptyStr(d)) {
                    t['vtt.js'] = d
                }
                if (!t.flash) {
                    t.flash = {
                    }
                }
                if (!t.flash.swf) {
                    t.flash.swf = 'https://players.brightcove.net/videojs-flashls-source-handler/1.4.6/video-js.swf'
                }
                if (typeof videojs.options.hls !== 'object') {
                    videojs.options.hls = {
                    }
                }
                if (videojs.browser.IS_ANDROID && videojs.options.hls.enableLowInitialPlaylist === undefined) {
                    videojs.options.hls.enableLowInitialPlaylist = true
                }
                if (videojs.options.hls.overrideNative === undefined && !videojs.browser.IS_ANY_SAFARI) {
                    videojs.options.hls.overrideNative = true
                }
                return t
            };
            var p = function (e) {
                var t = e.options_;
                var d = e.dimension;
                var h;
                e.mediainfo = {
                    accountId: accountId,
                    account_id: accountId
                };
                e.bcinfo = {
                    accountId: accountId,
                    applicationId: applicationId,
                    css: {
                    },
                    embedId: embedId,
                    playerId: playerId,
                    scriptUrl: scriptUrl,
                    scriptBaseUrl: scriptBaseUrl
                };
                Object.defineProperty(e, 'usingAdBlocker', {
                    enumerable: true,
                    value: usingAdBlocker
                });
                usingAdBlocker().then(function (t) {
                    if (t) {
                        e.trigger({
                            type: 'usage',
                            name: 'using-ad-blocker'
                        })
                    }
                });
                e.dimension = function (t, r) {
                    var n = new RegExp('bc-player-' + playerId + '_' + embedId + '-index-(\\d+)');
                    var i = n.exec(e.el().getAttribute('class'));
                    if (i) {
                        var a = i[1];
                        if (t === 'width') {
                            changeDimension(a, r, null)
                        } else if (t === 'height') {
                            changeDimension(a, null, r)
                        }
                    }
                    return d.call(e, t, r)
                };
                e.addClass('bc-player-' + playerId + '_' + embedId);
                e.addClass('bc-player-' + playerId + '_' + embedId + '-index-' + bcPlayerIndex);
                if (!videojs.browser.TOUCH_ENABLED) {
                    e.addClass('vjs-mouse');
                    if (iframe) {
                        videojs.dom.addClass(iframe, 'vjs-mouse')
                    }
                } else if (videojs.browser.IS_IPHONE) {
                    e.addClass('vjs-native')
                }
                e.on('dispose', function () {
                    r = e = n = i = t = a = s = o = u = l = applicationId = playerName = null;
                    usageEvents = [
                    ];
                    bc.videojs.log.history.clear()
                });
                if (videojs.browser.IS_IPHONE) {
                    e.on('fullscreenchange', function () {
                        var t = e.$('.vjs-tech');
                        if (t.hasAttribute('controls')) {
                            t.removeAttribute('controls')
                        }
                    });
                    if (r.hasAttribute('playsinline') && r.hasAttribute('muted')) {
                        e.addClass('vjs-iphone')
                    }
                }
                if (videojs.browser.IS_IOS && r.hasAttribute('muted')) {
                    e.addClass('vjs-ios')
                }
                if (e.controls()) {
                    e.one('play', function () {
                        if (!e.controlBar) {
                            return
                        }
                        var t = e.controlBar.children();
                        if (!t || !t.length) {
                            return
                        }
                        var r = [
                            'Enter',
                            'ArrowDown',
                            'ArrowUp',
                            'Up',
                            'Down',
                            ' ',
                            'Spacebar'
                        ];
                        for (var n = 0; n < t.length; n++) {
                            if (t[n].hasClass('vjs-menu-button-popup') && !t[n].hasClass('vjs-hidden')) {
                                t[n].on('keyup', function (t) {
                                    if (r.indexOf(t.key) >= 0) {
                                        e.controlBar.addClass('vjs-control-bar-visible')
                                    }
                                })
                            }
                        }
                    });
                    if (e.controlBar) {
                        var p = e.controlBar.el(),
                            v,
                            m = function () {
                                var t = document.activeElement;
                                if (v !== t) {
                                    v = t;
                                    e.controlBar.toggleClass('vjs-focus-within', p.contains(t))
                                }
                            },
                            g = function () {
                                p.removeEventListener('focus', m, true);
                                p.removeEventListener('blur', m, true)
                            };
                        p.addEventListener('focus', m, true);
                        p.addEventListener('blur', m, true);
                        e.on('dispose', g);
                        e.controlBar.on('dispose', g)
                    }
                }
                var y = function () {
                    return (new Date).toISOString().split('T')[0] + ':' + e.bcAnalytics.client.getSession()
                };
                e.ready(function () {
                    _.perf.mark('bcInitEnd');
                    _.perf.measure('bcInit', 'bcInitStart', 'bcInitEnd')
                });
                if (t.autoplay) {
                    e.ready(function () {
                        var t = function () {
                            e.removeClass('vjs-waiting-for-autoplay')
                        };
                        var r = function () {
                            if (!e.autoplay()) {
                                return
                            }
                            var r = e.play();
                            if (r === undefined) {
                                t()
                            } else {
                                r.then(t, t)
                            }
                        };
                        var n = [
                            'canplay',
                            'error',
                            'durationchange'
                        ];
                        var i = function (a) {
                            if (a.type === 'error' || a.type === 'canplay') {
                                e.off(n, i)
                            }
                            if (a.type === 'error') {
                                return t()
                            }
                            if (a.type === 'durationchange' && e.duration() === Infinity && !videojs.browser.IS_ANY_SAFARI) {
                                r();
                                e.off(n, i)
                            }
                            if (a.type === 'canplay') {
                                r()
                            }
                        };
                        if (!e.currentSrc() && !h) {
                            t()
                        } else if (e.readyState() === 4) {
                            r()
                        } else {
                            e.one(n, i)
                        }
                    })
                }
                var b = {
                    bcAnalytics: {
                        applicationId: applicationId,
                        mr: Boolean(window.bc_isManagedRelease),
                        referrer: queryString.referrer,
                        usage: queryString.usage
                    },
                    contextmenuUI: {
                        content: [
                            {
                                label: e.localize('Player Information'),
                                listener: function () {
                                    e.playerInfo.modal.open()
                                }
                            },
                            {
                                href: 'https://www.brightcove.com/en/why-brightcove?utm_type=player',
                                label: 'About Brightcove'
                            }
                        ]
                    },
                    resizeTextTracks: {
                        iframe: iframe
                    },
                    urlparams: {
                        iframe: iframe,
                        time: c
                    }
                };
                var T = [
                    'eme',
                    'chromecastReceiver',
                    'vr',
                    'pip',
                    'qualityMenu',
                    'ima3',
                    'FreeWheelPlugin',
                    'ssai',
                    'bcPlaylistUi'
                ];
                function A(t, r) {
                    var n = b[t] || {
                    };
                    if (e.usingPlugin(t)) {
                        return
                    }
                    var i = videojs.mergeOptions(n, r);
                    if (T.indexOf(t) !== - 1) {
                        usageEvents.push(t);
                        if (t === 'bcPlaylistUi') {
                            usageEvents.push(t + (i.horizontal ? '-horz' : '-vert'));
                            if (i.repeat) {
                                usageEvents.push(t + '-repeat')
                            }
                            if (i.shuffle) {
                                usageEvents.push(t + '-shuffle')
                            }
                        }
                    }
                    e[t](i)
                }
                A('contextmenu');
                A('ima3', {
                    adTechOrder: [
                        'html5'
                    ],
                    hardTimeouts: true,
                    requestMode: 'ondemand',
                    serverUrl: '',
                    timeout: 5000,
                    useMediaCuePoints: false,
                    vpaidMode: 'ENABLED'
                });
                A('proxyTracks');
                A('perSourceBehaviors');
                A('seekEvents');
                A('contextmenuUI');
                A('playerInfo');
                A('urlparams');
                A('resizeTextTracks');
                A('bcAnalytics', {
                    accountId: '5380177782001',
                    embedId: 'default',
                    platformVersion: '6.30.1',
                    playerId: '6ZGqqysfA',
                    playerName: 'VMAP Player [TX] v6 ＜yamaneco＞'
                });
                A('errors', {
                });
                A('catalog', {
                    accountId: '5380177782001',
                    policyKey: 'BCpkADawqM3cHH60-C9KAXekkIzCVRGVTmuxg-CV9kBs0fHQmLt9IgPNEYido2kIXaJ7xGx14VgK-KHxw8Tgq-jryCKToKwIzWtwzH95e1qCN9e-S-lWUMEm8kZr46z5rMtgh8zT15E6oxkP'
                });
                A('touchActive');
                A('qualityMenu', {
                    useResolutionLabels: true
                });
                A('cuAdControl', {
                    autoPlay: false,
                    debug: true,
                    imgDir: 'https://video.tv-tokyo.co.jp/images/20170110/',
                    resumeDialog: true,
                    vmapUrl: 'https://pubads.g.doubleclick.net/gampad/ads?sz=1920x1080&iu=/175688504/dev&cust_params=programKey%3D{programKey}%26vr_tagid1%3D9001%26vr_tagid2%3D0001%26domain%3Dvideo.tv-tokyo.co.jp%26tag_type%3Dbrowser%26appid%3Dvideo.tv-tokyo.co.jp%26dcos%3Dpc%26vr_t%3Dbrowser%26gender%3D{gender}%26birth%3D{birth}%26tvcu_pcode%3D{tvcu_pcode}%26tvcu_ccode%3D{tvcu_ccode}%26tvcu_zcode%3D{tvcu_zcode}%26tvcu_g%3D{tvcu_g}%26tvcu_age%3D{tvcu_age}%26tvcu_agegrp%3D{tvcu_agegrp}&ciu_szs&impl=s&gdfp_req=1&env=vp&output=xml_vmap1&unviewed_position_start=1&url=http://video.tv-tokyo.co.jp&description_url=http://video.tv-tokyo.co.jp&correlator={random}&ad_rule=1&cmsid=2466536&vid={vid}'
                });
                A('resumeControl', {
                    debug: false
                });
                A('TXconversionJS', {
                    debug: 'false'
                });
                A('td', {
                    database: 'txcom_vod_dev',
                    host: 'in.treasuredata.com',
                    table: 'videoviews_web',
                    trackCrossDomain: true,
                    writeKey: '8916/52ccbf505ca14713f494a560fa39f760a214ecc0'
                });
                A('bcTracker', {
                    vr_config_url: 'https://sdk.interactive-circle.jp/js/stg/tx_common_html5_6.js',
                    vr_tagid1: '1020',
                    vr_tagid2: '9001'
                });
                A('brightcove_tx', {
                    debug: true,
                    nextVideoUrl_pc: 'http://video.tv-tokyo.co.jp/{programKey}/episode/{mdasId}.html',
                    nextVideoUrl_sp: 'http://video.tv-tokyo.co.jp/smp/{programKey}/episode/{mdasId}.html',
                    playbackRateLabels: [
                        '1.0倍速',
                        '1.3倍速',
                        '1.7倍速'
                    ],
                    playbackRates: [
                        1,
                        1.3,
                        1.7
                    ],
                    playbackRatesEnabled: true,
                    sceneShareEnabled: true
                });
                e.on('vjs-contextmenu', function () {
                    if (e.playerInfo.modal) {
                        e.playerInfo.modal.close()
                    }
                });
                e.ready(function () {
                    e.playerInfo.modal.on('modalfill', function () {
                        var t = y();
                        var r = e.playerInfo.modal.$('.vjs-pi-section--player tbody');
                        if (!t || !r) {
                            return
                        }
                        var n = document.createElement('tr');
                        var i = document.createElement('tr');
                        n.innerHTML = '<td>' + e.localize('Session ID') + '</td> <td>' + t + '</td>';
                        r.appendChild(n);
                        i.innerHTML = '<td>' + e.localize('Player Element ID') + '</td> <td>' + e.id() + '</td>';
                        r.appendChild(i)
                    })
                });
                e.errorDisplay.on('modalfill', function () {
                    var t = y();
                    var r = e.errorDisplay.$('.vjs-errors-content-container');
                    if (!t || !r) {
                        return
                    }
                    r.appendChild(videojs.dom.createEl('div', {
                        className: 'vjs-errors-ref-id',
                        innerHTML: '<b>' + e.localize('Session ID:') + '</b> ' + t + ' ' + '<b>' + e.localize('Player Element ID:') + '</b>' + e.id()
                    }))
                });
                var S = {
                    embedHasPoster: !!o,
                    embedHasSources: s,
                    embedHasTracks: a,
                    adConfigId: f
                };
                h = e.catalog.autoFindAndLoadMedia(S);
                if (h && h.type === 'video') {
                    if (/^[\d]+$/.test(h.id)) {
                        e.mediainfo.id = h.id
                    } else {
                        e.mediainfo.referenceId = e.mediainfo.reference_id = h.id
                    }
                } (function () {
                    var t,
                        r = parseInt(null, 10),
                        n = false;
                    e.playlist();
                    if (r === r && isFinite(r) && r >= 0) {
                        e.playlist.autoadvance(r)
                    }
                })();
                if (typeof bcShimDestripeTime !== 'undefined') {
                    if (bcShimDestripeTime > 1) {
                        usageEvents.push('sdt-' + (Math.log(bcShimDestripeTime) / Math.LN10).toFixed(1))
                    } else {
                        usageEvents.push('sdt-0.0')
                    }
                }
                e.requestAnimationFrame(function () {
                    var t = document.querySelector('.bc-wrap');
                    e.addClass('vjs-plugins-ready');
                    if (t) {
                        t.style.opacity = 0
                    }
                });
                e.on(['mouseenter',
                    'ended',
                    'touchend'], function () {
                        e.removeClass('not-hover')
                    });
                e.on('mouseleave', function () {
                    e.addClass('not-hover');
                    if (!e.controlBar || !e.controlBar.el()) {
                        return
                    }
                    if (e.controlBar.hasClass('vjs-control-bar-visible')) {
                        e.controlBar.removeClass('vjs-control-bar-visible')
                    }
                });
                usageEvents.forEach(function (t) {
                    e.trigger({
                        type: 'usage',
                        name: t
                    })
                });
                e.ready(function () {
                    if (e.bcinfo && e.bcinfo.PLAYER_LOADER || window.brightcovePlayerLoader) {
                        e.trigger({
                            type: 'usage',
                            name: 'player-loader'
                        })
                    }
                    if (e.bcinfo && e.bcinfo.REACT_PLAYER_LOADER || window.BrightcoveReactPlayerLoader) {
                        e.trigger({
                            type: 'usage',
                            name: 'react-player-loader'
                        })
                    }
                })
            };
            videojs.hookOnce('beforesetup', h);
            videojs.hookOnce('setup', p);
            return videojs.apply(null, arguments)
        };
        bc.SKIN = 'luna';
        bc.VERSION = '6.30.1';
        if (iframe) {
            window.bc = bc
        }
        bc.videojs = videojs;
        Object.defineProperty(bc, 'usingAdBlocker', {
            enumerable: true,
            value: usingAdBlocker
        });
        if (previousVideojs) {
            window.videojs = previousVideojs
        }
        return bc
    })(window, document);
    ;
    if (typeof o !== 'undefined') {
        l = document.querySelector('#' + n);
        if (l) {
            (function () {
                var e = function (e) {
                    return (e || '0.0.0').split('.').map(function (e) {
                        return Number(e)
                    })
                };
                var o = e(l.getAttribute('data-vjs-version'));
                var s = e(a.videojs.VERSION);
                if (s[0] > o[0] || s[0] === o[0] && s[1] > o[1] || s[0] === o[0] && s[1] === o[1] && s[2] > o[2]) {
                    l.parentNode.removeChild(l);
                    l = null;
                    d = j.firstChild
                }
            })()
        }
        if (!l) {
            l = c(o, d);
            l.id = n;
            l.setAttribute('data-vjs-version', a.videojs.VERSION)
        }
        d = l.nextSibling
    }
    if (typeof s !== 'undefined') {
        i = document.querySelector('.' + t);
        if (!i) {
            i = c(s, d);
            i.className = t
        }
    }
    if (e) {
        a['6ZGqqysfA_default'] = a;
        Object.keys(e.bc || {
        }).forEach(function (o) {
            var s = e.bc[o];
            if (typeof s === 'function' && typeof s.videojs === 'function') {
                a[o] = e.bc[o];
                delete e.bc[o]
            }
        })
    }
    function p() {
        var e = [
        ].concat(Array.prototype.slice.call(document.querySelectorAll('video')), Array.prototype.slice.call(document.querySelectorAll('video-js')));
        for (v = 0; v < e.length; v++) {
            r = e[v];
            if (r.getAttribute('data-player') === '6ZGqqysfA' && r.getAttribute('data-embed') === 'default') {
                if (a.videojs.getPlayer(r)) {
                    a.videojs.log('Ignoring already initialized player');
                    continue
                }
                a(r)
            }
        }
    }
    p();
    return a
});
